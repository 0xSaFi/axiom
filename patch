books/bookvolbib Axiom Citations in the Literature

Goal: Axiom Literate Programming

\index{Cohen, Joel S.}
\begin{chunk}{axiom.bib}
@book{Cohe03a,
  author = "Cohen, Joel S.",
  title = "Computer algebra and symbolic computation. Mathematical Methods",
  year = "2003",
  publisher = "A. K. Peters",
  isbn = "1-56881-159-4",
  keywords = "axiomref"
}

\end{chunk}

\index{Cohen, Joel S.}
\begin{chunk}{axiom.bib}
@book{Cohe03b,
  author = "Cohen, Joel S.",
  title = "Computer algebra and symbolic computation. Elementary Algorithms",
  year = "2003",
  publisher = "A. K. Peters",
  isbn = "1-56881-159-4",
  keywords = "axiomref"
}

\end{chunk}

\index{Farmer, William M.}
\index{von Mohrenschildt, Martin}
\begin{chunk}{axiom.bib}
@article{Farm03,
  author = "Farmer, William M. and von Mohrenschildt, Martin",
  title = "An overview of a formal framework for managing mathematics",
  journal = "Ann. Math. Artif. Intell.",
  volume = "38",
  number = "1-3",
  pages = "165-191",
  year = "2003",
  keywords = "axiomref",
  paper = "Farm03.pdf",
  url = "https://www.emis.de/proceedings/MKM2001/farmer.ps",
  abstract = 
    "Mathematics is a process of creating, exploring, and connecting
    mathematical models. This paper presents an overview of a formal
    framework for managing the mathematics process as well as the
    mathematical knowledge produced by the process. The central idea of
    the framework is the notion of a biform theory which is simultaneously
    an axiomatic theory and an algorithmic theory. Representing a
    collection of mathematical models, a biform theory provides a formal
    context for both deduction and computation. The framework includes
    facilities for deriving theorems via a mixture of deduction and
    computation, constructing sound deduction and computation rules, and
    developing networks of biform theories linked by interpretations. The
    framework is not tied to a specific underlying logic; indeed, it is
    intended to be used with several background logics
    simultaneously. Many of the ideas and mechanisms used in the framework
    are inspired by the IMPS Interactive Mathematical Proof System and the
    Axiom computer algebra system."
}

\end{chunk}

\index{Lamban, Laureano}
\index{Pascual, Vico}
\index{Rubio, Julio}
\begin{chunk}{axiom.bib}
@article{Lamb03,
  author = "Lamban, Laureano and Pascual, Vico and Rubio, Julio",
  title = "An object-oriented interpretation of the EAT system",
  journal = "Appl. Algebra Eng. Commun. Comput.",
  volume = "14",
  number = "3",
  pages = "187-215",
  keywords = "axiomref",
  abstract =
    "In a previous paper we characterized, in the category theory setting,
    a class of implementations of abstract data types, which has been
    suggested by the way of programming in the EAT system. (EAT, Effective
    Algebraic Topology, is one of Sergeraert’s systems for effective
    homology and homotopy computation.) This characterization was
    established using classical tools, in an unrelated way to the current
    mainstream topics in the field of algebraic specifications. Looking
    for a connection with these topics, we have found, rather
    unexpectedly, that our approach is related to some object-oriented
    formalisms, namely hidden specifications and the coalgebraic view. In
    this paper, we explore these relations making explicit the implicit
    object-oriented features of the EAT system and generalizing the data
    structure analysis we had previously done."
}

\end{chunk}

\index{Barnett, Michael P.}
\begin{chunk}{axiom.bib}
@article{Barn02,
  author = "Barnett, Michael P.",
  title = "Computer algebra in the life sciences",
  journal = "SIGSAM Bulletin",
  volume = "36",
  number = "4",
  pages = "5-31",
  year = "2002",
  keywords = "axiomref",
  paper = "Barn02.pdf",
  url = 
"https://notendur.hi.is/vae11/\%C3\%9Eekking/Systems\%20Biology/Biological\%20Algebra.PDF",
  abstract = 
    "This note (1) provides references to recent work that applies computer
    algebra (CA) to the life sciences, (2) cites literature that explains
    the biological background of each application, (3) states the
    mathematical methods that are used, (4) mentions the benefits of CA,
    and (5) suggests some topics for future work."
}

\end{chunk}

\index{Roanes-Lozano, Eugenio}
\index{Roanes-Macias, Eugenio}
\index{Villar-Mena, M.}
\begin{chunk}{axiom.bib}
@article{Roan03,
  author = "Roanes-Lozano, Eugenio and Roanes-Macias, Eugenio and
            Villar-Mena, M.",
  title = "A bridge between dynamic geometry and computer algebra",
  journal = "Math. Comput. Modelling",
  volume = "37",
  number = "9-10",
  pages = "1005-1028",
  year = "2003",
  keywords = "axiomref",
  url = "ac.els-cdn.com/S0895717703001158/1-s2.0-S0895717703001158-main.pdf",
  paper = "Roan03.pdf",
  abstract =
    "Both Computer Algebra Systems (CASs) and dynamic geometry systems
    (DGSs) have reached a high level of development. Some CASs (like Maple
    or Derive) include specific and powerful packages devoted to Euclidean
    geometry, but CASs have incorporated neither mouse drawing
    capabilities nor dynamic capabilities. Meanwhile, the well-known DGSs
    do not provide algebraic facilities.

    Maple’s and Derive’s paramGeo packages and the DGS-CAS translator (all
    freely available from the authors) make it possible to draw a
    geometric configuration with the mouse (using The Geometer’s Sketchpad
    3 or 4) and to obtain the coordinates, equations, etc., of the drawn
    configuration in Maple’s or Derive’s syntax. To obtain complicated
    formulae, coordinates of points or equations of loci, to perform
    automatic theorem proving and to perform automatic discovery directly
    from sketches are examples of straightforward applications. Moreover,
    this strategy could be adapted to other CASs and DGSs.

    This work clearly has a didactic application in geometric problems
    exploration. Nevertheless, its main interest is to provide a
    convenient time-saving way to introduce data when dealing with rule
    and compass geometry, which has a wider scope than only educational
    purposes."
}

\end{chunk}

\index{Davenport, James H.}
\begin{chunk}{axiom.bib}
@article{Dave02,
  author = "Davenport, James H.",
  title = "Equality in computer algebra and beyond",
  journal = "J. Symbolic Computing",
  volume = "34",
  number = "4",
  pages = "259-270",
  year = "2002",
  keywords = "axiomref",
  paper = "Dave02.pdf",
  url = "http://www.calculemus.net/meetings/siena01/Papers/Davenport.pdf",
  abstract =
    "Equality is such a fundamental concept in mathematics that, in
    fact, we seldom explore it in detail, and tend to regard it as
    trivial. When it is shown to be non-trivial, we are often
    surprised. As is often the case, the computerization of
    mathematical computation in computer algebra systems on the one
    hand, and mathematical reasoning in theorem provers on the other
    hand, forces us to explore the issue of equality in greater
    detail.In practice, there are also several ambiguities in the
    definition of equality. For example, we refer to $\mathbb{Q}(x)$
    as ``rational functions'', even though $\frac{x^2-1}{x-1}$ and
    $x+1$ are not equal as functions from $\mathbb{R}$ to
    $\mathbb{R}$, since the former is not defined at $x=1$, even
    though they are equal as elements of $\mathbb{Q}(x)$. The aim of
    this paper is to point out some of the problems, both with
    mathematical equality and with data structure equality, and to
    explain how necessary it is to keep a clear distintion between the
    two."
}

\end{chunk}

