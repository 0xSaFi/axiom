books/bookvolbib add RISC references

Goal: Axiom Literate Programming

Collect algebra references in the bibliography

\index{Kalkbrener, M.}
\begin{chunk}{axiom.bib}
@phdthesis{Kalk91,
  author = "Kalkbrener, M.",
  title = "Three contributions to elimination theory",
  school = "University of Linz, Austria",
  year = "1991",
  comment = "\refto{category RSETCAT RegularTriangularSetCategory}"
}

\end{chunk}

\begin{chunk}{axiom.bib}
@misc{SALSA,
  title = "Solvers for Algebraic Systems and Applications",
  url =
     "http://www.ens-lyon.fr/LIP/Arenaire/SYMB/teams/salsa/proposal-salsa.pdf",
  comment = "\refto{category RSETCAT RegularTriangularSetCategory}",
  paper = "SALSA.pdf"
}

\end{chunk}

\index{Hemmecke, Ralf}
\begin{chunk}{axiom.bib}
@phdthesis{Hemm03,
  author = "Hemmecke, Ralf",
  title = "Involutive Bases for Polynomial Ideals",
  school = "Johannes Kepler University, RISC",
  year = "2003",
  paper = "Hemm03.pdf",
  abstract =
    "This thesis contributes to the theory of polynomial involutive
    bases. Firstly, we present the two existing theories of involutive
    divisions, compare them, and come up with a generalised approach of
    {\sl suitable partial divisions}. The thesis is built on this
    generalized approach. Secondly, we treat the question of choosing a
    ``good'' suitable partial division in each iteration of the involutive
    basis algorithm. We devise an efficient and flexible algorithm for
    this purpose, the {\sl Sliced Division} algorithm. During the
    involutive basis algorithm, the Sliced Division algorithm contributes
    to an early detection of the involutive basis property and a
    minimisation of the number of critical elements. Thirdly, we give new
    criteria to avoid unnecessary reductions in an involutive basis
    algorithm. We show that the termination property of an involutive
    basis algorithm which applies our criteria is independent of the
    prolongation selection strategy used during its run. Finally, we
    present an implementation of the algorithm and results of this thesis
    in our software package CALIX."
}

\end{chunk}

\index{Schorn, Markus}
\begin{chunk}{axiom.bib}
@phdthesis{Scho95,
  author = "Schorn, Markus",
  title = "Contributions to Symbolic Summation",
  school = "Johannes Kepler University, RISC",
  year = "1995",
  paper = "Scho95.pdf",
  url = "http://www.risc.jku.at/publications/download/risc_2246/diplom.pdf"
}

\end{chunk}

\index{Winkler, Franz}
\begin{chunk}{axiom.bib}
@book{Wink96,
  author = "Winkler, Franz",
  title = "Polynomial Algorithms in Computer Algebra",
  year = "1996",
  publisher = "Springer-Verlag",
  isbn = "3.211-82759-5"
}

\end{chunk}

\index{Buchberger, Bruno}
\begin{chunk}{axiom.bib}
@misc{Buch11,
  author = "Buchberger, Bruno",
  title = "Groebner Bases: A Short Introduction for System Theorists",
  year = "2011",
  abstract =
    "In this paper, we give a brief overview on Groebner bases theory,
    addressed to novices without prior knowledge in the field. After
    explaining the general strategy for solving problems via the Groebner
    approach, we develop the concept of Groebner bases by studying
    uniqueness of polynomial division (``reduction''). For explicitly
    constructing Groebner bases, the crucial notion of S-polynomials is
    introduced, leading to the complete algorithmic solution of the
    construction problem. The algorithm is applied to examples from
    polynomial equation solving and algebraic relations. After a short
    discussion of complexity issues, we conclude the paper with some
    historical remarks and references."
}

\end{chunk}

\index{Winkler, Franz}
\begin{chunk}{axiom.bib}
@article{Wink89,
  author = "Winkler, Franz",
  title = "Equational Theorem Proving and Rewrite Rule Systems",
  year = "1989",
  publisher = "Springer-Verlag",
  url = "http://www.risc.jku.at/publications/download/risc_3527/paper_47.pdf",
  paper = "Wink89.pdf",
  abstract = 
    "Equational theorem proving is interesting both from a mathematical
    and a computational point of view. Many mathematical structures like
    monoids, groups, etc. can be described by equational axioms. So the
    theory of free monoids, free groups, etc. is the equational theory
    defined by these axioms. A decision procedure for the equational
    theory is a solution for the word problem over the associated
    algebraic structure. From a computational point of view, abstract data
    types are basically described by equations. Thus, proving properties
    of an abstract data type amounts to proving theorems in the associated
    equational theory.

    One approach to equational theorem proving consists in associating a
    direction with the equational axioms, thus transforming them into
    rewrite rules. Now in order to prove an equation $a=b$, the rewrite
    rules are applied to both sides, finally yielding reduced versions
    $a^{'}$ and $b^{'}$ of the left and right hand sides, respectively. If
    $a^{'}$ and $b^{'}$ agree syntactically, then the equation holds in
    the equational theory. However, in general this argument cannot be
    reversed; $a^{'}$ and $b^{'}$ might be different even if $a=b$ is a
    theorem. The reason for this problem is that the rewrite system might
    not have the Church-Rosser property. So the goal is to take the
    original rewrite system and transform it into an equivalent one which
    has the desired Church-Rosser property.

    We show how rewrite systems can be used for proving theorems in
    equational and inductive theories, and how an equational specification
    of a problem can be turned into a rewrite program."
}

\end{chunk}

\index{Collins, G.E.}
\index{Mignotte, M.}
\index{Winkler, F.}
\begin{chunk}{axiom.bib}
@article{Coll82,
  author = "Collins, G.E. and Mignotte, M. and Winkler, F.",
  title = "Arithmetic in Basic Algebraic Domains",
  publisher = "Springer-Verlag",
  journal = "Computing, Supplement 4",
  pages = "189-220",
  year = "1982",
  abstract =
    "This chapter is devoted to the arithmetic operations, essentially
    addition, multiplication, exponentiation, division, gcd calculations
    and evaluation, on the basic algebraic domains. The algorithms for
    these basic domains are those most frequently used in any computer
    algebra system. Therefore the best known algorithms, from a
    computational point of view, are presented. The basic domains
    considered here are the rational integers, the rational numbers,
    integers modulo $m$, Gaussian integers, polynomials, rational
    functions, power series, finite fields and $p$-adic numbers. BOunds on
    the maximum, minimum and average computing time ($t^{+},t^{-},t^{*}$) for
    the various algorithms are given."
}

\end{chunk}

\index{Paule, Peter}
\index{Kartashova, Lena}
\index{Kauers, Manuel}
\index{Schneider, Carsten}
\index{Winkler, Franz}
\begin{chunk}{axiom.bib}
@misc{Paulxx,
  author = "Paule, Peter and Kartashova, Lena and Kauers, Manuel and
            Schneider, Carsten and Winkler, Franz",
  title = "Hot Topics in Symbolic Computation",
  publisher = "Springer",
  paper = "Paulxx.pdf",
  url = "http://www.risc.jku.at/publications/download/risc_3845/chapter1.pdf"
}

\end{chunk}

\index{Johansson, Fredrik}
\begin{chunk}{axiom.bib}
@phdthesis{Joha14,
  author = "Johansson, Fredrik",
  title = "Fast and Rigorous Computation of Special Functions to High
           Precision",
  school = "Johannes Kepler University, Linz, Austria RISC",
  year = "2014",
  paper = "Joha14.pdf",
  abstract = 
    "The problem of efficiently evaluating special functions to high
    precision has been considered by numerous authors. Important tools
    used for this purpose include algorithms for evaluation of linearly
    recurrent sequences, and algorithms for power series arithmetic.

    In this work, we give new baby-step, giant-step algorithms for
    evaluation of linearly recurrent sequences involving an expensive
    parameter (such as a high-precision real number) and for computing
    compositional inverses of power series. Our algorithms do not have the
    best asymptotic complexity, but they are faster than previous
    algorithms in practice over a large input range.

    Using a combination of techniques, we also obtain efficient new
    algorithms for numerically evaluating the gamma function $\Gamma(z)$
    and the Hurwitz zeta function $\zeta(s,a)$, or Taylor series
    expansions of those functions, with rigorous error bounds. Our methods
    achieve softly optimal complexity when computing a large number of
    derivatives to proportionally high precision.

    Finally, we show that isolated values of the integer partition
    function $p(n)$ can be computed rigorously with softly optimal
    complexity by means of the Hardy-Ramanugan-Rademacher formula and
    careful numerical evaluation.

    We provide open source implementations which run significantly faster
    than previous published software. The implementations are used for
    record computations of the partition function, including the
    tabulation of several billion Ramanujan-type congruences, and of
    Taylor series associated with the Reimann zeta function."
}

\end{chunk}

\index{Hodorog, Madalina}
\begin{chunk}{axiom.bib}
@phdthesis{Hodo11,
  author = "Hodorog, Madalina",
  title = "Symbolic-Numeric Algorithms for Plane Algebraic Curves",
  year = "2011",
  school = "RISC Research Institute for Symbolic Computation",
  paper = "Hodo11.pdf",
  abstract =
    "In computer algebra, the problem of computing topological invariants
    (i.e. delta-invariant, genus) of a plan complex algebraic curve is
    well-understood if the coefficients of the defining polynomial of the
    curve are exact data (i.e. integer numbers or rational numbers). The
    challenge is to handle this problem if the coefficients are inexact
    (i.e. numerical values).

    In this thesis, we approach the algebraic problem of computing
    invariants of a plane complex algebraic curve defined by a polynomial
    with both exact and inexact data. For the inexact data, we associate a
    positive real number called {\sl tolerance} or {\sl noise}, which
    measures the error level in the coefficients. We deal with an {\sl
    ill-posed} problem in the sense that, tiny changes in the input data
    lead to dramatic modifications in the output solution.

    For handling the ill-posedness of the problem we present a {\sl
    regularization} method, which estimates the invariants of a plane
    complex algebraic curve. Our regularization method consists of a set
    of {\sl symbolic-numeric algorithms} that extract structural
    information on the input curve, and of a {\sl parameter choice rule},
    i.e. a function in the noise level. We first design the following
    symbolic-numeric algorithms for computing the invariants of a plane
    complex algebraic curve:
    \begin{itemize}
    \item we compute the link of each singularity of the curve by numerical
    equation solving
    \item we compute the Alexander polynomial of each link by using
    algorithms from computational geometry (i.e. an adapted version of
    the Bentley-Ottmann algorithm) and combinatorial objects from knot
    theory.
    \item we derive a formula for the delta-invariant and for the genus
    \end{itemize}

    We then prove that the symbolic-numeric algorithms together with the
    parameter choice rule compute approximate solutions, which satisfy the
    {\sl convergence for noisy data property}. Moreover, we perform
    several numerical experiments, which support the validity for the
    convergence statement.

    We implement the designed symbolic-numeric algorithms in a new
    software package called {\sl Genom3ck}, developed using the {\sl Axel}
    free algebraic modeler and the {\sl Mathemagix} free computer algebra
    system. For our purpose, both of these systems provide modern
    graphical capabilities, and algebraic and geometric tools for
    manipulating algebraic curves and surfaces defined by polynomials with
    both exact and inexact data. Together with its main functionality to
    compute the genus, the package {\sl Genom3ck} computes also other type
    of information on a plane complex algebraic curve, such as the
    singularities of the curve in the projective plane and the topological
    type of each singularity."
}

\end{chunk}

\index{Er\"ocal, Bur\c{c}in}
\begin{chunk}{axiom.bib}
@phdthesis{Eroc11,
  author = {Er\"ocal, Bur\c{c}in},
  title = "Algebraic Extensions for Symbolic Summation",
  school = "RISC Research Institute for Symbolic Computation",
  year = "2011",
  url = 
    "http://www.risc.jku.at/publications/download/risc_4320/erocal_thesis.pdf",
  paper = "Eroc11.pdf",
  abstract = 
    "The main result of this thesis is an effective method to extend Karr's
    symbolic summation framework to algebraic extensions. These arise, for
    example, when working with expressions involving $(-1)^n$. An
    implementation of this method, including a modernised version of
    Karr's algorithm is presented.

    Karr's algorithm is the summation analogue of the Risch algorithm for
    indefinite integration. In the summation case, towers of specialized
    difference fields called $\prod\sum$-fields are used to model nested
    sums and products. This is similar to the way elementary functions
    involving nested logarithms and exponentials are represented in
    differential fields in the integration case.

    In contrast to the integration framework, only transcendental
    extensions are allowed in Karr's construction. Algebraic extensions of
    $\prod\sum$-fields can even be rings with zero divisors. Karr's
    methods rely heavily on the ability to solve first-order linear
    difference equations and they are no longer applicable over these
    rings.

    Based on Bronstein's formulation of a method used by Singer for the
    solution of differential equations over algebraic extensions, we
    transform a first-order linear equation over an algebraic extension to
    a system of first-order equations over a purely transcendental
    extension field. However, this domain is not necessarily a
    $\prod\sum$-field. Using a structure theorem by Singer and van der
    Put, we reduce this system to a single first-order equation over a
    $\prod\sum$-field, which can be solved by Karr's algorithm. We also
    describe how to construct towers of difference ring extensions on an
    algebraic extension, where the same reduction methods can be used.

    A common bottleneck for symbolic summation algorithms is the
    computation of nullspaces of matrices over rational function
    fields. We present a fast algorithm for matrices over $\mathbb{Q}(x)$
    which uses fast arithmetic at the hardware level with calls to BLAS
    subroutines after modular reduction. This part is joint work with Arne
    Storjohann."
}

\end{chunk}

