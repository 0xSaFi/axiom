books/bookvolbib Axiom Citations in the Literature

Goal: Axiom Literate Programming

\index{Johnson, M.E.}
\index{Rogers, C.}
\index{Schief, W.K.}
\index{Seiler, W.M.}
\begin{chunk}{axiom.bib}
@article{John94,
  author = "Johnson, M.E. and Rogers, C. and Schief, W.K. and Seiler, W.M.",
  title = "On moving pseudospherical surfaces: a generalised Weingarten
           system and its formal analysis",
  journal = "Lie Groups Appl.",
  volume = "1",
  pages = "124-136",
  year = "1994",
  keywords = "axiomref",
  abstract =
    "The connection between the motion of certain curves in $\mathbb{R}^3$ 
    and $1+1$-dimensional soliton equations is by now well-established. On the
    other hand, the sine-Gordon and other integrable equations may be
    readily derived via the classical geometry of stationary
    pseudospherical surfaces. Here, the motion of pseudospherical surfaces
    $S$ is considered in a natural orthonormal triad formulation. In one case,
    in a motion in which the Gaussian curvature of $S$ remains constant in
    time, an integrable nonlinear evolution equation is derived which has
    its origin in the description of wave propagation in an anharmonic
    crystal. In a second case, wherein the Gaussian curvature is allowed
    to vary in time, a classical generalised Weingarten system is derived
    in connection with the purely normal propagation of a pseudospherical
    surface. This is linked to triply orthogonal coordinate systems of
    Bianchi type. The generalised Weingarten system incorporates an
    integrable $2+1$-dimensional sine-Gordon equation. The arbitrariness of the
    solutions of the generalised Weingarten system is determined via a
    completion procedure."
}

\end{chunk}

\index{Kajler, Norbert}
\index{Soiffer, Neil}
\begin{chunk}{axiom.bib}
  author = "Kajler, Norbert and Soiffer, Neil",
  title = "Some human interaction issues in computer algebra",
  journal = "SIGSAM Bulletin",
  volume = "28",
  number = "1",
  pages = "18-28",
  year = "1994",
  abstract =
    "This paper addresses some of the current issues concerning the
    improvement of user interfaces for computer algebra systems. Some
    state of the art commercial software as well as research prototypes
    are presented, followed by a description of present research
    directions."
}

\end{chunk}

\index{Kripfganz, Jochen}
\index{Perlt, Holger}
\begin{chunk}{axiom.bib}
@misc{Krip94,
  author = "Kripfganz, Jochen and Perlt, Holger",
  title = "Working with Mathematica. An Introduction with examples",
  comment = "Arbeiten mit Mathematica. Eine Einfuhrung mit Beispielen",
  book = "Hander",
  year = "1994",
  keywords = "axiomref"
}

\end{chunk}

\index{Schwarz, Fritz}
\begin{chunk}{axiom.bib}
@InProceedings{Schw94,
  author = "Schwarz, Fritz",
  title = "Computer algebra software for scientific applications",
  booktitle = "Computerized symbolic manipulation in mechanics",
  year = "1994",
  publisher = "Springer-Verlag",
  pages = "67-117",
  series = "CISM Courses Lecture 343",
  keywords = "axiomref",
  abstract =
    "The central subject of this article are two basic questions: How to
    make the process of developing computer algebra software on a large
    scale ($10^4 to $10^5$) lines of code or more) more efficient and
    how to improve the quality of the result. Taking procedures from well
    established engineering sciences as a guide, two fundamental
    principles turned out to be of overwhelming importance: Modularization
    and limitation of growth through reuse. Important means for achieving
    these goals turned out to be concept of an abstract data type and the
    principles of object-oriented design. It is advocated to install an
    additional abstraction level between the mathematics and the machine
    in order to render it possible to develop (computer algebra) system
    independent mathematical software. Basic constituents of this level
    are a type system and a high-level language."
}

\end{chunk}

\index{Kajler, Norbert}
\begin{chunk}{axiom.bib}
@article{Kajl92,
  author = "Kajler, Norbert",
  title = "CAS/PI: a Portable and Extensible Interface for Computer
           Algebra Systems",
  year = "1992",
  booktitle = "Proc. ISSAC 1992",
  series = "ISSAC 1992",
  pages = "376-386",
  isbn = "0-89791-489-9 (soft cover) 0-89791-490-2 (hard cover)",
  keywords = "axiomref",
  paper = "Kajl92.pdf",
  abstract = 
    "CAS/$\pi$ is a Computer Algebra System graphic user interface
    designed to be highly portable and extensible. It has been developed
    by composition of pre-existing software tools such as Maple, Sisyphe,
    or Ulysse systems, ZicVis 3-D plotting library, etc, using control
    integration technology and a set of high level graphic toolkits to
    build the formula editor and the dialog manager. The main aim of
    CAS/$\pi$ is to allow a wide range of runtime recon gurations and
    extensions. For instance, it is possible to add new tools to a running
    system, to modify connections between working tools, to extend the set
    of graphic symbols managed by the formula editor, to design new high
    level editing commands based on the syntax or semantics of
    mathematical formulas, to customize and extend the menu-button based
    user interface, etc. More generally, CAS/$\pi$ can be seen equally as
    a powerful system-independent graphic user interface enabling
    inter-systems communications, a toolkit to allow fast development of
    custom-made scientific software environments, or a very convenient
    framework for experimenting with computer algebra systems protocols
    and man-machine interfaces."
}

\end{chunk}

\index{Schu, J.}
\index{Seiler, Werner Markus}
\index{Calmet, Jacques}
\begin{chunk}{axiom.bib}
@InProceedings{Schu92,
  author = "Schu, J. and Seiler, Werner Markus and Calmet, Jacques",
  title = "Algorithmic Methods For Lie Pseudogroups'",
  booktitle = "Proc. Modern Group Analysis: Advanced Analytical and 
               Computational Methods in Mathematical Physics",
  pages = "337-344",
  location =  "Acireale (Italy)",
  year = "1992",
  publisher = "Kluwer",
  url = 
   "http://www.iks.kti.edu/fileadmin/User/calmet/papers/Acireale-93.ps.gz",
  keywords = "axiomref"
}

\end{chunk}

\index{Seiler, Werner Markus}
\begin{chunk}{axiom.bib}
@article{Seil99,
  author = "Seiler, Werner Markus",
  title = "DETools: A Library for Differential Equations",
  paper = "Seil99.pdf",
  year = "1999",
  keywords = "axiomref",
  abstract =
    "This article tries to give at least a brief introduction. The MuPAD
    library is extended on two levels. The first one consists of a new
    library detools containing a number of routines for treating
    differential equations. This includes support for the graphical
    presentation of the output of the numerical routines in MuPAD, some
    methods for analysing or generating differential equations and also
    routines for solving some classes of partial differential
    equations. The use of this new library will be described in this
    article. The second level is somewhat more advanced and requires a
    certain familiarity with the object-oriented domains."
}

\end{chunk}

\index{Bradford, Russell}
\index{Davenport, James H.}
\index{England, Matthew}
\index{McCallum, Scott}
\index{Wilson, David}
\begin{chunk}{axiom.bib}
@misc{Brad15,
  author = "Bradford, Russell and Davenport, James H. and England, Matthew and
            McCallum, Scott",
  title = "Truth Table Invariant Cylindrical Algebraic Decomposition",
  url = "https://arxiv.org/pdf/1401.0645.pdf",
  paper = "Brad15.pdf",
  year = "2015",
  abstract =
    "When using cylindrical algebraic decomposition (CAD) to solve a
    problem with respect to a set of polynomials, it is likely not the
    signs of those polynomials that are of paramount importance but rather
    the truth values of certain quantifier free formulae involving
    them. This observation motivates our article and definition of a Truth
    Table Invariant CAD (TTICAD).  In ISSAC 2013 the current authors
    presented an algorithm that can efficiently and directly construct a
    TTICAD for a list of formulae in which each has an equational
    constraint. This was achieved by generalising McCallum's theory of
    reduced projection operators. In this paper we present an extended
    version of our theory which can be applied to an arbitrary list of
    formulae, achieving savings if at least one has an equational
    constraint. We also explain how the theory of reduced projection
    operators can allow for further improvements to the lifting phase of
    CAD algorithms, even in the context of a single equational constraint.
    The algorithm is implemented fully in Maple and we present both
    promising results from experimentation and a complexity analysis
    showing the benefits of our contributions."
}

\end{chunk}

\index{Bradford, Russell}
\index{Chen, Changbo}
\index{Davenport, James H.}
\index{England, Matthew}
\index{Maza, Marc Moreno}
\index{Wilson, David}
\begin{chunk}{axiom.bib}
@misc{Brad14,
  author = "Bradford, Russell and Chen, Changbo and Davenport, James H. and
            England, Matthew and Maza, Marc Moreno and Wilson, David",
  title = "Truth Table Invariant Cylindrical Algebraic Decomposition by
           Regular Chains",
  url = "https://arxiv.org/pdf/1401.6310.pdf",
  paper = "Brad14.pdf",
  year = "2014",
  abstract =
    "A new algorithm to compute cylindrical algebraic decompositions
    (CADs) is presented, building on two recent advances. Firstly, the
    output is truth table invariant (a TTICAD) meaning given formulae have
    constant truth value on each cell of the decomposition.  Secondly, the
    computation uses regular chains theory to first build a cylindrical
    decomposition of complex space (CCD) incrementally by polynomial.
    Significant modification of the regular chains technology wa s used to
    achieve the more sophisticated invariance criteria. Experimental
    results on an implementation in the {\tt RegularChains} Library for Maple
    verify that combining these advances gives an algorithm superior to
    its individual components and competitive with the state of the art."
}

\end{chunk}

\index{Wilson, David}
\index{Bradford, Russell}
\index{Davenport, James H.}
\index{England, Matthew}
\begin{chunk}{axiom.bib}
@misc{Wils14,
  author = "Wilson, David and Bradford, Russell and Davenport, James H. and
            England, Matthew",
  title = "Cylindrical Algebraic Sub-Decompositions",
  url = "https://arxiv.org/pdf/1401.0647.pdf",
  paper = "Wils14.pdf",
  year = "2014",
  abstract = 
    "Cylindrical algebraic decompositions (CADs) are a key tool in real
    algebraic geometry, used primarily for eliminating quantifiers over
    the reals and studying semi-algebraic sets. In this paper we
    introduce cylindrical algebraic sub-decompositions (sub-CADs), which
    are subsets of CADs containing all the information needed to specify a
    solution for a given problem.  We define two new types of sub-CAD:
    variety sub-CADs which are those cells in a CAD lying on a designated
    variety; and layered sub-CADs which have only those cells of
    dimension higher than a specified value. We present algorithms to
    produce these and describe how the two approaches may be combined with
    each other and the recent theory of truth-table invariant CAD.  We
    give a complexity analysis showing that these techniques can offer
    substantial theoretical savings, which is supported by experimentation
    using an implementation in Maple."
}

\end{chunk}

\index{England, Matthew}
\index{Wilson, David}
\index{Bradford, Russell}
\index{Davenport, James H.}
\begin{chunk}{axiom.bib}
@misc{Engl14,
  author = "England, Matthew and Wilson, David and Bradford, Russell and
            Davenport, James H.",
  title = "Using the Regular Chains Library to build cylindrical algebraic
           decompositions by projecting and lifting",
  url = "https://arxiv.org/pdf/1405.6090.pdf",
  paper = "Engl14.pdf",
  year = "2014",
  abstract =
    "Cylindrical algebraic decomposition (CAD) is an important tool, both
    for quantifier elimination over the reals and a range of other
    applications. Traditionally, a CAD is built through a process of
    projection and lifting to move the problem within Euclidean spaces of
    changing dimension. Recently, an alternative approach which first
    decomposes complex space using triangular decomposition before
    refining to real space has been introduced and implemented within the
    Regular-Chains Library of Maple. We here describe a freely available
    package ProjectionCAD which utilises the routines within the
    RegularChains Library to build CADs by projection and lifting. We
    detail how the projection and lifting algorithms were modified to
    allow this, discuss the motivation and survey the functionality of the
    package."
}

\end{chunk}

\index{England, Matthew}
\index{Bradford, Russell}
\index{Davenport, James H.}
\index{Wilson, David}
\begin{chunk}{axiom.bib}
@misc{Engl14a,
  author = "England, Matthew and Bradford, Russell and Davenport, James H. and
            Wilson, David",
  title = "Choosing a variable ordering for truth-table invariant cylindrical
           algebraic decomposition by incremental triangular decomposition",
  url = "https://arxiv.org/pdf/1405.6094.pdf",
  paper = "Engl14a.pdf",
  year = "2014",
  abstract =
    "Cylindrical algebraic decomposition (CAD) is a key tool for solving
    problems in real algebraic geometry and beyond. In recent years a new
    approach has been developed, where regular chains technology is used
    to first build a decomposition in complex space. We consider the
    latest variant of this which builds the complex decomposition
    incrementally by polynomial and produces CADs on whose cells a
    sequence of formulae are truth-invariant. Like all CAD algorithms the
    user must provide a variable ordering which can have a profound impact
    on the tractability of a problem. We evaluate existing heuristics to
    help with the choice for this algorithm, suggest improvements and then
    derive a new heuristic more closely aligned with the mechanics of the
    new algorithm."
}

\end{chunk}

\index{England, Matthew}
\index{Bradford, Russell}
\index{Chen, Changbo}
\index{Davenport, James H.}
\index{Maza, Marc Moreno}
\index{Wilson, David}
\begin{chunk}{axiom.bib}
@misc{Engl14b,
  author = "England, Matthew and Bradford, Russell and Chen, Changbo and
            Davenport, James H. and Maza, Marc Moreno",
  title = "Problem formulation for truth-table invariant cylindrical
           algebraic decomposition by incremental triangular decomposition",
  url = "https://arxiv.org/pdf/1404.6371.pdf",
  paper = "Engl14b.pdf",
  year = "2014",
  abstract =
    "Cylindrical algebraic decompositions (CADs) are a key tool for
    solving problems in real algebraic geometry and beyond.  We recently
    presented a new CAD algorithm combining two advances: truth-table
    invariance, making the CAD invariant with respect to the truth of
    logical formulae rather than the signs of polynomials; and CAD
    construction by regular chains technology, where first a complex
    decomposition is constructed by refining a tree incrementally by
    constraint. We here consider how best to formulate problems for input
    to this algorithm. We focus on a choice (not relevant for other CAD
    algorithms) about the order in which constraints are presented. We
    develop new heuristics to help make this choice and thus allow the
    best use of the algorithm in practice. We also consider other choices
    of problem formulation for CAD, as discussed in CICM 2013, revisiting
    these in the context of the new algorithm."
}

\end{chunk}

\index{Chen, Changbo}
\index{Maza, Marc Moreno}
\begin{chunk}{axiom.bib}
@misc{Chen12,
  author = "Chen, Changbo and Maza, Marc Moreno",
  title = "An Incremental Algorithm for Computing Cylindrical Algebraic
           Decompositions",
  url = "https://arxiv.org/pdf/1210.5543.pdf",
  paper = "Chen12.pdf",
  year = "2012",
  abstract =
    "In this paper, we propose an incremental algorithm for computing
    cylindrical al gebraic decompositions. The algorithm consists of two
    parts: computing a complex cylindrical tree and refining this complex
    tree into a cylindrical tree in real space. The incrementality comes
    from the first part of the algorithm, where a complex cylindrical tree
    is constructed by refining a previous complex cylindrical tree with a
    polynomial constraint. We have implemented our algorithm in Maple. The
    experimentation shows that the proposed algorithm outperforms existing
    ones for many examples taken from the literature"
}

\end{chunk}

