books/bookvolbib Proving Axiom Correct references

Goal: Proving Axiom Correct

\index{de Bruijn, N.G.}
\begin{chunk}{axiom.bib}
\article{Brui68,
  author = "de Bruijn, N.G."
  title = "The Mathematical Language Automath, its Usage, and Some of
           its Extensions",
  journal = "Lecture Notes in Mathematics",
  publisher = "Springer",
  year = "1994",
  volume = "125",
  paper = "Brui68.pdf",
  keywords = "CAS-Proof"
}

\end{chunk}

\index{Jones, C.}
\begin{chunk}{axiom.bib}
@book{Jone93,
  author = "Jones, C.",
  title = Completing the Rationals and Metric Spaces in LEGO",
  booktitle = "Logical Frameworks",
  pages = "209-222",
  year = "1993",
  publisher = "Cambridge University Press"
}  

\end{chunk}

\begin{chunk}{axiom.bib}
@misc{JARx96,
  author = "various",
  title = "Journal of Automated Reasoning",
  publisher = "Springer",
  year = "1996",
  volume = "16",
  number = "1/2",
  comment = "Special Issue on Inductive Proof"
}

\end{chunk}

\index{Bundy, Alan}
\index{Stevens, Andrew}
\index{van Hemelen, Frank}
\index{Ireland, Andrew}
\index{Smaill, Alan}
\begin{chunk}{axiom.bib}
@article{Bund93b,
  author = "Bundy, Alan and Stevens, Andrew and van Hemelen, Frank and
            Ireland, Andrew and Smaill, Alan",
  title = "Rippling: A heuristic for guiding inductive proofs",
  journal = "Artifical Intelligence",
  volume = "62",
  number = "2",
  year = "1993",
  pages = "185-253",
  abstract =
    "We describe rippling: a tactic for the heuristic control of the key
    part of proofs by mathematical induction. This tactic significantly
    reduces the search for a proof of a wide variety of inductive
    theorems. We first present a basic version of rippling, followed by
    various extensions which are necessary to capture larger classes of
    inductive proofs. Finally, we present a generalised form of rippling
    which embodies these extensions as special cases. We prove that
    generalised rippling always terminates, and we discuss the
    implementation of the tactic and its relation with other inductive
    proof search heuristics."
}

\end{chunk}

\index{Bundy, Alan}
\begin{chunk}{axiom.bib}
@article{Bund88,
  author = "Bundy, Alan",
  title = "The Use of Explicit Plans to Guide Inductive Proofs",
  journal = "LNCS 310",
  volume = "310",
  pages = "111-120",
  year = "1998",
  abstract =
    "We propose the use of explicit proof plans to guide the search for a
    proof in automatic theorem proving. By representing proof plans as the
    specifications of LCF-like tactics and by recording these
    specifications in a sorted meta-logic, we are able to reason about the
    conjectures to be proved and the methods available to prove them. In
    this way we can build proof plans of wide generality, formally account
    for and predict their successes and failures, apply them flexibly,
    recover from their failures, and learn them from example proofs.
    
    We illustrate this technique by building a proof plan based on a
    simple subset of the implicit proof plan embedded in the Boyer-Moore
    theorem prover.",
  paper = "Bund88.pdf"
}

\end{chunk}

\index{Guttag, John V.}
\index{Horning, James J.}
\begin{chunk}{axiom.bib}
@book{Gutt93,
  author = "Guttag, John V. and Horning, James J.",
  title = "LARCH: Languages and TOols for Formal Specifications",
  publisher = "Springer-Verlag",
  year = "1993",
  isbn = "3-540-94006-5"
}

\end{chunk}

\index{McCune, William W.}
\begin{chunk}{axiom.bib}
@article{Mccu93,
  author = "McCune, William W.",
  title = "Single Axioms for Groups and Abelian Groups with Various 
           Operations",
  journal = "J. Automated Reasoning",
  volume = "10",
  number = "1",
  year = "1993",
  abstract = 
    "This paper summarizes the results of an investigation into single
    axioms for groups, both ordinary and Abelian, with each of following
    six sets of operations: \{product, inverse\}, \{division\}, \{double
    division, identity\}, \{double division, inverse\}, \{division,
    identity\} , and \{division, inverse\}. In all but two of the twelve
    corresponding theories, we present either the rst single axioms known
    to us or single axioms shorter than those previously known to us. The
    automated theorem-proving program Otter was used extensively to
    construct sets of candidate axioms and to search for and nd proofs
    that given candidate axioms are in fact single axioms.",
  paper = "Mccu93.pdf"
}

\end{chunk}
 
