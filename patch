books/bookvolbib add references

Goal: Proving Axiom Correct

\index{Meshveliani, Sergei D.}
\begin{chunk}{axiom.bib}
@misc{Mesh13,
  author = "Meshveliani, Sergei D.",
  title = Dependent Types for an Adequate Programming of Algebra",
  link = "\url{http://ceur-ws.org/Vol-1010/paper-05.pdf}",
  year = "2005",
  abstract =
    "This research compares the author’s experience in program- ming
    algebra in Haskell and in Agda (currently the former experience is
    large, and the latter is small). There are discussed certain hopes and
    doubts related to the dependently typed and verified programming of
    symbolic computation. This concerns the 1) author’s experience
    history, 2) algebraic class hierarchy design, 3) proof cost overhead
    in evaluation and in coding, 4) other subjects. Various examples are
    considered.",
  paper = "Mesh13.pdf"
}

\end{chunk}

\index{Norell, Ulf}
\index{Chapman, James}
\begin{chunk}{axiom.bib}
@misc{Nore08,
  author = "Norell, Ulf and Chapman, James",
  title = "Dependently Typed Programming in Agda",
  link = "\url{http://www.cse.chalmers.se/~ulfn/papers/afp08/tutorial.pdf}",
  year = "2008",
  paper = "Nore08.pdf"
}

\end{chunk}

\index{Bidoit, M.}
\index{Kreowski, H.-J.}
\index{Lescanne, P.}
\index{Orejas, F.}
\index{Sannella, D.}
\begin{chunk}{axiom.bib}
@book{Bido91,
  author = "Bidoit, M. and Kreowski, H.-J. and Lescanne, P. and
            Orejas, F. and Sannella, D.",
  title = "Algebraic System Specification and Development",
  publisher = "Springer-Verlag",
  comment = "LNCS 501",
  year = "1991",
  isbn = "3-540-54060-1",
  abstract =
    "A great deal of work has been devoted to methods of specification
    based on the simple idea that a functional program can be modelled as
    a {\sl many-sorted algebra}, i.e. as a number of sets of data values
    (one set of values for each data type) together with a number of total
    functions on those sets corresponding to the functions in the
    program. This abstracts away from the algorithms used to compute the
    functions and how those algorithms are expressed in a given
    programming language, focusing instead on the representation of data
    and the input/output behavior of functions. The pioneering work in
    this area is [Zil 74],[Gut 75], [GTW 76], of which the latter -- the
    so-called {\sl initial algebra approach} -- is the most formal This
    idea was soon taken up by other workers, see e.g. [GGM 76], [GHM 76], 
    [BG 77], [GHM 78]. Today the field of algebraic specification has
    grown into one of the major areas of research in theoretical computer
    science. More than fifteen years of research have led to an abundance
    of competing and complementary theories and approaches. The algebraic
    approach provides a conceptual basis, theoretical fundations, and
    prototype tools for the stepwise formal development of correct system
    components from their specifications, and thus covers the whole
    software development process from the specification of requirements to
    the finished system. These methos are potentially applicable to the
    development of correct hardware systems as well"

}

\end{chunk}

