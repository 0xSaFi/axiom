books/bookvol13 books/bookvol13 COQ details

Goal: Proving Axiom Correct

\begin{chunk}{axiom.bib}
@book{Acze13,
  author = "Aczel, Peter et al.",
  title = "Homotopy Type Theory: Univalent Foundations of Mathematics",
  publisher = "Institute for Advanced Study",
  year = "2013",
  url = "https://hott.github.io/book/nightly/hott-letter-1075-g3c53219.pdf",
  paper = "Acze13.pdf"
}

\end{chunk}

\index{Huet, G\'erard}
\begin{chunk}{axiom.bib}
@inproceedings{Huet87,
  author = {Huet, G\'erard},
  title = "Induction Principles Formalized in the Calculus of Constructions",
  booktitle = "TAPSOFT 87",
  publisher = "Springer-Verlag",
  series ="LNCS 249",
  year = "1987",
  pages = "276-286",
  abstract =
    "The Calculus of Constructions is a higher-order formalism for writing
    constructive proofs in a natural deduction style, inspired from work
    by de Bruijn, Girard, Martin-Lof, and Scott. THe calculus and its
    syntactic theory were presented in Coquand's thesis, and an
    implementation by the author was used to mechanically verify a
    substantial number of proofs demonstrating the power of expression of
    the formalism. The Calculus of Constructions is proposed as a
    foundation for the design of programming environments where programs
    are developed consistently with formal specifications. The current
    paper shows how to define inductive concepts in the calculus.
    
    A very general induction schema is obtained by postulating all
    elements of the type of interest to belong to the standard
    interpretation associated with a predicate map. This is similar to the
    treatment of D. Park, but the power of expression of the formallism
    permits a very direct treatment, in a language that is formalized
    enough to be actually implemented on a computer. Special instances of
    the induction schema specialize to Noetherian induction and Structural
    induction over any algebraic type.  Computational Induction is treated
    in an axiomatization of Domain Theory in Constructions. It is argued
    that the resulting principle is more powerful than LCF's, since the
    restriction on admissibility is expressible in the object language.",
  paper = "Huet87.pdf"
}

\end{chunk}


\index{Frade, Maria Joao}
\begin{chunk}{axiom.bib}
@article{Frad08,
  author = "Frade, Maria Joao",
  title = "Calculus of Inductive Construction. Software Formal Verification",
  year = "2008",
  url = "http://www4.di.uminho.pt/~jno/mfes/0809/SFV-CIC.pdf",
  paper = "Frad08.pdf"
}

\end{chunk}

\begin{chunk}{axiom.bib}
@misc{Wiki17,
  author = "Wikipedia",
  title = "Calculus of constructions",
  year = "2017",
  url = "https://en.wikipedia.org/wiki/Calculus\_of\_constructions"
}

\end{chunk}

