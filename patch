bookvolbib reference for Cylindrical Algebraic Decomposition

Goal: Axiom Algebra

\index{Hong, Hoon}
\begin{chunk}{axiom.bib}
@inproceedings{Hong93,
  author = "Hong, Hoon",
  title = "Quantifier elimination for formulas constrained by 
           quadratic equations",
  booktitle = "Proc. ISSAC'93",
  year = "1993",
  pages = "264-274",
  publisher = "ACM",
  isbn = "0-89791-604-2",
  abstract =
    "An algorithm is given for constructing a quantifier free formula
    (a boolean expression of polynomial equations and inequalitier)
    equivalent to a given formula of the form:
    $(\exists x \in \mathbb{R})[a_x^2+a_1x+a_0=0 \and F]$, where $F$
    is a quantifier free formula in $x_1,\ldots,x_r,x,$ and
    $a_2,a_1,a_0$ are polynomials in $x_1,\ldots,x_r$ with real
    coefficients such that the system 
    $\{a_2=0,a_1=0,a_0=0\}$ has no solution in $\mathbb{R}^r$.
    Formulas of this form frequently occur in the context of
    constraint logic programming over the real numbers. The output
    formulas are made of resultants and two variants, which we call
    {\sl trace} and {\sl slope} resultants. Both of these variant
    resultants can be expressed as determinants of certain matrices.",
  paper = "Hong93.pdf"
}

\end{chunk}

\index{Hong, Hoon}
\begin{chunk}{axiom.bib}
@article{Hong93a,
  author = "Hong, Hoon",
  title = "Quantifier Elimination for Formulas Constrained by 
           Quadratic Equations via Slope Resultants",
  journal = "The Computer Journal",
  volume = "36",
  number = "5",
  year = "1993",
  pages = "439-449",
  abstract =
    "An algorithm is given for eliminating the quantifier from a formula
    $(\exists x \in \mathbb{R})[a_x^2+a_1x+a_0=0 \and F]$, where $F$
    is a quantifier free formula in $x_1,\ldots,x_r,x,$ and
    $a_2,a_1,a_0$ are polynomials in $x_1,\ldots,x_r$ with real
    coefficients such that the system 
    $\{a_2=0,a_1=0,a_0=0\}$ has no solution in $\mathbb{R}^r$.
    The output formulas are made of resultants and their variants,
    which we call {\sl slope} resultants. The slope resultants can be,
    like the resultants, expressed as determinants of certain matrices.
    If we allow the determinant symbol in the output the computing time
    of the algorithm is {\sl linear} in the length of the input. If not,
    the computing time is dominated by $N(n^{2r+1}\ell+n^{2r}\ell^2)$
    where $N$ is the number of polynomials in the input formula, $r$
    is the number of variables, $n$ is the maximum of the degrees for
    every variable, and $\ell$ is the maximum of the integer 
    coefficient bit lengths. Experimants with implementation suggest
    that the algorithm is sufficiently efficient to be useful in practice.",
  paper = "Hong93a.pdf"
}

\end{chunk}  

\index{Hong, Hoon}
\index{El Din, Mohab Safey}
\begin{chunk}{axiom.bib}
@article{Hong12,
  author = "Hong, Hoon and El Din, Mohab Safey",
  title = "Variant Quantifier Elimination",
  journal = "J. of Symbolic Computation",
  volume = "47",
  number = "7",
  year = "2012",
  pages = "883-901",
  abstract =
    "We describe an algorithm (VQE) for a variant of the real quantifier
    elimination problem (QE). The variant problem requires the input to
    satisfy a certain {\sl extra condition}, 
    and allows the output to be {\sl almost}
    equivalent to the input. The motivation/rationale for studying such a
    variant QE problem is that many quantified formulas arising in
    applications do satisfy the extra conditions. Furthermore, in most
    applications, it is sufficient that the output formula is almost
    equivalent to the input formula. The main idea underlying the
    algorithm is to substitute the repeated projection step of CAD by a
    single projection without carrying out a parametric existential
    decision over the reals. We find that the algorithm can tackle
    important and challenging problems, such as numerical stability
    analysis of the widely-used MacCormack’s scheme. The problem has been
    practically out of reach for standard QE algorithms in spite of many
    attempts to tackle it. However, the current implementation of VQE can
    solve it in about 12 hours. This paper extends the results reported at
    the conference ISSAC 2009.",
  paper = "Hong12.pdf"
}

\end{chunk}

\index{Hong, Hoon}
\index{Sendra, J. Rafael}
\begin{chunk}{axiom.bib}
@inproceedings{Hong98a,
  author = "Hong, Hoon and Sendra, J. Rafael",
  title = "Computation of Variant Results",
  booktitle = "Quantifier Elimination and Cylindrical Algebraic
               Decomposition",
  publisher = "Springer",
  year = "1998",
  isbn = "3-211-82794-3",
  pages = "327-337"
}

\end{chunk}

\index{Jovanovic, Dejan}
\index{de Moura, Leonardo}
\begin{chunk}{axiom.bib}
@misc{Jova12,
  author = "Jovanovic, Dejan and de Moura, Leonardo",
  title = "Solving Non-Linear Arithmetic",
  year = "2012",
  link = "\url{http://cs.nyu.edu/~dejan/nonlinear/ijcar2012_extended.pdf}",
  comment = "see: http://cs.nyu.edu/~dejan/nonlinear/",
  abstract =
    "We present a new algorithm for deciding satisfiability of non-linear
    arithmetic constraints. The algorithm performs a Conflict-Driven
    Clause Learning (CDCL)- style search for a feasible assignment, while
    using projection operators adapted from cylindrical algebraic
    decomposition to guide the search away from the conflicting states.",
  paper = "Jova12.pdf"
}

\end{chunk}

\index{England, Matthew}
\index{Davenport, James H.}
\begin{chunk}{axiom.bib}
@misc{Engl16,
  author = "England, Matthew and Davenport, James H.",
  title = "Experience with Heuristics, Benchmarks and Standards for
           Cylindrical Algebraic Decomposition",
  link = "\url{https://arxiv.org/pdf/1609.09269.pdf}",
  abstract =
    "n the paper which inspired the $SC^2$ project, [E. Abraham,
    Building Bridges between Symbolic Computation and Satisfiability
    Checking , Proc. ISSAC ’15, pp. 1–6, ACM, 2015] the author identified
    the use of sophisticated heuristics as a technique that the
    Satisfiability Checking community excels in and from which it is
    likely the Symbolic Computation community could learn and prosper.  To
    start this learning process we summarise our experience with heuristic
    development for the computer algebra algorithm Cylindrical Algebraic
    Decomposition. We also propose and discuss standards and benchmarks as
    another area where Symbolic Computation could prosper from
    Satisfiability Checking expertise, noting that these have been
    identified as initial actions for the new $SC^2$ community in the CSA
    project, as described in [E.́ Abraham et al., SC 2 : {\sl Satisfiability
    Checking meets Symbolic Computation (Project Paper)}, Intelligent
    Computer Mathematics (LNCS 9761), pp.  28–43, Springer, 2015].",
  paper = "Engl16.pdf"
}

\end{chunk}

\index{Gonzalex-Vega, L.}
\begin{chunk}{axiom.bib}
@inproceedings{Gonz98,
  author = "Gonzalex-Vega, L.",
  title = "A combinatorial algorithm solving some quantifier elimination
           problems",
  booktitle = "Quantifier Elimination and Cylindrical Algebraic 
               Decomposition",
  isbn = "3-211-82794-3",
  year = "1998",
  pages = "365-374",
}

\end{chunk}

\index{Gonzalex, Laureano}
\index{Henri, Lombardi}
\index{Recio, Tomas}
\index{Roy, Marie-Francoise}
\begin{chunk}{axiom.bib}
@inproceedings{Gonz89,
  author = "Gonzalex, Laureano and Henri, Lombardi and Recio, Tomas and
            Roy, Marie-Francoise",
  title = "Sturm-Habicht sequence",
  booktitle = "Proc. ACM-SIGSAM 1989",
  year = "1989",
  pages = "136-146",
  isbn = "0-89791-325-6",
  abstract =
    "Formal computations with inequalities is a subject of general interest
    in computer algebra. In particular it is fundamental in the
    parallelisation of basic algorithms and quantifier elimination for real
    closed filed ([BKR], [HRS]).
    
    In $\S{}I$ we give a generalisation of Sturm theorem essentially due to
    Sylvester which is the key for formal computations with inequalities.
    Our result is an improvement of previously known results (see [BKR])
    since no hypotheses have to be made on polynomials.
    
    In $\S{}II$ we study the subresultant sequence. We precise some of the
    classical definitions in order to avoid some problems appearing in the
    paper by Loos ([L]) and study specialisation properties in detail.
    
    In $\S{}III$ we introduce the Sturm-Habicht sequence, which generalises
    Habicht's work ([H]). This new sequence obtained automatically from a
    subresultant sequence has some remarkable properties:
    \begin{itemize}
    \item it gives the same information than the Sturm sequence, and this
    information may be recovered by looking only at its principal 
    coefficients
    \item it can be computed by ring operations and exact divisions only,
    in polynomial time in case of integer coefficients, eventually by
    modular methods
    \item it has goos specialisation properties
    \end{itemize}
    
    Finally in $\S{}IV$ we give some information about applications and
    implementation of the Sturm-Habicht sequence.",
  paper = "Gonz89.pdf"
}

\end{chunk}

\index{Ratschan, Stefan}
\begin{chunk}{axiom.bib}
@article{Rats02,
  author = "Ratschan, Stefan",
  title = "Approximate quantified constraint solving by cylindrical box 
           decomposition",
  year = "2002",
  volume = "8",
  number = "1",
  pages = "21-42",
  abstract =
    "This paper applies interval methods to a classical problem in
    computer algebra. Let a quantified constraint be a first-order formula
    over the real numbers. As shown by A. Tarski in the 1930's, such
    constraints, when restricted to the predicate symbols $<$, $=$ and
    function symbols $+$, $\times$, are in general solvable. 
    However, the problem
    becomes undecidable, when we add function symbols like
    sin. Furthermore, all exact algorithms known up to now are too slow
    for big examples, do not provide partial information before computing
    the total result, cannot satisfactorily deal with interval constants
    in the input, and often generate huge output. As a remedy we propose
    an approximation method based on interval arithmetic. It uses a
    generalization of the notion of cylindrical decomposition—as
    introduced by G. Collins. We describe an implementation of the method
    and demonstrate that, for quantified constraints without equalities,
    it can efficiently give approximate information on problems that are
    too hard for current exact methods."
}

\end{chunk}

\index{Hong, Hoon}
\index{Stahl, V.}
\begin{chunk}{axiom.bib}
@article{Hong94,
  author = "Hong, Hoon and Stahl, V.",
  title = "Safe start regions by fixed points and tightening",
  journal = "Computing",
  volume = "53",
  number = "3",
  pages = "323-335",
  abstract = 
    "In this paper, we present a method for finding safe starting regions
    for a given system of non-linear equations. The method is an
    improvement of the usual method which is based on the fixed point
    theorem. The improvement is obtained by enclosing the components of
    the equation system by univariante interval polynomials whose zero
    sets are found. This operation is called ``ightening''. Preliminary
    experiments show that the tightening operation usually reduces the
    number of bisections, and thus the computing time. The reduction seems
    to become more dramatic when the number of variables increases."
}

\end{chunk}
