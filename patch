books/bookvolbib add references

Goal: Proving Axiom Correct

\index{Harper, Robert}
\begin{chunk}{axiom.bib}
@phdthesis{Harp85,
  author = "Harper, Robert",
  title = {{Aspects of the Implementation of Type Theory}},
  school = "Cornell University",
  year = "1985",
  comment = "TR 85-675",
  abstract =
    "This thesis is about building an automated programming logic. For our
    purposes an automated programming logic consists of
    \begin{itemize}
    \item A formal system for reasoning about programs
    \item A proof development environment which includes, at least, an
    editor for the construction of proofs in the logic
    \item Mechanized decision methods to assist in the proof development
    process 
    \item A library mechanism for managing collections of theorems
    \end{itemize}",
  paper = "Harp85.pdf"
}

\end{chunk}

\index{Filliatre, Jean-Christophe}
\begin{chunk}{axiom.bib}
@phdthesis{Fill99,
  author = "Filliatre, Jean-Christophe",
  title = {{Preuve de programmes imp\'eratifs en th\'eorie des types}},
  school = {{Universit\'e Paris Sud}},
  year = "1999"
}

\end{chunk}

\index{Blanqui, Frederic}
\index{jouannaud, Jean-Pierre}
\index{Okada, Mitsuhiro}
\begin{chunk}{axiom.bib}
@inproceedings{Blan99,
  author = "Blanqui, Frederic and jouannaud, Jean-Pierre and Okada, Mitsuhiro",
  title = {{The Calculus of Algebraic Constructions}},
  booktitle = "Rewriting Techniques and Applications RTA-99",
  year = "1999",
  publisher = "LNCS 1631",
  link = "\url{https://hal.inria.fr/inria-00105545v1/document}",
  abstract = 
    "This paper is concerned with the foundations of the Calculus of
    Algebraic Constructions (CAC), an extension of the Calculus of
    Constructions by inductive data types. CAC generalizes inductive 
    types equipped with higher-order primitive recursion, by providing
    definition s of functions by pattern-matching which capture recursor
    definitions for arbitrary non-dependent and non-polymorphic inductive
    types satisfying a strictly positivity condition. CAC also
    generalizes the first-order framework of abstract data types by
    providing dependent types and higher-order rewrite rules.",
  paper = "Blan99.pdf",
  keywords = "printed"
}

\end{chunk}

\index{Blanqui, Frederic}
\begin{chunk}{axiom.bib}
@article{Blan05,
  author = "Blanqui, Frederic",
  title = {{Inductivev Types in the Calculus of Algebraic Constructions}},
  journal = "Fundamenta Informaticae",
  volume = "65",
  number = "1-2",
  pages = "61-86",
  year = "2005",
  abstract =
    "In a previous work, we proved that an important part of the Calculus
    of Inductive Constructions (CIC), the basis of the Coq proof
    assistant, can be seen as a Calculus of Algebraic Constructions
    (CAC), an extension of the Calculus of Constructions with functions
    and predicates defined by higher-order rewrite rules.  In this
    paper, we prove that almost all CIC can be seen as a CAC, and that it
    can be further extended with non-strictly positive types and
    inductive-recursive types together with non-free constructors and
    pattern-matching on defined symbols.",
  paper = "Blan05.pdf"
}

\end{chunk}
