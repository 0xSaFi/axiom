books/bookvolbib Axiom Citations in the Literature

Goal: Axiom Literate Programming

index{Caruso, Fabrizio}
\begin{chunk}{axiom.bib}
@misc{Caru10,
  author = "Caruso, Fabrizio",
  title = "Factorization of Non-Commutative Polynomials",
  url = "https://arxiv.org/pdf/1002.3108.pdf",
  paper = "Caru10.pdf",
  keywords = "axiomref",
  year = "2010",
  abstract =
    "We describe an algorithm for the factorization of non-commutative
    polynomials over a field. The first sketch of this algorithm appeared
    in an unpublished manuscript (literally hand written notes) by James
    H.  Davenport more than 20 years ago. This version of the algorithm
    contains some improvements with respect to the original sketch. An
    improved version of the algorithm has been fully implemented in the
    Axiom computer algebra system."
}

\end{chunk}

\index{Chen, Changbo}
\index{Davenport, James H.}
\index{May, John P.}
\index{Maza, Marc Moreno}
\index{Xia, Bican}
\index{Xiao, Rong}
\begin{chunk}{axiom.bib}
@misc{Chen10,
  author = "Chen, Changbo and Davenport, James H. and May, John P. and
            Maza, Marc Moreno and Xia, Bican and Xiao, Rong",
  title = "Triangular Decomposition of Semi-algebraic Systems",
  year = "2010",
  url = "https://arxiv.org/pdf/1002.4784.pdf",
  paper = "Chen10.pdf",
  abstract =
    "Regular chains and triangular decompositions are fundamental and
    well-developed tools for describing the complex solutions of
    polynomial systems. This paper proposes adaptations of these tools
    focusing on solutions of the real analogue: semi-algebraic systems.
    
    We show that any such system can be decomposed into finitely many
    regular semi-algebraic systems. We propose two specifications of such
    a decomposition and present corresponding algorithms. Under some
    assumptions, one type of decomposition can be computed in singly
    exponential time w.r.t. the number of variables. We implement our
    algorithms and the experimental results illustrate their
    effectiveness."
}

\end{chunk}

\index{Certik, Ondrej}
\begin{chunk}{axiom.bib}
@misc{Cert16,
  author = "Certik, Ondrej",
  title = "SymPy vs. Axiom",
  url = "https://github.com/sympy/sympy/wiki/SymPy-vs.-Axiom",
  keywords = "axiomref"
}

\end{chunk}

\index{Baker, Martin}
\begin{chunk}{axiom.bib}
@misc{Bake16a,
  author = "Baker, Martin",
  title = "Axioms in Axiom",
  keywords = "axiomref",
  year = "2016",
  url = "http://www.euclideanspace.com/prog/scratchpad/axiomsinAxiom"
}

\end{chunk}

\index{Joyner, W. D.}
@misc{Joyn08,
  author = "Joyner, W. D.",
  title = "Open Source Mathematical Software: A White Paper",
  url = "http://wdjoyner.com/writing/research/oscas-nsf-white-paper12.tex",
  paper = "Joyn08.tex",
  keywords = "axiomref",
  year = "2008"
}

\index{Karpinski, Stefan}
\begin{chunk}{axiom.bib}
@misc{Karp14,
  author = "Karpinski, Stefan",
  title = "Re: Symbolic Math: try a translation of Axiom to Julia?",
  url = 
   "https://groups.google.com/forum/#!msg/julia-dev/NTfS9fJuIcE/MINQuQuGfoUJ",
  keywords = "axiomref",
  year = "2016"
}

\end{chunk}

\begin{chunk}{axiom.bib}
@misc{America,
  author = "america.pink",
  title = "Axiom (computer algebra system)",
  year = "2016",
  keywords = "axiomref",
  url = "http://america.pink/axiom-computer-algebra-system_526647.html"
}

\end{chunk}

\index{Davenport, James H.}
\index{Siret, Y.}
\index{Tournier, E.}
\begin{chunk}{axiom.bib}
@book{Dave88,
  author = "Davenport, James H. and Siret, Y. and Tournier, E.",
  title = 
    "Computer Algebra: Systems and Algorithms for Algebraic Computation", 
  publisher = "Academic Press",
  year = "1988", 
  isbn ="0-12-204232-9",
  url = "http://staff.bath.ac.uk/masjhd/masternew.pdf",
  paper = "Dave88.pdf",
  keywords = "axiomref",
  abstract =
    "The need for a good general text on Computer Algebra has never been
    greater. From the very beginning, computers have been used for
    numerical calculation. It is not always realized however that their
    use for mathematical calculation of a symbolic nature has a history
    almost as long. It is only recently that improvement in algorithms,
    the development of small systems and the emergence of powerful
    workstations have combined to make Computer Algebra systems much more
    widely available and an increasingly important tool for almost all
    users of Mathematics. Part of the reason why Computer Algebra was for
    so long something of an esoteric discipline, has surely been the lack
    of textbooks on the subject. The arrival of the present volume on the
    scene has thus been particularly fortunate.
    
    The approach adopted by the authors is to begin by giving the reader
    an idea of the sort of calculations that Algebra Systems can
    perform. Next the questions of data representation are
    treated. Finally the bulk of the book is devoted to explaining the
    classical algorithms of the subject. The reader is thereby given both
    a feel for the problems, such as data representation and combinatorial
    explosion, that system designers need to face, and a general
    understanding of the underlying Mathematics. The book is not intended
    to provide encyclopedic coverage, nor is it meant to be serve as a
    manual for any particular system.
    
    One of the more difficult design decisions facing authors of such a
    book concerns the level of mathematical sophistication to be assumed
    on behalf of the reader. One wants the book to be accessible to as
    wide an audience as possible, but any understanding of the subject
    beyond the more superficial requires a reasonable grasp of the
    underlying Pure Mathematics. The compromise made in the present text
    is to fully explain the mathematical problems, to state the theorems
    and consequent algorithms, but not always to prove the theorems. Many
    of the more straightforward results are proved though. The decisions
    as to what to include and what to omit have been well thought out and
    the result is a considerable success. The book has a great deal to
    offer engineers and scientists and its early chapters in particular
    could most suitably serve as the basis for an undergraduate
    course. For the professional mathematician it provides a good quick
    all-round introduction to a fascinating and rapidly evolving area.
    
    Of course in a book such as this, not everything that might fall under
    the umbrella of Computer Algebra can be covered. Thus some specialized
    topics, such as Computational Group Theory, are not mentioned, and the
    treatment of other areas is sometimes necessarily abbreviated. However
    the main stream of the subject is well represented, and the selection
    of material generally well judged. Typically, the main classical
    results are fully explained, some of the more interesting developments
    and variations are sketched, and the reader is referred to the
    standard literature of the subject for further details.
    
    The first chapter is entitled ``How to use a Computer Algebra
    System''. Here the reader is led through a session with the MACSYMA
    system obtaining a vicarious hands-on experience. Beginners would be
    well advised to follow the authors’ suggestion and duplicate the
    session on their local system as closely as possible. The examples
    chosen are interesting, though perhaps a little too ‘pure
    mathematical’ for some tastes. Overall the chapter gives a good idea
    of the capabilities of algebra systems.
    
    Chapter 2 is concerned with the representation of the various
    mathematical quantities which algebra systems handle. It might be
    thought that data repesentation is mainly a computer-science matter,
    but in fact some rather interesting mathematical problems concerning
    uniqueness arise. The chapter includes, among other things, discussion
    of the non- modular methods for computing gcds (the subresultant
    algorithm for example), the handling of algebraic quantities the Risch
    Structure Theorem and the Bareiss Method of Gaussian elimination.
    
    The third chapter treats two major topics under the heading
    ``Polynomial Simplification''. Firstly there is a concise, but good,
    explanation of Buchberger’s Groebner-basis methods for computations in
    polynomial rings. Secondly there is an equally good introduction to
    the use of cylindrical decomposition for obtaining approximations to
    real roots of polynomial equations.
    
    Chapter 4, which is headed ``Advanced Algorithms'', begins with a
    discussion of modular methods, in particular the modular gcd. A brisk
    treatment of the Berlekamp factorization method follows, together with
    both the linear and quadratic varieties of the Hensel Lemma. In
    addition there is a short section on the factorization of polynomials
    in several variables. In general the high standard of the book is
    maintained, but, unusually, the treatment of the modular gcd suffers a
    little from typos and the explanation of the Hensel Lemma could be
    clearer in places.
    
    The major part of the final chapter is devoted to symbolic integration
    and related topics concerning the formal solution of some ordinary
    differential equations. These form the ‘high point’ of the book. Here
    in particular the reader is led to the borders of current
    research. The final part of Chapter 5 is concerned with asymptotic
    expansions of solutions of differential equations. I found the
    treatment of this topic too brief to be entirely successful. Those
    already familiar with the theory of asymptotic expansion will no doubt
    be interested in the details of the implementation, but the beginner
    needs a fuller treatment, which this important topic surely deserves.
    
    The book also contains an appendix and an annex. The former is
    entitled ``Algebraic Background''. It is useful to refer to, but would
    not be sufficient for anyone whose background did not already include
    a fair familiarity with most of its contents. The annex contains a
    description of the REDUCE system. Here the reader is able to see how
    some of the algorithms described in the main part of the book are used
    in an actual system.
    
    The bibliography is excellent, though I do have two minor carps. One
    or two articles mentioned in the text do not appear in the
    bibliography, Also inclusion of one or two ‘standard’ mathematical
    works, and appropriate reference to them in the text, would make the
    book more accessible to people whose main speciality is not
    Mathematics.
    
    The few minor quibbles I have with this book are of little
    importance. It provides an excellent introduction to Computer
    Algebra. At the time of writing, it is still, to the best of my
    knowledge, the only general textbook on the subject and it is indeed
    fortunate that it is such a good one.

    The second edition incorporates many recent advances in theory and
    practice of computer algebra (a short proof of the convergence of
    Buchberger’s algorithm as well as recent releases of software
    described in the text). Further a description of the AXIOM system is
    included.
    
    This book definitely represents one of the best introductions to
    computer algebra accessible to beginners and researchers."
}

\end{chunk}

\index{Heck, Andre}
\begin{chunk}{axiom.bib}
@book{Heck93,
  author = "Heck, Andre",
  title = "Introduction to Maple",
  year = "1993",
  publisher = "Springer-Verlag",
  keywords = "axiomref",
  abstract =
    "This is an introductory book on one of the most powerful computer
    algebra systems, viz, Maple: The primary emphasis in this book is on
    learning those things that can be done with Maple and how it can be
    used to solve mathematical problems. In this book usage of Maple as a
    programming language is not discussed at a higher level than that of
    defining simple procedures and using simple language constructs. 
    However, the Maple data structures are discussed in detail.

    This book is divided into eighteen chapters spanning a variety of
    topics. Starting with an introduction to symbolic computation and
    other similar computer algebra systems, this book covers several
    topics like polynomials and rational functions, series,
    differentiation and integration, differential equations, linear
    algebra, 2-D and 3-D graphics, etc. The applications covered include
    kinematics of the Stanford manipulator, a 3-component model for
    cadmium transfer through the human body, molecular-orbital Hückel
    theory, prolate spheroidal coordinates and Moore-Penrose inverses.
    
    At the end of each chapter, a good number of excercises is given. A
    list of relevant references is also given at the end of the book.
    This book is very useful to all users of Maple package."
}

\end{chunk}

\index{Lazard, Daniel}
\begin{chunk}{axiom.bib}
@InProceedings{Laza93,
  author = "Lazard, Daniel",
  title = "On the representation of rigid-body motions and its application
           to generalized platform manipulators",
  booktitle = "Proc. Workshop Computational Kinematics",
  year = "1993",
  location = "Dagstuhl Castle, Germany",
  publisher = "Kluwer Academic Publishers",
  pages = "175-181",
  keywords = "axiomref",
  abstract =
    "Different ways for representing rigid body motions (direct isometries)
    by a computer are presented. It turns out that the choice between them
    may have a dramatic effect on the difficulty of a computation or of a
    proof. As an application, a computational proof is given of the fact
    that the direct kinematic problem for the generalized Stewart platform
    has at most 40 complex solutions."
}

\end{chunk}

\index{Mishra, Bhubaneswar}
\begin{chunk}{axiom.bib}
@book{Mish93,
  author = "Mishra, Bhubaneswar",
  title = "Algorithmic Algebra",
  publisher = "Springer-Verlag",
  series = "Texts and Monographs in Computer Sciences",
  year = "1993",
  keywords = "axiomref",
  abstract =
    "This book is based on a graduate course in computer science taught in
    1987. The following topics are covered: computational ideal theory,
    solving systems of polynomial equations, elimination theory, real
    algebra, as well as an introduction chapter and two chapters with the
    needed algebraic background. The book is self-contained and the proofs
    are given with many details.
    
    It is clear that this book is only an introduction to the topic and
    does not cover the many improvements that appeared in the last 7 years
    about for example the computation of Groebner basis, polynomial
    solving, multivariate resultants and algorithms in real
    algebra. Choices had to be made to keep the content of a reasonable
    size and the complexity issues are not considered.
    
    The choice of topics is excellent, there are many exercises and
    examples. It is a very useful book."
}

\end{chunk}

\index{Scheerhorn, Alfred}
\begin{chunk}{axiom.bib}
@misc{Sche93,
  author = "Scheerhorn, Alfred",
  title = "Presentation of the algebraic closure of finite fields and 
           trace-compatible polynomial sequences",
  comment = "Darstellungen des algebraischen Abschlusses endlicher Korper
             und spur-kompatible Polynomfolgen",
  year = "1993",
  keywords = "axiomref",
  abstract =
    "For numerical experiments concerning various problems in a finite
    field $\mathbb{F}_q$ it is useful to have an explicit data
    presentation $\mathbb{F}_{q^m}$ of for large $m$, and a method for the
    construction of towers
    \[\mathbb{F}_q \subset \mathbb{F}_{q^{d_1}} \subset \cdots \subset
    \mathbb{F}_{q^{d_k}} = \mathbb{F}_{q^m}\]
    In order to avoid the identification problem it is advantageous to 
    have all fields in the tower presented by properly chosen normal bases, 
    whereby the embedding 
    $\mathbb{F}_{q^{d_i}} \subset \mathbb{F}_{q^{d_{i+1}}}$
    is given by the trace function.
    
    The following notion is introduced: A sequence of polynomials 
    $\{f_n | n \ge 1\}$ with degree$(f_n)=n$ called trace-compatible over 
    $\mathbb{F}_q$ if (1) $f_n$ is a normal polynomial over $\mathbb{F}_q$, 
    (2) if $\alpha_n \in \mathbb{F}_{q^n}$ is a root of $f_n$, then for any 
    proper divisor $d$ of $n$ the trace of $\alpha_n$ over $\mathbb{F}_{q^d}$ 
    is a root of $f_d$.
    
    The main goal of the dissertation is to give algorithms for
    construction of sequences of trace-compatible polynomials and to
    present explicit numerical data. An analogous notion of
    norm-compatible sequences is also introduced and studied.
    
    The dissertation consists of four chapters and a supplement, as
    follows: (1) Basic notions (1-31). (2) Presentation of the algebraic
    closure of a finite field (32-59). (3) Sequences of polynomials and
    sequences of elements (60-115). (4) Implementations (118-139). (5)
    Supplement (142-171).
    
    In chapters (1)–(3) various known results and algorithms are
    collected, and new results are added and compared with those
    previously used. 
    
    The numerical results in the supplement contain sequences of
    trace-compatible polynomials of degree $n$, where $n \le 100$, and
    $q=2,3,5,7,11,13$. For implementation, the computer-algebra system
    AXIOM has been used. The details contained in this dissertation are
    not readily describable in a short review."
}

\end{chunk}

\index{Singer, Michael F.}
\index{Ulmer, Felix}
\begin{chunk}{axiom.bib}
@article{Sing93,
  author = "Singer, Michael F. and Ulmer, Felix",
  title = "Galois groups of second and third order linear differential 
           equations",
  journal = "J. Symb. Comput.",
  volume = "16",
  number = "1",
  pages = "9-36",
  year = "1993",
  keywords = "axiomref",
  paper = "Sing93.pdf",
  abstract = 
    "The authors discuss the first problem of Galois theory of differential
    equations. Let $F$ be an ordinary (for simplicity) differential field
    and $L(y)=0$ be an ordinary linear differential equation over $F$. How
    can one calculate the Galois group of $L$ over $F$? The authors
    suppose a new approach to the problem. They reduce it to the problem
    of finding solutions of linear differential equations in $F$ and to
    the factorization problem of such equations over $F$. These allow them
    to give simple necessary and sufficient conditions for a second order
    linear differential equation to have Liouvillian solutions and for a
    third order linear differential equation to have Liouvillian solutions
    or to be solvable in terms of second order equations."
}

\end{chunk}

\index{Singer, Michael F.}
\index{Ulmer, Felix}
\begin{chunk}{axiom.bib}
@article{Sing93a,
  author = "Singer, Michael F. and Ulmer, Felix",
  title = "Liouvillian and algebraic solutions of second and third order 
           linear differential equations",
  journal = "J. Symb. Comput.",
  volume = "16",
  number = "1",
  pages = "37-73",
  year = "1993",
  paper = "Sing93a.pdf",
  keywords = "axiomref",
  abstract =
    "Let $F$ be an ordinary differential field of characteristic 0 and 
    $L \in F <y>$ be a linear homogeneous polynomial. How can one find the
    Liouvillian solutions of $L(y)=0$? In the paper this problem is
    reduced to the problems of (1) factorization and (2) finding $u$
    solutions such that $\frac{u^{\prime}}{y} \in F$ of $L$ and some
    polynomials associated with it (symmetric powers of $L$).
    
    Now there are the algorithms for the solution of the last problems for
    $F=\mathbb{Q}(x)$ [see D. Yu. Grigor’ev, J. Symb. Comput. 10, 7-37
    (1990; Zbl 0728.68067) and M. F. Singer, Am. J. Math. 103, 661-682
    (1981; Zbl 0477.12026)].
    
    For polynomials $L$ of the second and third order the authors provide
    full investigation of the most difficult case when the solution $u$ of
    $L(y)$ is algebraic. They show that one can compute the minimal
    polynomial $P(y) \in F[y]$ of $u$. We note that the authors
    essentially used the tools of representation theory, invariant theory
    and computer algebra."
}

\end{chunk}

\index{Smith, Geoff C.}
\begin{chunk}{axiom.bib}
@article{Smit93,
  author = "Smith, Geoff C.",
  title = "Group theory results with machine generated proofs",
  journal = "An. Univ. Timis., Ser. Mat.-Inform.",
  volume = "31",
  number = "2",
  pages = "273-280",
  year = "1993",
  keywords = "axiomref",
  abstract =
    "There are a variety of theorems in group theory which admit of proofs
    by machine. This talk illustrates these techniques in action. Examples
    are given of this phenomenon, drawn from the theory of group
    presentations, and from the theory of $p$-groups. The systems involved
    include AXIOM, CAYLEY and QUOTPIC"
}

\end{chunk}

\index{Geddes, K. O.}
\index{Czapor, S.R.}
\index{Labahn, George}
\begin{chunk}{axiom.bib}
@book{Gedd92,
  author = "Geddes, Keith and Czapor, O. and Stephen R. and Labahn, George",
  title = "Algorithms For Computer Algebra",
  year = "1992",
  publisher = "Kluwer Academic Publishers",
  isbn = "0-7923-9259-0",
  month = "September",
  year = "1992",
  keywords = "axiomref",
  abstract =
    "Computer Algebra (CA) is the name given to the discipline of
    algebraic, rather than numerical, computation. There are a number of
    computer programs – Computer Algebra Systems (CASs) – available for
    doing this. The most widely used general-purpose systems that are
    currently available commercially are Axiom, Derive, Macsyma, Maple,
    Mathematica and REDUCE. The discipline of computer algebra began in
    the early 1960s and the first version of REDUCE appeared in 1968.
    
    A large class of mathematical problems can be solved by using a CAS
    purely interactively, guided only by the user documentation. However,
    sophisticated use requires an understanding of the considerable amount
    of theory behind computer algebra, which in itself is an interesting
    area of constructive mathematics. For example, most systems provide
    some kind of programming language that allows the user to expand or
    modify the capabilities of the system.
    
    This book is probably the most general introduction to the theory of
    computer algebra that is written as a textbook that develops the
    subject through a smooth progression of topics. It describes not only
    the algorithms but also the mathematics that underlies them. The book
    provides an excellent starting point for the reader new to the
    subject, and would make an excellent text for a postgraduate or
    advanced undergraduate course. It is probably desirable for the reader
    to have some background in abstract algebra, algorithms and
    programming at about second-year undergraduate level.
    
    The book introduces the necessary mathematical background as it is
    required for the algorithms. The authors have avoided the temptation
    to pursue mathematics for its own sake, and it is all sharply focused
    on the task of performing algebraic computation. The algorithms are
    presented in a pseudo-language that resembles a cross between Maple
    and C. They provide a good basis for actual implementations although
    quite a lot of work would still be required in most cases. There are
    no code examples in any actual programming language except in the
    introduction.
    
    The authors are all associated with the group that began the
    development of Maple. Hence, the book reflects the approach taken by
    Maple, but the majority of the discussion is completely independent of
    any actual system. The authors’ experience in implementing a practical
    CAS comes across clearly.
    
    The book focuses on the core of computer algebra. The first chapter
    introduces the general concept and provides a very nice historical
    survey. The next three chapters discuss the fundamental topics – data
    structures, representations and the basic arithmetic of integers,
    rational numbers, multivariate polynomials and rational functions – on
    which the rest of the book is built.
    
    A major technique in CA involves projection onto one or more
    homomorphic images, for which the ground ring is usually chosen to be
    a finite field. The image solution is lifted back to the original
    problem domain by means of the Chinese Remainder Theorem in the case
    of multiple homomorphic images, or the Hensel (-adic or ideal-adic)
    construction in the case of a single image. The next two chapters are
    devoted to these techniques in a fairly general setting. The two
    subsequent chapters specialise them to GCD computation and
    factorisation for multivariate polynomials; the first of these
    chapters also discusses the important but difficult topic of
    subresultants.
    
    The next two chapters describe the use of fraction-free Gaussian
    elimination, resultants and Gröbner Bases for manipulation and exact
    solution of linear and nonlinear polynomial equations. The two final
    chapters describe ``classical'' algorithms and the more recent Risch
    algorithm for symbolic indefinite integration, and provide an
    introduction to differential algebra.
    
    The book does not consider more specialised problem areas such as
    symbolic summation, definite integration, differential equations,
    group theory or number theory. Nor does it consider more applied
    problem areas such as vectors, tensors, differential forms, special
    functions, geometry or statistics, even though Maple and other CASs
    provide facilities in all or many of these areas. It does not consider
    questions of CA programming language design, nor any of the important
    but non-algebraic facilities provided by current CASs such as their
    user interfaces, numerical and graphical facilities.
    
    This is a long book (nearly 600 pages); it is generally very well
    presented and the three authors have merged their contributions
    seamlessly. I noticed very few typographical errors, and none of any
    consequence. I have only two complaints about the book. The typeface
    is too small, particularly for the relatively large line spacing used,
    and it is much too expensive, particularly for a book that would
    otherwise be an excellent student text. I recommend it highly to
    anyone who can afford it."
}

\end{chunk}

