books/bookvolbib add Computer Algebra - Proof references

Goal: Proving Axiom Correct

\index{Broy, Manfried}
\begin{chunk}{axiom.bib}
@article{Broy88,
  author = "Broy, Manfried",
  title = "Equational Specification of Partial Higher-order Algebras",
  journal = "Theoretical Computer Science",
  volume = "57",
  number = "1",
  year = "1988",
  pages = "3-45",
  abstract =
    "The theory of algebraic abstract types specified by positive
    conditional formulas formed of equations and a definedness predicate
    is outlined and extended to hierarchical types with ``noustrict''
    operations, partial and even infinite objects. Its model theory is
    based on the concept of partial interpretations. Deduction rules are
    given, too. Models of types are studied where all explicit equations
    have solutions. The inclusion of nigher-order types, i.e., types
    comprising higher-order functions leads to an algebraic (``equational'')
    specification of algebras including sorts with ``infinite'' objects and
    higher-order functions (``functionals'').",
  paper = "Broy88.pdf"
}

\end{chunk}

\index{Maguire, Camm}
\index{Schelter, William}
\begin{chunk}{axiom.bib}
@misc{Magu17,
  author = "Maguire, Camm and Schelter, William",
  title = "Gnu Common Lisp",
  link = "\url{https://savannah.gnu.org/projects/gcl}"
}

\end{chunk}

\index{Bernays, Paul}
\begin{chunk}{axiom.bib}
@book{Bern91,
  author = "Bernays, Paul",
  title = "Axiomatic Set Theory",
  publisher = "Dover",
  year = "1991"
}

\end{chunk}

\index{Frankel, A.A.}
\index{Bar-Hillel, Y.}
\index{Levy, A.}
\begin{chunk}{axiom.bib}
@book{Fran73,
  author = "Frankel, A.A. and Bar-Hillel, Y. and Levy, A.",
  title = "Foundations of Set Theory",
  publisher = "Elsevier Science",
  year = "1973",
  isbn = "978-0720422702"
}

\end{chunk}

\index{Bradford, Russell J.}
\begin{chunk}{axiom.bib}
@misc{Brad92a,
  author = "Bradford, Russell J.",
  title = "C78: Computer Algebra Course Lecture Notes",
  institution = "Univ. of Bath",
  year = "1992"
}

\end{chunk}

\index{Cohn, P.M.}
\begin{chunk}{axiom.bib}
@book{Cohn91,
  author = "Chon, P.M.",
  title = "Algebra (2nd Ed.)",
  publisher = "Wiley",
  isbn = "978-0471101697",
  year = "1991",
  paper = "Cohn91.pdf"
}

\end{chunk}

\index{Kaliszyk, Cezary}
\index{Wiedijk, Freek}
\begin{chunk}{axiom.bib}
@inproceedings{Kali07,
  author = "Kaliszyk, Cezary and Wiedijk, Freek",
  title = "Certified Computer Algebra on Top of an Interactive Theorem
           Prover",
  booktitle = "Toward Mecanized Mathematical Assistants",
  pages = "94-105",
  year = "2007",
  abstract =
    "We present a prototype of a computer algebra system that is built on
    top of a proof assistant, HOL Light. This architecture guarantees that
    one can be certain that the system will make no mistakes. All
    expressions in the system will have precise semantics, and the proof
    assistant will check the correctness of all simplifications according
    to this semantics. The system actually proves each simplification
    performed by the computer algebra system.
    
    Although our system is built on top of a proof assistant, we designed
    the user interface to be very close in spirit to the interface of
    systems like Maple and Mathematica. The system, therefore, allows the
    user to easily probe the underlying automation of the proof assistant
    for strengths and weaknesses with respect to the automation of
    mainstream computer algebra systems. The system that we present is a
    prototype, but can be straightforwardly scaled up to a practical
    computer algebra system.",
  paper = "Kali07.pdf"
}

\end{chunk}

\index{Lobachev, Oleg}
\index{Loogen, Rita}
\begin{chunk}{axiom.bib}
@article{Loba08,
  author = "Lobachev, Oleg and Loogen, Rita",
  title = "Towards an Implementation of a Computer Algebra System in a
           Functional Language",
  journal = "LNAI",
  volume = "5144",
  pages = "141-208",
  year = "2008",
  publisher = "Springer-Verlag",
  abstract =
    "This paper discusses the pros and cons of using a functional language
    for implementing a computer algebra system. The contributions of the
    paper are twofold. Firstly, we discuss some language-centered design
    aspects of a computer algebra system -- the ``language unity''
    concept.  Secondly, we provide an implementation of a fast polynomial
    multiplication algorithm, which is one of the core elements of a
    computer algebra system.  The goal of the paper is to test the
    feasibility of an implementation of (some elements of) a computer
    algebra system in a modern functional language.",
  paper = "Loba08.pdf",
  keywords = "axiomref"
}

\end{chunk}

\index{Butler, Greg}
\begin{chunk}{axiom.bib}
@inproceedings{Butl96,
  author = "Butler, Greg",
  title = "Software Architectures for Computer Algebra: A Case Study",
  booktitle = "DISCO '96",
  pages = "277-286",
  year = "1996",
  abstract =
    "The architectures of the existing computer algebra systems have not
    been discussed sufficiently in the literature. Instead, the focus has
    been on the design of the related programming language, or the design
    of a few key data structures.
    
    We address this deficiency with a case study of the architecture of
    Cayley. Our aim is twofold: to capture this knowledge before the total
    passing of a system now made obsolete by Magma; and to encourage
    others to describe the architecture of the computer algebra systems
    with which they are familiar.
    
    The long-term goal is a better understanding of how to construct
    computer algebra systems in the future.",
  paper = "Butl96.pdf",
  keywords = "axiomref"
}

\end{chunk}

\index[Mosses, Peter D.}
\begin{chunk}{axiom.bib}
@article{Moss93,
  author = "Mosses, Peter D.",
  title = "The Use of Sorts in Algebraic Specification",
  journal = "Lecture Notes in Computer Science",
  volume = "655",
  pages = "66-91",
  year = "1993",
  abstract =
    "Algebraic specification frameworks exploit a variety of sort
    disciplines. The treatment of sorts has a considerable influence on
    the ease with which such features as partiality and polymorphism can
    be specified. This survey gives an accessible overview of various
    frameworks, focusing on their sort disciplines and assessing their
    strengths and weaknesses for practical applications. Familiarity with
    the basic notions of algebraic specification is assumed.",
  paper = "Moss93.pdf"
}

\end{chunk}

\index{Harrison, John}
\index{Th\'ery, Laurent}
\begin{chunk}{axiom.bib}
@inproceedings{Harr94,
  author = "Harrison, John and Thery, Laurent",
  title = "Extending the HOL Thoerem Prover with a Computer Algebra System
           to Reason about the Reals",
  booktitle = "Proc. Higher Order Logic Theorem Proving",
  year = "1994",
  publisher = "Springer",
  pages = "174-184",
  isbn = "978-3-540-48346-5",
  abstract =
    "In this paper we describe an environment for reasoning about the
    reals which combines the rigour of a theorem prover with the power of
    a computer algebra system.",
  paper = "Harr94.pdf",
  keywords = "axiomref"
}

\end{chunk}

\index{Medina-Bulo, Inmaculada}
\index{Lozano-Palomo, F.}
\index{Alonso-Jimenez, J.A.}
\index{Ruiz-Reina, J.L.}
\begin{chunk}{axiom.bib}
@article{Medi04,
  author = "Medina-Bulo, Inmaculada and Lozano-Palomo, F. and
            Alonso-Jimenez, J.A. and Ruiz-Reina, J.L.",
  title = "Verified Computer Algebra in ACL2",
  journal = "LNAI",
  volume = "3249",
  year = "2004",
  pages = "171-184",
  abstract =
    "In this paper, we present the formal verification of a Common Lisp
    implementation of Buchberger’s algorithm for computing Gröbner bases
    of polynomial ideals. This work is carried out in the Acl2 system and
    shows how verified Computer Algebra can be achieved in an executable
    logic.",
  paper = "Medi04.pdf"
}

\end{chunk}

\index{Davenport, James H.}
\begin{chunk}{axiom.bib}
@article{Dave08,
  author = "Davenport, James H.",
  title = "Effective Set Membership in Computer Algebra and Beyond",
  journal = "LNAI",
  volume = "5144",
  pages = "266-269",
  year = "2008",
  abstract = 
    "In previous work, we showed the importance of distinguishing ``I know
    that $X \ne Y$'' from ``I don't know that $X = Y$''.  In this paper we
    look at effective set membership, starting with Groebner bases, where
    the issues are well-expressed in algebra systems, and going on to
    integration and other questions of `computer calculus'.
    
    In particular, we claim that a better recognition of the role of set
    membership would clarify some features of computer algebra systems,
    such as `what does an integral mean as output'.",
  paper = "Dave08.pdf"
}

\end{chunk}

\index{Davenport, James H.}
\begin{chunk}{axiom.bib}
@book{Dave81,
  author = "Davenport, James H.",
  title = "On the Integration of Algebraic Functions",
  publisher = "Springer-Verlag",
  series = "Lecture Notes in Computer Science 102",
  isbn = "0-387-10290-6",
  year = "1981",
  abstract =
    "This work is concerned with the following question: ``{\sl When is an
    algebraic function integrable?}''. We can state this question in
    another form which makes clearer our interpretation of integration:
    ``If we are given an algebraic function, when can we find an
    expression in terms of algebraics, logarithms and exponentials whose
    derivative is the given function, and what is that expression?''.
    
    This question can be looked at purely mathematically, as a question in
    decidablility theory, but our interest in this question is more
    practical and springs from the requirements of computer algebra.  Thus
    our goal is ``{\sl Write a program which, when given an algebraic
    function, will produce an expression for its integral in terms of
    algebraics, exponentials and logarithms, or will prove that there is
    no such expression}''.",
  paper = "Dave81.pdf"
}

\end{chunk}

\index{Davenport, James H.}
\begin{chunk}{axiom.bib}
@article{Dave81c,
  author = "Davenport, James H.",
  title = "Algebraic Computations"
  publisher = "Springer-Verlag",
  series = "Lecture Notes in Computer Science 102",
  pages = "14-29",
  isbn = "0-387-10290-6",
  year = "1981",
  abstract =
    "Algebraic relationships between variables and expressions are very
    common in computer algebra. Not only do they often occur explicitly,
    in forms like $sqrt(x^2+1)$, but well known difficulties such as
    $sin(x)^2+cos(x)^2=1$ (Stoutemyer, 1977) can be expressed in this
    form. Nevertheless it is difficult to compute with regard to these
    relationships. This chapter discusses the problem of such computig,
    and then enters the area of algebraic geometry, which is a natural
    outgrowth of attempts to perform such computations as readily as one
    computes without them.",
  paper = "Dave81c.pdf"
}

\end{chunk}

\index{Davenport, James H.}
\begin{chunk}{axiom.bib}
@article{Dave81d,
  author = "Davenport, James H.",
  title = "Coates' Algorithm",
  publisher = "Springer-Verlag",
  journal = "Lecture Notes in Computer Science 102",
  pages = "30-48",
  isbn = "0-387-10290-6",
  year = "1981",
  abstract =
    "In this chapter, we consider the problem of finding a function with a
    certain set of poles. That this problem is non-trivial in the case of
    algebraic functions (although it is trivial in the case of rational
    functions) can be seen from the fact that such functions need not
    always exist. For example, on the curve defined by $\sqrt{x^3+1}$,
    there is no function with a zero of order 1 at one place lying over
    the point $X=0$ and a pole of order 1 at infinity and no other poles
    or zeros, but there is one with divisor 3 times that (ie.e the divisor
    has order 3). On the curve defined by $Y^2=x^3-3X^2+X+1$, there are no
    functions with a zero on one place lying over $X=0$ and a pole at the
    other, both having the same order, and no other zeros or poles.",
  paper = "Dave81d.pdf"
}

\end{chunk}

\index{Davenport, James H.}
\begin{chunk}{axiom.bib}
@article{Dave81e,
  author = "Davenport, James H.",
  title = "Risch's Theorem",
  publisher = "Springer-Verlag",
  journal = "Lecture Notes in Computer Science 102",
  pages = "49-63",
  isbn = "0-387-10290-6",
  year = "1981",
  abstract =
    "This chapter describes an underlying body of theory to the area of
    finding (or proving non-existent) the elementary integrals of
    algebraic functions, where a function is {\sl algebraic} if it can be
    generated from the variable of integration and constants by the
    arithmetic operations and the taking of roots of equations (the theory
    does not require that these roots should be expressible in terms of
    radicals), possibly with nesting. By {\sl elementary} we mean
    denerated from the variable of integration and constants by the
    arithmetic operations and the taking of roots, exponentials and
    logarithms, possibly with nesting.",
  paper = "Dave81e.pdf"
}

\end{chunk}

\index{Davenport, James H.}
\begin{chunk}{axiom.bib}
@article{Dave81f,
  author = "Davenport, James H.",
  title = "The Problem of Torsion Divisors",
  publisher = "Springer-Verlag",
  journal = "Lecture Notes in Computer Science 102",
  pages = "64-75",
  isbn = "0-387-10290-6",
  year = "1981",
  abstract =
    "This chapter and the next three are concerned with the theory and
    practice of the FIND-ORDER procedure, which, as we saw in the last
    chapter, is a necessary part of our integration algorithm, and which
    turns out to be the mathematically most difficult. This chapter will
    outline the general nature of the problem, with special reference to
    the simplest non-trivial case, viz. problems involving the square root
    of one cubic or quartic and involving no constants other than the
    rationals.",
  paper = "Dave81f.pdf"
}

\end{chunk}

\index{Davenport, James H.}
\begin{chunk}{axiom.bib}
@article{Dave81g,
  author = "Davenport, James H.",
  title = "Gauss-Manin Operators",
  publisher = "Springer-Verlag",
  journal = "Lecture Notes in Computer Science 102",
  pages = "76-91",
  isbn = "0-387-10290-6",
  year = "1981",
  abstract =
    "This chapter is devoted to the case of integrands which contain a
    transcendental parameter apart from the variable of integration, so
    that we can consider our problem to be the integration of a function
    in $\{K(x,y) | F(u,x,y) = 0\}$, where $K$ is an algebraic extension of
    $k(u)$ for some field $k$ and $u$ transcendental over it.  We shall
    use this notation, with $u$ being the independent transcendental, as
    we shall use the prefix operator $D$ to denote differentiation with
    respect to $u$, and the suffix $\prime$ to denote differentiation with
    respect to $x$. THis case is often more tractable than the case when
    there is no such transcendental, for integration with respect to $x$
    and differentiation with respect to $u$ commute, so that if $G(u,x,y0$
    is integrable, then so is $DG(u,x,y)$, $D^2G(u,x,y)$ and so on.",
  paper = "Dave81g.pdf"
}

\end{chunk}

\index{Davenport, James H.}
\begin{chunk}{axiom.bib}
@article{Dave81h,
  author = "Davenport, James H.",
  title = "Elliptic Integrals Concluded",
  publisher = "Springer-Verlag",
  journal = "Lecture Notes in Computer Science 102",
  pages = "92-105",
  isbn = "0-387-10290-6",
  year = "1981",
  abstract =
    "The previous chapter (including the algorithm FIND\_ORDER\_MANIN)
    completely solved the problem of torsion divisors over ground fields
    containing a transcendental. We are therefore left with the case of
    ground fields all of whose elements are algebraic over the rationals,
    and this is the problem we will consider in this chapter (for elliptic
    curves) and the next. Furthermore, any particular definition of a
    curve and of a divisor can only involve a finite number of algebraics,
    so we can restrict our attention to fields which are generated from
    the rationals by extending with a finite number of algebraics, i.e.
    {\sl algebraic number fields}. Before we can explore the torsion
    divisor problem over them, we first need to know more about their
    structure and possible computer representations, and this we discuss
    in the next section, amplifying the discussion of general algebraic
    expression in Chapter 2.",
  paper = "Dave81h.pdf"
}

\end{chunk}

\index{Davenport, James H.}
\begin{chunk}{axiom.bib}
@article{Dave81i,
  author = "Davenport, James H.",
  title = "Curves over Algebraic Number Fields",
  publisher = "Springer-Verlag",
  journal = "Lecture Notes in Computer Science 102",
  pages = "106-118",
  isbn = "0-387-10290-6",
  year = "1981",
  abstract =
    "The case of curves of arbitrary genus is much more difficult than the
    case of curves of genus 1, and there are no well-developed algorithms
    for this case. I have not been able to code any significant program to
    deal with this case because of the large number of subsidiary
    algorithms for which I do not have programs, though such programs have
    been written elsewhere, or can readily be written. Presented here,
    therefore, are the outlines of techniques which will enable one to
    bound the torsion of curves of arbitrary genus over algebraic number
    fields",
  paper = "Dave81i.pdf"
}

\end{chunk}

\index{Lutzen, Jesper}
\begin{chunk}{axiom.bib}
@book{Lutz90,
  author = "Lutzen, Jesper",
  title = "Joseph Liouville. 1809-1882: Master of Pure and Applied 
           Mathematics",
  publisher = "Springer",
  year = "1990",
  paper = "Lutz90.pdf"
}

\end{chunk}

\index{Lutzen, Jesper}
\begin{chunk}{axiom.bib}
@misc{Lutz90a,
  author = "Lutzen, Jesper",
  title = "Integration in Finite Terms",
  publisher = "Springer",
  year = "1990",
  comment = "Chapter IX",
  paper = "Lutz90a.pdf"
}

\end{chunk}

\index{Ueberberg, Johannes}
\begin{chunk}{axiom.bib}
@article{Uebe94,
  author = "Ueberberg, Johannes",
  title = "Interactive Theorem Proving and Computer Algebra",
  journal = "Lecture Notes in Computer Science",
  volume = "958",
  year = "1994",
  abstract =
    "Interactive Theorem Proving, ITP for short, is a new approach for the
    use of current computer algebra systems to support mathematicians in
    proving theorems. ITP grew out of a more general project -- called
    Symbolic Incidence Geometry -- which is concerned with the problem of
    the systematic use of the computer in incidence geometry.",
  paper = "Uebe94.pdf"
}

\end{chunk}

\index{Jolly, Raphael}
\begin{chunk}{axiom.bib}
@article{Joll13,
  author = "Jolly, Raphael",
  title = "Category as Type Classes in the Scala Algebra System",
  journal = "LNCS",
  pages = "209-218",
  year = "2013",
  abstract =
    "A characterization of the categorical view of computer algebra is
    proposed. Some requirements on the ability for abstraction that
    programming languages must have in order to allow a categorical
    approach is given. Object-oriented inheritance is presented as a
    suitable abstraction scheme and exemplified by the Java Algebra
    System. Type classes are then introduced as an alternative abstraction
    scheme and shown to be eventually better suited for modeling
    categories. Pro and cons of the two approaches are discussed and a
    hybrid solution is exhibited.",
  paper = "Joll13.pdf",
  keywords = "axiomref"
}

\end{chunk}

\index{Davenport, James}
\begin{chunk}{axiom.bib}
@misc{Dave99,
  author = "Davenport, James",
  title = "A Small OpenMath Type System",
  year = "1999",
  link = "\url{https://www.openmath.org/standard/sts.pdf}",
  paper = "Dave99.pdf"
}

\end{chunk}

\index{Davenport, James H.}
\begin{chunk}{axiom.bib}
@techreport{Dave92e,
  author = "Davenport, James H.",
  title = "The AXIOM System",
  type = "technical report",
  institution = "Numerical Algorithms Group, Oxford, U.K.",
  number = "TR5/92",
  year = "1992",
  keywords = "axiomref"
}

\end{chunk}

\index{Kerber, Manfred}
\index{Kohlhase, Michael}
\index{Sorge, Volker}
\begin{chunk}{axiom.bib}
@article{Kerb96,
  author = "Kerber, Manfred and Kohlhase, Michael and Sorge, Volker",
  title = "Integrating Computer Algebra with Proof Planning",
  journal = "Lecture Notes in Computer Science",
  volume = "1128",
  pages = "204-215",
  year = "1996",
  abstract = 
    "Mechanised reasoning systems and computer algebra systems have
    apparently different objectives.  Their integration is, however,
    highly desirable, since in many formal proofs both of the two
    different tasks, proving and calculating, have to be performed.  In
    the context of producing reliable proofs, the question how to ensure
    correctness when integrating a computer algebra system into a
    mechanised reasoning system is crucial.  In this contribution, we
    discuss the correctness problems that arise from such an integration
    and advocate an approach in which the calculations of the computer
    algebra system are checked at the calculus level of the mechanised
    reasoning system.  We present an implementation which achieves this
    by adding a verbose mode to the computer algebra system which produces
    high-level protocol information that can be processed by an interface
    to derive proof plans.  Such a proof plan in turn can be expanded to
    proofs at different levels of abstraction, so the approach is
    well-suited for producing a high-level verbalised explication as well
    as for a low-level (machine checkable) calculus-level proof.",
  paper = "Kerb96.pdf",
  keywords = "axiomref"
}

\end{chunk}

\index{Aladjev, Victor}
\begin{chunk}{axiom.bib}
@article{Alad03,
  author = "Aladjev, Victor",
  title = "Computer Algebra System Maple: A New Software Library",
  journal = "LNCS",
  year = "2003",
  pages = "711-717",
  abstract = 
    "The paper represents Maple library containing more than 400 procedures
    expanding possibilities of the Maple package of releases 6,7 and 8.
    The library is structurally organized similarly to the main Maple
    library. The process of the library installing is simple enough as a
    result of which the above library will be logically linked with the
    main Maple library, supporting access to software located in it
    equally with standard Maple software. The demo library is delivered
    free of charge at request to addresses mentioned above.",
  paper = "Alad03.pdf",
  keywords = "axiomref"
}

\end{chunk}

\index{Jackson, Paul}
\begin{chunk}{axiom.bib}
@article{Jack94,
  author = "Jackson, Paul",
  title = "Exploring Abstract Algebra in Constructive Type Theory",
  abstract = 
    "I describe my implementation of computational abstract algebra in
    the Nuprl system. I focus on my development of multivariate
    polynomials. I show how I use Nuprl's expressive type theory to define
    classes of free abelian monoids and free monoid algebras. These
    classes are combined to create a class of all implementations of
    polynomials.  I discuss the issues of subtyping and computational
    content that came up in designing the class definitions. I give
    examples of relevant theory developments, tactics and proofs. I
    consider how Nuprl could act as an algebraic 'oracle' for a computer
    algebra system and the relevance of this work for abstract functional
    programming.",
  paper = "Jack94.pdf",
  keywords = "axiomref"
}

\end{chunk}

\index{van Hulzen, J.A.}
\begin{chunk}{axiom.bib}
@article{Hulz82,
  author = "van Hulzen, J.A.",
  title = "Computer Algebra Systems Viewed by a Notorious User",
  journal = "LNCS",
  volume = "144",
  pages = "166-180",
  year = "1982",
  abstract =
    "Are design and use of computer algebra systems disjoint or
    complementary activi- ties? Raising and answering this question are
    equally controversial, since a clear distinction between languages
    features and library facilities is hard to make.  Instead of even
    attempting to answer this rather academic question it is argued why it
    is reasonable to raise related questions: Is SMP a paradox? Is it
    realistic to neglect inaccurate input data? Is a very high level
    programming language instrumental for equal opportunity employment in
    scientific research?",
  paper = "Hulz82.pdf",
  keywords = "axiomref"
}

\end{chunk}

\index{Caviness, Bob}
\begin{chunk}{axiom.bib}
@article{Cavi85,
  author = "Caviness, Bob",
  title = "Computer Algebra: Past and Future",
  journal = "LNCS",
  volume = "203",
  pages = "1-18",
  paper = "Cavi85.pdf",
  keywords = "axiomref"
}

\end{chunk}

\index{Voevodsky, Vladimir}
\index{Benedikt, Ahrens}
\index{Grayson, Daniel}
\begin{chunk}{axiom.bib}
@misc{Voev17,
  author = "Voevodsky, Vladimir and Benedikt, Ahrens and Grayson, Daniel",
  title = "UniMath: Univalent Mathematics",
  link = "\url{https://github.com/UniMath/UniMath}",
  year = "2017"
}

\end{chunk}

\index{Mahboubi, Assia}
\begin{chunk}{axiom.bib}
@inproceedings{Mahb05,
  author = "Mahboubi, Assia",
  title = "Programming and certifying the CAD algorithm inside the coq system",
  year = "2005",
  booktitle = "Mathematics, Algorithms, Proofs, volume 05021 of Dagstuhl
               Seminar Proceedings, Schloss Dagstuhl (2005)",
  abstract =
    "A. Tarski has shown in 1975 that one can perform quantifier
    elimination in the theory of real closed fields. The introduction of
    the Cylindrical Algebraic Decomposition (CAD) method has later allowed
    to design rather feasible algorithms. Our aim is to program a
    reflectional decision procedure for the Coq system, using the CAD, to
    decide whether a (possibly multivariate) system of polynomial
    inequalities with rational coefficients has a solution or not. We have
    therefore implemented various computer algebra tools like gcd
    computations, subresultant polynomial or Bernstein polynomials.",
  paper = "Mahb05.pdf",
  keywords = "axiomref"

\end{chunk}

\index{Dunstan, M.N.}
\index{Gottliebsen, H.}
\index{Kelsey, T.W.}
\index{Martin, U.}
\begin{chunk}{axiom.bib}
@misc{Duns01,
  author = "Dunstan, M.N. and Gottliebsen, H. and Kelsey, T.W. and 
            Martin, U.",
  title = "A Maple-PVS Interface",
  booktitle = "Proc. Calculemus, 2001",
  year = "2001"
}

\end{chunk}

\index{Komendantsky, V.}
\index{Konovalov, A.}
\index{Linton, S.A.}
\begin{chunk}{axiom.bib}
@article{Kome12,
  author = "Komendantsky, V. and Konovalov, A. and Linton, S.A.",
  title = "Interfacing Coq + SSReflect with GAP",
  journal = "Electronic Notes in Theoretical Computer Science",
  volume = "295",
  number = "19",
  pages = "17-28",
  abstract =
    "We report on an extendable implementation of the communication
    interface connecting Coq proof assistant to the computational algebra
    system GAP using the Symbolic Computation Software Composability
    Protocol (SCSCP). It allows Coq to issue OpenMath requests to a local
    or remote GAP instances and represent server responses as Coq terms.",
  paper = "Kome12.pdf"
}

\end{chunk}

\index{Mayero, Micaela}
\index{Delahaye, David}
\begin{chunk}{axiom.bib}
@misc{Maye17,
  author = "Mayero, Micaela and Delahaye, David",
  title = "A Maple Mode for Coq",
  year = "2017",
  link = 
   "\url{http://www.lix.polytechnique.fr/coq/V8.2pl1/contribs/MapleMode.html}",
  abstract =
    "This contribution is an interface between Coq and Maple. In
    particular, this exports the functions simplify/factor/expand/normal
    giving the corresponding tactics Simplify/Factor/Expand/Normal. The
    manipulations carried out by these tactics are proved thanks to the
    tactic Field. These tactics can be also used as functions by means of
    the Eval ... In command. "
}

\end{chunk}

\index{Konovalov, Alexander}
\index{Linton, Steve}
\begin{chunk}{axiom.bib}
@misc{Kono17,
  author = "Konovalov, Alexander and Linton, Steve",
  title = "Symbolic Computation Software Composability Protocol",
  version = "2.2.2",
  year = "2017",
  link = "\url{}",
  paper = "Kono17.pdf"
}

\end{chunk}

\index{Linton, S.}
\index{Sebastiani, R.}
\begin{chunk}{axiom.bib}
@article{Lint02,
  author = "Linton, S. and Sebastiani, R.",
  title = "Editorial: The Integration of Automated Reasoning and Computer
           Algebra Systems",
  journal = "J. Symbolic Computation",
  volume = "34",
  pages = "239-239",
  year = "2002",
  paper = "Lint02.pdf"
}

\end{chunk}

\index{Khan, Muhammad Taimoor}
\begin{chunk}{axiom.bib}
@phdthesis{Khan14,
  author = "Khan, Muhammad Taimoor",
  title = "Formal Specification and Verification of Computer Algebra
           Software",
  school = "Johannes Kepler University, Linz",
  year = "2014",
  link = 
    "\url{http://www.risc.jku.at/publications/download/risc_4981/main.pdf}",
  abstract = 
    "In this thesis, we present a novel framework for the formal
    specification and verification of computer algebra programs and its
    application to a non-trivial computer algebra package.  The programs
    are written in the language MiniMaple which is a substantial subset of
    the language of the commercial computer algebra system Maple.  The
    main goal of the thesis is the application of light-weight formal
    methods to MiniMaple programs (annotated with types and behavioral
    specifications) for finding internal inconsistencies and violations of
    methods preconditions by employing static program analysis.  This task
    is more complex for a computer algebra language like Maple that for
    conventional programming languages, as Maple supports non-standard
    types of objects and also requires abstract data types to model
    algebraic concepts and notions.  
    
    As a starting point, we have defined
    and formalized a syntax, semantics, type system and specification
    language for MiniMaple .  For verification, we automatically trans-
    late the (types and specification) annotated MiniMaple program into a
    behaviorally equivalent program in the intermediate language Why3ML of
    the verification tool Why3; from the translated program, Why3
    generates verification conditions whose correctness can be proved by
    various automated and interactive theorem provers (e.g.  Z3 and Coq).
    Furthermore, we have defined a denotational semantics of MiniMaple and
    its specification language and proved the soundness of the translation
    with re- spect to the operational semantics of Why3ML. Finally, we
    discuss the application of our verification framework to the Maple
    package DifferenceDifferential developed at our institute to compute
    bivariate difference-differential dimension polynomials using relative
    Groebner bases.",
  paper = "Khan14.pdf",
  keywords = "axiomref"
}

\end{chunk}

\index{Homann, Karsten}
\index{Calmet, Jacques}
\begin{chunk}{axiom.bib}
@article{Homa05,
  author = "Homann, Karsten and Calmet, Jacques",
  title = "Structures for Symbolic Mathematical Reasoning and Computation",
  journal =  "LNCS",
  volume = "1128",
  year = "2005",
  pages = "216-227",
  abstract =
    "Recent research towards integrating symbolic mathematical reasoning
    and computation has led to prototypes of interfaces and
    environments. This paper introduces computation theories and
    structures to represent mathematical objects and applications of
    algorithms occuring in algorithmic services. The composition of
    reasoning and computation theories and structures provide a formal
    framework for the specification of symbolic mathematical problem
    solving by cooperation of algorithms and theorems.",
  paper = "Homa05.pdf"
}

\end{chunk}

\index{Avigad, Jeremy}
\begin{chunk}{axiom.bib}
@misc{Avig12,
  author = "Avigad, Jeremy",
  title = "Interactive Theorem Proving, Automated Reasoning, and 
           Mathematical Computation",
  year = "2012",
  comment = "slides",
  paper = "Avig12.pdf"
}

\end{chunk}

\index{Avigad, Jeremy}
\begin{chunk}{axiom.bib}
@misc{Avig14a,
  author = "Avigad, Jeremy",
  title = "Formal Verification, Interactive Theorem Proving, and
           Automated Reasoning",
  year = "2014",
  comment = "slides",
  paper = "Avig14a.pdf"
}

\end{chunk}

\index{Avigad, Jeremy}
\begin{chunk}{axiom.bib}
@misc{Avig16a,
  author = "Avigad, Jeremy",
  title = "Interactive Theorem Proving, Automated Reasoning, and Dynamical
           Systems",
  year = "2016",
  comment = "slides",
  paper = "Avig16a.pdf"
}

\end{chunk}

\index{Avigad, Jeremy}
\begin{chunk}{axiom.bib}
@misc{Avig17a,
  author = "Avigad, Jeremy",
  title = "Formal Methods in Mathematics and the Lean Theorem Prover",
  year = "2017",
  comment = "slides",
  paper = "Avig17a.pdf"
}

\end{chunk}

\index{Harrison, John}
\begin{chunk}{axiom.bib}
@inproceedings{Harr07,
  author = "Harrison, John",
  title = "A Short Survey of Automated Reasoning",
  booktitle = "Proc. 2nd Int. Conf. on Algebraic Biology",
  pages = 334-349",
  year = "2007",
  publisher = "Springer-Verlag",
  isbn = "978-3-540-73432-1",
  abstract =
    "This paper surveys the field of automated reasoning, giving some
    historical background and outlining a few of the main current research
    themes. We particularly emphasize the points of contact and the
    contrasts with computer algebra. We finish with a discussion of the
    main applications so far.",
  paper = "Harr07.pdf"
}  

\end{chunk}

\index{Schreiner, Wolfgang}
\index{Danielczyk-Landerl, Werner}
\index{Marin, Mircea}
\index{St\"ocher, Wolfgang}
\begin{chunk}{axiom.bib}
@inproceedings{Schr00,
  author = "Schreiner, Wolfgang and Danielczyk-Landerl, Werner and
            Marin, Mircea and Stocher, Wolfgang",
  title = "A Generic Programming Environment for High-Performance
           Mathematical Libraries",
  year = "2000",
  pages = "256-268",
  abstract =
    "We report on a programming environment for the development of
    generic mathematical libraries based on functors (parameterized
    modules) that have rigorously specified but very abstract
    interfaces. We focus on the combination of the functor-based
    programming style with software engineering principles in large
    development projects. The gen- erated target code is highly efficient
    and can be easily embedded into foreign application environments.",
  paper = "Schr00.pdf"
}

\end{chunk}

\index{Fevre, Stephane}
\index{Wang, Dongming}
\begin{chunk}{axiom.bib}
@article{Fevr98,
  author = "Fevre, Stephane and Wang, Dongming",
  title = "Proving Geometric Theorems using Clifford Algebra and Rewrite
           Rules",
  journal = "LNCS",
  volume = "1421",
  year = "1998",
  pages = "17-32",
  abstract = 
    "We consider geometric theorems that can be stated construc- tively by
    introducing points, while each newly introduced point may be
    represented in terms of the previously constructed points using
    Clifford algebraic operators. To prove a concrete theorem, one first
    substitutes the expressions of the dependent points into the
    conclusion Clifford poly- nomial to obtain an expression that involves
    only the free points and pa- rameters. A term-rewriting system is
    developed that can simplify such an expression to 0, and thus prove
    the theorem. A large class of theorems can be proved effectively in
    this coordinate-free manner. This paper de- scribes the method in
    detail and reports on our preliminary experiments.",
  paper = "Fevr98.pdf"
}

\end{chunk}
