bookvolbib: References to DoCon

Goal: Proving Axiom Correct

\index{Meshveliani, Sergei D.}
\begin{chunk}{axiom.bib}
@inproceedings{Mesh01,
  author = "Meshveliani, Sergei D.",
  title = "Computer Algebra with Haskell: Applying 
           Functional-Categorical-`Lazy' Programming",
  booktitle = "Computer Algebra and its Application to Physics",
  year = "2001",
  pages = "203-211",
  link = 
    "\url{compalg.jinr.ru/Confs/CAAP\_2001/Final/proceedings/proceed.pdf}",
  abstract = 
    "We give an outline of a computer algebra program writting in a
     functional language Haskell and implementing certain piece of
     commutative algebra",
  paper = "Mesh01.pdf",
  keywords = "axiomref"

}

\end{chunk}

\index{Meshveliani, Sergei D.}
\begin{chunk}{axiom.bib}
@misc{Mesh10,
  author = "Meshveliani, Sergei D.",
  title = "Haskell and computer algebra",
  link = "\url{http://www.botik.ru/pub/local/Mechveliani/basAlgPropos/haskellinCA2.pdf.zip}",
  year = "2010",
  abstract =
    "We consider the ways to program mathematics in the Haskell language.
    To start a discussion, we pretend to propose certain basic algebra
    library BAL for Haskell. We also mention several desirable language
    features. Algebraic additions in BAL are divided into the 'ordinary'
    and 'advanced'. Standard algebraic classes are reorganized to make
    them mathematically meaningful. For the 'advanced' part a sample
    argument approach is introduced -- as certain alternative for the
    dependent type language extension. The library is implemented in the
    existing Haskell, by 'hiding' a certain part of the existing Prelude.",
  paper = "Mesh10.pdf",
  keywords = "axiomref"
}

\end{chunk}

\index{Meshveliani, Sergei D.}
\begin{chunk}{axiom.bib}
@article{Mesh14,
  author = "Meshveliani, Sergei D.",
  title = "On dependent types and intuitionism in programming mathematics",
  journal = "Program systems: theory and applications",
  year = "2014",
  volume = "5",
  numbrer = "3(21)",
  pages = "27-50",
  comment = "(In Russian)",
  link = "\url{http://psta.psiras.ru/read/psta2014_3_27-50.pdf}",
  abstract =
    "It is discussed a practical possibility of a provable programming
    of mathematics basing of the approach of intuitionism, a language
    with dependent types, proof-carrying code. This approach is 
    illustrated with examples. The discourse bases on the experience
    of implementing in the {\tt Agda} language of a certain small
    algebraic library including the arithmetic of a residue domain
    $R/(b)$ for an arbitrary Euclidean ring R. (In Russian)",
  paper = "Mesh14.pdf",
  keywords = "axiomref"
}

\end{chunk}

\index{Meshveliani, Sergei D.}
\begin{chunk}{axiom.bib}
@article{Mesh15,
  author = "Meshveliani, Sergei D.",
  title = "Programming basic computer algebra in a language with 
           dependent types",
  journal = "Program systems: theory and applications",
  year = "2015",
  volume = "6",
  numbrer = "4(27)",
  pages = "313-340",
  comment = "(In Russian)",
  link = "\url{http://psta.psiras.ru/read/psta2015_4_313-340.pdf}",
  abstract =
    "It is described the experience in provable programming of certain
    classical categories of computational algebra (``group'', ``ring'',
    and so on) basing on the approach of intuitionism, a language with
    dependent types, forming of machine-checked proofs. There are detected
    the related problems, and are described certain additional possibilities
    given by the approach. The {\tt Agda} functional language is used as an
    instrument. This paper is a continuation for the introductory paper
    published in this journal in 2014. (In Russian)",
  paper = "Mesh15.pdf"
}

\end{chunk}

\index{Meshveliani, Sergei D.}
\begin{chunk}{axiom.bib}
@book{Mesh16,
  author = "Meshveliani, Sergei D.",
  title = "DoCon-A a Provable Algebraic Domain Constructor",
  link = 
    "\url{http://www.botik.ru/pub/local/Mechveliani/docon-A/0.04/manual.pdf}",
  publisher = "User Manual, Version 0.04",
  year = "2016",
  abstract =
    "This book is about 1) a manual on the DoCon-A program library, 2) a book
    explaining how to program algebra in a purely functional language with
    {\sl dependent types} (specifially, in {\tt Agda}), with providing
    machine-checked proofs, and following constructive mathematics.
    
    The above point of proofs means that a program not only implements an
    algorithm, but explains to the compiler the needed mathematical notions
    and provides the needed proofs in the form of type expressions and
    functions. And the compiler (more precisely, type checker) is able to
    verify these proofs statically (before running), and to prepare the
    algorithm for running.",
  paper = "Mesh16,pdf",
  keywords = "axiomref"
}

\end{chunk}

\index{Meshveliani, Sergei D.}
\begin{chunk}{axiom.bib}
@misc{Mesh16a,
  author = "Meshveliani, Sergei D.",
  title = "Provable programming of algebra: particular points, examples",
  link = "\url{http://www.botik.ru/pub/local/Mechveliani/provProgExam.zip}",
  year = "2016",
  abstract =
    "It is discussed an experiance in provable programming of a computer 
    algebra library with using a purely functional language with dependent
    tyhpes ({\tt Agda}). There are given several examples illustrating
    particular points of implementing the approach of constructive 
    mathematics.",
  paper = "Mesh16a.pdf"

}

\end{chunk}

