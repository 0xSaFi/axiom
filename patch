books/cookbook/eucdom-gcd a first algorithmic recipe page

Goal: Axiom Literate Programming

In cookbooks one finds basic ingredients (e.g. make batter, making
eggs), main dishes (steak), and 7-course means (how to
choose side dishes, wines, etc). The 'cake' section, for
example, has option "subroutines" such as toppings.

The idea would be to develop a cookbook-style of presentation
for computational mathematics. Pick an algorithm, write a page.
When something is used that is not explained, there is a reference
to other sections (ala cakes that suggest "see the frostings")

Each entry would be an algorithm or idea, explained in at most one
2-sided loose-leaf paper. The algorithms would be gathered into
sections, e.g. "basic ingredients" like resultant, "main dishes"
like polynomial factorization, and "7-course meals" like solving
the heat equation (target is the physics class). The 'cake'
subroutines would involve choice of polynomial representation,
sparse, dense, distributed, recursive, etc.

I want to be able to "write in the small" (1 page) with a focus on a
single subject but "organize in the large" so I can shuffle these
subjects into groups by purpose. The analogy is that there is a
cookbook that only deals with pickles. I'd like a cookbook that only
deals with rings, composed of loose-leaf selections from the overall
collection. This would be assembled for a computational mathematics
class. The same material could be re-arranged and re-selected for a
different class.

The key focus is on providing explanation and motivation. Most
books that mention the resultant spend pages on the proof and
not a word about why or where to use it.

The 1 page / 2 sides focus is much easier to write than a whole
chapter and, since you're staring at a single routine, it is easier
to provide motivation for why it exists and what the tradeoffs are.
"How" is interesting but "Why" is vital.

