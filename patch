books/bookvolbib add proof references

Goal: Proving Axiom Correct

\index{Coquand, Thierry}
\index{Dybjer, Peter}
\begin{chunk}{axiom.bib}
@article{Coqu96,
  author = "Coquand, Thierry and Dybjer, Peter",
  title = "Intuitionistic Model Constructions and Normalization Proofs",
  journal = "Mathematical Structures in Computer Science",
  volume = "7",
  pages = "75-94",
  year = "1996",
  link = "\url{http://www.cse.chalmers.se/~peterd/papers/Glueing.ps}",
  abstract =
    "The traditional notions of {\sl strong} and {\sl weak normalization}
    refer to properties of a binary {\sl reduction relation}. In this
    paper we explore an alternative approach to normalization, where we
    bypass the reduction relation and instead focus on the {
    {\sl normalization function}, that is, the function which maps a term into
    its normal form.
    
    Such a normalization function can be constructed by building an
    appropriate model and a function ``quote'' which inverts the
    interpretation function. The normalization function is then obtained
    by composing the quote function with the interpretation function. We
    also discuss how to gt a simple proof of the property that
    constructors are one-to-one, which usually is obtained as a corollary
    of Church-Rosser and normalization in the traditional sense.
    
    We illustrate this approach by showing how a glueing model (closely
    related to the glueing construction used in category theory) gives
    rise to a normalization algorithm for a combinatory formlation of
    Godel System T. We then show how the method extends in a
    straightforward way when we add cartesian products and disjoint unions
    (full intuitionistic propositional logic under a Curry-Howard
    interpretation) and transfinite inductive types such as the Brouwer
    ordinals.",
  paper = "Coqu96.pdf"
}

\end{chunk}

\index{Pelayo, Alvaro}
\index{Warren, Michael A.}
\begin{chunk}{axiom.bib}
@article{Pela14,
  author = "Pelayo, Alvaro and Warren, Michael A.",
  title = "Homotopy Type Theory and Voevodsky's Univalent Foundations",
  journal = "Bulletin of the American Mathematical Society",
  volume = "51",
  number = "4",
  year = "2014",
  pages = "597-648",
  link = "\url{https://arxiv.org/pdf/1210.5658.pdf}",
  abstract =
    "Recent discoveries have been made connecting abstract homotopy
    theory and the field of type theory from logic and theoretical computer
    science. This has given rise to a new field, which has been christened
    {\sl homotopy type theory}. In this direction, Vladimir Voevodsky 
    observed that it is possible to model type theory using simpical sets
    and that this model satisfies an additional property, called the
    {\sl Univalence Axiom}, which has a number of striking consequences.
    He has subsequently advocated a program, which he calls {\sl univalent
    foundations}, of developing mathematics in the setting of type theory
    with the Univalence Axiom and possibly other additional axioms motivated
    by the simplical set model. Because type theory posses good computational
    properties, this program can be carried out in a computer proof assistant.
    In this paper we give an introduction to homotopy type theory in 
    Voevodsky's setting, paying attention to both theoretical and practical
    issues. In particular, the paper serves as an introduction to both the
    general ideas of homotopy type theory as well as to some of the concrete
    details of Voevodsky's work using the well-known proof assistant Coq. 
    The paper is written for a general audience of mathematicians with basic
    knowledge of algebraic topology; the paper does not assume any 
    preliminary knowledge of type theory, logic, or computer science. Because
    a defining characteristic of Voevodsky's program is that the Coq code has
    fundamental mathematical content, and many of the mathematical concepts
    which are efficiently captured in the code cannot be explained in 
    standard mathematical English without a length detour through type theory,
    the later sections of this paper (beginning with Section 3) make use of
    code; however, all notions are introduced from the beginning and in a
    self-contained fashion.",
  paper = "Pela14.pdf"
}

\end{chunk}
