books/bookvolbib Axiom Citations in the Literature

Goal: Axiom Literate Programming

\index{Kumar, P.}
\index{Pellegrino, S.}
\begin{chunk}{axiom.bib}
@article{Kuma00,
  author = "Kumar, P. and Pellegrino, S.",
  title = "Computation of kinematic paths and bifurcation points",
  journal = "Int. J. Solids Struct.",
  volume = "37",
  number = "46-47",
  pages = "7003-7027",
  year = "2000",
  keywords = "axiomref",
  abstract = 
    "This article deals with the kinematic simulation of movable
    structures that go through special configurations of kinematic
    bifurcation, as they move. A series of algorithms are developed for
    structures that can be modelled using pin-jointed bars and that admit
    a single-parameter motion. These algorithms are able to detect and
    locate any bifurcation points that exist along the path of the
    structure and, at each bifurcation point, can determine all possible
    motions of the structure. The theory behind the algorithms is
    explained, and the analysis of a simple example is discussed in
    detail. Then, a simplified version of the particular problem that had
    motivated this work, the simulation of the folding and deployment of a
    thin membrane structure forming a solar sail, is analysed. For the
    particular cases that are considered, it is found that the entire
    process is inextensional, but a detailed study of the simulation
    results shows that in more general cases, it is likely that stretching
    or wrinkling will occur."
}

\end{chunk}

\index{Safouhi, Hassan}
\begin{chunk}{axiom.bib}
@article{Safo00,
  author = "Safouhi, Hassan",
  title = {The $HD$ and $H\overline{D}$ methods for accelerating the 
          convergence of three-center nuclear attraction and four-center
          two-electron Coulomb integrals over $B$ functions and their
          convergence properties.},
  journal = "J. Comput. Phys.",
  volume = "165",
  number = "2",
  pages = "473-495",
  year = "2000",
  keywords = "axiomref",
  abstract = 
    "Three-center nuclear attraction and four-center two-electron
    Coulomb integrals over Slater-type orbitals are required for $ab$
    initio and density functional theory molecular structure
    calculations. They occur in many millions of terms, even for small
    molecules and require rapid and accurate evaluation. The $B$
    functions are used as a basis set of atomic orbitals. These
    functions are well adapted to the Fourier transform method that
    allowed analytical expressions for the integrals of interest to be
    developed. Rapid and accurate evaluation of these analytical
    expressions is now made possible by applying the $HD$ and
    $H\overline{D}$ methods for accelerating the convergence of the
    semi-infinite oscillatory integrals. The convergence properties of
    the new methods are analyzed. The numerical results section shows
    the high predetermined accuracy and the substantial gain in the
    calculation times obtained using the new methods."
}

\end{chunk}

\index{Adams, A.A.}
\index{Gottliebsen, H.}
\index{Linton, S.A.}
\index{Martin, U.}
\begin{chunk}{axiom.bib}
@InProceedings{Adam99a,
  author = "Adams, A.A. and Gottliebsen, H. and Linton, S.A. and Martin, U.",
  title = "VSDITLU: A verifiable symbolic definite integral table look-up",
  booktitle = "Automated Deduction",
  series = "CADE 16",
  year = "1999",
  location = "Trento, Italy",
  pages = "112-126",
  keywords = "axiomref",
  paper = "Adam99a.pdf",
  url = "http://www.a-cubed.info/Publications/CADE99.pdf",
  abstract =
    "We present a verifiable symbolic definite integral table lookup: a
    system which matches a query, comprising a definite integral with
    parameters and side conditions, against an entry in a verifiable table
    and uses a call to a library of facts about the reals in the theorem
    prover PVS to aid in the transformation of the table entry into an
    answer. Our system is able to obtain correct answers in cases where
    standard techniques implemented in computer algebra systems fail. We
    present the full model of such a system as well as a description of
    our prototype implementation showing the efficacy of such a system:
    for example, the prototype is able to obtain correct answers in cases
    where computer algebra systems do not. We extend upon Fateman’s
    web-based table by including parametric limits of integration and
    queries with side conditions."
}

\end{chunk}

\index{Aitken, William E.}
\index{Constable, Robert L.}
\index{Underwood, Judith L.}
\begin{chunk}{axiom.bib}
@article{Aitk99,
  author = "Aitken, William E. and Constable, Robert L. and 
            Underwood, Judith L.",
  title = "Metalogical frameworks. II: Developing a reflected decision
           procedure",
  journal = "J. Autom. Reasoning",
  volume = "22",
  number = "2",
  pages = "171-221",
  year = "1999",
  keywords = "axiomref",
  paper = "Aitk99.pdf",
  url = "http://www.nuprl.org/documents/Constable/MetalogicalFrameworksII.pdf",
  abstract = 
    "Proving theorems is a creative act demanding new combinations of ideas
    and on occasion new methods of argument. For this reason, theorem
    proving systems need to be extensible. The provers should also remain
    correct under extension, so there must be a secure mechanism for doing
    this. The tactic-style provers pioneered by Edinburgh LCF provide a
    very effective way to achieve secure extensions, but in such systems,
    all new methods must be reduced to tactics. This is a drawback because
    there are other useful proof generating tools such as decision
    procedures; these include, for example, algorithms which reduce a
    deduction problem, such as arithmetic provability, to a computation on
    graphs.

    The Nuprl system pioneered the combination of fixed decision
    procedures with tactics, but the issue of securely adding new ones was
    not solved. In this paper, we show how to safely include user-defined
    decision procedures in theorem provers. The idea is to prove
    properties of the procedure inside the prover’s logic and then invoke
    a reflection rule to connect the procedure to the system. We also show
    that using a rich underlying logic permits an abstract account of the
    approach so that the results carry over to different implementations
    and other logics."
}

\end{chunk}

\index{Boulm\'e, S.}
\index{Hardin, T.}
\index{Hirschkoff, D.}
\index{Rioboo, Renaud}
\index{M\'enissier-Morain, V.}
\begin{chunk}{axiom.bib}
@InProceedings{Boul99,
  author = "Boulme, S. and Hardin, T. and Hirschkoff, D. and Rioboo, Renaud",
  title = "On the way to certify Computer Algebra Systems",
  booktitle = "Systems for integrated computation and deduction",
  series = "Calculemus 99",
  year = "1999",
  publisher = "Elsevier",
  location = "Trento, Italy",
  pages = "11-12",
  keywords = "axiomref",
  paper = "Boul99.pdf",
  abstract = "
    The FOC project aims at supporting, within a coherent software system,
    the entire process of mathematical computation, starting with proved
    theories, ending with certified implementations of algorithms. In this
    paper, we explain our design requirements for the implementation,
    using polynomials as a running example. Indeed, proving correctness of
    implementations depends heavily on the way this design allows
    mathematical properties to be truly handled at the programming level.

    The FOC project, started at the fall of 1997, is aimed to build a
    programming environment for the development of certified symbolic
    computation. The working languages are Coq and Ocaml. In this paper,
    we present first the motivations of the project. We then explain why
    and how our concern for proving properties of programs has led us to
    certain implementation choices in Ocaml. This way, the sources express
    exactly the mathematical dependencies between different structures.
    This may ease the achievement of proofs."
}

\end{chunk}

