\documentclass{article}
\usepackage{axiom}
\setlength{\textwidth}{400pt}
\begin{document}
\title{\$SPAD/src/input tutorium.input}
\author{Franz Lehner}
\maketitle
\begin{abstract}
See https://www.math.tugraz.at/mathc/compmath2/Demo/fricas-tutorium-0.6.pdf
\end{abstract}
\eject
\tableofcontents
\eject
\begin{chunk}{*}
)set break resume
)sys rm -f tutorium.output
)spool tutorium.output
)set message test on
)set message auto off
)clear all

--S 1 of 222
1+1
--R 
--R
--R   (1)  2
--R                                                        Type: PositiveInteger
--E 1

--S 2 of 222
1/2
--R 
--R
--R        1
--R   (2)  -
--R        2
--R                                                      Type: Fraction(Integer)
--E 2

--S 3 of 222
2^9
--R 
--R
--R   (3)  512
--R                                                        Type: PositiveInteger
--E 3

--S 4 of 222
2^1000
--R 
--R
--R   (4)
--R  1071508607186267320948425049060001810561404811705533607443750388370351051124_
--R   936122493198378815695858127594672917553146825187145285692314043598457757469_
--R   857480393456777482423098542107460506237114187795418215304647498358194126739_
--R   876755916554394607706291457119647768654216766042983165262438683720566806937_
--R   6
--R                                                        Type: PositiveInteger
--E 4

--S 5 of 222
sqrt 2
--R 
--R
--R         +-+
--R   (5)  \|2
--R                                                        Type: AlgebraicNumber
--E 5

--S 6 of 222
sqrt(2.0)
--R 
--R
--R   (6)  1.4142135623 730950488
--R                                                                  Type: Float
--E 6

--S 7 of 222
numeric sqrt 2
--R 
--R
--R   (7)  1.4142135623 730950488
--R                                                                  Type: Float
--E 7

--S 8 of 222
digits(10)
--R 
--R
--R   (8)  20
--R                                                        Type: PositiveInteger
--E 8

--S 9 of 222
outputFixed(50)
--R 
--R                                                                   Type: Void
--E 9

--S 10 of 222
numeric sqrt 2
--R 
--R
--R   (10)  1.4142135623 8424777984 6191406250 0000000000 0000000000
--R                                                                  Type: Float
--E 10

--S 11 of 222
%i^2
--R 
--R
--R   (11)  - 1
--R                                                       Type: Complex(Integer)
--E 11

--S 12 of 222
real((1-%i)/(2+%i))
--R 
--R
--R         1
--R   (12)  -
--R         5
--R                                                      Type: Fraction(Integer)
--E 12

--S 13 of 222
imag((1-%i)/(2+%i))
--R 
--R
--R           3
--R   (13)  - -
--R           5
--R                                                      Type: Fraction(Integer)
--E 13

--S 14 of 222
sqrt(-4)
--R 
--R
--R           +---+
--R   (14)  2\|- 1
--R                                                        Type: AlgebraicNumber
--E 14

--S 15 of 222
sin(%pi/2)
--R 
--R
--R   (15)  1
--R                                                    Type: Expression(Integer)
--E 15

--S 16 of 222
sin %pi/2
--R 
--R
--R   (16)  0
--R                                                    Type: Expression(Integer)
--E 16

--S 17 of 222
%i,%e,%pi,%infinity,%plusInfinity,%minusInfinity
--R 
--R
--R   (17)  [%i,%e,%pi,infinity, + infinity,- infinity]
--RType: Tuple(OnePointCompletion(OrderedCompletion(Expression(Complex(Integer)))))
--E 17

--S 18 of 222
x
--R 
--R
--R   (18)  x
--R                                                            Type: Variable(x)
--E 18

--S 19 of 222
x:=3
--R 
--R
--R   (19)  3
--R                                                        Type: PositiveInteger
--E 19

)clear all

--S 20 of 222
x:Integer := 3
--R 
--R
--R   (1)  3
--R                                                                Type: Integer
--E 20

--S 21 of 222
y:PositiveInteger
--R 
--R                                                                   Type: Void
--E 21

--S 22 of 222
y
--R 
--R 
--RDaly Bug
--R   y is declared as being in PositiveInteger but has not been given a 
--R      value.
--E 22

--S 23 of 222
y:=-1
--R 
--R   Compiling function G1634 with type Integer -> Boolean 
--R 
--RDaly Bug
--R   Cannot convert right-hand side of assignment
--R   - 1
--R
--R      to an object of the type PositiveInteger of the left-hand side.
--E 23

--S 24 of 222
'x
--R 
--R
--R   (3)  x
--R                                                            Type: Variable(x)
--E 24

--S 25 of 222
'x::Symbol
--R 
--R
--R   (4)  x
--R                                                                 Type: Symbol
--E 25

)clear prop x

--S 26 of 222
x
--R 
--R
--R   (5)  x
--R                                                            Type: Variable(x)
--E 26

--S 27 of 222
p:=x+1
--R 
--R
--R   (6)  x + 1
--R                                                    Type: Polynomial(Integer)
--E 27

--S 28 of 222
x:=2
--R 
--R
--R   (7)  2
--R                                                        Type: PositiveInteger
--E 28

--S 29 of 222
p
--R 
--R
--R   (8)  x + 1
--R                                                    Type: Polynomial(Integer)
--E 29

--S 30 of 222
n:=factor 20
--R 
--R
--R         2
--R   (9)  2 5
--R                                                      Type: Factored(Integer)
--E 30

--S 31 of 222
n+1
--R 
--R
--R   (10)  3 7
--R                                                      Type: Factored(Integer)
--E 31

--S 32 of 222
m:=roman 8
--R 
--R
--R   (11)  VIII
--R                                                           Type: RomanNumeral
--E 32

--S 33 of 222
m+n
--R 
--R
--R           2
--R   (12)  II VII
--R                                                 Type: Factored(RomanNumeral)
--E 33

)clear all

--S 34 of 222
Z12:=IntegerMod 12
--R 
--R
--R   (1)  IntegerMod(12)
--R                                                                 Type: Domain
--E 34

--S 35 of 222
m:Z12:=6
--R 
--R
--R   (2)  6
--R                                                         Type: IntegerMod(12)
--E 35

--S 36 of 222
m+m
--R 
--R
--R   (3)  0
--R                                                         Type: IntegerMod(12)
--E 36

--S 37 of 222
(6^1000000)::Z12
--R 
--R
--R   (4)  0
--R                                                         Type: IntegerMod(12)
--E 37

--S 38 of 222
m^1000000
--R 
--R
--R   (5)  0
--R                                                         Type: IntegerMod(12)
--E 38

--S 39 of 222
Z29:=IntegerMod 29
--R 
--R
--R   (6)  IntegerMod(29)
--R                                                                 Type: Domain
--E 39

--S 40 of 222
Z29 has Field
--R 
--R
--R   (7)  false
--R                                                                Type: Boolean
--E 40

--S 41 of 222
Z29:=PrimeField 29
--R 
--R
--R   (8)  PrimeField(29)
--R                                                                 Type: Domain
--E 41

--S 42 of 222
Z29 has Field
--R 
--R
--R   (9)  true
--R                                                                Type: Boolean
--E 42

--S 43 of 222
z:Z29:=7
--R 
--R
--R   (10)  7
--R                                                         Type: PrimeField(29)
--E 43

--S 44 of 222
z/2
--R 
--R
--R   (11)  18
--R                                                         Type: PrimeField(29)
--E 44

--S 45 of 222
)sh UnivariatePolynomial )attributes
--R 
--R UnivariatePolynomial(x: Symbol,R: Ring) is a domain constructor
--R Abbreviation for UnivariatePolynomial is UP 
--R This constructor is exposed in this frame.
--R Issue )edit bookvol10.3.pamphlet to see algebra source code for UP 
--R
--R------------------------------- Attributes --------------------------------
--R
--R  #<OBJNULL>                            commutative
--R
--E 45

--S 46 of 222
Zxy:=UnivariatePolynomial(x,UnivariatePolynomial(y,Integer))
--R 
--R
--R   (12)  UnivariatePolynomial(x,UnivariatePolynomial(y,Integer))
--R                                                                 Type: Domain
--E 46

--S 47 of 222
p:Zxy := x+x*y+1
--R 
--R
--R   (13)  (y + 1)x + 1
--R                Type: UnivariatePolynomial(x,UnivariatePolynomial(y,Integer))
--E 47

--S 48 of 222
coefficients p
--R 
--R
--R   (14)  [y + 1,1]
--R                                  Type: List(UnivariatePolynomial(y,Integer))
--E 48

--S 49 of 222
Nx:=UnivariatePolynomial(x,NonNegativeInteger)
--R 
--R 
--RDaly Bug
--R   UnivariatePolynomial(x,NonNegativeInteger) is not a valid type.
--E 49

)clear all

--S 50 of 222
p:UnivariatePolynomial(x,Integer):=x+1
--R 
--R
--R   (1)  x + 1
--R                                        Type: UnivariatePolynomial(x,Integer)
--E 50

--S 51 of 222
aa:=[subscript(a,[i]) for i in 0..4]
--R 
--R
--R   (2)  [a ,a ,a ,a ,a ]
--R          0  1  2  3  4
--R                                                           Type: List(Symbol)
--E 51

--S 52 of 222
q:UnivariatePolynomial(x,?):=reduce(+,[a*x^k for a in aa for k in 0..4])
--R 
--R
--R           4      3      2
--R   (3)  a x  + a x  + a x  + a x + a
--R         4      3      2      1     0
--R                            Type: UnivariatePolynomial(x,Polynomial(Integer))
--E 52

--S 53 of 222
A:=matrix [[1,2],[3,4]]
--R 
--R
--R        +1  2+
--R   (4)  |    |
--R        +3  4+
--R                                                        Type: Matrix(Integer)
--E 53

--S 54 of 222
b:=vector [1/2,-1]
--R 
--R
--R         1
--R   (5)  [-,- 1]
--R         2
--R                                              Type: Vector(Fraction(Integer))
--E 54

--S 55 of 222
A*b
--R 
--R
--R           3   5
--R   (6)  [- -,- -]
--R           2   2
--R                                              Type: Vector(Fraction(Integer))
--E 55

--S 56 of 222
dot(vector [1,2], vector [3,4])
--R 
--R
--R   (7)  11
--R                                                        Type: PositiveInteger
--E 56

--S 57 of 222
inverse A
--R 
--R
--R        +- 2   1 +
--R        |        |
--R   (8)  | 3     1|
--R        | -   - -|
--R        + 2     2+
--R                                   Type: Union(Matrix(Fraction(Integer)),...)
--E 57

)clear all

--S 58 of 222
ai:=[transpose matrix [[x,2*x,3*x]] for x in [a,b,c,d,e]]
--R 
--R
--R         +a + +b + +c + +d + +e +
--R         |  | |  | |  | |  | |  |
--R   (1)  [|2a|,|2b|,|2c|,|2d|,|2e|]
--R         |  | |  | |  | |  | |  |
--R         +3a+ +3b+ +3c+ +3d+ +3e+
--R                                      Type: List(Matrix(Polynomial(Integer)))
--E 58

--S 59 of 222
reduce(horizConcat,ai)
--R 
--R
--R        +a   b   c   d   e +
--R        |                  |
--R   (2)  |2a  2b  2c  2d  2e|
--R        |                  |
--R        +3a  3b  3c  3d  3e+
--R                                            Type: Matrix(Polynomial(Integer))
--E 59

--S 60 of 222
B:Matrix PrimeField 29 := matrix [[1,1],[-1,1]]
--R 
--R
--R        +1   1+
--R   (3)  |     |
--R        +28  1+
--R                                                 Type: Matrix(PrimeField(29))
--E 60

--S 61 of 222
inverse B
--R 
--R
--R        +15  14+
--R   (4)  |      |
--R        +15  15+
--R                                      Type: Union(Matrix(PrimeField(29)),...)
--E 61

--S 62 of 222
v: Vector PrimeField 29 := vector [1,2]
--R 
--R
--R   (5)  [1,2]
--R                                                 Type: Vector(PrimeField(29))
--E 62

--S 63 of 222
solve(B,v)
--R 
--R
--R   (6)  [particular= [14,16],basis= [[0,0]]]
--RType: Record(particular: Union(Vector(PrimeField(29)),"failed"),basis: List(Vector(PrimeField(29))))
--E 63

)clear all

--S 64 of 222
p:UP(x,Integer):=x^2+1
--R 
--R
--R         2
--R   (1)  x  + 1
--R                                        Type: UnivariatePolynomial(x,Integer)
--E 64

--S 65 of 222
eval(p,x=B)
--R 
--R
--R         2
--R   (2)  B  + 1
--R                                                    Type: Polynomial(Integer)
--E 65

--S 66 of 222
vectorise(1+x^2+x^4,6)
--R 
--R
--R   (3)  [1,0,1,0,1,0]
--R                                                        Type: Vector(Integer)
--E 66

--S 67 of 222
e1:=sin(x+y)
--R 
--R
--R   (4)  sin(y + x)
--R                                                    Type: Expression(Integer)
--E 67

--S 68 of 222
expand e1
--R 
--R
--R   (5)  cos(x)sin(y) + cos(y)sin(x)
--R                                                    Type: Expression(Integer)
--E 68

--S 69 of 222
e2:=tan(x)^6+3*tan(x)^4+3*tan(x)^2+1
--R 
--R
--R              6          4          2
--R   (6)  tan(x)  + 3tan(x)  + 3tan(x)  + 1
--R                                                    Type: Expression(Integer)
--E 69

--S 70 of 222
simplify e2
--R 
--R
--R           1
--R   (7)  -------
--R              6
--R        cos(x)
--R                                                    Type: Expression(Integer)
--E 70
--R 
--S 71 of 222
D(log x,x)
--R 
--R
--R        1
--R   (8)  -
--R        x
--R                                                    Type: Expression(Integer)
--E 71

--S 72 of 222
integrate(log x,x)
--R 
--R
--R   (9)  x log(x) - x
--R                                         Type: Union(Expression(Integer),...)
--E 72

--S 73 of 222
f(x) == x^2
--R 
--R                                                                   Type: Void
--E 73

--S 74 of 222
f1expr:=D(f(x),x)
--R 
--R   Compiling function f with type Variable(x) -> Polynomial(Integer) 
--R
--R   (11)  2x
--R                                                    Type: Polynomial(Integer)
--E 74

--S 75 of 222
function(f1expr,f1,x)
--R 
--R
--R   (12)  f1
--R                                                                 Type: Symbol
--E 75

--S 76 of 222
f1(u)
--R 
--R   Compiling function f1 with type Variable(u) -> Polynomial(Integer) 
--R
--R   (13)  2u
--R                                                    Type: Polynomial(Integer)
--E 76

--S 77 of 222
f:=(x+y)/(u+v)
--R 
--R   Function definition for f is being overwritten.
--R   Compiled code for f has been cleared.
--R
--R         y + x
--R   (14)  -----
--R         v + u
--R                                          Type: Fraction(Polynomial(Integer))
--E 77

--S 78 of 222
subst(f,x=z)
--R 
--R
--R         z + y
--R   (15)  -----
--R         v + u
--R                                                    Type: Expression(Integer)
--E 78

--S 79 of 222
kk:=kernels(sin(x)+cos(x)*exp(x)+sqrt(1+x)+(1+y)^(2/3))
--R 
--R
--R          3+-----+  +-----+          x
--R   (16)  [\|y + 1 ,\|x + 1 ,sin(x),%e ,cos(x)]
--R                                      Type: List(Kernel(Expression(Integer)))
--E 79

--S 80 of 222
[name k for k in kk]
--R 
--R
--R   (17)  [nthRoot,nthRoot,sin,exp,cos]
--R                                                           Type: List(Symbol)
--E 80

--S 81 of 222
[argument k for k in kk]
--R 
--R
--R   (18)  [[y + 1,3],[x + 1,2],[x],[x],[x]]
--R                                        Type: List(List(Expression(Integer)))
--E 81

--S 82 of 222
f:=operator 'f
--R 
--R
--R   (19)  f
--R                                                          Type: BasicOperator
--E 82

--S 83 of 222
kernels f(x)
--R 
--R
--R   (20)  [f(x)]
--R                                      Type: List(Kernel(Expression(Integer)))
--E 83

--S 84 of 222
name first kernels f(x)
--R 
--R
--R   (21)  f
--R                                                                 Type: Symbol
--E 84

--S 85 of 222
argument first kernels f(x)
--R 
--R
--R   (22)  [x]
--R                                              Type: List(Expression(Integer))
--E 85

--S 86 of 222
allkernels:Expression Integer -> List Kernel Expression Integer
allkernels ex ==
  ker:=kernels ex
  arg:=concat [argument x for x in ker]
  concat(ker,concat [allkernels a for a in arg])
--E 86

--S 87 of 222
exps:=series(exp x,x=0)
--R 
--R
--R   (25)
--R             1  2   1  3    1  4    1   5    1   6     1   7     1    8
--R     1 + x + - x  + - x  + -- x  + --- x  + --- x  + ---- x  + ----- x
--R             2      6      24      120      720      5040      40320
--R   + 
--R        1    9      1     10      11
--R     ------ x  + ------- x   + O(x  )
--R     362880      3628800
--R                       Type: UnivariatePuiseuxSeries(Expression(Integer),x,0)
--E 87

--S 88 of 222
exps:=series(n+->1/factorial n, x=0)
--R 
--R
--R   (26)
--R             1  2   1  3    1  4    1   5    1   6     1   7     1    8
--R     1 + x + - x  + - x  + -- x  + --- x  + --- x  + ---- x  + ----- x
--R             2      6      24      120      720      5040      40320
--R   + 
--R        1    9      1     10      11
--R     ------ x  + ------- x   + O(x  )
--R     362880      3628800
--R                       Type: UnivariatePuiseuxSeries(Expression(Integer),x,0)
--E 88

--S 89 of 222
retract exps
--R 
--R
--R   (27)
--R             1  2   1  3    1  4    1   5    1   6     1   7     1    8
--R     1 + x + - x  + - x  + -- x  + --- x  + --- x  + ---- x  + ----- x
--R             2      6      24      120      720      5040      40320
--R   + 
--R        1    9      1     10      11
--R     ------ x  + ------- x   + O(x  )
--R     362880      3628800
--R                       Type: UnivariateLaurentSeries(Expression(Integer),x,0)
--E 89

--S 90 of 222
retract retract exps
--R 
--R
--R   (28)
--R             1  2   1  3    1  4    1   5    1   6     1   7     1    8
--R     1 + x + - x  + - x  + -- x  + --- x  + --- x  + ---- x  + ----- x
--R             2      6      24      120      720      5040      40320
--R   + 
--R        1    9      1     10      11
--R     ------ x  + ------- x   + O(x  )
--R     362880      3628800
--R                        Type: UnivariateTaylorSeries(Expression(Integer),x,0)
--E 90

--S 91 of 222
taylor(n+->1/factorial n,x=0)
--R 
--R
--R   (29)
--R             1  2   1  3    1  4    1   5    1   6     1   7     1    8
--R     1 + x + - x  + - x  + -- x  + --- x  + --- x  + ---- x  + ----- x
--R             2      6      24      120      720      5040      40320
--R   + 
--R        1    9      1     10      11
--R     ------ x  + ------- x   + O(x  )
--R     362880      3628800
--R                        Type: UnivariateTaylorSeries(Expression(Integer),x,0)
--E 91

--S 92 of 222
w:=rootOf(y^2-x,y)
--R 
--R
--R   (30)  y
--R                                                    Type: Expression(Integer)
--E 92

--S 93 of 222
y
--R 
--R
--R   (31)  y
--R                                                            Type: Variable(y)
--E 93

--S 94 of 222
w^2
--R 
--R
--R   (32)  x
--R                                                    Type: Expression(Integer)
--E 94

--S 95 of 222
D(w,x)
--R 
--R
--R          1
--R   (33)  --
--R         2y
--R                                                    Type: Expression(Integer)
--E 95

--S 96 of 222
integrate(w,x)
--R 
--R
--R         2x y
--R   (34)  ----
--R           3
--R                                         Type: Union(Expression(Integer),...)
--E 96

)clear all

--S 97 of 222
p:=(x^2+y^2)^2 - 2*a^2*(x^2-y^2)
--R 
--R
--R         4      2     2  2    4     2 2
--R   (1)  y  + (2x  + 2a )y  + x  - 2a x
--R                                                    Type: Polynomial(Integer)
--E 97

--S 98 of 222
--draw(subst(p,a=1)=0,x,y,range==[-2..-1/1000,-1..1])
--E 98

--S 99 of 222
w:=rootOf(p,y)
--R 
--R
--R   (2)  y
--R                                                    Type: Expression(Integer)
--E 99

--S 100 of 222
D(w,x)
--R 
--R
--R             2    3    2
--R        - x y  - x  + a x
--R   (3)  -----------------
--R          3     2    2
--R         y  + (x  + a )y
--R                                                    Type: Expression(Integer)
--E 100

--S 101 of 222
integrate(w,x)
--R 
--R
--R           3     2     2
--R        - y  + (x  - 2a )y
--R   (4)  ------------------
--R                4x
--R                                         Type: Union(Expression(Integer),...)
--E 101

--S 102 of 222
w1:=subst(D(w,x),w=y)::Fraction Polynomial Integer
--R 
--R
--R             2    3    2
--R        - x y  - x  + a x
--R   (5)  -----------------
--R          3     2    2
--R         y  + (x  + a )y
--R                                          Type: Fraction(Polynomial(Integer))
--E 102

--S 103 of 222
w1z:=numer w1
--R 
--R
--R             2    3    2
--R   (6)  - x y  - x  + a x
--R                                                    Type: Polynomial(Integer)
--E 103

--S 104 of 222
radicalSolve([w1z=0,p=0],[x,y])
--R 
--R
--R   (7)
--R           +---+             +---+               +---+
--R           |  2              |  2                |  2
--R          \|3a      a       \|3a      a         \|3a        a
--R   [[x= - ------,y= -], [x= ------,y= -], [x= - ------,y= - -],
--R             2      2          2      2            2        2
--R         +---+
--R         |  2                                  +-----+               +-----+
--R        \|3a        a                          |    2                |    2
--R    [x= ------,y= - -], [x= 0,y= 0], [x= 0,y= \|- 2a  ], [x= 0,y= - \|- 2a  ]]
--R           2        2
--R                              Type: List(List(Equation(Expression(Integer))))
--E 104

--S 105 of 222
solve(numer D(w,x)=0,x)
--R 
--R
--R   (8)  []
--RType: List(Equation(Fraction(Polynomial(SparseMultivariatePolynomial(Integer,Kernel(Expression(Integer)))))))
--E 105

--S 106 of 222
f:=operator 'f
--R 
--R
--R   (9)  f
--R                                                          Type: BasicOperator
--E 106

--S 107 of 222
D(f(sin x),x)
--R 
--R
--R                ,
--R   (10)  cos(x)f (sin(x))
--R
--R                                                    Type: Expression(Integer)
--E 107

--S 108 of 222
D(f(x),x,4)
--R 
--R
--R          (iv)
--R   (11)  f    (x)
--R
--R                                                    Type: Expression(Integer)
--E 108

--S 109 of 222
f:=operator 'f
--R 
--R
--R   (12)  f
--R                                                          Type: BasicOperator
--E 109

--S 110 of 222
g:=operator 'g
--R 
--R
--R   (13)  g
--R                                                          Type: BasicOperator
--E 110

--S 111 of 222
h:=operator 'h
--R 
--R
--R   (14)  h
--R                                                          Type: BasicOperator
--E 111

--S 112 of 222
faa:=[D(f g x,x,n) for n in 0..]
--R 
--R
--R   (15)
--R              ,       ,      ,       ,,       ,   2 ,,
--R   [f(g(x)), f (g(x))g (x), f (g(x))g  (x) + g (x) f  (g(x)),
--R
--R     ,       ,,,       ,   3 ,,,           ,    ,,       ,,
--R    f (g(x))g   (x) + g (x) f   (g(x)) + 3g (x)f  (g(x))g  (x),
--R
--R
--R        ,       (iv)       ,   4 (iv)           ,    ,,       ,,,
--R       f (g(x))g    (x) + g (x) f    (g(x)) + 4g (x)f  (g(x))g   (x)
--R
--R     + 
--R         ,   2 ,,    ,,,           ,,       ,,   2
--R       6g (x) g  (x)f   (g(x)) + 3f  (g(x))g  (x)
--R
--R     ,
--R
--R        ,       (v)       ,   5 (v)           ,    ,,       (iv)
--R       f (g(x))g   (x) + g (x) f   (g(x)) + 5g (x)f  (g(x))g    (x)
--R
--R     + 
--R          ,   3 ,,    (iv)
--R       10g (x) g  (x)f    (g(x))
--R
--R     + 
--R         ,   2 ,,,            ,,       ,,     ,,,         ,    ,,   2 ,,,
--R     (10g (x) f   (g(x)) + 10f  (g(x))g  (x))g   (x) + 15g (x)g  (x) f   (g(x))
--R
--R     ,
--R
--R        ,       (vi)       ,   6 (vi)           ,    ,,       (v)
--R       f (g(x))g    (x) + g (x) f    (g(x)) + 6g (x)f  (g(x))g   (x)
--R
--R     + 
--R          ,   4 ,,    (v)
--R       15g (x) g  (x)f   (g(x))
--R
--R     + 
--R           ,   2 ,,,            ,,       ,,     (iv)
--R       (15g (x) f   (g(x)) + 15f  (g(x))g  (x))g    (x)
--R
--R     + 
--R           ,   3 ,,,         ,   2 ,,   2  (iv)            ,,       ,,,   2
--R       (20g (x) g   (x) + 45g (x) g  (x) )f    (g(x)) + 10f  (g(x))g   (x)
--R
--R     + 
--R          ,    ,,    ,,,       ,,,         ,,   3 ,,,
--R       60g (x)g  (x)f   (g(x))g   (x) + 15g  (x) f   (g(x))
--R
--R     ,
--R
--R        ,       (vii)       ,   7 (vii)           ,    ,,       (vi)
--R       f (g(x))g     (x) + g (x) f     (g(x)) + 7g (x)f  (g(x))g    (x)
--R
--R     + 
--R          ,   5 ,,    (vi)
--R       21g (x) g  (x)f    (g(x))
--R
--R     + 
--R           ,   2 ,,,            ,,       ,,     (v)
--R       (21g (x) f   (g(x)) + 21f  (g(x))g  (x))g   (x)
--R
--R     + 
--R           ,   4 ,,,          ,   3 ,,   2  (v)
--R       (35g (x) g   (x) + 105g (x) g  (x) )f   (g(x))
--R
--R     + 
--R             ,   3 (iv)            ,,       ,,,          ,    ,,    ,,,
--R         (35g (x) f    (g(x)) + 35f  (g(x))g   (x) + 105g (x)g  (x)f   (g(x)))
--R
--R      *
--R          (iv)
--R         g    (x)
--R
--R     + 
--R            ,   2 ,,    ,,,          ,    ,,   3  (iv)
--R       (210g (x) g  (x)g   (x) + 105g (x)g  (x) )f    (g(x))
--R
--R     + 
--R          ,    ,,,       ,,,   2       ,,   2 ,,,       ,,,
--R       70g (x)f   (g(x))g   (x)  + 105g  (x) f   (g(x))g   (x)
--R
--R     ,
--R
--R        ,       (viii)       ,   8 (viii)           ,    ,,       (vii)
--R       f (g(x))g      (x) + g (x) f      (g(x)) + 8g (x)f  (g(x))g     (x)
--R
--R     + 
--R          ,   6 ,,    (vii)
--R       28g (x) g  (x)f     (g(x))
--R
--R     + 
--R           ,   2 ,,,            ,,       ,,     (vi)
--R       (28g (x) f   (g(x)) + 28f  (g(x))g  (x))g    (x)
--R
--R     + 
--R           ,   5 ,,,          ,   4 ,,   2  (vi)
--R       (56g (x) g   (x) + 210g (x) g  (x) )f    (g(x))
--R
--R     + 
--R             ,   3 (iv)            ,,       ,,,          ,    ,,    ,,,
--R         (56g (x) f    (g(x)) + 56f  (g(x))g   (x) + 168g (x)g  (x)f   (g(x)))
--R
--R      *
--R          (v)
--R         g   (x)
--R
--R     + 
--R           ,   4 (iv)          ,   3 ,,    ,,,          ,   2 ,,   3  (v)
--R       (70g (x) g    (x) + 560g (x) g  (x)g   (x) + 420g (x) g  (x) )f   (g(x))
--R
--R     + 
--R          ,,       (iv)   2
--R       35f  (g(x))g    (x)
--R
--R     + 
--R               ,   2 ,,    (iv)             ,    ,,,       ,,,
--R           420g (x) g  (x)f    (g(x)) + 280g (x)f   (g(x))g   (x)
--R
--R         + 
--R               ,,   2 ,,,
--R           210g  (x) f   (g(x))
--R
--R      *
--R          (iv)
--R         g    (x)
--R
--R     + 
--R            ,   2 ,,,   2       ,    ,,   2 ,,,          ,,   4  (iv)
--R       (280g (x) g   (x)  + 840g (x)g  (x) g   (x) + 105g  (x) )f    (g(x))
--R
--R     + 
--R           ,,    ,,,       ,,,   2
--R       280g  (x)f   (g(x))g   (x)
--R
--R     ,
--R
--R        ,       (ix)       ,   9 (ix)           ,    ,,       (viii)
--R       f (g(x))g    (x) + g (x) f    (g(x)) + 9g (x)f  (g(x))g      (x)
--R
--R     + 
--R          ,   7 ,,    (viii)
--R       36g (x) g  (x)f      (g(x))
--R
--R     + 
--R           ,   2 ,,,            ,,       ,,     (vii)
--R       (36g (x) f   (g(x)) + 36f  (g(x))g  (x))g     (x)
--R
--R     + 
--R           ,   6 ,,,          ,   5 ,,   2  (vii)
--R       (84g (x) g   (x) + 378g (x) g  (x) )f     (g(x))
--R
--R     + 
--R             ,   3 (iv)            ,,       ,,,          ,    ,,    ,,,
--R         (84g (x) f    (g(x)) + 84f  (g(x))g   (x) + 252g (x)g  (x)f   (g(x)))
--R
--R      *
--R          (vi)
--R         g    (x)
--R
--R     + 
--R              ,   5 (iv)           ,   4 ,,    ,,,           ,   3 ,,   3
--R         (126g (x) g    (x) + 1260g (x) g  (x)g   (x) + 1260g (x) g  (x) )
--R
--R      *
--R          (vi)
--R         f    (g(x))
--R
--R     + 
--R               ,   4 (v)             ,,       (iv)
--R           126g (x) f   (g(x)) + 126f  (g(x))g    (x)
--R
--R         + 
--R               ,   2 ,,    (iv)             ,    ,,,       ,,,
--R           756g (x) g  (x)f    (g(x)) + 504g (x)f   (g(x))g   (x)
--R
--R         + 
--R               ,,   2 ,,,
--R           378g  (x) f   (g(x))
--R
--R      *
--R          (v)
--R         g   (x)
--R
--R     + 
--R                ,   3 ,,    (iv)          ,   3 ,,,   2
--R           1260g (x) g  (x)g    (x) + 840g (x) g   (x)
--R
--R         + 
--R                ,   2 ,,   2 ,,,          ,    ,,   4
--R           3780g (x) g  (x) g   (x) + 945g (x)g  (x)
--R
--R      *
--R          (v)
--R         f   (g(x))
--R
--R     + 
--R           ,    ,,,       (iv)   2
--R       315g (x)f   (g(x))g    (x)
--R
--R     + 
--R                 ,   2 ,,,           ,    ,,   2  (iv)
--R           (1260g (x) g   (x) + 1890g (x)g  (x) )f    (g(x))
--R
--R         + 
--R                ,,    ,,,       ,,,
--R           1260g  (x)f   (g(x))g   (x)
--R
--R      *
--R          (iv)
--R         g    (x)
--R
--R     + 
--R             ,    ,,    ,,,   2        ,,   3 ,,,     (iv)
--R       (2520g (x)g  (x)g   (x)  + 1260g  (x) g   (x))f    (g(x))
--R
--R     + 
--R           ,,,       ,,,   3
--R       280f   (g(x))g   (x)
--R
--R     ,
--R    ...]
--R                                            Type: Stream(Expression(Integer))
--E 112

--S 113 of 222
faa3:=entries complete [expr for expr in faa for k in 0..3]
--R 
--R
--R   (16)
--R              ,       ,      ,       ,,       ,   2 ,,
--R   [f(g(x)), f (g(x))g (x), f (g(x))g  (x) + g (x) f  (g(x)),
--R
--R     ,       ,,,       ,   3 ,,,           ,    ,,       ,,
--R    f (g(x))g   (x) + g (x) f   (g(x)) + 3g (x)f  (g(x))g  (x)]
--R
--R                                              Type: List(Expression(Integer))
--E 113

--S 114 of 222
ff:=[subscript('f,[i]) for i in 0..]
--R 
--R
--R   (17)  [f ,f ,f ,f ,f ,f ,f ,f ,f ,f ,...]
--R           0  1  2  3  4  5  6  7  8  9
--R                                                         Type: Stream(Symbol)
--E 114

--S 115 of 222
faa3f:=[subst(expr,[subst(D(f x,x,k),x=g x) = ff(k+1) for k in 0..3])_
   for expr in solve([D(h x,x,i)=hi for i in 0..3 for hi in faa3f],_
   [ff i for i in 1..4])]
--R 
--R 
--RDaly Bug
--R   Axiom cannot iterate with hi over your form now. Perhaps you should 
--R      try using a conversion to make sure your form is a list or 
--R      stream, for example.
--E 115

--S 116 of 222
aa:=[1,2,3,4]
--R 
--R
--R   (18)  [1,2,3,4]
--R                                                  Type: List(PositiveInteger)
--E 116

--S 117 of 222
bb:=expand [1..4]
--R 
--R
--R   (19)  [1,2,3,4]
--R                                                          Type: List(Integer)
--E 117

--S 118 of 222
ss:=expand [1..]
--R 
--R
--R   (20)  [1,2,3,4,5,6,7,8,9,10,...]
--R                                                        Type: Stream(Integer)
--E 118

--S 119 of 222
numberOfComputedEntries ss
--R 
--R
--R   (21)  10
--R                                                        Type: PositiveInteger
--E 119

)set stream calculate 15

--S 120 of 222
ss
--R 
--R
--R   (22)  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,...]
--R                                                        Type: Stream(Integer)
--E 120

--S 121 of 222
[p for p in ss | prime? p]
--R 
--R
--R   (23)  [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,...]
--R                                                        Type: Stream(Integer)
--E 121

--S 122 of 222
xx:=[subscript(x,[i]) for i in 1..5]
--R 
--R
--R   (24)  [x ,x ,x ,x ,x ]
--R           1  2  3  4  5
--R                                                           Type: List(Symbol)
--E 122

--S 123 of 222
reduce(+,xx)
--R 
--R
--R   (25)  x  + x  + x  + x  + x
--R          5    4    3    2    1
--R                                                    Type: Polynomial(Integer)
--E 123

--S 124 of 222
reduce(*,xx)
--R 
--R
--R   (26)  x x x x x
--R          1 2 3 4 5
--R                                                    Type: Polynomial(Integer)
--E 124

--S 125 of 222
[cos x for x in xx]
--R 
--R
--R   (27)  [cos(x ),cos(x ),cos(x ),cos(x ),cos(x )]
--R               1       2       3       4       5
--R                                              Type: List(Expression(Integer))
--E 125

--S 126 of 222
map(sin,xx)
--R 
--R
--R   (28)  [sin(x ),sin(x ),sin(x ),sin(x ),sin(x )]
--R               1       2       3       4       5
--R                                              Type: List(Expression(Integer))
--E 126

--S 127 of 222
sort removeDuplicates concat([[m/n for m in 0..n] for n in 1..10])
--R 
--R
--R   (29)
--R       1 1 1 1 1 1 2 1 2  3 1 3 2 3 4 1 5 4 3 5 2  7 5 3 7 4 5 6 7 8  9
--R   [0,--,-,-,-,-,-,-,-,-,--,-,-,-,-,-,-,-,-,-,-,-,--,-,-,-,-,-,-,-,-,--,1]
--R      10 9 8 7 6 5 9 4 7 10 3 8 5 7 9 2 9 7 5 8 3 10 7 4 9 5 6 7 8 9 10
--R                                                Type: List(Fraction(Integer))
--E 127

--S 128 of 222
members set concat([[m/n for m in 0..n] for n in 1..10])
--R 
--R
--R   (30)
--R       1 1 1 1 1 1 2 1 2  3 1 3 2 3 4 1 5 4 3 5 2  7 5 3 7 4 5 6 7 8  9
--R   [0,--,-,-,-,-,-,-,-,-,--,-,-,-,-,-,-,-,-,-,-,-,--,-,-,-,-,-,-,-,-,--,1]
--R      10 9 8 7 6 5 9 4 7 10 3 8 5 7 9 2 9 7 5 8 3 10 7 4 9 5 6 7 8 9 10
--R                                                Type: List(Fraction(Integer))
--E 128

--S 129 of 222
mn:=divide(6656,42)
--R 
--R
--R   (31)  [quotient= 158,remainder= 20]
--R                           Type: Record(quotient: Integer,remainder: Integer)
--E 129

--S 130 of 222
mn.quotient
--R 
--R
--R   (32)  158
--R                                                        Type: PositiveInteger
--E 130

--S 131 of 222
a:=1, b:=a, a:=2, b
--R 
--R
--R   (33)  [1,1,2,1]
--R                                                 Type: Tuple(PositiveInteger)
--E 131

--S 132 of 222
b==a
--R 
--R                                                                   Type: Void
--E 132

--S 133 of 222
a:=1, b, a:=2, b
--R 
--R   Compiling body of rule b to compute value of type PositiveInteger 
--R
--R   (35)  [1,1,2,2]
--R                                                 Type: Tuple(PositiveInteger)
--E 133

--S 134 of 222
f(x) == x^2
--R 
--R                                                                   Type: Void
--E 134

--S 135 of 222
f(2)
--R 
--R   Compiling function f with type PositiveInteger -> PositiveInteger 
--R
--R   (37)  4
--R                                                        Type: PositiveInteger
--E 135

--S 136 of 222
f(2.0)
--R 
--R   Compiling function f with type Float -> Float 
--R
--R   (38)  4.0000000000 0000000000 0000000000 0000000000 0000000000
--R                                                                  Type: Float
--E 136

--S 137 of 222
fac 1 == 1
fac n == n * fac(n-1)
--R 
--R                                                                   Type: Void
--E 137

--S 138 of 222
fac 4
--R 
--R   Compiling function fac with type Integer -> Integer 
--R   Compiling function fac as a recurrence relation.
--R
--R   (41)  24
--R                                                        Type: PositiveInteger
--E 138

--S 139 of 222
pow(x:Integer,k:NonNegativeInteger):Integer == x^k
--R 
--R   Function declaration pow : (Integer,NonNegativeInteger) -> Integer 
--R      has been added to workspace.
--R                                                                   Type: Void
--E 139

--S 140 of 222
pow(3,2)
--R 
--R   Compiling function pow with type (Integer,NonNegativeInteger) -> 
--R      Integer 
--R
--R   (43)  9
--R                                                        Type: PositiveInteger
--E 140

--S 141 of 222
pow(3,-1)
--R 
--R   Conversion failed in the compiled user function pow.
--R 
--RDaly Bug
--R   Cannot convert from type Integer to NonNegativeInteger for value
--R   - 1
--R
--E 141

--S 142 of 222
pow1(x:Integer,k:Integer):Integer == x^k
--R 
--R   Function declaration pow1 : (Integer,Integer) -> Integer has been 
--R      added to workspace.
--R                                                                   Type: Void
--E 142

--S 143 of 222
pow1(3,-1)
--R 
--R   Your expression cannot be fully compiled because it contains an 
--R      integer expression (for k) whose sign cannot be determined (in 
--R      general) and so must be specified by you. Perhaps you can try 
--R      substituting something like
--R                                  (k :: PI)
--R                                     or
--R                                 (k :: NNI)
--R      into your expression for k.
--R   Axiom will attempt to step through and interpret the code.
--R   Compiling function pow1 with type (Integer,Integer) -> Integer 
--R   Internal Error
--R   Interpreter code generation failed for expression(^ |#1| |#2|)
--R
--R   Continuing to read the file...
--R
--E 143

--S 144 of 222
pow2:(Integer,Integer) -> Fraction Integer
--R 
--R                                                                   Type: Void
--E 144

--S 145 of 222
pow2(x,k) == x^k
--R 
--R                                                                   Type: Void
--E 145

--S 146 of 222
pow2(3,-1)
--R 
--R   Compiling function pow2 with type (Integer,Integer) -> Fraction(
--R      Integer) 
--R
--R         1
--R   (47)  -
--R         3
--R                                                      Type: Fraction(Integer)
--E 146

--S 147 of 222
f:=x +-> x^2
--R 
--R   Function definition for f is being overwritten.
--R   Compiled code for f has been cleared.
--R
--R                2
--R   (48)  x +-> x
--R                                                      Type: AnonymousFunction
--E 147

--S 148 of 222
f(u)
--R 
--R
--R          2
--R   (49)  u
--R                                                    Type: Polynomial(Integer)
--E 148

--S 149 of 222
nextfib(nn) == [nn.2,nn.1+nn.2]
--R 
--R                                                                   Type: Void
--E 149

--S 150 of 222
nextfib [1,1]
--R 
--R   Compiling function nextfib with type List(PositiveInteger) -> List(
--R      PositiveInteger) 
--R
--R   (51)  [1,2]
--R                                                  Type: List(PositiveInteger)
--E 150

--S 151 of 222
nextfib %
--R 
--R
--R   (52)  [2,3]
--R                                                  Type: List(PositiveInteger)
--E 151

--S 152 of 222
fib2:=[generate(nextfib,[1,1])]
--R 
--R
--R   (53)
--R   [[1,1], [1,2], [2,3], [3,5], [5,8], [8,13], [13,21], [21,34], [34,55],
--R    [55,89], [89,144], [144,233], [233,377], [377,610], [610,987], ...]
--R                                          Type: Stream(List(PositiveInteger))
--E 152

--S 153 of 222
fib:=[x.1 for x in fib2]
--R 
--R
--R   (54)  [1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,...]
--R                                                Type: Stream(PositiveInteger)
--E 153

--S 154 of 222
fib 42
--R 
--R
--R   (55)  267914296
--R                                                        Type: PositiveInteger
--E 154

)set mes time on

)set function cache all slowadd

--S 155 of 222
slowadd(x,y) == (for k in 1..y repeat x:=x+1; x)
--R 
--R                                                                   Type: Void
--R                                                                  Time: 0 sec
--E 155

--S 156 of 222
slowadd(1,100000000)
--R 
--R   Compiling function slowadd with type (PositiveInteger,
--R      PositiveInteger) -> PositiveInteger 
--R   slowadd will cache all previously computed values.
--R
--R   (57)  100000001
--R                                                        Type: PositiveInteger
--I                                                   Time: 1.12 (EV) = 1.12 sec
--E 156

--S 157 of 222
slowadd(1,100000000)
--R 
--R
--R   (58)  100000001
--R                                                        Type: PositiveInteger
--R                                                                  Time: 0 sec
--E 157

)set mes time off

--S 158 of 222
macro b1 == subscript(b,[1])
--R 
--R                                                                   Type: Void
--E 158

)clear all

--S 159 of 222
logrule1 := rule log a + log b == log(a*b)
--R 
--R
--R   (1)  log(b) + log(a) + %S == log(a b) + %S
--R                       Type: RewriteRule(Integer,Integer,Expression(Integer))
--E 159

--S 160 of 222
logrule1(log 2 + log 3)
--R 
--R
--R   (2)  log(6)
--R                                                    Type: Expression(Integer)
--E 160

)clear all

--S 161 of 222
logrule2 := rule
  log a + log b == log(a*b)
  a*log b == log(b^a)
--R 
--R
--R                                                                a
--R   (1)  {log(b) + log(a) + %T == log(a b) + %T,a log(b) == log(b )}
--R                           Type: Ruleset(Integer,Integer,Expression(Integer))
--E 161

--S 162 of 222
logrule2(a*log x + log y)
--R 
--R
--R               a
--R   (2)  log(y x )
--R                                                    Type: Expression(Integer)
--E 162

)clear all

--S 163 of 222
logrule3:=rule
  log a + log b == log(a*b)
  (a|integer? a)*log b == log(b^a)
--R 
--R
--R                                                                a
--R   (1)  {log(b) + log(a) + %U == log(a b) + %U,a log(b) == log(b )}
--R                           Type: Ruleset(Integer,Integer,Expression(Integer))
--E 163

--S 164 of 222
logrule3(a*log x + log y)
--R 
--R
--R   (2)  log(y) + a log(x)
--R                                                    Type: Expression(Integer)
--E 164

--S 165 of 222
logrule3(2*log x + log y)
--R 
--R
--R             2
--R   (3)  log(x y)
--R                                                    Type: Expression(Integer)
--E 165

)clear all

--S 166 of 222
sinrule1 := rule sin((n)*x) == cos((n-1)*x)*sin x + cos x * sin((n-1)*x)
--R 
--R
--R   (1)  sin(n x) == cos(x)sin((n - 1)x) + cos((n - 1)x)sin(x)
--R                       Type: RewriteRule(Integer,Integer,Expression(Integer))
--E 166

--S 167 of 222
sinrule1 sin(5*u)
--R 
--R
--R   (2)  cos(5)sin(5u - 5) + sin(5)cos(5u - 5)
--R                                                    Type: Expression(Integer)
--E 167

)clear all

--S 168 of 222
sinrule2:=rule sin((n|integer? n)*x)==cos((n-1)*x)*sin x + cos x * sin((n-1)*x)
--R 
--R
--R   (1)  sin(n x) == cos(x)sin((n - 1)x) + cos((n - 1)x)sin(x)
--R                       Type: RewriteRule(Integer,Integer,Expression(Integer))
--E 168

--S 169 of 222
sinrule2 sin(5*x)
--R 
--R
--R                                         2                 4
--R   (2)  (cos(4x) + cos(x)cos(3x) + cos(x) cos(2x) + 2cos(x) )sin(x)
--R                                                    Type: Expression(Integer)
--E 169

--S 170 of 222
u:=operator 'u
--R 
--R
--R   (3)  u
--R                                                          Type: BasicOperator
--E 170

--S 171 of 222
myRule:= rule u(x+y) == u(x) + u(y)
--R 
--R
--R   (4)  u(y + x) == 'u(y) + 'u(x)
--R                       Type: RewriteRule(Integer,Integer,Expression(Integer))
--E 171

--S 172 of 222
myRule u(a1+a2+a3+a4)
--R 
--R
--R   (5)  u(a4) + u(a3) + u(a2) + u(a1)
--R                                                    Type: Expression(Integer)
--E 172

--S 173 of 222
k:=1
--R 
--R
--R   (6)  1
--R                                                        Type: PositiveInteger
--E 173

--S 174 of 222
if k > 0 then 1 else 0
--R 
--R
--R   (7)  1
--R                                                        Type: PositiveInteger
--E 174

--S 175 of 222
s:=0
--R 
--R
--R   (8)  0
--R                                                     Type: NonNegativeInteger
--E 175

--S 176 of 222
for k in 1..5 repeat s:=s+k^2
--R 
--R                                                                   Type: Void
--E 176

--S 177 of 222
s
--R 
--R
--R   (10)  55
--R                                                     Type: NonNegativeInteger
--E 177

--S 178 of 222
s:=0
--R 
--R
--R   (11)  0
--R                                                     Type: NonNegativeInteger
--E 178

--S 179 of 222
k:=0
--R 
--R
--R   (12)  0
--R                                                     Type: NonNegativeInteger
--E 179

--S 180 of 222
while k < 5 repeat (k:=k+1; s:=s+k); s
--R 
--R
--R   (13)  15
--R                                                     Type: NonNegativeInteger
--E 180

--S 181 of 222
s:=0
--R 
--R
--R   (14)  0
--R                                                     Type: NonNegativeInteger
--E 181

--S 182 of 222
k:=0
--R 
--R
--R   (15)  0
--R                                                     Type: NonNegativeInteger
--E 182

--S 183 of 222
repeat (if k > 5 then break else (s:=s+k; k:=k+1)); s
--R 
--R
--R   (16)  15
--R                                                     Type: NonNegativeInteger
--E 183

--S 184 of 222
l:=[subscript(x,[i]) for i in 1..5]
--R 
--R
--R   (17)  [x ,x ,x ,x ,x ]
--R           1  2  3  4  5
--R                                                           Type: List(Symbol)
--E 184

--S 185 of 222
res:=[]
--R 
--R
--R   (18)  []
--R                                                             Type: List(None)
--E 185

--S 186 of 222
for x in l repeat res:=cons(x,res)
--R 
--R                                                                   Type: Void
--E 186

--S 187 of 222
res
--R 
--R
--R   (20)  [x ,x ,x ,x ,x ]
--R           5  4  3  2  1
--R                                              Type: List(Polynomial(Integer))
--E 187

--S 188 of 222
for x in 1..5 repeat res:=cons(l.x,res)
--R 
--R                                                                   Type: Void
--E 188

--S 189 of 222
res
--R 
--R
--R   (22)  [x ,x ,x ,x ,x ,x ,x ,x ,x ,x ]
--R           5  4  3  2  1  5  4  3  2  1
--R                                              Type: List(Polynomial(Integer))
--E 189

--S 190 of 222
POSNEG ==> Record(pos:Integer,neg:Integer)
--R 
--R                                                                   Type: Void
--E 190

--S 191 of 222
f:List Integer -> POSNEG
--R 
--R                                                                   Type: Void
--E 191

--S 192 of 222
f(kk) == 
  respos:Integer := 0
  resneg:Integer := 0
  for k in kk repeat
    if k > 0 then
      respos := respos+k
    else
      resneg := resneg-k
  [respos,resneg]
--R 
--R                                                                   Type: Void
--E 192

--S 193 of 222
f [-1,1,2,-1]
--R 
--R   Compiling function f with type List(Integer) -> Record(pos: Integer,
--R      neg: Integer) 
--R   f will cache all previously computed values.
--R
--R   (26)  [pos= 3,neg= 2]
--R                                      Type: Record(pos: Integer,neg: Integer)
--E 193

--S 194 of 222
sqrt(x +
       a:=2
       b:=1
       a+b
    )
--R 
--R
--R          +-----+
--R   (27)  \|x + 3
--R                                                    Type: Expression(Integer)
--E 194

--S 195 of 222
sqrt(x +
       a:=2
       b:=1
       a+b)
--I 
--I Line 831:--E 194
--I Line 832:
--I Line 833:--S 195 of 222
 Line 834:sqrt(x +
--I           ....A
--I Error  A:Missing mate.
--I Line 835:       a:=2
--I Line 836:       b:=1
--I Line 837:       a+b)
--I           .......A..B
--I Error  A: (from #\A up to #\B) Ignored.
--I Error  B:Improper syntax.
--I Error  B:syntax error at top level
--I Error  B:Possibly missing a)
--I   5 error(s) parsing
--E 195

--S 196 of 222
dividiere(x,y) ==
  x1 := x
  x1 := x1/y1
--R 
--R                                                                   Type: Void
--E 196

--S 197 of 222
dividiere(1,2)
--R 
--R   The type of the local variable x1 has changed in the computation.
--R   We will attempt to interpret the code.
--R
--R          1
--R   (29)  --
--R         y1
--R                                          Type: Fraction(Polynomial(Integer))
--E 197

--S 198 of 222
p:=1+x+x^2
--R 
--R
--R          2
--R   (30)  x  + x + 1
--R                                                    Type: Polynomial(Integer)
--E 198

--S 199 of 222
coefficient(p,2)
--R 
--R
--R   (31)  1
--R                                                        Type: PositiveInteger
--E 199

--S 200 of 222
mycoeff(p,k)==coefficient(p,k)
--R 
--R                                                                   Type: Void
--E 200

--S 201 of 222
mycoeff(p,2)
--R 
--R   There are 8 exposed and 5 unexposed library operations named 
--R      coefficient having 2 argument(s) but none was determined to be 
--R      applicable. Use HyperDoc Browse, or issue
--R                           )display op coefficient
--R      to learn more about the available operations. Perhaps 
--R      package-calling the operation or using coercions on the arguments
--R      will allow you to apply the operation.
--R   Cannot find a definition or applicable library operation named 
--R      coefficient with argument type(s)
--R                             Polynomial(Integer)
--R                               PositiveInteger
--R      Perhaps you should use @ to indicate the required return type, or
--R      $ to specify which version of the function you need.
--R   Axiom will attempt to step through and interpret the code.
--R
--R   (33)  1
--R                                                        Type: PositiveInteger
--E 201

--S 202 of 222
mycoeff(p,k) == coefficient(p::UP(x,?),k)
--R 
--R   Compiled code for mycoeff has been cleared.
--R   1 old definition(s) deleted for function or rule mycoeff 
--R                                                                   Type: Void
--E 202

--S 203 of 222
mycoeff(p,2)
--R 
--R   Compiling function mycoeff with type (Polynomial(Integer),
--R      PositiveInteger) -> Polynomial(Integer) 
--R   mycoeff will cache all previously computed values.
--R
--R   (35)  1
--R                                                    Type: Polynomial(Integer)
--E 203

--S 204 of 222
--gain:=draw(sin(x),x=-%pi..%pi)
--E 204

--S 205 of 222
--write(gain,"gain","postscript")
--E 205

--S 206 of 222
--v1:=draw(sin x,x=0..%pi)
--E 206

--S 207 of 222
--v2:=draw(cos x,x=0..%pi)
--E 207

--S 208 of 222
--g2:=getGraph(v2,1)
--E 208

--S 209 of 222
--putgraph(v1,g2,2)
--E 209

--S 210 of 222
T:=Integer
--R 
--R
--R   (36)  Integer
--R                                                                 Type: Domain
--E 210

--S 211 of 222
a:=6
--R 
--R
--R   (37)  6
--R                                                        Type: PositiveInteger
--E 211

--S 212 of 222
ofile:File T := open("name.lsp"::FileName,"output")
--R 
--R
--R   (38)  "name.lsp"
--R                                                          Type: File(Integer)
--E 212

--S 213 of 222
write!(ofile,a)
--R 
--R
--R   (39)  6
--R                                                        Type: PositiveInteger
--E 213

--S 214 of 222
close! ofile
--R 
--R
--R   (40)  "name.lsp"
--R                                                          Type: File(Integer)
--E 214

--S 215 of 222
b:=0
--R 
--R
--R   (41)  0
--R                                                     Type: NonNegativeInteger
--E 215

--S 216 of 222
ifile:File T := open("name.lsp"::FileName,"input")
--R 
--R
--R   (42)  "name.lsp"
--R                                                          Type: File(Integer)
--E 216

--S 217 of 222
b:=read! ifile
--R 
--R
--R   (43)  6
--R                                                        Type: PositiveInteger
--E 217

--S 218 of 222
close! ifile
--R 
--R
--R   (44)  "name.lsp"
--R                                                          Type: File(Integer)
--E 218

--S 219 of 222
b
--R 
--R
--R   (45)  6
--R                                                        Type: PositiveInteger
--E 219

)clear all

--S 220 of 222
a:List Polynomial Integer := [1+x,x^2]
--R 
--R
--R                2
--R   (1)  [x + 1,x ]
--R                                              Type: List(Polynomial(Integer))
--E 220

--S 221 of 222
a::InputForm
--R 
--R
--R   (2)  (construct (+ x 1) (** x 2))
--R                                                              Type: InputForm
--E 221

--S 222 of 222
unparse(a::InputForm)
--R 
--R
--R   (3)  "[x+1,x^2]"
--R                                                                 Type: String
--E 222

)spool 
)quit
\end{chunk}
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
