\documentclass{article}
\usepackage{axiom}
\setlength{\textwidth}{400pt}
\begin{document}
\title{\$SPAD/src/input free.input}
\author{Timothy Daly and Ralf Hemmecke}
\maketitle
\begin{abstract}
We expect that $-b < z < a < b$
\end{abstract}
\eject
\tableofcontents
\eject
\begin{chunk}{*}
)set break resume
)sys rm -f free.output
)spool free.output
)set message test on
)set message auto off
)clear all
 
--S 1 of 21
Z2:=FreeAbelianGroup Symbol
--R
--R   (1)  FreeAbelianGroup(Symbol)
--R                                                                 Type: Domain
--E 1

--S 2 of 21
a:=a::FreeAbelianGroup Symbol
--R
--R   (2)  a
--R                                               Type: FreeAbelianGroup(Symbol)
--E 2

--S 3 of 21
b:=b::FreeAbelianGroup Symbol
--R
--R   (3)  b
--R                                               Type: FreeAbelianGroup(Symbol)
--E 3

--S 4 of 21
z:=0::FreeAbelianGroup Symbol
--R
--R   (4)  0
--R                                               Type: FreeAbelianGroup(Symbol)
--E 4

--S 5 of 21
a < -b
--R
--R   (5)  false
--R                                                                Type: Boolean
--E 5

--S 6 of 21
-b < z
--R
--R   (6)  true
--R                                                                Type: Boolean
--E 6

--S 7 of 21
z < a
--R
--R   (7)  true
--R                                                                Type: Boolean
--E 7

--S 8 of 21
a < b
--R
--R   (8)  true
--R                                                                Type: Boolean
--E 8

--S 9 of 21
)clear all

Z ==> Integer
--R 
--R                                                                   Type: Void
--E 9

--S 10 of 21
M ==> Matrix Z
--R 
--R                                                                   Type: Void
--E 10

--S 11 of 21
A ==> FreeAbelianGroup(M)
--R 
--R                                                                   Type: Void
--E 11

--S 12 of 21
m1:=matrix [[1,2],[3,4]]
--R 
--R
--R        +1  2+
--R   (4)  |    |
--R        +3  4+
--R                                                        Type: Matrix(Integer)
--E 12

--S 13 of 21
m2:=matrix [[8,3]]
--R 
--R
--R   (5)  [8  3]
--R                                                        Type: Matrix(Integer)
--E 13

--S 14 of 21
m3:=matrix [[6],[7]]
--R 
--R
--R        +6+
--R   (6)  | |
--R        +7+
--R                                                        Type: Matrix(Integer)
--E 14

--S 15 of 21
a1:=m1::A
--R 
--R
--R        +1  2+
--R   (7)  |    |
--R        +3  4+
--R                                      Type: FreeAbelianGroup(Matrix(Integer))
--E 15

--S 16 of 21
a2:=m2::A
--R 
--R
--R   (8)  [8  3]
--R                                      Type: FreeAbelianGroup(Matrix(Integer))
--E 16

--S 17 of 21
a3:=m3::A
--R 
--R
--R        +6+
--R   (9)  | |
--R        +7+
--R                                      Type: FreeAbelianGroup(Matrix(Integer))
--E 17

--S 18 of 21
x1:=2*a1+a2
--R 
--R
--R                   +1  2+
--R   (10)  [8  3] + 2|    |
--R                   +3  4+
--R                                      Type: FreeAbelianGroup(Matrix(Integer))
--E 18

--S 19 of 21
x2:=3*a1-5*a3
--R 
--R
--R            +6+    +1  2+
--R   (11)  - 5| | + 3|    |
--R            +7+    +3  4+
--R                                      Type: FreeAbelianGroup(Matrix(Integer))
--E 19

--S 20 of 21
x1+x2
--R 
--R
--R            +6+             +1  2+
--R   (12)  - 5| | + [8  3] + 5|    |
--R            +7+             +3  4+
--R                                      Type: FreeAbelianGroup(Matrix(Integer))
--E 20

--S 21 of 21
)show FreeAbelianGroup
--R 
--R FreeAbelianGroup(S: SetCategory)  is a domain constructor
--R Abbreviation for FreeAbelianGroup is FAGROUP 
--R This constructor is not exposed in this frame.
--R Issue )edit bookvol10.3.pamphlet to see algebra source code for FAGROUP 
--R
--R------------------------------- Operations --------------------------------
--R ?*? : (Integer,S) -> %                ?*? : (%,Integer) -> %
--R ?*? : (Integer,%) -> %                ?*? : (NonNegativeInteger,%) -> %
--R ?*? : (PositiveInteger,%) -> %        ?+? : (S,%) -> %
--R ?+? : (%,%) -> %                      ?-? : (%,%) -> %
--R -? : % -> %                           ?=? : (%,%) -> Boolean
--R 0 : () -> %                           coefficient : (S,%) -> Integer
--R coerce : S -> %                       coerce : % -> OutputForm
--R hash : % -> SingleInteger             latex : % -> String
--R mapGen : ((S -> S),%) -> %            max : (%,%) -> % if S has ORDSET
--R min : (%,%) -> % if S has ORDSET      nthCoef : (%,Integer) -> Integer
--R nthFactor : (%,Integer) -> S          retract : % -> S
--R sample : () -> %                      size : % -> NonNegativeInteger
--R zero? : % -> Boolean                  ?~=? : (%,%) -> Boolean
--R ?<? : (%,%) -> Boolean if S has ORDSET
--R ?<=? : (%,%) -> Boolean if S has ORDSET
--R ?>? : (%,%) -> Boolean if S has ORDSET
--R ?>=? : (%,%) -> Boolean if S has ORDSET
--R highCommonTerms : (%,%) -> % if Integer has OAMON
--R mapCoef : ((Integer -> Integer),%) -> %
--R retractIfCan : % -> Union(S,"failed")
--R subtractIfCan : (%,%) -> Union(%,"failed")
--R terms : % -> List(Record(gen: S,exp: Integer))
--R
--E 21

)spool 
)lisp (bye)
 
\end{chunk}
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
