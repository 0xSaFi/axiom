\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/input unit-i-funsel.input}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\begin{chunk}{*}
)set break resume
)sys rm -f unit-i-funsel.output
)spool unit-i-funsel.output
)set message test on
)set message auto off
)clear all
)lisp (setq *print-level* 3)

-- these do not have unit tests yet
)lisp (trace |sayFunctionSelection|)
)lisp (trace |sayFunctionSelectionResult|)
)lisp (trace |selectMostGeneralMm|)
)lisp (trace |evalMmFreeFunction|)
)lisp (trace |printMms|)

)lisp (trace |allOrMatchingMms|)
)lisp (trace |constructSubst|)
)lisp (trace |findFunctionInDomain|)
)lisp (trace |findFunctionInDomain1|)
)lisp (trace |hasCaty|)
)lisp (trace |isEqualOrSubDomain|)
)lisp (trace |isHomogeneousList|)
)lisp (trace |isPartialMode|)
)lisp (trace |matchMmCond|)
)lisp (trace |matchMmSig|)
)lisp (trace |matchMmSigTar|)
)lisp (trace |ofCategory|)
)lisp (trace |selectMms2|)

--S 1 of 31
l := [1,4,2,-6,0,3,5,4,2,3]
--R 
--R  1> (|isPartialMode| NIL)
--R  <1 (|isPartialMode| NIL)
--R  1> (|ofCategory| (|Integer|) (|Ring|))
--R    2> (|hasCaty| (|Integer|) (|Ring|) NIL)
--R    <2 (|hasCaty| NIL)
--R  <1 (|ofCategory| T)
--R  1> (|ofCategory| (|Integer|) (|Ring|))
--R    2> (|hasCaty| (|Integer|) (|Ring|) NIL)
--R    <2 (|hasCaty| NIL)
--R  <1 (|ofCategory| T)
--R  1> (|ofCategory| (|Integer|) (|Ring|))
--R    2> (|hasCaty| (|Integer|) (|Ring|) NIL)
--R    <2 (|hasCaty| NIL)
--R  <1 (|ofCategory| T)
--R  1> (|isPartialMode| NIL)
--R  <1 (|isPartialMode| NIL)
--R  1> (|isEqualOrSubDomain| (|PositiveInteger|) (|Integer|))
--R  <1 (|isEqualOrSubDomain| (|PositiveInteger|))
--R  1> (|isEqualOrSubDomain| (|PositiveInteger|) (|Integer|))
--R  <1 (|isEqualOrSubDomain| (|PositiveInteger|))
--R  1> (|isEqualOrSubDomain| (|PositiveInteger|) (|Integer|))
--R  <1 (|isEqualOrSubDomain| (|PositiveInteger|))
--R  1> (|isEqualOrSubDomain| (|NonNegativeInteger|) (|Integer|))
--R  <1 (|isEqualOrSubDomain| (|NonNegativeInteger| |PositiveInteger|))
--R  1> (|isEqualOrSubDomain| (|PositiveInteger|) (|Integer|))
--R  <1 (|isEqualOrSubDomain| (|PositiveInteger|))
--R  1> (|isEqualOrSubDomain| (|PositiveInteger|) (|Integer|))
--R  <1 (|isEqualOrSubDomain| (|PositiveInteger|))
--R  1> (|isEqualOrSubDomain| (|PositiveInteger|) (|Integer|))
--R  <1 (|isEqualOrSubDomain| (|PositiveInteger|))
--R  1> (|isEqualOrSubDomain| (|PositiveInteger|) (|Integer|))
--R  <1 (|isEqualOrSubDomain| (|PositiveInteger|))
--R  1> (|isEqualOrSubDomain| (|PositiveInteger|) (|Integer|))
--R  <1 (|isEqualOrSubDomain| (|PositiveInteger|))
--R
--R  1> (|isEqualOrSubDomain| (|List| (|Integer|)) (|OutputForm|))
--R  <1 (|isEqualOrSubDomain| NIL)
--R  1> (|selectMms2| |coerce| (|OutputForm|) ((|List| #)) ((|List| #)) NIL)
--R    2> (|isPartialMode| (|OutputForm|))
--R    <2 (|isPartialMode| NIL)
--R    2> (|isPartialMode| (|OutputForm|))
--R    <2 (|isPartialMode| NIL)
--R    2> (|findFunctionInDomain| |coerce| (|List| (|Integer|)) (|OutputForm|) ((|List| #)) ((|List| #)) NIL NIL)
--R      3> (|constructSubst| (|List| (|Integer|)))
--R      <3 (|constructSubst| ((|#1| |Integer|) ($ |List| #)))
--R      3> (|isHomogeneousList| ((|List| #)))
--R      <3 (|isHomogeneousList| T)
--R      3> (|isHomogeneousList| ($))
--R      <3 (|isHomogeneousList| T)
--R      3> (|allOrMatchingMms| ((# NIL # ELT)) ((|List| #)) (|OutputForm|) (|List| (|Integer|)))
--R      <3 (|allOrMatchingMms| ((# NIL # ELT)))
--R      3> (|findFunctionInDomain1| ((# $) NIL (|has| |#1| #) ELT) |coerce| (|OutputForm|) ((|List| #)) ((|List| #)) ((|#1| |Integer|) ($ |List| #)))
--R        4> (|matchMmCond| (|has| (|Integer|) (|SetCategory|)))
--R          5> (|hasCaty| (|Integer|) (|SetCategory|) NIL)
--R          <5 (|hasCaty| NIL)
--R        <4 (|matchMmCond| T)
--R        4> (|matchMmSig| ((# #) NIL (|has| # #) ELT) (|OutputForm|) ((|List| #)) ((|List| #)))
--R          5> (|isEqualOrSubDomain| (|List| (|Integer|)) (|List| (|Integer|)))
--R          <5 (|isEqualOrSubDomain| T)
--R          5> (|matchMmSigTar| (|OutputForm|) (|OutputForm|))
--R            6> (|isEqualOrSubDomain| (|OutputForm|) (|OutputForm|))
--R            <6 (|isEqualOrSubDomain| T)
--R          <5 (|matchMmSigTar| T)
--R        <4 (|matchMmSig| T)
--R      <3 (|findFunctionInDomain1| ((# # #)))
--R      3> (|allOrMatchingMms| NIL ((|List| #)) (|OutputForm|) (|List| (|Integer|)))
--R      <3 (|allOrMatchingMms| NIL)
--R    <2 (|findFunctionInDomain| ((# # #)))
--R    2> (|findFunctionInDomain| |coerce| (|OutputForm|) (|OutputForm|) ((|List| #)) ((|List| #)) NIL NIL)
--R      3> (|constructSubst| (|OutputForm|))
--R      <3 (|constructSubst| (($ |OutputForm|)))
--R      3> (|isHomogeneousList| ((|List| #)))
--R      <3 (|isHomogeneousList| T)
--R      3> (|isHomogeneousList| ($))
--R      <3 (|isHomogeneousList| T)
--R      3> (|allOrMatchingMms| ((# 18 T ELT)) ((|List| #)) (|OutputForm|) (|OutputForm|))
--R      <3 (|allOrMatchingMms| ((# 18 T ELT)))
--R      3> (|findFunctionInDomain1| ((# $) 18 T ELT) |coerce| (|OutputForm|) ((|List| #)) ((|List| #)) (($ |OutputForm|)))
--R        4> (|matchMmCond| T)
--R        <4 (|matchMmCond| T)
--R        4> (|matchMmSig| ((# #) 18 T ELT) (|OutputForm|) ((|List| #)) ((|List| #)))
--R          5> (|isEqualOrSubDomain| (|List| (|Integer|)) (|OutputForm|))
--R          <5 (|isEqualOrSubDomain| NIL)
--R        <4 (|matchMmSig| NIL)
--R      <3 (|findFunctionInDomain1| NIL)
--R      3> (|allOrMatchingMms| NIL ((|List| #)) (|OutputForm|) (|OutputForm|))
--R      <3 (|allOrMatchingMms| NIL)
--R    <2 (|findFunctionInDomain| NIL)
--R    2> (|findFunctionInDomain| |coerce| (|Integer|) (|OutputForm|) ((|List| #)) ((|List| #)) NIL NIL)
--R      3> (|constructSubst| (|Integer|))
--R      <3 (|constructSubst| (($ |Integer|)))
--R      3> (|isHomogeneousList| ((|List| #)))
--R      <3 (|isHomogeneousList| T)
--R      3> (|isHomogeneousList| ($))
--R      <3 (|isHomogeneousList| T)
--R      3> (|isHomogeneousList| ((|Integer|)))
--R      <3 (|isHomogeneousList| T)
--R      3> (|isHomogeneousList| ($))
--R      <3 (|isHomogeneousList| T)
--R      3> (|isHomogeneousList| ((|Integer|)))
--R      <3 (|isHomogeneousList| T)
--R      3> (|allOrMatchingMms| ((# 38 T ELT) (# NIL T ELT) (# 38 T ELT) (# 37 T ELT)) ((|List| #)) (|OutputForm|) (|Integer|))
--R      <3 (|allOrMatchingMms| ((# 38 T ELT) (# NIL T ELT) (# 38 T ELT) (# 37 T ELT)))
--R      3> (|findFunctionInDomain1| (($ #) 38 T ELT) |coerce| (|OutputForm|) ((|List| #)) ((|List| #)) (($ |Integer|)))
--R        4> (|matchMmCond| T)
--R        <4 (|matchMmCond| T)
--R        4> (|matchMmSig| ((# #) 38 T ELT) (|OutputForm|) ((|List| #)) ((|List| #)))
--R          5> (|isEqualOrSubDomain| (|List| (|Integer|)) (|Integer|))
--R          <5 (|isEqualOrSubDomain| NIL)
--R        <4 (|matchMmSig| NIL)
--R      <3 (|findFunctionInDomain1| NIL)
--R      3> (|findFunctionInDomain1| (($ $) NIL T ELT) |coerce| (|OutputForm|) ((|List| #)) ((|List| #)) (($ |Integer|)))
--R        4> (|matchMmCond| T)
--R        <4 (|matchMmCond| T)
--R        4> (|matchMmSig| ((# #) NIL T ELT) (|OutputForm|) ((|List| #)) ((|List| #)))
--R          5> (|isEqualOrSubDomain| (|List| (|Integer|)) (|Integer|))
--R          <5 (|isEqualOrSubDomain| NIL)
--R        <4 (|matchMmSig| NIL)
--R      <3 (|findFunctionInDomain1| NIL)
--R      3> (|findFunctionInDomain1| (($ #) 38 T ELT) |coerce| (|OutputForm|) ((|List| #)) ((|List| #)) (($ |Integer|)))
--R        4> (|matchMmCond| T)
--R        <4 (|matchMmCond| T)
--R        4> (|matchMmSig| ((# #) 38 T ELT) (|OutputForm|) ((|List| #)) ((|List| #)))
--R          5> (|isEqualOrSubDomain| (|List| (|Integer|)) (|Integer|))
--R          <5 (|isEqualOrSubDomain| NIL)
--R        <4 (|matchMmSig| NIL)
--R      <3 (|findFunctionInDomain1| NIL)
--R      3> (|findFunctionInDomain1| ((# $) 37 T ELT) |coerce| (|OutputForm|) ((|List| #)) ((|List| #)) (($ |Integer|)))
--R        4> (|matchMmCond| T)
--R        <4 (|matchMmCond| T)
--R        4> (|matchMmSig| ((# #) 37 T ELT) (|OutputForm|) ((|List| #)) ((|List| #)))
--R          5> (|isEqualOrSubDomain| (|List| (|Integer|)) (|Integer|))
--R          <5 (|isEqualOrSubDomain| NIL)
--R        <4 (|matchMmSig| NIL)
--R      <3 (|findFunctionInDomain1| NIL)
--R      3> (|allOrMatchingMms| NIL ((|List| #)) (|OutputForm|) (|Integer|))
--R      <3 (|allOrMatchingMms| NIL)
--R    <2 (|findFunctionInDomain| NIL)
--R  <1 (|selectMms2| ((# # #)))
--R   (1)  [1,4,2,- 6,0,3,5,4,2,3]
--R                                                           Type: List Integer
--E 1

)lisp (untrace)
 
)lisp (trace |altTypeOf|)
)lisp (trace |argCouldBelongToSubdomain|)
)lisp (trace |CONTAINEDisDomain|)
)lisp (trace |defaultTarget|)
)lisp (trace |getLocalMms|)
)lisp (trace |getOpArgTypes|)
)lisp (trace |getOpArgTypes1|)
)lisp (trace |orderMms|)
)lisp (trace |selectLocalMms|)
)lisp (trace |selectMms|)

--S 2 of 31
m := list 555555
--R 
--I  1> (|selectMms| #<vector 086b116c> (#<vector 086b1134>) NIL)
--I    2> (|getOpArgTypes| |list| (#<vector 086b1134>))
--I      3> (|getOpArgTypes1| |list| (#<vector 086b1134>))
--R        4> (|argCouldBelongToSubdomain| |list| 1)
--R          5> (|CONTAINEDisDomain| *1 (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|CONTAINEDisDomain| *1 (|isDomain| *2 (|List| #)))
--R            <6 (|CONTAINEDisDomain| NIL)
--R            6> (|CONTAINEDisDomain| *1 (|isDomain| *1 (|Symbol|)))
--R            <6 (|CONTAINEDisDomain| NIL)
--R          <5 (|CONTAINEDisDomain| NIL)
--R          5> (|CONTAINEDisDomain| *2 (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|CONTAINEDisDomain| *2 (|ofCategory| *1 (|ListAggregate| *2)))
--R            <6 (|CONTAINEDisDomain| NIL)
--R            6> (|CONTAINEDisDomain| *2 (|ofCategory| *2 (|Type|)))
--R            <6 (|CONTAINEDisDomain| NIL)
--R          <5 (|CONTAINEDisDomain| NIL)
--I        <4 (|argCouldBelongToSubdomain| #<vector 086b1118>)
--R      <3 (|getOpArgTypes1| ((|PositiveInteger|)))
--R    <2 (|getOpArgTypes| ((|PositiveInteger|)))
--I    2> (|altTypeOf| (|PositiveInteger|) #<vector 086b1134> (|PositiveInteger|))
--R    <2 (|altTypeOf| (|Integer|))
--I    2> (|defaultTarget| #<vector 086b116c> |list| 1 ((|PositiveInteger|)))
--R    <2 (|defaultTarget| (|List| (|PositiveInteger|)))
--I    2> (|selectLocalMms| #<vector 086b116c> |list| ((|PositiveInteger|)) (|List| (|PositiveInteger|)))
--R      3> (|getLocalMms| |list| ((|PositiveInteger|)) (|List| (|PositiveInteger|)))
--R      <3 (|getLocalMms| NIL)
--R    <2 (|selectLocalMms| NIL)
--R    2> (|orderMms| |list| ((# # #)) ((|PositiveInteger|)) ((|Integer|)) (|List| (|PositiveInteger|)))
--R    <2 (|orderMms| ((# # #)))
--R  <1 (|selectMms| ((# # #)))
--R
--R  1> (|orderMms| |coerce| ((# # #)) ((|List| #)) ((|List| #)) (|OutputForm|))
--R  <1 (|orderMms| ((# # #)))
--R   (2)  [555555]
--R                                                   Type: List PositiveInteger
--E 2

)lisp (untrace)
 
)lisp (trace |getOpArgTypes,f|)

--S 3 of 31
concat(5,l)
--R 
--R  1> (|getOpArgTypes,f| (|PositiveInteger|) |concat|)
--R  <1 (|getOpArgTypes,f| (|PositiveInteger|))
--R  1> (|getOpArgTypes,f| (|List| (|Integer|)) |concat|)
--R  <1 (|getOpArgTypes,f| (|List| (|Integer|)))
--R
--R   (3)  [5,1,4,2,- 6,0,3,5,4,2,3]
--R                                                           Type: List Integer
--E 3

)lisp (untrace)
 
)lisp (trace |coerceTypeArgs|)
)lisp (trace |containsVars|)
)lisp (trace |containsVars1|)
)lisp (trace |defaultTypeForCategory|)
)lisp (trace |domArg2|)
)lisp (trace |evalMm|)
)lisp (trace |evalMmCat|)
)lisp (trace |evalMmCat1|)
)lisp (trace |evalMmCond|)
)lisp (trace |evalMmCond0|)
)lisp (trace |evalMmDom|)
)lisp (trace |evalMmStack|)
)lisp (trace |evalMmStackInner|)
)lisp (trace |fixUpTypeArgs|)
)lisp (trace |hasCate|)
)lisp (trace |hasCate1|)
)lisp (trace |hasCateSpecial|)
)lisp (trace |hasCateSpecialNew|)
)lisp (trace |matchTypes|)
)lisp (trace |mkDomPvar|)
)lisp (trace |mmCatComp|)
)lisp (trace |noSharpCallsHere|)
)lisp (trace |orderMmCatStack|)
)lisp (trace |replaceSharpCalls|)
)lisp (trace |selectMmsGen|)
)lisp (trace |selectMmsGen,exact?|)
)lisp (trace |selectMmsGen,matchMms|)
)lisp (trace |filterModemapsFromPackages|)
)lisp (trace |unifyStruct|)
)lisp (trace |unifyStructVar|)

--S 4 of 31
concat(m,l)
--R 
--R  1> (|selectMmsGen| |coerce| (|List| (|Integer|)) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R    2> (|filterModemapsFromPackages|ositiveInteger" "List") |coerce|)
--R    <2 (|filterModemapsFromPackages| ((# #) (# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #)))
--R    2> (|selectMmsGen,exact?| ((# #) (# #)) (|List| (|Integer|)) ((|PositiveInteger|)))
--R    <2 (|selectMmsGen,exact?| (NIL (# #)))
--R    2> (|selectMmsGen,matchMms| ((# #) (# #)) |coerce| (|List| (|Integer|)) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|DataList| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |DataList| *3) (*2 |List| *3)))
--R            6> (|containsVars| (|DataList| *3))
--R              7> (|containsVars1| (|DataList| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|DataList| *3))
--R              7> (|containsVars1| (|DataList| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|DataList|))
--R              7> (|containsVars1| (|DataList|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|DataList| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |DataList| *3) (*2 |List| *3)))
--R            6> (|containsVars| (|DataList| *3))
--R              7> (|containsVars1| (|DataList| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|DataList| *3))
--R              7> (|containsVars1| (|DataList| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|DataList|))
--R              7> (|containsVars1| (|DataList|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R    <2 (|selectMmsGen,matchMms| NIL)
--R    2> (|selectMmsGen,exact?||List| (|Integer|)) ((|PositiveInteger|)))
--R    <2 (|selectMmsGen,exact?| (NIL (# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #)))
--R    2> (|selectMmsGen,matchMms||coerce| (|List| (|Integer|)) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|XFreeAlgebra| *2 *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R                8> (|mmCatComp| (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *1 (|XFreeAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *1 (|XFreeAlgebra| *2 *3)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|XFreeAlgebra| *2 *3)) |coerce| NIL)
--R                8> (|hasCate| *1 (|XFreeAlgebra| *2 *3) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|XFreeAlgebra| *2 *3) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|XFreeAlgebra| *2 *3) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|XFreeAlgebra| *2 *3) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|XFreeAlgebra| *2 *3) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|XFreeAlgebra| *2 *3) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|OrderedSet|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|OrderedSet|) NIL)
--R                  9> (|hasCate1| (|PositiveInteger|) (|OrderedSet|) NIL *2)
--R                    10> (|hasCate| (|PositiveInteger|) (|OrderedSet|) NIL)
--R                    <10 (|hasCate| NIL)
--R                  <9 (|hasCate1| NIL)
--R                <8 (|hasCate| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *3 (|Ring|)) |coerce| NIL)
--R                8> (|hasCate| *3 (|Ring|) NIL)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|Ring|) NIL)
--R                <8 (|defaultTypeForCategory| (|Integer|))
--R              <7 (|evalMmCat1| ((*3 |Integer|)))
--R            <6 (|evalMmCat| ((*3 |Integer|)))
--R          <5 (|evalMmCond0| ((*3 |Integer|)))
--R        <4 (|evalMmCond| ((*3 |Integer|)))
--R        4> (|fixUpTypeArgs| ((*3 |Integer|)))
--R          5> (|replaceSharpCalls| (|Integer|))
--R            6> (|noSharpCallsHere| (|Integer|))
--R            <6 (|noSharpCallsHere| T)
--R          <5 (|replaceSharpCalls| (|Integer|))
--R        <4 (|fixUpTypeArgs| ((*3 |Integer|)))
--R        4> (|containsVars| ((|List| #) (|List| #) (|PositiveInteger|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|PositiveInteger|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|PositiveInteger|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|XAlgebra| *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *1 (|XAlgebra| *2)) (|ofCategory| *2 (|Ring|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|Ring|)) (|ofCategory| *1 (|XAlgebra| *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|XAlgebra| *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|XAlgebra| *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|XAlgebra| *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|XAlgebra| *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|XAlgebra| *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|XAlgebra| *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|XAlgebra| *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|Ring|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|Ring|) NIL)
--R                  9> (|hasCate1| (|PositiveInteger|) (|Ring|) NIL *2)
--R                    10> (|hasCate| (|PositiveInteger|) (|Ring|) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *2 (|PositiveInteger|) (|Ring|) NIL)
--R                    10> (|hasCate| (|Integer|) (|Ring|) ((*2 |Integer|)))
--R                    <10 (|hasCate| ((*2 |Integer|)))
--R                  <9 (|hasCateSpecial| ((*2 |Integer|)))
--R                <8 (|hasCate| ((*2 |Integer|)))
--R              <7 (|evalMmCat1| ((*2 |Integer|)))
--R            <6 (|evalMmCat| ((*2 |Integer|)))
--R          <5 (|evalMmCond0| ((*2 |Integer|)))
--R        <4 (|evalMmCond| ((*2 |Integer|)))
--R        4> (|fixUpTypeArgs| ((*2 |Integer|)))
--R          5> (|coerceTypeArgs| (|PositiveInteger|) (|Integer|) ((*2 |Integer|)))
--R          <5 (|coerceTypeArgs| (|Integer|))
--R        <4 (|fixUpTypeArgs| ((*2 |Integer|)))
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Void|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Void|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|Void|))
--R              7> (|containsVars1| (|Void|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofType| *4 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofType| *4 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|UnivariatePolynomial| *4 *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |UnivariateTaylorSeriesCZero| *3 *4) (*2 |UnivariatePolynomial| *4 *3)))
--R            6> (|containsVars| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              7> (|containsVars1| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              7> (|containsVars1| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateTaylorSeriesCZero| *4))
--R              7> (|containsVars1| (|UnivariateTaylorSeriesCZero| *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofType| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofType| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Variable| *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |UnivariateTaylorSeriesCZero| *3 *4) (*2 |Variable| *4)))
--R            6> (|containsVars| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              7> (|containsVars1| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              7> (|containsVars1| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateTaylorSeriesCZero| *4))
--R              7> (|containsVars1| (|UnivariateTaylorSeriesCZero| *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3)) (|ofCategory| *3 (|Ring|)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3)) (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3)) |coerce| NIL)
--R                8> (|hasCate| *2 (|UnivariateLaurentSeriesCategory| *3) NIL)
--R                  9> (|hasCate1| (|PositiveInteger|) (|UnivariateLaurentSeriesCategory| *3) NIL *2)
--R                    10> (|hasCate| (|PositiveInteger|) (|UnivariateLaurentSeriesCategory| *3) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *2 (|PositiveInteger|) (|UnivariateLaurentSeriesCategory| *3) NIL)
--R                    10> (|hasCate| (|Integer|) (|UnivariateLaurentSeriesCategory| *3) ((*2 |Integer|)))
--R                    <10 (|hasCate| |failed|)
--R                    10> (|hasCateSpecialNew| *2 (|PositiveInteger|) (|UnivariateLaurentSeriesCategory| *3) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|UnivariateLaurentSeriesCategory| *3) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *3 (|Ring|)) |coerce| NIL)
--R                8> (|hasCate| *3 (|Ring|) NIL)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|Ring|) NIL)
--R                <8 (|defaultTypeForCategory| (|Integer|))
--R              <7 (|evalMmCat1| ((*3 |Integer|)))
--R            <6 (|evalMmCat| ((*3 |Integer|)))
--R          <5 (|evalMmCond0| ((*3 |Integer|)))
--R        <4 (|evalMmCond| ((*3 |Integer|)))
--R        4> (|fixUpTypeArgs| ((*3 |Integer|)))
--R          5> (|replaceSharpCalls| (|Integer|))
--R            6> (|noSharpCallsHere| (|Integer|))
--R            <6 (|noSharpCallsHere| T)
--R          <5 (|replaceSharpCalls| (|Integer|))
--R        <4 (|fixUpTypeArgs| ((*3 |Integer|)))
--R        4> (|containsVars| ((|List| #) (|List| #) (|PositiveInteger|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|PositiveInteger|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|PositiveInteger|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofType| *3 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofType| *3 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Variable| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|UnivariatePolynomial| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R            <6 (|evalMmDom| ((*1 |UnivariatePolynomial| *3 *4) (*2 |Variable| *3)))
--R            6> (|containsVars| (|UnivariatePolynomial| *3 *4))
--R              7> (|containsVars1| (|UnivariatePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariatePolynomial| *3 *4))
--R              7> (|containsVars1| (|UnivariatePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariatePolynomial| *3))
--R              7> (|containsVars1| (|UnivariatePolynomial| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Segment| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|UniversalSegment| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |UniversalSegment| *3) (*2 |Segment| *3)))
--R            6> (|containsVars| (|UniversalSegment| *3))
--R              7> (|containsVars1| (|UniversalSegment| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UniversalSegment| *3))
--R              7> (|containsVars1| (|UniversalSegment| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UniversalSegment|))
--R              7> (|containsVars1| (|UniversalSegment|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)) (|ofCategory| *3 (|Ring|)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)) (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|UnivariateLaurentSeriesConstructorCategory| *3 *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|UnivariateLaurentSeriesConstructorCategory| *3 *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|UnivariateLaurentSeriesConstructorCategory| *3 *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|UnivariateLaurentSeriesConstructorCategory| *3 *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|UnivariateLaurentSeriesConstructorCategory| *3 *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)) |coerce| NIL)
--R                8> (|hasCate| *2 (|UnivariateTaylorSeriesCategory| *3) NIL)
--R                  9> (|hasCate1| (|PositiveInteger|) (|UnivariateTaylorSeriesCategory| *3) NIL *2)
--R                    10> (|hasCate| (|PositiveInteger|) (|UnivariateTaylorSeriesCategory| *3) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *2 (|PositiveInteger|) (|UnivariateTaylorSeriesCategory| *3) NIL)
--R                    10> (|hasCate| (|Integer|) (|UnivariateTaylorSeriesCategory| *3) ((*2 |Integer|)))
--R                    <10 (|hasCate| |failed|)
--R                    10> (|hasCateSpecialNew| *2 (|PositiveInteger|) (|UnivariateTaylorSeriesCategory| *3) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|UnivariateTaylorSeriesCategory| *3) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *3 (|Ring|)) |coerce| NIL)
--R                8> (|hasCate| *3 (|Ring|) NIL)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|Ring|) NIL)
--R                <8 (|defaultTypeForCategory| (|Integer|))
--R              <7 (|evalMmCat1| ((*3 |Integer|)))
--R            <6 (|evalMmCat| ((*3 |Integer|)))
--R          <5 (|evalMmCond0| ((*3 |Integer|)))
--R        <4 (|evalMmCond| ((*3 |Integer|)))
--R        4> (|fixUpTypeArgs| ((*3 |Integer|)))
--R          5> (|replaceSharpCalls| (|Integer|))
--R            6> (|noSharpCallsHere| (|Integer|))
--R            <6 (|noSharpCallsHere| T)
--R          <5 (|replaceSharpCalls| (|Integer|))
--R        <4 (|fixUpTypeArgs| ((*3 |Integer|)))
--R        4> (|containsVars| ((|List| #) (|List| #) (|PositiveInteger|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|PositiveInteger|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|PositiveInteger|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|UnivariatePolynomial| # *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|UnivariateFormalPowerSeries| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |UnivariateFormalPowerSeries| *3) (*2 |UnivariatePolynomial| # *3)))
--R            6> (|containsVars| (|UnivariateFormalPowerSeries| *3))
--R              7> (|containsVars1| (|UnivariateFormalPowerSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateFormalPowerSeries| *3))
--R              7> (|containsVars1| (|UnivariateFormalPowerSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateFormalPowerSeries|))
--R              7> (|containsVars1| (|UnivariateFormalPowerSeries|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Variable| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|UnivariateFormalPowerSeries| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |UnivariateFormalPowerSeries| *3) (*2 |Variable| #)))
--R            6> (|containsVars| (|UnivariateFormalPowerSeries| *3))
--R              7> (|containsVars1| (|UnivariateFormalPowerSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateFormalPowerSeries| *3))
--R              7> (|containsVars1| (|UnivariateFormalPowerSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateFormalPowerSeries|))
--R              7> (|containsVars1| (|UnivariateFormalPowerSeries|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Symbol|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|TaylorSeries| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |TaylorSeries| *3) (*2 |Symbol|)))
--R            6> (|containsVars| (|TaylorSeries| *3))
--R              7> (|containsVars1| (|TaylorSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|TaylorSeries| *3))
--R              7> (|containsVars1| (|TaylorSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|TaylorSeries|))
--R              7> (|containsVars1| (|TaylorSeries|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Polynomial| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|TaylorSeries| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |TaylorSeries| *3) (*2 |Polynomial| *3)))
--R            6> (|containsVars| (|TaylorSeries| *3))
--R              7> (|containsVars1| (|TaylorSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|TaylorSeries| *3))
--R              7> (|containsVars1| (|TaylorSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|TaylorSeries|))
--R              7> (|containsVars1| (|TaylorSeries|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|TexFormat|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |TexFormat|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|TexFormat|))
--R              7> (|containsVars1| (|TexFormat|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|TexFormat|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|TexFormat1| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |TexFormat1| *3) (*2 |TexFormat|)))
--R            6> (|containsVars| (|TexFormat|))
--R              7> (|containsVars1| (|TexFormat|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Tableau| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |Tableau| *3) (*2 |OutputForm|)))
--R            6> (|containsVars| (|Tableau| *3))
--R              7> (|containsVars1| (|Tableau| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Tableau| *3))
--R              7> (|containsVars1| (|Tableau| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Tableau|))
--R              7> (|containsVars1| (|Tableau|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Table| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |SymbolTable|) (*2 |Table| # #)))
--R            6> (|containsVars| (|SymbolTable|))
--R              7> (|containsVars1| (|SymbolTable|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|String|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Symbol|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Symbol|) (*2 |String|)))
--R            6> (|containsVars| (|Symbol|))
--R              7> (|containsVars1| (|Symbol|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Symbol|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Switch|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Switch|) (*2 |Symbol|)))
--R            6> (|containsVars| (|Switch|))
--R              7> (|containsVars1| (|Switch|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Stream| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Stream| *3) (*2 |List| *3)))
--R            6> (|containsVars| (|Stream| *3))
--R              7> (|containsVars1| (|Stream| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Stream| *3))
--R              7> (|containsVars1| (|Stream| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Stream|))
--R              7> (|containsVars1| (|Stream|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Stack| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |Stack| *3) (*2 |OutputForm|)))
--R            6> (|containsVars| (|Stack| *3))
--R              7> (|containsVars1| (|Stack| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Stack| *3))
--R              7> (|containsVars1| (|Stack| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Stack|))
--R              7> (|containsVars1| (|Stack|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Character|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|StringAggregate|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Character|)))
--R            6> (|containsVars| (|Character|))
--R              7> (|containsVars1| (|Character|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|ofCategory| *1 #) (|ofCategory| *3 #) (|isDomain| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *3 #) (|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|ThreeSpaceCategory| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *3 #) (|isDomain| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *3 #) (|isDomain| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *3 #) (|isDomain| *2 #)))
--R            <6 (|evalMmDom| ((*2 |OutputForm|)))
--R            6> (|containsVars| (|OutputForm|))
--R              7> (|containsVars1| (|OutputForm|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Integer|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Integer|)))
--R            6> (|containsVars| (|Integer|))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|RationalFunction| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|IntegralDomain|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |RationalFunction| *3) (*2 |Fraction| #)))
--R            6> (|containsVars| (|Fraction| (|Polynomial| *3)))
--R              7> (|containsVars1| (|Fraction| (|Polynomial| *3)))
--R                8> (|containsVars1| (|Polynomial| *3))
--R                <8 (|containsVars1| T)
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Fraction| (|Polynomial| *3)))
--R              7> (|containsVars1| (|Fraction| (|Polynomial| *3)))
--R                8> (|containsVars1| (|Polynomial| *3))
--R                <8 (|containsVars1| T)
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Fraction|))
--R              7> (|containsVars1| (|Fraction|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|RetractableTo| *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *1 (|RetractableTo| *2)) (|ofCategory| *2 (|Type|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|Type|)) (|ofCategory| *1 (|RetractableTo| *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|RetractableTo| *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|RetractableTo| *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|RetractableTo| *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|RetractableTo| *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|RetractableTo| *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|RetractableTo| *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|RetractableTo| *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|Type|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|Type|) NIL)
--R                  9> (|hasCate1| (|PositiveInteger|) (|Type|) NIL *2)
--R                    10> (|hasCate| (|PositiveInteger|) (|Type|) NIL)
--R                    <10 (|hasCate| NIL)
--R                  <9 (|hasCate1| NIL)
--R                <8 (|hasCate| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| NIL)
--R          <5 (|evalMmCond0| NIL)
--R        <4 (|evalMmCond| NIL)
--R        4> (|fixUpTypeArgs| NIL)
--R        <4 (|fixUpTypeArgs| NIL)
--R        4> (|containsVars| ((|List| #) (|List| #) (|PositiveInteger|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|PositiveInteger|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|PositiveInteger|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *3 (|Exit|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|ResolveLatticeCompletion| *2)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|isDomain| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| ((*1 |ResolveLatticeCompletion| *2) (*3 |Exit|)))
--R            6> (|containsVars| (|Exit|))
--R              7> (|containsVars1| (|Exit|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Void|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|ResolveLatticeCompletion| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |ResolveLatticeCompletion| *3) (*2 |Void|)))
--R            6> (|containsVars| (|Void|))
--R              7> (|containsVars1| (|Void|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|RadixExpansion| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Integer|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |RadixExpansion| *3) (*2 |Fraction| #)))
--R            6> (|containsVars| (|RadixExpansion| *3))
--R              7> (|containsVars1| (|RadixExpansion| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|RadixExpansion| *3))
--R              7> (|containsVars1| (|RadixExpansion| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|RadixExpansion| *3))
--R              7> (|containsVars1| (|RadixExpansion| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Queue| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |Queue| *3) (*2 |OutputForm|)))
--R            6> (|containsVars| (|Queue| *3))
--R              7> (|containsVars1| (|Queue| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Queue| *3))
--R              7> (|containsVars1| (|Queue| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Queue|))
--R              7> (|containsVars1| (|Queue|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *3 (|Pi|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PiCoercions| *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|Join| # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #) (|ofCategory| *4 #)))
--R        <4 (|evalMmStack| ((# # # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #) (|ofCategory| *4 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #) (|ofCategory| *4 #)))
--R            6> (|evalMmDom| ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #) (|ofCategory| *4 #)))
--R            <6 (|evalMmDom| ((*1 |PiCoercions| *4) (*2 |Expression| *4) (*3 |Pi|)))
--R            6> (|containsVars| (|Expression| *4))
--R              7> (|containsVars1| (|Expression| *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Expression| *4))
--R              7> (|containsVars1| (|Expression| *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Expression|))
--R              7> (|containsVars1| (|Expression|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PartialFraction| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|EuclideanDomain|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |PartialFraction| *3) (*2 |Fraction| *3)))
--R            6> (|containsVars| (|PartialFraction| *3))
--R              7> (|containsVars1| (|PartialFraction| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PartialFraction| *3))
--R              7> (|containsVars1| (|PartialFraction| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PartialFraction|))
--R              7> (|containsVars1| (|PartialFraction|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|EuclideanDomain|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PartialFraction| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |PartialFraction| *3) (*2 |Fraction| #)))
--R            6> (|containsVars| (|PartialFraction| *3))
--R              7> (|containsVars1| (|PartialFraction| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PartialFraction| *3))
--R              7> (|containsVars1| (|PartialFraction| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PartialFraction|))
--R              7> (|containsVars1| (|PartialFraction|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Permutation| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Permutation| *3) (*2 |List| #)))
--R            6> (|containsVars| (|Permutation| *3))
--R              7> (|containsVars1| (|Permutation| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Permutation| *3))
--R              7> (|containsVars1| (|Permutation| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Permutation|))
--R              7> (|containsVars1| (|Permutation|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Permutation| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Permutation| *3) (*2 |List| *3)))
--R            6> (|containsVars| (|Permutation| *3))
--R              7> (|containsVars1| (|Permutation| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Permutation| *3))
--R              7> (|containsVars1| (|Permutation| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Permutation|))
--R              7> (|containsVars1| (|Permutation|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PermutationGroup| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |PermutationGroup| *3) (*2 |List| #)))
--R            6> (|containsVars| (|PermutationGroup| *3))
--R              7> (|containsVars1| (|PermutationGroup| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PermutationGroup| *3))
--R              7> (|containsVars1| (|PermutationGroup| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PermutationGroup|))
--R              7> (|containsVars1| (|PermutationGroup|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PermutationGroup| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |PermutationGroup| *3) (*2 |List| #)))
--R            6> (|containsVars| (|PermutationGroup| *3))
--R              7> (|containsVars1| (|PermutationGroup| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PermutationGroup| *3))
--R              7> (|containsVars1| (|PermutationGroup| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PermutationGroup|))
--R              7> (|containsVars1| (|PermutationGroup|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Tree| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PendantTree| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |PendantTree| *3) (*2 |Tree| *3)))
--R            6> (|containsVars| (|PendantTree| *3))
--R              7> (|containsVars1| (|PendantTree| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PendantTree| *3))
--R              7> (|containsVars1| (|PendantTree| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PendantTree|))
--R              7> (|containsVars1| (|PendantTree|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalPDEProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalPDEProblem|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|NumericalPDEProblem|))
--R              7> (|containsVars1| (|NumericalPDEProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # # # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalPDEProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalPDEProblem|) (*2 |Record| # # # # #)))
--R            6> (|containsVars| (|NumericalPDEProblem|))
--R              7> (|containsVars1| (|NumericalPDEProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *3 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PolynomialAN2Expression|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |PolynomialAN2Expression|) (*2 |Expression| #) (*3 |Fraction| #)))
--R            6> (|containsVars| (|Expression| (|Integer|)))
--R              7> (|containsVars1| (|Expression| (|Integer|)))
--R                8> (|containsVars1| (|Integer|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *3 (|Polynomial| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PolynomialAN2Expression|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |PolynomialAN2Expression|) (*2 |Expression| #) (*3 |Polynomial| #)))
--R            6> (|containsVars| (|Expression| (|Integer|)))
--R              7> (|containsVars1| (|Expression| (|Integer|)))
--R                8> (|containsVars1| (|Integer|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Color|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Palette|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Palette|) (*2 |Color|)))
--R            6> (|containsVars| (|Palette|))
--R              7> (|containsVars1| (|Palette|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Integer|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|OrdSetInts|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |OrdSetInts|) (*2 |Integer|)))
--R            6> (|containsVars| (|OrdSetInts|))
--R              7> (|containsVars1| (|OrdSetInts|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalOptimizationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalOptimizationProblem|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|NumericalOptimizationProblem|))
--R              7> (|containsVars1| (|NumericalOptimizationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # # # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalOptimizationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalOptimizationProblem|) (*2 |Record| # # # # #)))
--R            6> (|containsVars| (|NumericalOptimizationProblem|))
--R              7> (|containsVars1| (|NumericalOptimizationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalOptimizationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalOptimizationProblem|) (*2 |Record| # #)))
--R            6> (|containsVars| (|NumericalOptimizationProblem|))
--R              7> (|containsVars1| (|NumericalOptimizationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Union| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalOptimizationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalOptimizationProblem|) (*2 |Union| # #)))
--R            6> (|containsVars| (|NumericalOptimizationProblem|))
--R              7> (|containsVars1| (|NumericalOptimizationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Symbol|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|OpenMathErrorKind|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |OpenMathErrorKind|) (*2 |Symbol|)))
--R            6> (|containsVars| (|OpenMathErrorKind|))
--R              7> (|containsVars1| (|OpenMathErrorKind|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *3 #) (|ofType| *4 *3) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *3 #) (|ofType| *4 *3) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 *3))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|PartialDifferentialRing| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| ((*1 |OrdinaryDifferentialRing| *3 *2 *4)))
--R            6> (|containsVars| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              7> (|containsVars1| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              7> (|containsVars1| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|OrdinaryDifferentialRing| *4))
--R              7> (|containsVars1| (|OrdinaryDifferentialRing| *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofType| *4 *3)))
--R        4> (|evalMmStack| (AND (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofType| *4 *3)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|PartialDifferentialRing| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 *3))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |OrdinaryDifferentialRing| *3 *2 *4)))
--R            6> (|containsVars| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              7> (|containsVars1| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              7> (|containsVars1| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|OrdinaryDifferentialRing| *4))
--R              7> (|containsVars1| (|OrdinaryDifferentialRing| *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalODEProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalODEProblem|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|NumericalODEProblem|))
--R              7> (|containsVars1| (|NumericalODEProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # # # # # # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalODEProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalODEProblem|) (*2 |Record| # # # # # # # #)))
--R            6> (|containsVars| (|NumericalODEProblem|))
--R              7> (|containsVars1| (|NumericalODEProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|None|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NoneFunctions1| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |NoneFunctions1| *3) (*2 |None|)))
--R            6> (|containsVars| (|None|))
--R              7> (|containsVars1| (|None|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalIntegrationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalIntegrationProblem|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|NumericalIntegrationProblem|))
--R              7> (|containsVars1| (|NumericalIntegrationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # # # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalIntegrationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalIntegrationProblem|) (*2 |Record| # # # # #)))
--R            6> (|containsVars| (|NumericalIntegrationProblem|))
--R              7> (|containsVars1| (|NumericalIntegrationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalIntegrationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalIntegrationProblem|) (*2 |Record| # # # #)))
--R            6> (|containsVars| (|NumericalIntegrationProblem|))
--R              7> (|containsVars1| (|NumericalIntegrationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Union| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalIntegrationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalIntegrationProblem|) (*2 |Union| # #)))
--R            6> (|containsVars| (|NumericalIntegrationProblem|))
--R              7> (|containsVars1| (|NumericalIntegrationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Integer|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|NonAssociativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Integer|)))
--R            6> (|containsVars| (|Integer|))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *1 #) (|ofType| *3 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *1 #) (|ofType| *3 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MyUnivariatePolynomial| *3 *2)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|isDomain| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| ((*1 |MyUnivariatePolynomial| *3 *2)))
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3 *2))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3 *2))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3 *2))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3 *2))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofType| *3 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofType| *3 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Variable| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MyUnivariatePolynomial| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R            <6 (|evalMmDom| ((*1 |MyUnivariatePolynomial| *3 *4) (*2 |Variable| *3)))
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3 *4))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3 *4))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *4 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *4 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Polynomial| *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MyUnivariatePolynomial| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MyUnivariatePolynomial| *3 *4) (*2 |Polynomial| *4)))
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3 *4))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3 *4))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofType| *3 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofType| *3 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|Join| # # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MyExpression| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MyExpression| *3 *4) (*2 |Fraction| #)))
--R            6> (|containsVars| (|MyExpression| *3 *4))
--R              7> (|containsVars1| (|MyExpression| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyExpression| *3 *4))
--R              7> (|containsVars1| (|MyExpression| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyExpression| *3))
--R              7> (|containsVars1| (|MyExpression| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *3 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|String|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MathMLFormat|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MathMLFormat|) (*2 |String|) (*3 |OutputForm|)))
--R            6> (|containsVars| (|String|))
--R              7> (|containsVars1| (|String|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *3 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineInteger|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineInteger|) (*2 |Expression| #) (*3 |Expression| #)))
--R            6> (|containsVars| (|Expression| (|MachineInteger|)))
--R              7> (|containsVars1| (|Expression| (|MachineInteger|)))
--R                8> (|containsVars1| (|MachineInteger|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Float|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineFloat|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineFloat|) (*2 |Float|)))
--R            6> (|containsVars| (|MachineFloat|))
--R              7> (|containsVars1| (|MachineFloat|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|MachineInteger|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineFloat|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineFloat|) (*2 |MachineInteger|)))
--R            6> (|containsVars| (|MachineFloat|))
--R              7> (|containsVars1| (|MachineFloat|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Complex| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineComplex|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineComplex|) (*2 |Complex| #)))
--R            6> (|containsVars| (|MachineComplex|))
--R              7> (|containsVars1| (|MachineComplex|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Complex| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineComplex|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineComplex|) (*2 |Complex| #)))
--R            6> (|containsVars| (|MachineComplex|))
--R              7> (|containsVars1| (|MachineComplex|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Complex| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineComplex|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineComplex|) (*2 |Complex| #)))
--R            6> (|containsVars| (|MachineComplex|))
--R              7> (|containsVars1| (|MachineComplex|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Complex| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineComplex|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineComplex|) (*2 |Complex| #)))
--R            6> (|containsVars| (|MachineComplex|))
--R              7> (|containsVars1| (|MachineComplex|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Complex| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineComplex|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineComplex|) (*2 |Complex| #)))
--R            6> (|containsVars| (|MachineComplex|))
--R              7> (|containsVars1| (|MachineComplex|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *4 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *4 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|MatrixCategory| *3 *4 *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|FiniteLinearAggregate| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|FiniteLinearAggregate| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *4 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *4 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *4 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *4 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *4 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *1 (|MatrixCategory| *3 *4 *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *2 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|Ring|)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *1 (|MatrixCategory| *3 *4 *2)) (|ofCategory| *2 (|FiniteLinearAggregate| *3)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|FiniteLinearAggregate| *3)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *2)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *2 (|FiniteLinearAggregate| *3)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|FiniteLinearAggregate| *3)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|Ring|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *4 #) (|ofCategory| *3 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|MatrixCategory| *3 *4 *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|MatrixCategory| *3 *4 *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|MatrixCategory| *3 *4 *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|MatrixCategory| *3 *4 *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|MatrixCategory| *3 *4 *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|MatrixCategory| *3 *4 *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|MatrixCategory| *3 *4 *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|FiniteLinearAggregate| *3)) |coerce| NIL)
--R                8> (|hasCate| *2 (|FiniteLinearAggregate| *3) NIL)
--R                  9> (|hasCate1| (|PositiveInteger|) (|FiniteLinearAggregate| *3) NIL *2)
--R                    10> (|hasCate| (|PositiveInteger|) (|FiniteLinearAggregate| *3) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *2 (|PositiveInteger|) (|FiniteLinearAggregate| *3) NIL)
--R                    10> (|hasCate| (|Integer|) (|FiniteLinearAggregate| *3) ((*2 |Integer|)))
--R                    <10 (|hasCate| |failed|)
--R                    10> (|hasCateSpecialNew| *2 (|PositiveInteger|) (|FiniteLinearAggregate| *3) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteLinearAggregate| *3) NIL)
--R                <8 (|defaultTypeForCategory| (|Vector| *3))
--R                8> (|containsVars| (|Vector| *3))
--R                  9> (|containsVars1| (|Vector| *3))
--R                  <9 (|containsVars1| T)
--R                <8 (|containsVars| T)
--R                8> (|containsVars| (|Vector| *3))
--R                  9> (|containsVars1| (|Vector| *3))
--R                  <9 (|containsVars1| T)
--R                <8 (|containsVars| T)
--R                8> (|containsVars| (|Vector|))
--R                  9> (|containsVars1| (|Vector|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars| NIL)
--R                8> (|containsVars| (|Integer|))
--R                  9> (|containsVars1| (|Integer|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars| NIL)
--R                8> (|containsVars| NIL)
--R                <8 (|containsVars| NIL)
--R                8> (|containsVars| *3)
--R                <8 (|containsVars| T)
--R                8> (|containsVars| (|Vector|))
--R                  9> (|containsVars1| (|Vector|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars| NIL)
--R                8> (|containsVars| ((|Integer|)))
--R                  9> (|containsVars1| ((|Integer|)))
--R                    10> (|containsVars1| (|Integer|))
--R                    <10 (|containsVars1| NIL)
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *4 (|FiniteLinearAggregate| *3)) |coerce| NIL)
--R                8> (|hasCate| *4 (|FiniteLinearAggregate| *3) NIL)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteLinearAggregate| *3) NIL)
--R                <8 (|defaultTypeForCategory| (|Vector| *3))
--R              <7 (|evalMmCat1| ((*4 |Vector| *3)))
--R              7> (|evalMmCat1| (|ofCategory| *3 (|Ring|)) |coerce| ((*4 |Vector| *3)))
--R                8> (|hasCate| *3 (|Ring|) ((*4 |Vector| *3)))
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|Ring|) ((*4 |Vector| *3)))
--R                <8 (|defaultTypeForCategory| (|Integer|))
--R              <7 (|evalMmCat1| ((*3 |Integer|)))
--R            <6 (|evalMmCat| ((*3 |Integer|) (*4 |Vector| *3)))
--R          <5 (|evalMmCond0| ((*3 |Integer|) (*4 |Vector| *3)))
--R        <4 (|evalMmCond| ((*3 |Integer|) (*4 |Vector| *3)))
--R        4> (|fixUpTypeArgs| ((*3 |Integer|) (*4 |Vector| *3)))
--R          5> (|replaceSharpCalls| (|Integer|))
--R            6> (|noSharpCallsHere| (|Integer|))
--R            <6 (|noSharpCallsHere| T)
--R          <5 (|replaceSharpCalls| (|Integer|))
--R          5> (|replaceSharpCalls| (|Vector| *3))
--R            6> (|noSharpCallsHere| (|Vector| *3))
--R              7> (|noSharpCallsHere| *3)
--R              <7 (|noSharpCallsHere| T)
--R            <6 (|noSharpCallsHere| T)
--R          <5 (|replaceSharpCalls| (|Vector| *3))
--R        <4 (|fixUpTypeArgs| ((*3 |Integer|) (*4 |Vector| *3)))
--R        4> (|containsVars| ((|List| #) (|List| #) (|PositiveInteger|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|PositiveInteger|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|PositiveInteger|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Mapping| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MappingPackage1| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |MappingPackage1| *3) (*2 |Mapping| *3)))
--R            6> (|containsVars| (|Mapping| *3))
--R              7> (|containsVars1| (|Mapping| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Mapping| *3))
--R              7> (|containsVars1| (|Mapping| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Mapping| *3))
--R              7> (|containsVars1| (|Mapping| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|PrimitiveArray| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|ThreeDimensionalMatrix| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |ThreeDimensionalMatrix| *3) (*2 |PrimitiveArray| #)))
--R            6> (|containsVars| (|ThreeDimensionalMatrix| *3))
--R              7> (|containsVars1| (|ThreeDimensionalMatrix| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|ThreeDimensionalMatrix| *3))
--R              7> (|containsVars1| (|ThreeDimensionalMatrix| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|ThreeDimensionalMatrix|))
--R              7> (|containsVars1| (|ThreeDimensionalMatrix|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|PrimitiveArray| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|ThreeDimensionalMatrix| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |ThreeDimensionalMatrix| *3) (*2 |PrimitiveArray| #)))
--R            6> (|containsVars| (|ThreeDimensionalMatrix| *3))
--R              7> (|containsVars1| (|ThreeDimensionalMatrix| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|ThreeDimensionalMatrix| *3))
--R              7> (|containsVars1| (|ThreeDimensionalMatrix| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|ThreeDimensionalMatrix|))
--R              7> (|containsVars1| (|ThreeDimensionalMatrix|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|AssociatedLieAlgebra| *3 *2)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|NonAssociativeAlgebra| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| ((*1 |AssociatedLieAlgebra| *3 *2)))
--R            6> (|containsVars| (|AssociatedLieAlgebra| *3 *2))
--R              7> (|containsVars1| (|AssociatedLieAlgebra| *3 *2))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|AssociatedLieAlgebra| *3 *2))
--R              7> (|containsVars1| (|AssociatedLieAlgebra| *3 *2))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|AssociatedLieAlgebra|))
--R              7> (|containsVars1| (|AssociatedLieAlgebra|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|LeftAlgebra| *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *1 (|LeftAlgebra| *2)) (|ofCategory| *2 (|Ring|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|Ring|)) (|ofCategory| *1 (|LeftAlgebra| *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|LeftAlgebra| *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|LeftAlgebra| *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|LeftAlgebra| *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|LeftAlgebra| *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|LeftAlgebra| *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|LeftAlgebra| *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|LeftAlgebra| *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|Ring|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|Ring|) NIL)
--R                  9> (|hasCate1| (|PositiveInteger|) (|Ring|) NIL *2)
--R                    10> (|hasCate| (|PositiveInteger|) (|Ring|) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *2 (|PositiveInteger|) (|Ring|) NIL)
--R                    10> (|hasCate| (|Integer|) (|Ring|) ((*2 |Integer|)))
--R                    <10 (|hasCate| ((*2 |Integer|)))
--R                  <9 (|hasCateSpecial| ((*2 |Integer|)))
--R                <8 (|hasCate| ((*2 |Integer|)))
--R              <7 (|evalMmCat1| ((*2 |Integer|)))
--R            <6 (|evalMmCat| ((*2 |Integer|)))
--R          <5 (|evalMmCond0| ((*2 |Integer|)))
--R        <4 (|evalMmCond| ((*2 |Integer|)))
--R        4> (|fixUpTypeArgs| ((*2 |Integer|)))
--R          5> (|coerceTypeArgs| (|PositiveInteger|) (|Integer|) ((*2 |Integer|)))
--R          <5 (|coerceTypeArgs| (|Integer|))
--R        <4 (|fixUpTypeArgs| ((*2 |Integer|)))
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|CoercibleTo| *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *1 (|CoercibleTo| *2)) (|ofCategory| *2 (|Type|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|Type|)) (|ofCategory| *1 (|CoercibleTo| *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|CoercibleTo| *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|CoercibleTo| *2) NIL)
--R                  9> (|hasCate1| (|PositiveInteger|) (|CoercibleTo| *2) NIL *1)
--R                    10> (|hasCate| (|PositiveInteger|) (|CoercibleTo| *2) NIL)
--R                    11> (|mkDomPvar| $ (|PositiveInteger|) ((|OutputForm|)) (*2))
--R                    <11 (|mkDomPvar| (|PositiveInteger|))
--R                    11> (|domArg2| (|OutputForm|) (($ |PositiveInteger|)) (($ |PositiveInteger|)))
--R                    <11 (|domArg2| (|OutputForm|))
--R                    11> (|unifyStruct| (*2) ((|OutputForm|)) ((*1 |PositiveInteger|)))
--R                    12> (|unifyStruct| *2 (|OutputForm|) ((*1 |PositiveInteger|)))
--R                    13> (|unifyStructVar| *2 (|OutputForm|) ((*1 |PositiveInteger|)))
--R                    14> (|unifyStruct| (|List| (|Integer|)) (|OutputForm|) ((*1 |PositiveInteger|)))
--R                    15> (|unifyStruct| |List| |OutputForm| ((*1 |PositiveInteger|)))
--R                    <15 (|unifyStruct| |failed|)
--R                    <14 (|unifyStruct| |failed|)
--R                    <13 (|unifyStructVar| |failed|)
--R                    <12 (|unifyStruct| |failed|)
--R                    <11 (|unifyStruct| |failed|)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|PositiveInteger|) (|CoercibleTo| *2) NIL)
--R                    10> (|hasCate| (|Integer|) (|CoercibleTo| *2) ((*1 |Integer|)))
--R                    11> (|mkDomPvar| $ (|Integer|) ((|OutputForm|)) (*2))
--R                    <11 (|mkDomPvar| (|Integer|))
--R                    11> (|domArg2| (|OutputForm|) (($ |Integer|)) (($ |Integer|)))
--R                    <11 (|domArg2| (|OutputForm|))
--R                    11> (|unifyStruct| (*2) ((|OutputForm|)) ((*1 |Integer|)))
--R                    12> (|unifyStruct| *2 (|OutputForm|) ((*1 |Integer|)))
--R                    13> (|unifyStructVar| *2 (|OutputForm|) ((*1 |Integer|)))
--R                    14> (|unifyStruct| (|List| (|Integer|)) (|OutputForm|) ((*1 |Integer|)))
--R                    15> (|unifyStruct| |List| |OutputForm| ((*1 |Integer|)))
--R                    <15 (|unifyStruct| |failed|)
--R                    <14 (|unifyStruct| |failed|)
--R                    <13 (|unifyStructVar| |failed|)
--R                    <12 (|unifyStruct| |failed|)
--R                    <11 (|unifyStruct| |failed|)
--R                    <10 (|hasCate| |failed|)
--R                    10> (|hasCateSpecialNew| *1 (|PositiveInteger|) (|CoercibleTo| *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|CoercibleTo| *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|Type|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|Type|) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|Type|) NIL *2)
--R                    10> (|hasCate| (|List| (|Integer|)) (|Type|) NIL)
--R                    <10 (|hasCate| NIL)
--R                  <9 (|hasCate1| NIL)
--R                <8 (|hasCate| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| NIL)
--R          <5 (|evalMmCond0| NIL)
--R        <4 (|evalMmCond| NIL)
--R        4> (|fixUpTypeArgs| NIL)
--R        <4 (|fixUpTypeArgs| NIL)
--R        4> (|containsVars| ((|PositiveInteger|) (|List| #) (|PositiveInteger|)))
--R          5> (|containsVars1| ((|PositiveInteger|) (|List| #) (|PositiveInteger|)))
--R            6> (|containsVars1| (|PositiveInteger|))
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|PositiveInteger|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|AssociatedJordanAlgebra| *3 *2)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|NonAssociativeAlgebra| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| ((*1 |AssociatedJordanAlgebra| *3 *2)))
--R            6> (|containsVars| (|AssociatedJordanAlgebra| *3 *2))
--R              7> (|containsVars1| (|AssociatedJordanAlgebra| *3 *2))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|AssociatedJordanAlgebra| *3 *2))
--R              7> (|containsVars1| (|AssociatedJordanAlgebra| *3 *2))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|AssociatedJordanAlgebra|))
--R              7> (|containsVars1| (|AssociatedJordanAlgebra|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *6 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *6 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *6 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Field|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|OrderedAbelianMonoidSup|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *5 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # # # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *6 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *6 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *6 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |PolynomialIdeals| *3 *4 *5 *6) (*2 |List| *6)))
--R            6> (|containsVars| (|PolynomialIdeals| *3 *4 *5 *6))
--R              7> (|containsVars1| (|PolynomialIdeals| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PolynomialIdeals| *3 *4 *5 *6))
--R              7> (|containsVars1| (|PolynomialIdeals| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PolynomialIdeals|))
--R              7> (|containsVars1| (|PolynomialIdeals|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|String|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|IndexCard|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |IndexCard|) (*2 |String|)))
--R            6> (|containsVars| (|IndexCard|))
--R              7> (|containsVars1| (|IndexCard|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|HexadecimalExpansion|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |HexadecimalExpansion|) (*2 |Fraction| #)))
--R            6> (|containsVars| (|HexadecimalExpansion|))
--R              7> (|containsVars1| (|HexadecimalExpansion|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|RadixExpansion| 16)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|HexadecimalExpansion|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |HexadecimalExpansion|) (*2 |RadixExpansion| 16)))
--R            6> (|containsVars| (|HexadecimalExpansion|))
--R              7> (|containsVars1| (|HexadecimalExpansion|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Heap| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |Heap| *3) (*2 |OutputForm|)))
--R            6> (|containsVars| (|Heap| *3))
--R              7> (|containsVars1| (|Heap| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Heap| *3))
--R              7> (|containsVars1| (|Heap| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Heap|))
--R              7> (|containsVars1| (|Heap|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofType| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofType| *5 *3)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofType| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofType| *5 *3)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Variable| *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofType| *5 *3))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |GeneralUnivariatePowerSeries| *3 *4 *5) (*2 |Variable| *4)))
--R            6> (|containsVars| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              7> (|containsVars1| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              7> (|containsVars1| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|GeneralUnivariatePowerSeries| *4 *5))
--R              7> (|containsVars1| (|GeneralUnivariatePowerSeries| *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofType| *4 #) (|ofType| *5 *3) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofType| *4 #) (|ofType| *5 *3) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 *3))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |GeneralUnivariatePowerSeries| *3 *4 *5) (*2 |UnivariatePuiseuxSeries| *3 *4 *5)))
--R            6> (|containsVars| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              7> (|containsVars1| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              7> (|containsVars1| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|GeneralUnivariatePowerSeries| *4 *5))
--R              7> (|containsVars1| (|GeneralUnivariatePowerSeries| *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranVectorFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |List| #)))
--R            6> (|containsVars| (|List| (|FortranCode|)))
--R              7> (|containsVars1| (|List| (|FortranCode|)))
--R                8> (|containsVars1| (|FortranCode|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranCode|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranVectorFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |FortranCode|)))
--R            6> (|containsVars| (|FortranCode|))
--R              7> (|containsVars1| (|FortranCode|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranVectorFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Record| # #)))
--R            6> (|containsVars| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R              7> (|containsVars1| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R                8> (|containsVars1| (|:| |localSymbols| (|SymbolTable|)))
--R                  9> (|containsVars1| (|SymbolTable|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R                8> (|containsVars1| (|:| |code| (|List| #)))
--R                  9> (|containsVars1| (|List| (|FortranCode|)))
--R                    10> (|containsVars1| (|FortranCode|))
--R                    <10 (|containsVars1| NIL)
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranVectorCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Vector| #)))
--R            6> (|containsVars| (|Vector| (|MachineFloat|)))
--R              7> (|containsVars1| (|Vector| (|MachineFloat|)))
--R                8> (|containsVars1| (|MachineFloat|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranVectorCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |List| #)))
--R            6> (|containsVars| (|List| (|FortranCode|)))
--R              7> (|containsVars1| (|List| (|FortranCode|)))
--R                8> (|containsVars1| (|FortranCode|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranCode|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranVectorCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |FortranCode|)))
--R            6> (|containsVars| (|FortranCode|))
--R              7> (|containsVars1| (|FortranCode|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranVectorCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Record| # #)))
--R            6> (|containsVars| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R              7> (|containsVars1| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R                8> (|containsVars1| (|:| |localSymbols| (|SymbolTable|)))
--R                  9> (|containsVars1| (|SymbolTable|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R                8> (|containsVars1| (|:| |code| (|List| #)))
--R                  9> (|containsVars1| (|List| (|FortranCode|)))
--R                    10> (|containsVars1| (|FortranCode|))
--R                    <10 (|containsVars1| NIL)
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranType|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranType|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|FortranType|))
--R              7> (|containsVars1| (|FortranType|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranScalarType|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranType|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranType|) (*2 |FortranScalarType|)))
--R            6> (|containsVars| (|FortranType|))
--R              7> (|containsVars1| (|FortranType|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|String|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranScalarType|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranScalarType|) (*2 |String|)))
--R            6> (|containsVars| (|FortranScalarType|))
--R              7> (|containsVars1| (|FortranScalarType|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Symbol|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranScalarType|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranScalarType|) (*2 |Symbol|)))
--R            6> (|containsVars| (|FortranScalarType|))
--R              7> (|containsVars1| (|FortranScalarType|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Symbol|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranScalarType|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranScalarType|) (*2 |Symbol|)))
--R            6> (|containsVars| (|FortranScalarType|))
--R              7> (|containsVars1| (|FortranScalarType|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|SExpression|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranScalarType|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranScalarType|) (*2 |SExpression|)))
--R            6> (|containsVars| (|FortranScalarType|))
--R              7> (|containsVars1| (|FortranScalarType|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|SparseMultivariatePolynomial| *3 #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FunctionSpace| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |SparseMultivariatePolynomial| *3 #)))
--R            6> (|containsVars| (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
--R              7> (|containsVars1| (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
--R              7> (|containsVars1| (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|SparseMultivariatePolynomial|))
--R              7> (|containsVars1| (|SparseMultivariatePolynomial|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|IntegralDomain|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FunctionSpace| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Fraction| *3)))
--R            6> (|containsVars| (|Fraction| *3))
--R              7> (|containsVars1| (|Fraction| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Fraction| *3))
--R              7> (|containsVars1| (|Fraction| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Fraction|))
--R              7> (|containsVars1| (|Fraction|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Polynomial| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|IntegralDomain|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FunctionSpace| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Polynomial| #)))
--R            6> (|containsVars| (|Polynomial| (|Fraction| *3)))
--R              7> (|containsVars1| (|Polynomial| (|Fraction| *3)))
--R                8> (|containsVars1| (|Fraction| *3))
--R                <8 (|containsVars1| T)
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Polynomial| (|Fraction| *3)))
--R              7> (|containsVars1| (|Polynomial| (|Fraction| *3)))
--R                8> (|containsVars1| (|Fraction| *3))
--R                <8 (|containsVars1| T)
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Polynomial|))
--R              7> (|containsVars1| (|Polynomial|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|IntegralDomain|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FunctionSpace| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Fraction| #)))
--R            6> (|containsVars| (|Fraction| (|Polynomial| #)))
--R              7> (|containsVars1| (|Fraction| (|Polynomial| #)))
--R                8> (|containsVars1| (|Polynomial| (|Fraction| *3)))
--R                  9> (|containsVars1| (|Fraction| *3))
--R                  <9 (|containsVars1| T)
--R                <8 (|containsVars1| T)
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Fraction| (|Polynomial| #)))
--R              7> (|containsVars1| (|Fraction| (|Polynomial| #)))
--R                8> (|containsVars1| (|Polynomial| (|Fraction| *3)))
--R                  9> (|containsVars1| (|Fraction| *3))
--R                  <9 (|containsVars1| T)
--R                <8 (|containsVars1| T)
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Fraction|))
--R              7> (|containsVars1| (|Fraction|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FourierSeries| *2 *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|Join| # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Join| # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #) (|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *1 #) (|ofCategory| *2 #) (|ofCategory| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *1 #) (|ofCategory| *2 #) (|ofCategory| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *1 #) (|ofCategory| *2 #) (|ofCategory| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |FourierSeries| *2 *3)))
--R            6> (|containsVars| (|FourierSeries| *2 *3))
--R              7> (|containsVars1| (|FourierSeries| *2 *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FourierSeries| *2 *3))
--R              7> (|containsVars1| (|FourierSeries| *2 *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FourierSeries|))
--R              7> (|containsVars1| (|FourierSeries|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FourierComponent| *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|Join| # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #) (|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FourierSeries| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Join| # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #) (|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |FourierSeries| *3 *4) (*2 |FourierComponent| *4)))
--R            6> (|containsVars| (|FourierSeries| *3 *4))
--R              7> (|containsVars1| (|FourierSeries| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FourierSeries| *3 *4))
--R              7> (|containsVars1| (|FourierSeries| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FourierSeries|))
--R              7> (|containsVars1| (|FourierSeries|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranCode|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |FortranCode|)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |List| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Record| # #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Expression| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Expression| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Expression| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Equation| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Equation| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Equation| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Equation| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Equation| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Equation| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Expression| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Expression| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Expression| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Equation| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Equation| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Equation| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Equation| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Equation| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Equation| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |List| #)))
--R            6> (|containsVars| (|List| (|FortranCode|)))
--R              7> (|containsVars1| (|List| (|FortranCode|)))
--R                8> (|containsVars1| (|FortranCode|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranCode|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |FortranCode|)))
--R            6> (|containsVars| (|FortranCode|))
--R              7> (|containsVars1| (|FortranCode|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Record| # #)))
--R            6> (|containsVars| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R              7> (|containsVars1| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R                8> (|containsVars1| (|:| |localSymbols| (|SymbolTable|)))
--R                  9> (|containsVars1| (|SymbolTable|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R                8> (|containsVars1| (|:| |code| (|List| #)))
--R                  9> (|containsVars1| (|List| (|FortranCode|)))
--R                    10> (|containsVars1| (|FortranCode|))
--R                    <10 (|containsVars1| NIL)
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|ScriptFormulaFormat|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |ScriptFormulaFormat|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|ScriptFormulaFormat|))
--R              7> (|containsVars1| (|ScriptFormulaFormat|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|ScriptFormulaFormat|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|ScriptFormulaFormat1| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |ScriptFormulaFormat1| *3) (*2 |ScriptFormulaFormat|)))
--R            6> (|containsVars| (|ScriptFormulaFormat|))
--R              7> (|containsVars1| (|ScriptFormulaFormat|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|String|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FileNameCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |String|)))
--R            6> (|containsVars| (|String|))
--R              7> (|containsVars1| (|String|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|ofCategory| *1 #) (|isDomain| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FileNameCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|String|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|isDomain| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|isDomain| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|isDomain| *2 #)))
--R            <6 (|evalMmDom| ((*2 |String|)))
--R            6> (|containsVars| (|String|))
--R              7> (|containsVars1| (|String|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |List| #)))
--R            6> (|containsVars| (|List| (|FortranCode|)))
--R              7> (|containsVars1| (|List| (|FortranCode|)))
--R                8> (|containsVars1| (|FortranCode|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranCode|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |FortranCode|)))
--R            6> (|containsVars| (|FortranCode|))
--R              7> (|containsVars1| (|FortranCode|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Record| # #)))
--R            6> (|containsVars| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R              7> (|containsVars1| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R                8> (|containsVars1| (|:| |localSymbols| (|SymbolTable|)))
--R                  9> (|containsVars1| (|SymbolTable|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R                8> (|containsVars1| (|:| |code| (|List| #)))
--R                  9> (|containsVars1| (|List| (|FortranCode|)))
--R                    10> (|containsVars1| (|FortranCode|))
--R                    <10 (|containsVars1| NIL)
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Matrix| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranMatrixCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Matrix| #)))
--R            6> (|containsVars| (|Matrix| (|MachineFloat|)))
--R              7> (|containsVars1| (|Matrix| (|MachineFloat|)))
--R                8> (|containsVars1| (|MachineFloat|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranMatrixCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |List| #)))
--R            6> (|containsVars| (|List| (|FortranCode|)))
--R              7> (|containsVars1| (|List| (|FortranCode|)))
--R                8> (|containsVars1| (|FortranCode|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranCode|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranMatrixCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |FortranCode|)))
--R            6> (|containsVars| (|FortranCode|))
--R              7> (|containsVars1| (|FortranCode|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranMatrixCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Record| # #)))
--R            6> (|containsVars| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R              7> (|containsVars1| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R                8> (|containsVars1| (|:| |localSymbols| (|SymbolTable|)))
--R                  9> (|containsVars1| (|SymbolTable|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R                8> (|containsVars1| (|:| |code| (|List| #)))
--R                  9> (|containsVars1| (|List| (|FortranCode|)))
--R                    10> (|containsVars1| (|FortranCode|))
--R                    <10 (|containsVars1| NIL)
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FreeLieAlgebra| *2 *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R                8> (|mmCatComp| (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *1 (|FreeLieAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *1 (|FreeLieAlgebra| *2 *3)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|FreeLieAlgebra| *2 *3)) |coerce| NIL)
--R                8> (|hasCate| *1 (|FreeLieAlgebra| *2 *3) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|FreeLieAlgebra| *2 *3) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|FreeLieAlgebra| *2 *3) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|FreeLieAlgebra| *2 *3) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|FreeLieAlgebra| *2 *3) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FreeLieAlgebra| *2 *3) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|OrderedSet|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|OrderedSet|) NIL)
--R                  9> (|hasCate1| (|PositiveInteger|) (|OrderedSet|) NIL *2)
--R                    10> (|hasCate| (|PositiveInteger|) (|OrderedSet|) NIL)
--R                    <10 (|hasCate| NIL)
--R                  <9 (|hasCate1| NIL)
--R                <8 (|hasCate| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *3 (|CommutativeRing|)) |coerce| NIL)
--R                8> (|hasCate| *3 (|CommutativeRing|) NIL)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|CommutativeRing|) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| NIL)
--R          <5 (|evalMmCond0| NIL)
--R        <4 (|evalMmCond| NIL)
--R        4> (|fixUpTypeArgs| NIL)
--R        <4 (|fixUpTypeArgs| NIL)
--R        4> (|containsVars| ((|List| #) (|List| #) (|PositiveInteger|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|PositiveInteger|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|PositiveInteger|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FreeLieAlgebra| *3 *4)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|XDistributedPolynomial| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R            <6 (|evalMmDom| ((*2 |XDistributedPolynomial| *3 *4)))
--R            6> (|containsVars| (|XDistributedPolynomial| *3 *4))
--R              7> (|containsVars1| (|XDistributedPolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|XDistributedPolynomial| *3 *4))
--R              7> (|containsVars1| (|XDistributedPolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|XDistributedPolynomial|))
--R              7> (|containsVars1| (|XDistributedPolynomial|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FreeLieAlgebra| *3 *4)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|XRecursivePolynomial| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R            <6 (|evalMmDom| ((*2 |XRecursivePolynomial| *3 *4)))
--R            6> (|containsVars| (|XRecursivePolynomial| *3 *4))
--R              7> (|containsVars1| (|XRecursivePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|XRecursivePolynomial| *3 *4))
--R              7> (|containsVars1| (|XRecursivePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|XRecursivePolynomial|))
--R              7> (|containsVars1| (|XRecursivePolynomial|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|FiniteFieldCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FiniteFieldHomomorphisms| *2 *4 *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R            6> (|evalMmCat| |coerce| (*1 *2 *3) ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R              7> (|orderMmCatStack| ((|ofCategory| *4 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R                8> (|mmCatComp| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *2 #) (|ofCategory| *3 #) (|ofCategory| *4 #)))
--R              7> (|evalMmCat1| (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)) |coerce| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                8> (|hasCate| *2 (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                  9> (|hasCate1| (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)) *2)
--R                    10> (|hasCate| (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *2 (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                    10> (|hasCateSpecialNew| *2 (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)) |coerce| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                8> (|hasCate| *3 (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                  9> (|hasCate1| (|PositiveInteger|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)) *3)
--R                    10> (|hasCate| (|PositiveInteger|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *3 (|PositiveInteger|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                    10> (|hasCate| (|Integer|) (|FiniteAlgebraicExtensionField| *4) ((*3 |Integer|) (*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                    <10 (|hasCate| |failed|)
--R                    10> (|hasCateSpecialNew| *3 (|PositiveInteger|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *4 (|FiniteFieldCategory|)) |coerce| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                8> (|hasCate| *4 (|FiniteFieldCategory|) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteFieldCategory|) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R          <5 (|evalMmCond0| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R        <4 (|evalMmCond| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R        4> (|fixUpTypeArgs| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R          5> (|replaceSharpCalls| (|FiniteFieldHomomorphisms| *2 *4 *3))
--R            6> (|noSharpCallsHere| (|FiniteFieldHomomorphisms| *2 *4 *3))
--R              7> (|noSharpCallsHere| *2)
--R              <7 (|noSharpCallsHere| T)
--R              7> (|noSharpCallsHere| *4)
--R              <7 (|noSharpCallsHere| T)
--R              7> (|noSharpCallsHere| *3)
--R              <7 (|noSharpCallsHere| T)
--R            <6 (|noSharpCallsHere| T)
--R          <5 (|replaceSharpCalls| (|FiniteFieldHomomorphisms| *2 *4 *3))
--R        <4 (|fixUpTypeArgs| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R        4> (|containsVars| ((|FiniteFieldHomomorphisms| # *4 #) (|List| #) (|PositiveInteger|)))
--R          5> (|containsVars1| ((|FiniteFieldHomomorphisms| # *4 #) (|List| #) (|PositiveInteger|)))
--R            6> (|containsVars1| (|FiniteFieldHomomorphisms| (|List| #) *4 (|PositiveInteger|)))
--R              7> (|containsVars1| (|List| (|Integer|)))
--R                8> (|containsVars1| (|Integer|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| T)
--R          <5 (|containsVars1| T)
--R        <4 (|containsVars| T)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|FiniteFieldCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FiniteFieldHomomorphisms| *3 *4 *2)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R            6> (|evalMmCat| |coerce| (*1 *2 *3) ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R              7> (|orderMmCatStack| ((|ofCategory| *4 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R                8> (|mmCatComp| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *2 #) (|ofCategory| *3 #) (|ofCategory| *4 #)))
--R              7> (|evalMmCat1| (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)) |coerce| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                8> (|hasCate| *2 (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                  9> (|hasCate1| (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)) *2)
--R                    10> (|hasCate| (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *2 (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                    10> (|hasCateSpecialNew| *2 (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)) |coerce| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                8> (|hasCate| *3 (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                  9> (|hasCate1| (|PositiveInteger|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)) *3)
--R                    10> (|hasCate| (|PositiveInteger|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *3 (|PositiveInteger|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                    10> (|hasCate| (|Integer|) (|FiniteAlgebraicExtensionField| *4) ((*3 |Integer|) (*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                    <10 (|hasCate| |failed|)
--R                    10> (|hasCateSpecialNew| *3 (|PositiveInteger|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *4 (|FiniteFieldCategory|)) |coerce| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                8> (|hasCate| *4 (|FiniteFieldCategory|) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteFieldCategory|) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R          <5 (|evalMmCond0| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R        <4 (|evalMmCond| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R        4> (|fixUpTypeArgs| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R          5> (|replaceSharpCalls| (|FiniteFieldHomomorphisms| *3 *4 *2))
--R            6> (|noSharpCallsHere| (|FiniteFieldHomomorphisms| *3 *4 *2))
--R              7> (|noSharpCallsHere| *3)
--R              <7 (|noSharpCallsHere| T)
--R              7> (|noSharpCallsHere| *4)
--R              <7 (|noSharpCallsHere| T)
--R              7> (|noSharpCallsHere| *2)
--R              <7 (|noSharpCallsHere| T)
--R            <6 (|noSharpCallsHere| T)
--R          <5 (|replaceSharpCalls| (|FiniteFieldHomomorphisms| *3 *4 *2))
--R        <4 (|fixUpTypeArgs| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R        4> (|containsVars| ((|FiniteFieldHomomorphisms| # *4 #) (|List| #) (|PositiveInteger|)))
--R          5> (|containsVars1| ((|FiniteFieldHomomorphisms| # *4 #) (|List| #) (|PositiveInteger|)))
--R            6> (|containsVars1| (|FiniteFieldHomomorphisms| (|PositiveInteger|) *4 (|List| #)))
--R              7> (|containsVars1| (|PositiveInteger|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| T)
--R          <5 (|containsVars1| T)
--R        <4 (|containsVars| T)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofCategory| *5 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofCategory| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranExpression| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofCategory| *5 (|FortranMachineTypeCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *5 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *5 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *5 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *5 #)))
--R            <6 (|evalMmDom| ((*1 |FortranExpression| *3 *4 *5) (*2 |Expression| *5)))
--R            6> (|containsVars| (|FortranExpression| *3 *4 *5))
--R              7> (|containsVars1| (|FortranExpression| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranExpression| *3 *4 *5))
--R              7> (|containsVars1| (|FortranExpression| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranExpression| *3 *4))
--R              7> (|containsVars1| (|FortranExpression| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranCode|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranCode|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|FortranCode|))
--R              7> (|containsVars1| (|FortranCode|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|DifferentialVariableCategory| *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *1 (|DifferentialVariableCategory| *2)) (|ofCategory| *2 (|OrderedSet|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *1 (|DifferentialVariableCategory| *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|DifferentialVariableCategory| *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|DifferentialVariableCategory| *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|DifferentialVariableCategory| *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|DifferentialVariableCategory| *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|DifferentialVariableCategory| *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|DifferentialVariableCategory| *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|DifferentialVariableCategory| *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|OrderedSet|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|OrderedSet|) NIL)
--R                  9> (|hasCate1| (|PositiveInteger|) (|OrderedSet|) NIL *2)
--R                    10> (|hasCate| (|PositiveInteger|) (|OrderedSet|) NIL)
--R                    <10 (|hasCate| NIL)
--R                  <9 (|hasCate1| NIL)
--R                <8 (|hasCate| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| NIL)
--R          <5 (|evalMmCond0| NIL)
--R        <4 (|evalMmCond| NIL)
--R        4> (|fixUpTypeArgs| NIL)
--R        <4 (|fixUpTypeArgs| NIL)
--R        4> (|containsVars| ((|List| #) (|List| #) (|PositiveInteger|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|PositiveInteger|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|PositiveInteger|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *3 (|SegmentBinding| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|Join| # # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|SegmentBinding| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|DrawNumericHack| *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # # # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *3 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |DrawNumericHack| *4) (*2 |SegmentBinding| #) (*3 |SegmentBinding| #)))
--R            6> (|containsVars| (|SegmentBinding| (|Float|)))
--R              7> (|containsVars1| (|SegmentBinding| (|Float|)))
--R                8> (|containsVars1| (|Float|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Dequeue| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |Dequeue| *3) (*2 |OutputForm|)))
--R            6> (|containsVars| (|Dequeue| *3))
--R              7> (|containsVars1| (|Dequeue| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Dequeue| *3))
--R              7> (|containsVars1| (|Dequeue| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Dequeue|))
--R              7> (|containsVars1| (|Dequeue|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|DecimalExpansion|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |DecimalExpansion|) (*2 |Fraction| #)))
--R            6> (|containsVars| (|DecimalExpansion|))
--R              7> (|containsVars1| (|DecimalExpansion|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|RadixExpansion| 10)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|DecimalExpansion|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |DecimalExpansion|) (*2 |RadixExpansion| 10)))
--R            6> (|containsVars| (|DecimalExpansion|))
--R              7> (|containsVars1| (|DecimalExpansion|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Join| # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Database| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Database| *3) (*2 |List| *3)))
--R            6> (|containsVars| (|Database| *3))
--R              7> (|containsVars1| (|Database| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Database| *3))
--R              7> (|containsVars1| (|Database| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Database|))
--R              7> (|containsVars1| (|Database|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofType| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofType| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|DirectProduct| *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 (|NonNegativeInteger|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofCategory| *5 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|CartesianTensor| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Integer|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |CartesianTensor| *3 *4 *5) (*2 |DirectProduct| *4 *5)))
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofType| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofType| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|SquareMatrix| *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 (|NonNegativeInteger|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofCategory| *5 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|CartesianTensor| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Integer|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |CartesianTensor| *3 *4 *5) (*2 |SquareMatrix| *4 *5)))
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *5 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|CartesianTensor| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Integer|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|NonNegativeInteger|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |CartesianTensor| *3 *4 *5) (*2 |List| *5)))
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofCategory| *5 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofCategory| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|CartesianTensor| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Integer|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|NonNegativeInteger|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofCategory| *5 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *5 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *5 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *5 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *5 #)))
--R            <6 (|evalMmDom| ((*1 |CartesianTensor| *3 *4 *5) (*2 |List| #)))
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|BinaryExpansion|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |BinaryExpansion|) (*2 |Fraction| #)))
--R            6> (|containsVars| (|BinaryExpansion|))
--R              7> (|containsVars1| (|BinaryExpansion|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|RadixExpansion| 2)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|BinaryExpansion|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |BinaryExpansion|) (*2 |RadixExpansion| 2)))
--R            6> (|containsVars| (|BinaryExpansion|))
--R              7> (|containsVars1| (|BinaryExpansion|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|ArrayStack| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |ArrayStack| *3) (*2 |OutputForm|)))
--R            6> (|containsVars| (|ArrayStack| *3))
--R              7> (|containsVars1| (|ArrayStack| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|ArrayStack| *3))
--R              7> (|containsVars1| (|ArrayStack| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|ArrayStack|))
--R              7> (|containsVars1| (|ArrayStack|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranExpression| # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp9| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp9| *3) (*2 |FortranExpression| # # #)))
--R            6> (|containsVars| (|Asp9| *3))
--R              7> (|containsVars1| (|Asp9| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp9| *3))
--R              7> (|containsVars1| (|Asp9| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp9| *3))
--R              7> (|containsVars1| (|Asp9| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Matrix| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp80| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp80| *3) (*2 |Matrix| #)))
--R            6> (|containsVars| (|Asp80| *3))
--R              7> (|containsVars1| (|Asp80| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp80| *3))
--R              7> (|containsVars1| (|Asp80| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp80| *3))
--R              7> (|containsVars1| (|Asp80| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp7| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp7| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp7| *3))
--R              7> (|containsVars1| (|Asp7| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp7| *3))
--R              7> (|containsVars1| (|Asp7| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp7| *3))
--R              7> (|containsVars1| (|Asp7| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp78| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp78| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp78| *3))
--R              7> (|containsVars1| (|Asp78| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp78| *3))
--R              7> (|containsVars1| (|Asp78| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp78| *3))
--R              7> (|containsVars1| (|Asp78| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Matrix| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp77| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp77| *3) (*2 |Matrix| #)))
--R            6> (|containsVars| (|Asp77| *3))
--R              7> (|containsVars1| (|Asp77| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp77| *3))
--R              7> (|containsVars1| (|Asp77| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp77| *3))
--R              7> (|containsVars1| (|Asp77| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Matrix| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp74| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp74| *3) (*2 |Matrix| #)))
--R            6> (|containsVars| (|Asp74| *3))
--R              7> (|containsVars1| (|Asp74| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp74| *3))
--R              7> (|containsVars1| (|Asp74| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp74| *3))
--R              7> (|containsVars1| (|Asp74| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp73| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp73| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp73| *3))
--R              7> (|containsVars1| (|Asp73| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp73| *3))
--R              7> (|containsVars1| (|Asp73| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp73| *3))
--R              7> (|containsVars1| (|Asp73| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp6| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp6| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp6| *3))
--R              7> (|containsVars1| (|Asp6| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp6| *3))
--R              7> (|containsVars1| (|Asp6| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp6| *3))
--R              7> (|containsVars1| (|Asp6| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp55| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp55| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp55| *3))
--R              7> (|containsVars1| (|Asp55| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp55| *3))
--R              7> (|containsVars1| (|Asp55| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp55| *3))
--R              7> (|containsVars1| (|Asp55| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp50| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp50| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp50| *3))
--R              7> (|containsVars1| (|Asp50| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp50| *3))
--R              7> (|containsVars1| (|Asp50| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp50| *3))
--R              7> (|containsVars1| (|Asp50| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranExpression| # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp4| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp4| *3) (*2 |FortranExpression| # # #)))
--R            6> (|containsVars| (|Asp4| *3))
--R              7> (|containsVars1| (|Asp4| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp4| *3))
--R              7> (|containsVars1| (|Asp4| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp4| *3))
--R              7> (|containsVars1| (|Asp4| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranExpression| # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp49| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp49| *3) (*2 |FortranExpression| # # #)))
--R            6> (|containsVars| (|Asp49| *3))
--R              7> (|containsVars1| (|Asp49| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp49| *3))
--R              7> (|containsVars1| (|Asp49| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp49| *3))
--R              7> (|containsVars1| (|Asp49| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp42| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp42| *3 *4 *5) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp42| *3 *4 *5))
--R              7> (|containsVars1| (|Asp42| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp42| *3 *4 *5))
--R              7> (|containsVars1| (|Asp42| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp42| *3 *4 *5))
--R              7> (|containsVars1| (|Asp42| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp41| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp41| *3 *4 *5) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp41| *3 *4 *5))
--R              7> (|containsVars1| (|Asp41| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp41| *3 *4 *5))
--R              7> (|containsVars1| (|Asp41| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp41| *3 *4 *5))
--R              7> (|containsVars1| (|Asp41| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp35| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp35| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp35| *3))
--R              7> (|containsVars1| (|Asp35| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp35| *3))
--R              7> (|containsVars1| (|Asp35| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp35| *3))
--R              7> (|containsVars1| (|Asp35| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp31| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp31| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp31| *3))
--R              7> (|containsVars1| (|Asp31| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp31| *3))
--R              7> (|containsVars1| (|Asp31| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp31| *3))
--R              7> (|containsVars1| (|Asp31| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranExpression| # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp24| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp24| *3) (*2 |FortranExpression| # # #)))
--R            6> (|containsVars| (|Asp24| *3))
--R              7> (|containsVars1| (|Asp24| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp24| *3))
--R              7> (|containsVars1| (|Asp24| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp24| *3))
--R              7> (|containsVars1| (|Asp24| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Matrix| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp20| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp20| *3) (*2 |Matrix| #)))
--R            6> (|containsVars| (|Asp20| *3))
--R              7> (|containsVars1| (|Asp20| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp20| *3))
--R              7> (|containsVars1| (|Asp20| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp20| *3))
--R              7> (|containsVars1| (|Asp20| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranExpression| # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp1| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp1| *3) (*2 |FortranExpression| # # #)))
--R            6> (|containsVars| (|Asp1| *3))
--R              7> (|containsVars1| (|Asp1| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp1| *3))
--R              7> (|containsVars1| (|Asp1| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp1| *3))
--R              7> (|containsVars1| (|Asp1| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp19| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp19| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp19| *3))
--R              7> (|containsVars1| (|Asp19| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp19| *3))
--R              7> (|containsVars1| (|Asp19| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp19| *3))
--R              7> (|containsVars1| (|Asp19| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp10| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp10| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp10| *3))
--R              7> (|containsVars1| (|Asp10| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp10| *3))
--R              7> (|containsVars1| (|Asp10| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp10| *3))
--R              7> (|containsVars1| (|Asp10| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Any|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|AnyFunctions1| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |AnyFunctions1| *3) (*2 |Any|)))
--R            6> (|containsVars| (|Any|))
--R              7> (|containsVars1| (|Any|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|SparseMultivariatePolynomial| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|AlgebraicNumber|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |AlgebraicNumber|) (*2 |SparseMultivariatePolynomial| # #)))
--R            6> (|containsVars| (|AlgebraicNumber|))
--R              7> (|containsVars1| (|AlgebraicNumber|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofType| *6 #) (|isDomain| *1 #) (|ofType| *4 #) (|ofType| *5 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofType| *6 #) (|isDomain| *1 #) (|ofType| *4 #) (|ofType| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Field|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofType| *6 (|Vector| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 (|PositiveInteger|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |AlgebraGivenByStructuralConstants| *3 *4 *5 *6) (*2 |Vector| *3)))
--R            6> (|containsVars| (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6))
--R              7> (|containsVars1| (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6))
--R              7> (|containsVars1| (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|AlgebraGivenByStructuralConstants| *4 *5 *6))
--R              7> (|containsVars1| (|AlgebraGivenByStructuralConstants| *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|PositiveInteger|)) ((|PositiveInteger|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|Algebra| *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *1 (|Algebra| *2)) (|ofCategory| *2 (|CommutativeRing|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *1 (|Algebra| *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|Algebra| *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|Algebra| *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|Algebra| *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|Algebra| *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|Algebra| *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|Algebra| *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|Algebra| *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|CommutativeRing|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|CommutativeRing|) NIL)
--R                  9> (|hasCate1| (|PositiveInteger|) (|CommutativeRing|) NIL *2)
--R                    10> (|hasCate| (|PositiveInteger|) (|CommutativeRing|) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *2 (|PositiveInteger|) (|CommutativeRing|) NIL)
--R                    10> (|hasCate| (|Integer|) (|CommutativeRing|) ((*2 |Integer|)))
--R                    <10 (|hasCate| ((*2 |Integer|)))
--R                  <9 (|hasCateSpecial| ((*2 |Integer|)))
--R                <8 (|hasCate| ((*2 |Integer|)))
--R              <7 (|evalMmCat1| ((*2 |Integer|)))
--R            <6 (|evalMmCat| ((*2 |Integer|)))
--R          <5 (|evalMmCond0| ((*2 |Integer|)))
--R        <4 (|evalMmCond| ((*2 |Integer|)))
--R        4> (|fixUpTypeArgs| ((*2 |Integer|)))
--R          5> (|coerceTypeArgs| (|PositiveInteger|) (|Integer|) ((*2 |Integer|)))
--R          <5 (|coerceTypeArgs| (|Integer|))
--R        <4 (|fixUpTypeArgs| ((*2 |Integer|)))
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R    <2 (|selectMmsGen,matchMms| NIL)
--R  <1 (|selectMmsGen| NIL)
--R  1> (|selectMmsGen| |coerce| (|List| (|Integer|)) ((|Integer|)) ((|Integer|)))
--R    2> (|filterModemapsFromPackages|nteger" "List") |coerce|)
--R    <2 (|filterModemapsFromPackages| ((# # #) (# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #)))
--R    2> (|selectMmsGen,exact?| ((# #) (# #) (# #)) (|List| (|Integer|)) ((|Integer|)))
--R    <2 (|selectMmsGen,exact?| (NIL (# # #)))
--R    2> (|selectMmsGen,matchMms| ((# #) (# #) (# #)) |coerce| (|List| (|Integer|)) ((|Integer|)) ((|Integer|)))
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *3 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineInteger|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineInteger|) (*2 |Expression| #) (*3 |Expression| #)))
--R            6> (|containsVars| (|Expression| (|MachineInteger|)))
--R              7> (|containsVars1| (|Expression| (|MachineInteger|)))
--R                8> (|containsVars1| (|MachineInteger|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|DataList| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |DataList| *3) (*2 |List| *3)))
--R            6> (|containsVars| (|DataList| *3))
--R              7> (|containsVars1| (|DataList| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|DataList| *3))
--R              7> (|containsVars1| (|DataList| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|DataList|))
--R              7> (|containsVars1| (|DataList|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|DataList| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |DataList| *3) (*2 |List| *3)))
--R            6> (|containsVars| (|DataList| *3))
--R              7> (|containsVars1| (|DataList| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|DataList| *3))
--R              7> (|containsVars1| (|DataList| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|DataList|))
--R              7> (|containsVars1| (|DataList|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R    <2 (|selectMmsGen,matchMms| NIL)
--R    2> (|selectMmsGen,exact?||List| (|Integer|)) ((|Integer|)))
--R    <2 (|selectMmsGen,exact?| (NIL (# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #)))
--R    2> (|selectMmsGen,matchMms||coerce| (|List| (|Integer|)) ((|Integer|)) ((|Integer|)))
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|XFreeAlgebra| *2 *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R                8> (|mmCatComp| (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *1 (|XFreeAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *1 (|XFreeAlgebra| *2 *3)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|XFreeAlgebra| *2 *3)) |coerce| NIL)
--R                8> (|hasCate| *1 (|XFreeAlgebra| *2 *3) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|XFreeAlgebra| *2 *3) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|XFreeAlgebra| *2 *3) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|XFreeAlgebra| *2 *3) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|XFreeAlgebra| *2 *3) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|XFreeAlgebra| *2 *3) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|OrderedSet|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|OrderedSet|) NIL)
--R                  9> (|hasCate1| (|Integer|) (|OrderedSet|) NIL *2)
--R                    10> (|hasCate| (|Integer|) (|OrderedSet|) NIL)
--R                    <10 (|hasCate| NIL)
--R                  <9 (|hasCate1| NIL)
--R                <8 (|hasCate| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *3 (|Ring|)) |coerce| NIL)
--R                8> (|hasCate| *3 (|Ring|) NIL)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|Ring|) NIL)
--R                <8 (|defaultTypeForCategory| (|Integer|))
--R              <7 (|evalMmCat1| ((*3 |Integer|)))
--R            <6 (|evalMmCat| ((*3 |Integer|)))
--R          <5 (|evalMmCond0| ((*3 |Integer|)))
--R        <4 (|evalMmCond| ((*3 |Integer|)))
--R        4> (|fixUpTypeArgs| ((*3 |Integer|)))
--R          5> (|replaceSharpCalls| (|Integer|))
--R            6> (|noSharpCallsHere| (|Integer|))
--R            <6 (|noSharpCallsHere| T)
--R          <5 (|replaceSharpCalls| (|Integer|))
--R        <4 (|fixUpTypeArgs| ((*3 |Integer|)))
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|XAlgebra| *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *1 (|XAlgebra| *2)) (|ofCategory| *2 (|Ring|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|Ring|)) (|ofCategory| *1 (|XAlgebra| *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|XAlgebra| *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|XAlgebra| *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|XAlgebra| *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|XAlgebra| *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|XAlgebra| *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|XAlgebra| *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|XAlgebra| *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|Ring|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|Ring|) NIL)
--R                  9> (|hasCate1| (|Integer|) (|Ring|) NIL *2)
--R                    10> (|hasCate| (|Integer|) (|Ring|) NIL)
--R                    <10 (|hasCate| NIL)
--R                  <9 (|hasCate1| NIL)
--R                <8 (|hasCate| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| NIL)
--R          <5 (|evalMmCond0| NIL)
--R        <4 (|evalMmCond| NIL)
--R        4> (|fixUpTypeArgs| NIL)
--R        <4 (|fixUpTypeArgs| NIL)
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Void|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Void|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|Void|))
--R              7> (|containsVars1| (|Void|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofType| *4 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofType| *4 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|UnivariatePolynomial| *4 *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |UnivariateTaylorSeriesCZero| *3 *4) (*2 |UnivariatePolynomial| *4 *3)))
--R            6> (|containsVars| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              7> (|containsVars1| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              7> (|containsVars1| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateTaylorSeriesCZero| *4))
--R              7> (|containsVars1| (|UnivariateTaylorSeriesCZero| *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofType| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofType| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Variable| *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |UnivariateTaylorSeriesCZero| *3 *4) (*2 |Variable| *4)))
--R            6> (|containsVars| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              7> (|containsVars1| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              7> (|containsVars1| (|UnivariateTaylorSeriesCZero| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateTaylorSeriesCZero| *4))
--R              7> (|containsVars1| (|UnivariateTaylorSeriesCZero| *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3)) (|ofCategory| *3 (|Ring|)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3)) (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3)) |coerce| NIL)
--R                8> (|hasCate| *2 (|UnivariateLaurentSeriesCategory| *3) NIL)
--R                  9> (|hasCate1| (|Integer|) (|UnivariateLaurentSeriesCategory| *3) NIL *2)
--R                    10> (|hasCate| (|Integer|) (|UnivariateLaurentSeriesCategory| *3) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *2 (|Integer|) (|UnivariateLaurentSeriesCategory| *3) NIL)
--R                    10> (|hasCateSpecialNew| *2 (|Integer|) (|UnivariateLaurentSeriesCategory| *3) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|UnivariateLaurentSeriesCategory| *3) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *3 (|Ring|)) |coerce| NIL)
--R                8> (|hasCate| *3 (|Ring|) NIL)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|Ring|) NIL)
--R                <8 (|defaultTypeForCategory| (|Integer|))
--R              <7 (|evalMmCat1| ((*3 |Integer|)))
--R            <6 (|evalMmCat| ((*3 |Integer|)))
--R          <5 (|evalMmCond0| ((*3 |Integer|)))
--R        <4 (|evalMmCond| ((*3 |Integer|)))
--R        4> (|fixUpTypeArgs| ((*3 |Integer|)))
--R          5> (|replaceSharpCalls| (|Integer|))
--R            6> (|noSharpCallsHere| (|Integer|))
--R            <6 (|noSharpCallsHere| T)
--R          <5 (|replaceSharpCalls| (|Integer|))
--R        <4 (|fixUpTypeArgs| ((*3 |Integer|)))
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofType| *3 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofType| *3 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Variable| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|UnivariatePolynomial| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R            <6 (|evalMmDom| ((*1 |UnivariatePolynomial| *3 *4) (*2 |Variable| *3)))
--R            6> (|containsVars| (|UnivariatePolynomial| *3 *4))
--R              7> (|containsVars1| (|UnivariatePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariatePolynomial| *3 *4))
--R              7> (|containsVars1| (|UnivariatePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariatePolynomial| *3))
--R              7> (|containsVars1| (|UnivariatePolynomial| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Segment| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|UniversalSegment| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |UniversalSegment| *3) (*2 |Segment| *3)))
--R            6> (|containsVars| (|UniversalSegment| *3))
--R              7> (|containsVars1| (|UniversalSegment| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UniversalSegment| *3))
--R              7> (|containsVars1| (|UniversalSegment| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UniversalSegment|))
--R              7> (|containsVars1| (|UniversalSegment|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)) (|ofCategory| *3 (|Ring|)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)) (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|UnivariateLaurentSeriesConstructorCategory| *3 *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|UnivariateLaurentSeriesConstructorCategory| *3 *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|UnivariateLaurentSeriesConstructorCategory| *3 *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|UnivariateLaurentSeriesConstructorCategory| *3 *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|UnivariateLaurentSeriesConstructorCategory| *3 *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)) |coerce| NIL)
--R                8> (|hasCate| *2 (|UnivariateTaylorSeriesCategory| *3) NIL)
--R                  9> (|hasCate1| (|Integer|) (|UnivariateTaylorSeriesCategory| *3) NIL *2)
--R                    10> (|hasCate| (|Integer|) (|UnivariateTaylorSeriesCategory| *3) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *2 (|Integer|) (|UnivariateTaylorSeriesCategory| *3) NIL)
--R                    10> (|hasCateSpecialNew| *2 (|Integer|) (|UnivariateTaylorSeriesCategory| *3) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|UnivariateTaylorSeriesCategory| *3) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *3 (|Ring|)) |coerce| NIL)
--R                8> (|hasCate| *3 (|Ring|) NIL)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|Ring|) NIL)
--R                <8 (|defaultTypeForCategory| (|Integer|))
--R              <7 (|evalMmCat1| ((*3 |Integer|)))
--R            <6 (|evalMmCat| ((*3 |Integer|)))
--R          <5 (|evalMmCond0| ((*3 |Integer|)))
--R        <4 (|evalMmCond| ((*3 |Integer|)))
--R        4> (|fixUpTypeArgs| ((*3 |Integer|)))
--R          5> (|replaceSharpCalls| (|Integer|))
--R            6> (|noSharpCallsHere| (|Integer|))
--R            <6 (|noSharpCallsHere| T)
--R          <5 (|replaceSharpCalls| (|Integer|))
--R        <4 (|fixUpTypeArgs| ((*3 |Integer|)))
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|UnivariatePolynomial| # *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|UnivariateFormalPowerSeries| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |UnivariateFormalPowerSeries| *3) (*2 |UnivariatePolynomial| # *3)))
--R            6> (|containsVars| (|UnivariateFormalPowerSeries| *3))
--R              7> (|containsVars1| (|UnivariateFormalPowerSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateFormalPowerSeries| *3))
--R              7> (|containsVars1| (|UnivariateFormalPowerSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateFormalPowerSeries|))
--R              7> (|containsVars1| (|UnivariateFormalPowerSeries|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Variable| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|UnivariateFormalPowerSeries| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |UnivariateFormalPowerSeries| *3) (*2 |Variable| #)))
--R            6> (|containsVars| (|UnivariateFormalPowerSeries| *3))
--R              7> (|containsVars1| (|UnivariateFormalPowerSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateFormalPowerSeries| *3))
--R              7> (|containsVars1| (|UnivariateFormalPowerSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|UnivariateFormalPowerSeries|))
--R              7> (|containsVars1| (|UnivariateFormalPowerSeries|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Symbol|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|TaylorSeries| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |TaylorSeries| *3) (*2 |Symbol|)))
--R            6> (|containsVars| (|TaylorSeries| *3))
--R              7> (|containsVars1| (|TaylorSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|TaylorSeries| *3))
--R              7> (|containsVars1| (|TaylorSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|TaylorSeries|))
--R              7> (|containsVars1| (|TaylorSeries|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Polynomial| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|TaylorSeries| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |TaylorSeries| *3) (*2 |Polynomial| *3)))
--R            6> (|containsVars| (|TaylorSeries| *3))
--R              7> (|containsVars1| (|TaylorSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|TaylorSeries| *3))
--R              7> (|containsVars1| (|TaylorSeries| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|TaylorSeries|))
--R              7> (|containsVars1| (|TaylorSeries|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|TexFormat|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |TexFormat|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|TexFormat|))
--R              7> (|containsVars1| (|TexFormat|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|TexFormat|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|TexFormat1| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |TexFormat1| *3) (*2 |TexFormat|)))
--R            6> (|containsVars| (|TexFormat|))
--R              7> (|containsVars1| (|TexFormat|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Tableau| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |Tableau| *3) (*2 |OutputForm|)))
--R            6> (|containsVars| (|Tableau| *3))
--R              7> (|containsVars1| (|Tableau| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Tableau| *3))
--R              7> (|containsVars1| (|Tableau| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Tableau|))
--R              7> (|containsVars1| (|Tableau|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Table| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |SymbolTable|) (*2 |Table| # #)))
--R            6> (|containsVars| (|SymbolTable|))
--R              7> (|containsVars1| (|SymbolTable|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|String|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Symbol|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Symbol|) (*2 |String|)))
--R            6> (|containsVars| (|Symbol|))
--R              7> (|containsVars1| (|Symbol|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Symbol|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Switch|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Switch|) (*2 |Symbol|)))
--R            6> (|containsVars| (|Switch|))
--R              7> (|containsVars1| (|Switch|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Stream| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Stream| *3) (*2 |List| *3)))
--R            6> (|containsVars| (|Stream| *3))
--R              7> (|containsVars1| (|Stream| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Stream| *3))
--R              7> (|containsVars1| (|Stream| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Stream|))
--R              7> (|containsVars1| (|Stream|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Stack| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |Stack| *3) (*2 |OutputForm|)))
--R            6> (|containsVars| (|Stack| *3))
--R              7> (|containsVars1| (|Stack| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Stack| *3))
--R              7> (|containsVars1| (|Stack| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Stack|))
--R              7> (|containsVars1| (|Stack|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Character|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|StringAggregate|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Character|)))
--R            6> (|containsVars| (|Character|))
--R              7> (|containsVars1| (|Character|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|ofCategory| *1 #) (|ofCategory| *3 #) (|isDomain| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *3 #) (|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|ThreeSpaceCategory| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *3 #) (|isDomain| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *3 #) (|isDomain| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *3 #) (|isDomain| *2 #)))
--R            <6 (|evalMmDom| ((*2 |OutputForm|)))
--R            6> (|containsVars| (|OutputForm|))
--R              7> (|containsVars1| (|OutputForm|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Integer|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Integer|)))
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)) ((*2 |Integer|)))
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #)))
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|Ring|)) |coerce| ((*2 |Integer|)))
--R                8> (|hasCate| *1 (|Ring|) ((*2 |Integer|)))
--R                  9> (|hasCate1| (|List| (|Integer|)) (|Ring|) ((*2 |Integer|)) *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|Ring|) ((*2 |Integer|)))
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|Ring|) ((*2 |Integer|)))
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|Ring|) ((*2 |Integer|)))
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|Ring|) ((*2 |Integer|)))
--R                <8 (|defaultTypeForCategory| (|Integer|))
--R                8> (|containsVars| (|Integer|))
--R                  9> (|containsVars1| (|Integer|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| ((*2 |Integer|)))
--R          <5 (|evalMmCond0| ((*2 |Integer|)))
--R        <4 (|evalMmCond| ((*2 |Integer|)))
--R        4> (|fixUpTypeArgs| ((*2 |Integer|)))
--R          5> (|coerceTypeArgs| (|Integer|) (|Integer|) ((*2 |Integer|)))
--R          <5 (|coerceTypeArgs| (|Integer|))
--R        <4 (|fixUpTypeArgs| ((*2 |Integer|)))
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|RationalFunction| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|IntegralDomain|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |RationalFunction| *3) (*2 |Fraction| #)))
--R            6> (|containsVars| (|Fraction| (|Polynomial| *3)))
--R              7> (|containsVars1| (|Fraction| (|Polynomial| *3)))
--R                8> (|containsVars1| (|Polynomial| *3))
--R                <8 (|containsVars1| T)
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Fraction| (|Polynomial| *3)))
--R              7> (|containsVars1| (|Fraction| (|Polynomial| *3)))
--R                8> (|containsVars1| (|Polynomial| *3))
--R                <8 (|containsVars1| T)
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Fraction|))
--R              7> (|containsVars1| (|Fraction|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|RetractableTo| *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *1 (|RetractableTo| *2)) (|ofCategory| *2 (|Type|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|Type|)) (|ofCategory| *1 (|RetractableTo| *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|RetractableTo| *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|RetractableTo| *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|RetractableTo| *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|RetractableTo| *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|RetractableTo| *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|RetractableTo| *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|RetractableTo| *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|Type|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|Type|) NIL)
--R                  9> (|hasCate1| (|Integer|) (|Type|) NIL *2)
--R                    10> (|hasCate| (|Integer|) (|Type|) NIL)
--R                    <10 (|hasCate| NIL)
--R                  <9 (|hasCate1| NIL)
--R                <8 (|hasCate| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| NIL)
--R          <5 (|evalMmCond0| NIL)
--R        <4 (|evalMmCond| NIL)
--R        4> (|fixUpTypeArgs| NIL)
--R        <4 (|fixUpTypeArgs| NIL)
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *3 (|Exit|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|ResolveLatticeCompletion| *2)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|isDomain| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| ((*1 |ResolveLatticeCompletion| *2) (*3 |Exit|)))
--R            6> (|containsVars| (|Exit|))
--R              7> (|containsVars1| (|Exit|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Void|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|ResolveLatticeCompletion| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |ResolveLatticeCompletion| *3) (*2 |Void|)))
--R            6> (|containsVars| (|Void|))
--R              7> (|containsVars1| (|Void|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|RadixExpansion| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Integer|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |RadixExpansion| *3) (*2 |Fraction| #)))
--R            6> (|containsVars| (|RadixExpansion| *3))
--R              7> (|containsVars1| (|RadixExpansion| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|RadixExpansion| *3))
--R              7> (|containsVars1| (|RadixExpansion| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|RadixExpansion| *3))
--R              7> (|containsVars1| (|RadixExpansion| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Queue| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |Queue| *3) (*2 |OutputForm|)))
--R            6> (|containsVars| (|Queue| *3))
--R              7> (|containsVars1| (|Queue| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Queue| *3))
--R              7> (|containsVars1| (|Queue| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Queue|))
--R              7> (|containsVars1| (|Queue|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *3 (|Pi|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PiCoercions| *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|Join| # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #) (|ofCategory| *4 #)))
--R        <4 (|evalMmStack| ((# # # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #) (|ofCategory| *4 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #) (|ofCategory| *4 #)))
--R            6> (|evalMmDom| ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #) (|ofCategory| *4 #)))
--R            <6 (|evalMmDom| ((*1 |PiCoercions| *4) (*2 |Expression| *4) (*3 |Pi|)))
--R            6> (|containsVars| (|Expression| *4))
--R              7> (|containsVars1| (|Expression| *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Expression| *4))
--R              7> (|containsVars1| (|Expression| *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Expression|))
--R              7> (|containsVars1| (|Expression|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PartialFraction| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|EuclideanDomain|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |PartialFraction| *3) (*2 |Fraction| *3)))
--R            6> (|containsVars| (|PartialFraction| *3))
--R              7> (|containsVars1| (|PartialFraction| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PartialFraction| *3))
--R              7> (|containsVars1| (|PartialFraction| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PartialFraction|))
--R              7> (|containsVars1| (|PartialFraction|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|EuclideanDomain|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PartialFraction| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |PartialFraction| *3) (*2 |Fraction| #)))
--R            6> (|containsVars| (|PartialFraction| *3))
--R              7> (|containsVars1| (|PartialFraction| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PartialFraction| *3))
--R              7> (|containsVars1| (|PartialFraction| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PartialFraction|))
--R              7> (|containsVars1| (|PartialFraction|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Permutation| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Permutation| *3) (*2 |List| #)))
--R            6> (|containsVars| (|Permutation| *3))
--R              7> (|containsVars1| (|Permutation| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Permutation| *3))
--R              7> (|containsVars1| (|Permutation| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Permutation|))
--R              7> (|containsVars1| (|Permutation|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Permutation| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Permutation| *3) (*2 |List| *3)))
--R            6> (|containsVars| (|Permutation| *3))
--R              7> (|containsVars1| (|Permutation| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Permutation| *3))
--R              7> (|containsVars1| (|Permutation| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Permutation|))
--R              7> (|containsVars1| (|Permutation|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PermutationGroup| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |PermutationGroup| *3) (*2 |List| #)))
--R            6> (|containsVars| (|PermutationGroup| *3))
--R              7> (|containsVars1| (|PermutationGroup| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PermutationGroup| *3))
--R              7> (|containsVars1| (|PermutationGroup| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PermutationGroup|))
--R              7> (|containsVars1| (|PermutationGroup|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PermutationGroup| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |PermutationGroup| *3) (*2 |List| #)))
--R            6> (|containsVars| (|PermutationGroup| *3))
--R              7> (|containsVars1| (|PermutationGroup| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PermutationGroup| *3))
--R              7> (|containsVars1| (|PermutationGroup| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PermutationGroup|))
--R              7> (|containsVars1| (|PermutationGroup|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Tree| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PendantTree| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |PendantTree| *3) (*2 |Tree| *3)))
--R            6> (|containsVars| (|PendantTree| *3))
--R              7> (|containsVars1| (|PendantTree| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PendantTree| *3))
--R              7> (|containsVars1| (|PendantTree| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PendantTree|))
--R              7> (|containsVars1| (|PendantTree|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalPDEProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalPDEProblem|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|NumericalPDEProblem|))
--R              7> (|containsVars1| (|NumericalPDEProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # # # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalPDEProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalPDEProblem|) (*2 |Record| # # # # #)))
--R            6> (|containsVars| (|NumericalPDEProblem|))
--R              7> (|containsVars1| (|NumericalPDEProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *3 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PolynomialAN2Expression|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |PolynomialAN2Expression|) (*2 |Expression| #) (*3 |Fraction| #)))
--R            6> (|containsVars| (|Expression| (|Integer|)))
--R              7> (|containsVars1| (|Expression| (|Integer|)))
--R                8> (|containsVars1| (|Integer|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *3 (|Polynomial| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PolynomialAN2Expression|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |PolynomialAN2Expression|) (*2 |Expression| #) (*3 |Polynomial| #)))
--R            6> (|containsVars| (|Expression| (|Integer|)))
--R              7> (|containsVars1| (|Expression| (|Integer|)))
--R                8> (|containsVars1| (|Integer|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Color|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Palette|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Palette|) (*2 |Color|)))
--R            6> (|containsVars| (|Palette|))
--R              7> (|containsVars1| (|Palette|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Integer|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|OrdSetInts|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |OrdSetInts|) (*2 |Integer|)))
--R            6> (|containsVars| (|OrdSetInts|))
--R              7> (|containsVars1| (|OrdSetInts|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalOptimizationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalOptimizationProblem|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|NumericalOptimizationProblem|))
--R              7> (|containsVars1| (|NumericalOptimizationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # # # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalOptimizationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalOptimizationProblem|) (*2 |Record| # # # # #)))
--R            6> (|containsVars| (|NumericalOptimizationProblem|))
--R              7> (|containsVars1| (|NumericalOptimizationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalOptimizationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalOptimizationProblem|) (*2 |Record| # #)))
--R            6> (|containsVars| (|NumericalOptimizationProblem|))
--R              7> (|containsVars1| (|NumericalOptimizationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Union| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalOptimizationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalOptimizationProblem|) (*2 |Union| # #)))
--R            6> (|containsVars| (|NumericalOptimizationProblem|))
--R              7> (|containsVars1| (|NumericalOptimizationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Symbol|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|OpenMathErrorKind|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |OpenMathErrorKind|) (*2 |Symbol|)))
--R            6> (|containsVars| (|OpenMathErrorKind|))
--R              7> (|containsVars1| (|OpenMathErrorKind|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *3 #) (|ofType| *4 *3) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *3 #) (|ofType| *4 *3) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 *3))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|PartialDifferentialRing| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| ((*1 |OrdinaryDifferentialRing| *3 *2 *4)))
--R            6> (|containsVars| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              7> (|containsVars1| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              7> (|containsVars1| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|OrdinaryDifferentialRing| *4))
--R              7> (|containsVars1| (|OrdinaryDifferentialRing| *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofType| *4 *3)))
--R        4> (|evalMmStack| (AND (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofType| *4 *3)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|PartialDifferentialRing| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 *3))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |OrdinaryDifferentialRing| *3 *2 *4)))
--R            6> (|containsVars| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              7> (|containsVars1| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              7> (|containsVars1| (|OrdinaryDifferentialRing| *3 *2 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|OrdinaryDifferentialRing| *4))
--R              7> (|containsVars1| (|OrdinaryDifferentialRing| *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalODEProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalODEProblem|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|NumericalODEProblem|))
--R              7> (|containsVars1| (|NumericalODEProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # # # # # # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalODEProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalODEProblem|) (*2 |Record| # # # # # # # #)))
--R            6> (|containsVars| (|NumericalODEProblem|))
--R              7> (|containsVars1| (|NumericalODEProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|None|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NoneFunctions1| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |NoneFunctions1| *3) (*2 |None|)))
--R            6> (|containsVars| (|None|))
--R              7> (|containsVars1| (|None|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalIntegrationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalIntegrationProblem|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|NumericalIntegrationProblem|))
--R              7> (|containsVars1| (|NumericalIntegrationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # # # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalIntegrationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalIntegrationProblem|) (*2 |Record| # # # # #)))
--R            6> (|containsVars| (|NumericalIntegrationProblem|))
--R              7> (|containsVars1| (|NumericalIntegrationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalIntegrationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalIntegrationProblem|) (*2 |Record| # # # #)))
--R            6> (|containsVars| (|NumericalIntegrationProblem|))
--R              7> (|containsVars1| (|NumericalIntegrationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Union| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|NumericalIntegrationProblem|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |NumericalIntegrationProblem|) (*2 |Union| # #)))
--R            6> (|containsVars| (|NumericalIntegrationProblem|))
--R              7> (|containsVars1| (|NumericalIntegrationProblem|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Integer|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|NonAssociativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Integer|)))
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)) ((*2 |Integer|)))
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #)))
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|NonAssociativeRing|)) |coerce| ((*2 |Integer|)))
--R                8> (|hasCate| *1 (|NonAssociativeRing|) ((*2 |Integer|)))
--R                  9> (|hasCate1| (|List| (|Integer|)) (|NonAssociativeRing|) ((*2 |Integer|)) *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|NonAssociativeRing|) ((*2 |Integer|)))
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|NonAssociativeRing|) ((*2 |Integer|)))
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|NonAssociativeRing|) ((*2 |Integer|)))
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|NonAssociativeRing|) ((*2 |Integer|)))
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| ((*2 |Integer|)))
--R          <5 (|evalMmCond0| ((*2 |Integer|)))
--R        <4 (|evalMmCond| ((*2 |Integer|)))
--R        4> (|fixUpTypeArgs| ((*2 |Integer|)))
--R          5> (|coerceTypeArgs| (|Integer|) (|Integer|) ((*2 |Integer|)))
--R          <5 (|coerceTypeArgs| (|Integer|))
--R        <4 (|fixUpTypeArgs| ((*2 |Integer|)))
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *1 #) (|ofType| *3 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *1 #) (|ofType| *3 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MyUnivariatePolynomial| *3 *2)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|isDomain| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| ((*1 |MyUnivariatePolynomial| *3 *2)))
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3 *2))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3 *2))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3 *2))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3 *2))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofType| *3 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofType| *3 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Variable| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MyUnivariatePolynomial| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *4 #)))
--R            <6 (|evalMmDom| ((*1 |MyUnivariatePolynomial| *3 *4) (*2 |Variable| *3)))
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3 *4))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3 *4))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *4 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *4 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Polynomial| *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MyUnivariatePolynomial| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MyUnivariatePolynomial| *3 *4) (*2 |Polynomial| *4)))
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3 *4))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3 *4))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyUnivariatePolynomial| *3))
--R              7> (|containsVars1| (|MyUnivariatePolynomial| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofType| *3 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofType| *3 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|Join| # # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MyExpression| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MyExpression| *3 *4) (*2 |Fraction| #)))
--R            6> (|containsVars| (|MyExpression| *3 *4))
--R              7> (|containsVars1| (|MyExpression| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyExpression| *3 *4))
--R              7> (|containsVars1| (|MyExpression| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|MyExpression| *3))
--R              7> (|containsVars1| (|MyExpression| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *3 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|String|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MathMLFormat|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *3 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MathMLFormat|) (*2 |String|) (*3 |OutputForm|)))
--R            6> (|containsVars| (|String|))
--R              7> (|containsVars1| (|String|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Float|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineFloat|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineFloat|) (*2 |Float|)))
--R            6> (|containsVars| (|MachineFloat|))
--R              7> (|containsVars1| (|MachineFloat|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|MachineInteger|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineFloat|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineFloat|) (*2 |MachineInteger|)))
--R            6> (|containsVars| (|MachineFloat|))
--R              7> (|containsVars1| (|MachineFloat|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Complex| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineComplex|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineComplex|) (*2 |Complex| #)))
--R            6> (|containsVars| (|MachineComplex|))
--R              7> (|containsVars1| (|MachineComplex|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Complex| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineComplex|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineComplex|) (*2 |Complex| #)))
--R            6> (|containsVars| (|MachineComplex|))
--R              7> (|containsVars1| (|MachineComplex|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Complex| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineComplex|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineComplex|) (*2 |Complex| #)))
--R            6> (|containsVars| (|MachineComplex|))
--R              7> (|containsVars1| (|MachineComplex|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Complex| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineComplex|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineComplex|) (*2 |Complex| #)))
--R            6> (|containsVars| (|MachineComplex|))
--R              7> (|containsVars1| (|MachineComplex|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Complex| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MachineComplex|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |MachineComplex|) (*2 |Complex| #)))
--R            6> (|containsVars| (|MachineComplex|))
--R              7> (|containsVars1| (|MachineComplex|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *4 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *4 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|MatrixCategory| *3 *4 *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|FiniteLinearAggregate| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|FiniteLinearAggregate| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *4 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *4 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *4 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *4 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *3 #) (|ofCategory| *1 #) (|ofCategory| *4 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *1 (|MatrixCategory| *3 *4 *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *2 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|Ring|)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *1 (|MatrixCategory| *3 *4 *2)) (|ofCategory| *2 (|FiniteLinearAggregate| *3)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|FiniteLinearAggregate| *3)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *2)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *2 (|FiniteLinearAggregate| *3)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|FiniteLinearAggregate| *3)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|Ring|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *4 #) (|ofCategory| *3 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|MatrixCategory| *3 *4 *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|MatrixCategory| *3 *4 *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|MatrixCategory| *3 *4 *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|MatrixCategory| *3 *4 *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|MatrixCategory| *3 *4 *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|MatrixCategory| *3 *4 *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|MatrixCategory| *3 *4 *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|FiniteLinearAggregate| *3)) |coerce| NIL)
--R                8> (|hasCate| *2 (|FiniteLinearAggregate| *3) NIL)
--R                  9> (|hasCate1| (|Integer|) (|FiniteLinearAggregate| *3) NIL *2)
--R                    10> (|hasCate| (|Integer|) (|FiniteLinearAggregate| *3) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *2 (|Integer|) (|FiniteLinearAggregate| *3) NIL)
--R                    10> (|hasCateSpecialNew| *2 (|Integer|) (|FiniteLinearAggregate| *3) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteLinearAggregate| *3) NIL)
--R                <8 (|defaultTypeForCategory| (|Vector| *3))
--R                8> (|containsVars| (|Vector| *3))
--R                  9> (|containsVars1| (|Vector| *3))
--R                  <9 (|containsVars1| T)
--R                <8 (|containsVars| T)
--R                8> (|containsVars| (|Vector| *3))
--R                  9> (|containsVars1| (|Vector| *3))
--R                  <9 (|containsVars1| T)
--R                <8 (|containsVars| T)
--R                8> (|containsVars| (|Vector|))
--R                  9> (|containsVars1| (|Vector|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars| NIL)
--R                8> (|containsVars| (|Integer|))
--R                  9> (|containsVars1| (|Integer|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars| NIL)
--R                8> (|containsVars| NIL)
--R                <8 (|containsVars| NIL)
--R                8> (|containsVars| *3)
--R                <8 (|containsVars| T)
--R                8> (|containsVars| (|Vector|))
--R                  9> (|containsVars1| (|Vector|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars| NIL)
--R                8> (|containsVars| ((|Integer|)))
--R                  9> (|containsVars1| ((|Integer|)))
--R                    10> (|containsVars1| (|Integer|))
--R                    <10 (|containsVars1| NIL)
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *4 (|FiniteLinearAggregate| *3)) |coerce| NIL)
--R                8> (|hasCate| *4 (|FiniteLinearAggregate| *3) NIL)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteLinearAggregate| *3) NIL)
--R                <8 (|defaultTypeForCategory| (|Vector| *3))
--R              <7 (|evalMmCat1| ((*4 |Vector| *3)))
--R              7> (|evalMmCat1| (|ofCategory| *3 (|Ring|)) |coerce| ((*4 |Vector| *3)))
--R                8> (|hasCate| *3 (|Ring|) ((*4 |Vector| *3)))
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|Ring|) ((*4 |Vector| *3)))
--R                <8 (|defaultTypeForCategory| (|Integer|))
--R              <7 (|evalMmCat1| ((*3 |Integer|)))
--R            <6 (|evalMmCat| ((*3 |Integer|) (*4 |Vector| *3)))
--R          <5 (|evalMmCond0| ((*3 |Integer|) (*4 |Vector| *3)))
--R        <4 (|evalMmCond| ((*3 |Integer|) (*4 |Vector| *3)))
--R        4> (|fixUpTypeArgs| ((*3 |Integer|) (*4 |Vector| *3)))
--R          5> (|replaceSharpCalls| (|Integer|))
--R            6> (|noSharpCallsHere| (|Integer|))
--R            <6 (|noSharpCallsHere| T)
--R          <5 (|replaceSharpCalls| (|Integer|))
--R          5> (|replaceSharpCalls| (|Vector| *3))
--R            6> (|noSharpCallsHere| (|Vector| *3))
--R              7> (|noSharpCallsHere| *3)
--R              <7 (|noSharpCallsHere| T)
--R            <6 (|noSharpCallsHere| T)
--R          <5 (|replaceSharpCalls| (|Vector| *3))
--R        <4 (|fixUpTypeArgs| ((*3 |Integer|) (*4 |Vector| *3)))
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Mapping| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|MappingPackage1| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |MappingPackage1| *3) (*2 |Mapping| *3)))
--R            6> (|containsVars| (|Mapping| *3))
--R              7> (|containsVars1| (|Mapping| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Mapping| *3))
--R              7> (|containsVars1| (|Mapping| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Mapping| *3))
--R              7> (|containsVars1| (|Mapping| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|PrimitiveArray| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|ThreeDimensionalMatrix| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |ThreeDimensionalMatrix| *3) (*2 |PrimitiveArray| #)))
--R            6> (|containsVars| (|ThreeDimensionalMatrix| *3))
--R              7> (|containsVars1| (|ThreeDimensionalMatrix| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|ThreeDimensionalMatrix| *3))
--R              7> (|containsVars1| (|ThreeDimensionalMatrix| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|ThreeDimensionalMatrix|))
--R              7> (|containsVars1| (|ThreeDimensionalMatrix|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|PrimitiveArray| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|ThreeDimensionalMatrix| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |ThreeDimensionalMatrix| *3) (*2 |PrimitiveArray| #)))
--R            6> (|containsVars| (|ThreeDimensionalMatrix| *3))
--R              7> (|containsVars1| (|ThreeDimensionalMatrix| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|ThreeDimensionalMatrix| *3))
--R              7> (|containsVars1| (|ThreeDimensionalMatrix| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|ThreeDimensionalMatrix|))
--R              7> (|containsVars1| (|ThreeDimensionalMatrix|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|AssociatedLieAlgebra| *3 *2)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|NonAssociativeAlgebra| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| ((*1 |AssociatedLieAlgebra| *3 *2)))
--R            6> (|containsVars| (|AssociatedLieAlgebra| *3 *2))
--R              7> (|containsVars1| (|AssociatedLieAlgebra| *3 *2))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|AssociatedLieAlgebra| *3 *2))
--R              7> (|containsVars1| (|AssociatedLieAlgebra| *3 *2))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|AssociatedLieAlgebra|))
--R              7> (|containsVars1| (|AssociatedLieAlgebra|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|LeftAlgebra| *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *1 (|LeftAlgebra| *2)) (|ofCategory| *2 (|Ring|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|Ring|)) (|ofCategory| *1 (|LeftAlgebra| *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|LeftAlgebra| *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|LeftAlgebra| *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|LeftAlgebra| *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|LeftAlgebra| *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|LeftAlgebra| *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|LeftAlgebra| *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|LeftAlgebra| *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|Ring|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|Ring|) NIL)
--R                  9> (|hasCate1| (|Integer|) (|Ring|) NIL *2)
--R                    10> (|hasCate| (|Integer|) (|Ring|) NIL)
--R                    <10 (|hasCate| NIL)
--R                  <9 (|hasCate1| NIL)
--R                <8 (|hasCate| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| NIL)
--R          <5 (|evalMmCond0| NIL)
--R        <4 (|evalMmCond| NIL)
--R        4> (|fixUpTypeArgs| NIL)
--R        <4 (|fixUpTypeArgs| NIL)
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|CoercibleTo| *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *1 (|CoercibleTo| *2)) (|ofCategory| *2 (|Type|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|Type|)) (|ofCategory| *1 (|CoercibleTo| *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|CoercibleTo| *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|CoercibleTo| *2) NIL)
--R                  9> (|hasCate1| (|Integer|) (|CoercibleTo| *2) NIL *1)
--R                    10> (|hasCate| (|Integer|) (|CoercibleTo| *2) NIL)
--R                    11> (|mkDomPvar| $ (|Integer|) ((|OutputForm|)) (*2))
--R                    <11 (|mkDomPvar| (|Integer|))
--R                    11> (|domArg2| (|OutputForm|) (($ |Integer|)) (($ |Integer|)))
--R                    <11 (|domArg2| (|OutputForm|))
--R                    11> (|unifyStruct| (*2) ((|OutputForm|)) ((*1 |Integer|)))
--R                    12> (|unifyStruct| *2 (|OutputForm|) ((*1 |Integer|)))
--R                    13> (|unifyStructVar| *2 (|OutputForm|) ((*1 |Integer|)))
--R                    14> (|unifyStruct| (|List| (|Integer|)) (|OutputForm|) ((*1 |Integer|)))
--R                    15> (|unifyStruct| |List| |OutputForm| ((*1 |Integer|)))
--R                    <15 (|unifyStruct| |failed|)
--R                    <14 (|unifyStruct| |failed|)
--R                    <13 (|unifyStructVar| |failed|)
--R                    <12 (|unifyStruct| |failed|)
--R                    <11 (|unifyStruct| |failed|)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|Integer|) (|CoercibleTo| *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|Integer|) (|CoercibleTo| *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|CoercibleTo| *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|Type|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|Type|) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|Type|) NIL *2)
--R                    10> (|hasCate| (|List| (|Integer|)) (|Type|) NIL)
--R                    <10 (|hasCate| NIL)
--R                  <9 (|hasCate1| NIL)
--R                <8 (|hasCate| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| NIL)
--R          <5 (|evalMmCond0| NIL)
--R        <4 (|evalMmCond| NIL)
--R        4> (|fixUpTypeArgs| NIL)
--R        <4 (|fixUpTypeArgs| NIL)
--R        4> (|containsVars| ((|Integer|) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|Integer|) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|AssociatedJordanAlgebra| *3 *2)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|NonAssociativeAlgebra| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *3 #) (|isDomain| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| ((*1 |AssociatedJordanAlgebra| *3 *2)))
--R            6> (|containsVars| (|AssociatedJordanAlgebra| *3 *2))
--R              7> (|containsVars1| (|AssociatedJordanAlgebra| *3 *2))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|AssociatedJordanAlgebra| *3 *2))
--R              7> (|containsVars1| (|AssociatedJordanAlgebra| *3 *2))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|AssociatedJordanAlgebra|))
--R              7> (|containsVars1| (|AssociatedJordanAlgebra|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *6 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *6 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *6 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Field|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|OrderedAbelianMonoidSup|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *5 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # # # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *6 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *6 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *6 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |PolynomialIdeals| *3 *4 *5 *6) (*2 |List| *6)))
--R            6> (|containsVars| (|PolynomialIdeals| *3 *4 *5 *6))
--R              7> (|containsVars1| (|PolynomialIdeals| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PolynomialIdeals| *3 *4 *5 *6))
--R              7> (|containsVars1| (|PolynomialIdeals| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|PolynomialIdeals|))
--R              7> (|containsVars1| (|PolynomialIdeals|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|String|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|IndexCard|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |IndexCard|) (*2 |String|)))
--R            6> (|containsVars| (|IndexCard|))
--R              7> (|containsVars1| (|IndexCard|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|HexadecimalExpansion|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |HexadecimalExpansion|) (*2 |Fraction| #)))
--R            6> (|containsVars| (|HexadecimalExpansion|))
--R              7> (|containsVars1| (|HexadecimalExpansion|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|RadixExpansion| 16)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|HexadecimalExpansion|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |HexadecimalExpansion|) (*2 |RadixExpansion| 16)))
--R            6> (|containsVars| (|HexadecimalExpansion|))
--R              7> (|containsVars1| (|HexadecimalExpansion|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Heap| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |Heap| *3) (*2 |OutputForm|)))
--R            6> (|containsVars| (|Heap| *3))
--R              7> (|containsVars1| (|Heap| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Heap| *3))
--R              7> (|containsVars1| (|Heap| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Heap|))
--R              7> (|containsVars1| (|Heap|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofType| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofType| *5 *3)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofType| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofType| *5 *3)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Variable| *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofType| *5 *3))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |GeneralUnivariatePowerSeries| *3 *4 *5) (*2 |Variable| *4)))
--R            6> (|containsVars| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              7> (|containsVars1| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              7> (|containsVars1| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|GeneralUnivariatePowerSeries| *4 *5))
--R              7> (|containsVars1| (|GeneralUnivariatePowerSeries| *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofType| *4 #) (|ofType| *5 *3) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofType| *4 #) (|ofType| *5 *3) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 *3))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |GeneralUnivariatePowerSeries| *3 *4 *5) (*2 |UnivariatePuiseuxSeries| *3 *4 *5)))
--R            6> (|containsVars| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              7> (|containsVars1| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              7> (|containsVars1| (|GeneralUnivariatePowerSeries| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|GeneralUnivariatePowerSeries| *4 *5))
--R              7> (|containsVars1| (|GeneralUnivariatePowerSeries| *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranVectorFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |List| #)))
--R            6> (|containsVars| (|List| (|FortranCode|)))
--R              7> (|containsVars1| (|List| (|FortranCode|)))
--R                8> (|containsVars1| (|FortranCode|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranCode|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranVectorFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |FortranCode|)))
--R            6> (|containsVars| (|FortranCode|))
--R              7> (|containsVars1| (|FortranCode|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranVectorFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Record| # #)))
--R            6> (|containsVars| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R              7> (|containsVars1| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R                8> (|containsVars1| (|:| |localSymbols| (|SymbolTable|)))
--R                  9> (|containsVars1| (|SymbolTable|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R                8> (|containsVars1| (|:| |code| (|List| #)))
--R                  9> (|containsVars1| (|List| (|FortranCode|)))
--R                    10> (|containsVars1| (|FortranCode|))
--R                    <10 (|containsVars1| NIL)
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranVectorCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Vector| #)))
--R            6> (|containsVars| (|Vector| (|MachineFloat|)))
--R              7> (|containsVars1| (|Vector| (|MachineFloat|)))
--R                8> (|containsVars1| (|MachineFloat|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranVectorCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |List| #)))
--R            6> (|containsVars| (|List| (|FortranCode|)))
--R              7> (|containsVars1| (|List| (|FortranCode|)))
--R                8> (|containsVars1| (|FortranCode|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranCode|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranVectorCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |FortranCode|)))
--R            6> (|containsVars| (|FortranCode|))
--R              7> (|containsVars1| (|FortranCode|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranVectorCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Record| # #)))
--R            6> (|containsVars| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R              7> (|containsVars1| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R                8> (|containsVars1| (|:| |localSymbols| (|SymbolTable|)))
--R                  9> (|containsVars1| (|SymbolTable|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R                8> (|containsVars1| (|:| |code| (|List| #)))
--R                  9> (|containsVars1| (|List| (|FortranCode|)))
--R                    10> (|containsVars1| (|FortranCode|))
--R                    <10 (|containsVars1| NIL)
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranType|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranType|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|FortranType|))
--R              7> (|containsVars1| (|FortranType|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranScalarType|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranType|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranType|) (*2 |FortranScalarType|)))
--R            6> (|containsVars| (|FortranType|))
--R              7> (|containsVars1| (|FortranType|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|String|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranScalarType|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranScalarType|) (*2 |String|)))
--R            6> (|containsVars| (|FortranScalarType|))
--R              7> (|containsVars1| (|FortranScalarType|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Symbol|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranScalarType|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranScalarType|) (*2 |Symbol|)))
--R            6> (|containsVars| (|FortranScalarType|))
--R              7> (|containsVars1| (|FortranScalarType|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Symbol|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranScalarType|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranScalarType|) (*2 |Symbol|)))
--R            6> (|containsVars| (|FortranScalarType|))
--R              7> (|containsVars1| (|FortranScalarType|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|SExpression|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranScalarType|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranScalarType|) (*2 |SExpression|)))
--R            6> (|containsVars| (|FortranScalarType|))
--R              7> (|containsVars1| (|FortranScalarType|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|SparseMultivariatePolynomial| *3 #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Ring|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FunctionSpace| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |SparseMultivariatePolynomial| *3 #)))
--R            6> (|containsVars| (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
--R              7> (|containsVars1| (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
--R              7> (|containsVars1| (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|SparseMultivariatePolynomial|))
--R              7> (|containsVars1| (|SparseMultivariatePolynomial|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|IntegralDomain|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FunctionSpace| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Fraction| *3)))
--R            6> (|containsVars| (|Fraction| *3))
--R              7> (|containsVars1| (|Fraction| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Fraction| *3))
--R              7> (|containsVars1| (|Fraction| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Fraction|))
--R              7> (|containsVars1| (|Fraction|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Polynomial| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|IntegralDomain|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FunctionSpace| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Polynomial| #)))
--R            6> (|containsVars| (|Polynomial| (|Fraction| *3)))
--R              7> (|containsVars1| (|Polynomial| (|Fraction| *3)))
--R                8> (|containsVars1| (|Fraction| *3))
--R                <8 (|containsVars1| T)
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Polynomial| (|Fraction| *3)))
--R              7> (|containsVars1| (|Polynomial| (|Fraction| *3)))
--R                8> (|containsVars1| (|Fraction| *3))
--R                <8 (|containsVars1| T)
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Polynomial|))
--R              7> (|containsVars1| (|Polynomial|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|IntegralDomain|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FunctionSpace| *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Fraction| #)))
--R            6> (|containsVars| (|Fraction| (|Polynomial| #)))
--R              7> (|containsVars1| (|Fraction| (|Polynomial| #)))
--R                8> (|containsVars1| (|Polynomial| (|Fraction| *3)))
--R                  9> (|containsVars1| (|Fraction| *3))
--R                  <9 (|containsVars1| T)
--R                <8 (|containsVars1| T)
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Fraction| (|Polynomial| #)))
--R              7> (|containsVars1| (|Fraction| (|Polynomial| #)))
--R                8> (|containsVars1| (|Polynomial| (|Fraction| *3)))
--R                  9> (|containsVars1| (|Fraction| *3))
--R                  <9 (|containsVars1| T)
--R                <8 (|containsVars1| T)
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Fraction|))
--R              7> (|containsVars1| (|Fraction|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FourierSeries| *2 *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|Join| # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Join| # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #) (|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *1 #) (|ofCategory| *2 #) (|ofCategory| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *1 #) (|ofCategory| *2 #) (|ofCategory| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *1 #) (|ofCategory| *2 #) (|ofCategory| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |FourierSeries| *2 *3)))
--R            6> (|containsVars| (|FourierSeries| *2 *3))
--R              7> (|containsVars1| (|FourierSeries| *2 *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FourierSeries| *2 *3))
--R              7> (|containsVars1| (|FourierSeries| *2 *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FourierSeries|))
--R              7> (|containsVars1| (|FourierSeries|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FourierComponent| *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|Join| # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #) (|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FourierSeries| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Join| # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #) (|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |FourierSeries| *3 *4) (*2 |FourierComponent| *4)))
--R            6> (|containsVars| (|FourierSeries| *3 *4))
--R              7> (|containsVars1| (|FourierSeries| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FourierSeries| *3 *4))
--R              7> (|containsVars1| (|FourierSeries| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FourierSeries|))
--R              7> (|containsVars1| (|FourierSeries|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranCode|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |FortranCode|)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |List| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Record| # #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Expression| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Expression| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Expression| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Equation| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Equation| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Equation| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Equation| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Equation| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Equation| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Expression| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Expression| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Expression| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Equation| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Equation| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Equation| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Equation| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #) (|ofType| *6 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Equation| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Union| # #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *6 (|SymbolTable|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranProgram| *3 *4 *5 *6) (*2 |Equation| #)))
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranProgram| *3 *4 *5 *6))
--R              7> (|containsVars1| (|FortranProgram| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |List| #)))
--R            6> (|containsVars| (|List| (|FortranCode|)))
--R              7> (|containsVars1| (|List| (|FortranCode|)))
--R                8> (|containsVars1| (|FortranCode|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranCode|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |FortranCode|)))
--R            6> (|containsVars| (|FortranCode|))
--R              7> (|containsVars1| (|FortranCode|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Record| # #)))
--R            6> (|containsVars| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R              7> (|containsVars1| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R                8> (|containsVars1| (|:| |localSymbols| (|SymbolTable|)))
--R                  9> (|containsVars1| (|SymbolTable|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R                8> (|containsVars1| (|:| |code| (|List| #)))
--R                  9> (|containsVars1| (|List| (|FortranCode|)))
--R                    10> (|containsVars1| (|FortranCode|))
--R                    <10 (|containsVars1| NIL)
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|ScriptFormulaFormat|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |ScriptFormulaFormat|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|ScriptFormulaFormat|))
--R              7> (|containsVars1| (|ScriptFormulaFormat|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|ScriptFormulaFormat|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|ScriptFormulaFormat1| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |ScriptFormulaFormat1| *3) (*2 |ScriptFormulaFormat|)))
--R            6> (|containsVars| (|ScriptFormulaFormat|))
--R              7> (|containsVars1| (|ScriptFormulaFormat|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|String|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FileNameCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |String|)))
--R            6> (|containsVars| (|String|))
--R              7> (|containsVars1| (|String|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|ofCategory| *1 #) (|isDomain| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FileNameCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|String|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|isDomain| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|isDomain| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|isDomain| *2 #)))
--R            <6 (|evalMmDom| ((*2 |String|)))
--R            6> (|containsVars| (|String|))
--R              7> (|containsVars1| (|String|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |List| #)))
--R            6> (|containsVars| (|List| (|FortranCode|)))
--R              7> (|containsVars1| (|List| (|FortranCode|)))
--R                8> (|containsVars1| (|FortranCode|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranCode|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |FortranCode|)))
--R            6> (|containsVars| (|FortranCode|))
--R              7> (|containsVars1| (|FortranCode|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Record| # #)))
--R            6> (|containsVars| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R              7> (|containsVars1| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R                8> (|containsVars1| (|:| |localSymbols| (|SymbolTable|)))
--R                  9> (|containsVars1| (|SymbolTable|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R                8> (|containsVars1| (|:| |code| (|List| #)))
--R                  9> (|containsVars1| (|List| (|FortranCode|)))
--R                    10> (|containsVars1| (|FortranCode|))
--R                    <10 (|containsVars1| NIL)
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Matrix| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranMatrixCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Matrix| #)))
--R            6> (|containsVars| (|Matrix| (|MachineFloat|)))
--R              7> (|containsVars1| (|Matrix| (|MachineFloat|)))
--R                8> (|containsVars1| (|MachineFloat|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranMatrixCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |List| #)))
--R            6> (|containsVars| (|List| (|FortranCode|)))
--R              7> (|containsVars1| (|List| (|FortranCode|)))
--R                8> (|containsVars1| (|FortranCode|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranCode|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranMatrixCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |FortranCode|)))
--R            6> (|containsVars| (|FortranCode|))
--R              7> (|containsVars1| (|FortranCode|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Record| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FortranMatrixCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *1 #)))
--R            <6 (|evalMmDom| ((*2 |Record| # #)))
--R            6> (|containsVars| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R              7> (|containsVars1| (|Record| (|:| |localSymbols| #) (|:| |code| #)))
--R                8> (|containsVars1| (|:| |localSymbols| (|SymbolTable|)))
--R                  9> (|containsVars1| (|SymbolTable|))
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R                8> (|containsVars1| (|:| |code| (|List| #)))
--R                  9> (|containsVars1| (|List| (|FortranCode|)))
--R                    10> (|containsVars1| (|FortranCode|))
--R                    <10 (|containsVars1| NIL)
--R                  <9 (|containsVars1| NIL)
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FreeLieAlgebra| *2 *3)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R                8> (|mmCatComp| (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *1 (|FreeLieAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *1 (|FreeLieAlgebra| *2 *3)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|FreeLieAlgebra| *2 *3)) |coerce| NIL)
--R                8> (|hasCate| *1 (|FreeLieAlgebra| *2 *3) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|FreeLieAlgebra| *2 *3) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|FreeLieAlgebra| *2 *3) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|FreeLieAlgebra| *2 *3) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|FreeLieAlgebra| *2 *3) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FreeLieAlgebra| *2 *3) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|OrderedSet|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|OrderedSet|) NIL)
--R                  9> (|hasCate1| (|Integer|) (|OrderedSet|) NIL *2)
--R                    10> (|hasCate| (|Integer|) (|OrderedSet|) NIL)
--R                    <10 (|hasCate| NIL)
--R                  <9 (|hasCate1| NIL)
--R                <8 (|hasCate| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *3 (|CommutativeRing|)) |coerce| NIL)
--R                8> (|hasCate| *3 (|CommutativeRing|) NIL)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|CommutativeRing|) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| NIL)
--R          <5 (|evalMmCond0| NIL)
--R        <4 (|evalMmCond| NIL)
--R        4> (|fixUpTypeArgs| NIL)
--R        <4 (|fixUpTypeArgs| NIL)
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FreeLieAlgebra| *3 *4)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|XDistributedPolynomial| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R            <6 (|evalMmDom| ((*2 |XDistributedPolynomial| *3 *4)))
--R            6> (|containsVars| (|XDistributedPolynomial| *3 *4))
--R              7> (|containsVars1| (|XDistributedPolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|XDistributedPolynomial| *3 *4))
--R              7> (|containsVars1| (|XDistributedPolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|XDistributedPolynomial|))
--R              7> (|containsVars1| (|XDistributedPolynomial|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|FreeLieAlgebra| *3 *4)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|XRecursivePolynomial| *3 *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #)))
--R            <6 (|evalMmDom| ((*2 |XRecursivePolynomial| *3 *4)))
--R            6> (|containsVars| (|XRecursivePolynomial| *3 *4))
--R              7> (|containsVars1| (|XRecursivePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|XRecursivePolynomial| *3 *4))
--R              7> (|containsVars1| (|XRecursivePolynomial| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|XRecursivePolynomial|))
--R              7> (|containsVars1| (|XRecursivePolynomial|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|FiniteFieldCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FiniteFieldHomomorphisms| *2 *4 *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R            6> (|evalMmCat| |coerce| (*1 *2 *3) ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R              7> (|orderMmCatStack| ((|ofCategory| *4 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R                8> (|mmCatComp| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *2 #) (|ofCategory| *3 #) (|ofCategory| *4 #)))
--R              7> (|evalMmCat1| (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)) |coerce| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                8> (|hasCate| *2 (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                  9> (|hasCate1| (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)) *2)
--R                    10> (|hasCate| (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *2 (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                    10> (|hasCateSpecialNew| *2 (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)) |coerce| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                8> (|hasCate| *3 (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                  9> (|hasCate1| (|Integer|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)) *3)
--R                    10> (|hasCate| (|Integer|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *3 (|Integer|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                    10> (|hasCateSpecialNew| *3 (|Integer|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *4 (|FiniteFieldCategory|)) |coerce| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                8> (|hasCate| *4 (|FiniteFieldCategory|) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteFieldCategory|) ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R          <5 (|evalMmCond0| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R        <4 (|evalMmCond| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R        4> (|fixUpTypeArgs| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R          5> (|replaceSharpCalls| (|FiniteFieldHomomorphisms| *2 *4 *3))
--R            6> (|noSharpCallsHere| (|FiniteFieldHomomorphisms| *2 *4 *3))
--R              7> (|noSharpCallsHere| *2)
--R              <7 (|noSharpCallsHere| T)
--R              7> (|noSharpCallsHere| *4)
--R              <7 (|noSharpCallsHere| T)
--R              7> (|noSharpCallsHere| *3)
--R              <7 (|noSharpCallsHere| T)
--R            <6 (|noSharpCallsHere| T)
--R          <5 (|replaceSharpCalls| (|FiniteFieldHomomorphisms| *2 *4 *3))
--R        <4 (|fixUpTypeArgs| ((*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R        4> (|containsVars| ((|FiniteFieldHomomorphisms| # *4 #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|FiniteFieldHomomorphisms| # *4 #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|FiniteFieldHomomorphisms| (|List| #) *4 (|Integer|)))
--R              7> (|containsVars1| (|List| (|Integer|)))
--R                8> (|containsVars1| (|Integer|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| T)
--R          <5 (|containsVars1| T)
--R        <4 (|containsVars| T)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|FiniteFieldCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FiniteFieldHomomorphisms| *3 *4 *2)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R            6> (|evalMmCat| |coerce| (*1 *2 *3) ((|ofCategory| *4 #) (|ofCategory| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R              7> (|orderMmCatStack| ((|ofCategory| *4 #) (|ofCategory| *2 #) (|ofCategory| *3 #)))
--R                8> (|mmCatComp| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)))
--R                <8 (|mmCatComp| T)
--R                8> (|mmCatComp| (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *2 #) (|ofCategory| *3 #) (|ofCategory| *4 #)))
--R              7> (|evalMmCat1| (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)) |coerce| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                8> (|hasCate| *2 (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                  9> (|hasCate1| (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)) *2)
--R                    10> (|hasCate| (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *2 (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                    10> (|hasCateSpecialNew| *2 (|List| (|Integer|)) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)) |coerce| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                8> (|hasCate| *3 (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                  9> (|hasCate1| (|Integer|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)) *3)
--R                    10> (|hasCate| (|Integer|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *3 (|Integer|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                    10> (|hasCateSpecialNew| *3 (|Integer|) (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteAlgebraicExtensionField| *4) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *4 (|FiniteFieldCategory|)) |coerce| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                8> (|hasCate| *4 (|FiniteFieldCategory|) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|FiniteFieldCategory|) ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R          <5 (|evalMmCond0| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R        <4 (|evalMmCond| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R        4> (|fixUpTypeArgs| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R          5> (|replaceSharpCalls| (|FiniteFieldHomomorphisms| *3 *4 *2))
--R            6> (|noSharpCallsHere| (|FiniteFieldHomomorphisms| *3 *4 *2))
--R              7> (|noSharpCallsHere| *3)
--R              <7 (|noSharpCallsHere| T)
--R              7> (|noSharpCallsHere| *4)
--R              <7 (|noSharpCallsHere| T)
--R              7> (|noSharpCallsHere| *2)
--R              <7 (|noSharpCallsHere| T)
--R            <6 (|noSharpCallsHere| T)
--R          <5 (|replaceSharpCalls| (|FiniteFieldHomomorphisms| *3 *4 *2))
--R        <4 (|fixUpTypeArgs| ((*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R        4> (|containsVars| ((|FiniteFieldHomomorphisms| # *4 #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|FiniteFieldHomomorphisms| # *4 #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|FiniteFieldHomomorphisms| (|Integer|) *4 (|List| #)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| T)
--R          <5 (|containsVars1| T)
--R        <4 (|containsVars| T)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofCategory| *5 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofCategory| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Expression| *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranExpression| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofCategory| *5 (|FortranMachineTypeCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *5 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *5 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *5 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *5 #)))
--R            <6 (|evalMmDom| ((*1 |FortranExpression| *3 *4 *5) (*2 |Expression| *5)))
--R            6> (|containsVars| (|FortranExpression| *3 *4 *5))
--R              7> (|containsVars1| (|FortranExpression| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranExpression| *3 *4 *5))
--R              7> (|containsVars1| (|FortranExpression| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|FortranExpression| *3 *4))
--R              7> (|containsVars1| (|FortranExpression| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|FortranCode|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |FortranCode|) (*2 |OutputForm|)))
--R            6> (|containsVars| (|FortranCode|))
--R              7> (|containsVars1| (|FortranCode|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|DifferentialVariableCategory| *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|OrderedSet|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *1 (|DifferentialVariableCategory| *2)) (|ofCategory| *2 (|OrderedSet|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *1 (|DifferentialVariableCategory| *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|DifferentialVariableCategory| *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|DifferentialVariableCategory| *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|DifferentialVariableCategory| *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|DifferentialVariableCategory| *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|DifferentialVariableCategory| *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|DifferentialVariableCategory| *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|DifferentialVariableCategory| *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|OrderedSet|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|OrderedSet|) NIL)
--R                  9> (|hasCate1| (|Integer|) (|OrderedSet|) NIL *2)
--R                    10> (|hasCate| (|Integer|) (|OrderedSet|) NIL)
--R                    <10 (|hasCate| NIL)
--R                  <9 (|hasCate1| NIL)
--R                <8 (|hasCate| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| NIL)
--R          <5 (|evalMmCond0| NIL)
--R        <4 (|evalMmCond| NIL)
--R        4> (|fixUpTypeArgs| NIL)
--R        <4 (|fixUpTypeArgs| NIL)
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *3 #) (|ofCategory| *4 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *3 (|SegmentBinding| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *4 (|Join| # # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|SegmentBinding| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|DrawNumericHack| *4)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # # # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *3 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *3 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|ofCategory| *4 #) (|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |DrawNumericHack| *4) (*2 |SegmentBinding| #) (*3 |SegmentBinding| #)))
--R            6> (|containsVars| (|SegmentBinding| (|Float|)))
--R              7> (|containsVars1| (|SegmentBinding| (|Float|)))
--R                8> (|containsVars1| (|Float|))
--R                <8 (|containsVars1| NIL)
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Dequeue| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |Dequeue| *3) (*2 |OutputForm|)))
--R            6> (|containsVars| (|Dequeue| *3))
--R              7> (|containsVars1| (|Dequeue| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Dequeue| *3))
--R              7> (|containsVars1| (|Dequeue| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Dequeue|))
--R              7> (|containsVars1| (|Dequeue|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|DecimalExpansion|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |DecimalExpansion|) (*2 |Fraction| #)))
--R            6> (|containsVars| (|DecimalExpansion|))
--R              7> (|containsVars1| (|DecimalExpansion|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|RadixExpansion| 10)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|DecimalExpansion|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |DecimalExpansion|) (*2 |RadixExpansion| 10)))
--R            6> (|containsVars| (|DecimalExpansion|))
--R              7> (|containsVars1| (|DecimalExpansion|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Join| # #)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Database| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Database| *3) (*2 |List| *3)))
--R            6> (|containsVars| (|Database| *3))
--R              7> (|containsVars1| (|Database| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Database| *3))
--R              7> (|containsVars1| (|Database| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Database|))
--R              7> (|containsVars1| (|Database|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofType| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofType| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|DirectProduct| *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 (|NonNegativeInteger|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofCategory| *5 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|CartesianTensor| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Integer|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |CartesianTensor| *3 *4 *5) (*2 |DirectProduct| *4 *5)))
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofType| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofType| *4 #) (|ofCategory| *5 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|SquareMatrix| *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 (|NonNegativeInteger|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofCategory| *5 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|CartesianTensor| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Integer|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |CartesianTensor| *3 *4 *5) (*2 |SquareMatrix| *4 *5)))
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *5 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|CartesianTensor| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Integer|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|NonNegativeInteger|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *5 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |CartesianTensor| *3 *4 *5) (*2 |List| *5)))
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofCategory| *5 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofCategory| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|List| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|CartesianTensor| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Integer|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|NonNegativeInteger|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofCategory| *5 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *5 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *5 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *5 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *5 #)))
--R            <6 (|evalMmDom| ((*1 |CartesianTensor| *3 *4 *5) (*2 |List| #)))
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4 *5))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|CartesianTensor| *3 *4))
--R              7> (|containsVars1| (|CartesianTensor| *3 *4))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Fraction| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|BinaryExpansion|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |BinaryExpansion|) (*2 |Fraction| #)))
--R            6> (|containsVars| (|BinaryExpansion|))
--R              7> (|containsVars1| (|BinaryExpansion|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|RadixExpansion| 2)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|BinaryExpansion|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |BinaryExpansion|) (*2 |RadixExpansion| 2)))
--R            6> (|containsVars| (|BinaryExpansion|))
--R              7> (|containsVars1| (|BinaryExpansion|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*1) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *1) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|OutputForm|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|ArrayStack| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|SetCategory|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *1) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |ArrayStack| *3) (*2 |OutputForm|)))
--R            6> (|containsVars| (|ArrayStack| *3))
--R              7> (|containsVars1| (|ArrayStack| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|ArrayStack| *3))
--R              7> (|containsVars1| (|ArrayStack| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|ArrayStack|))
--R              7> (|containsVars1| (|ArrayStack|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranExpression| # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp9| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp9| *3) (*2 |FortranExpression| # # #)))
--R            6> (|containsVars| (|Asp9| *3))
--R              7> (|containsVars1| (|Asp9| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp9| *3))
--R              7> (|containsVars1| (|Asp9| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp9| *3))
--R              7> (|containsVars1| (|Asp9| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Matrix| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp80| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp80| *3) (*2 |Matrix| #)))
--R            6> (|containsVars| (|Asp80| *3))
--R              7> (|containsVars1| (|Asp80| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp80| *3))
--R              7> (|containsVars1| (|Asp80| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp80| *3))
--R              7> (|containsVars1| (|Asp80| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp7| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp7| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp7| *3))
--R              7> (|containsVars1| (|Asp7| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp7| *3))
--R              7> (|containsVars1| (|Asp7| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp7| *3))
--R              7> (|containsVars1| (|Asp7| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp78| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp78| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp78| *3))
--R              7> (|containsVars1| (|Asp78| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp78| *3))
--R              7> (|containsVars1| (|Asp78| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp78| *3))
--R              7> (|containsVars1| (|Asp78| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Matrix| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp77| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp77| *3) (*2 |Matrix| #)))
--R            6> (|containsVars| (|Asp77| *3))
--R              7> (|containsVars1| (|Asp77| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp77| *3))
--R              7> (|containsVars1| (|Asp77| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp77| *3))
--R              7> (|containsVars1| (|Asp77| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Matrix| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp74| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp74| *3) (*2 |Matrix| #)))
--R            6> (|containsVars| (|Asp74| *3))
--R              7> (|containsVars1| (|Asp74| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp74| *3))
--R              7> (|containsVars1| (|Asp74| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp74| *3))
--R              7> (|containsVars1| (|Asp74| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp73| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp73| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp73| *3))
--R              7> (|containsVars1| (|Asp73| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp73| *3))
--R              7> (|containsVars1| (|Asp73| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp73| *3))
--R              7> (|containsVars1| (|Asp73| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp6| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp6| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp6| *3))
--R              7> (|containsVars1| (|Asp6| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp6| *3))
--R              7> (|containsVars1| (|Asp6| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp6| *3))
--R              7> (|containsVars1| (|Asp6| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp55| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp55| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp55| *3))
--R              7> (|containsVars1| (|Asp55| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp55| *3))
--R              7> (|containsVars1| (|Asp55| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp55| *3))
--R              7> (|containsVars1| (|Asp55| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp50| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp50| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp50| *3))
--R              7> (|containsVars1| (|Asp50| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp50| *3))
--R              7> (|containsVars1| (|Asp50| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp50| *3))
--R              7> (|containsVars1| (|Asp50| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranExpression| # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp4| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp4| *3) (*2 |FortranExpression| # # #)))
--R            6> (|containsVars| (|Asp4| *3))
--R              7> (|containsVars1| (|Asp4| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp4| *3))
--R              7> (|containsVars1| (|Asp4| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp4| *3))
--R              7> (|containsVars1| (|Asp4| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranExpression| # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp49| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp49| *3) (*2 |FortranExpression| # # #)))
--R            6> (|containsVars| (|Asp49| *3))
--R              7> (|containsVars1| (|Asp49| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp49| *3))
--R              7> (|containsVars1| (|Asp49| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp49| *3))
--R              7> (|containsVars1| (|Asp49| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp42| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp42| *3 *4 *5) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp42| *3 *4 *5))
--R              7> (|containsVars1| (|Asp42| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp42| *3 *4 *5))
--R              7> (|containsVars1| (|Asp42| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp42| *3 *4 *5))
--R              7> (|containsVars1| (|Asp42| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #) (|ofType| *4 #) (|ofType| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp41| *3 *4 *5)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *4 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp41| *3 *4 *5) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp41| *3 *4 *5))
--R              7> (|containsVars1| (|Asp41| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp41| *3 *4 *5))
--R              7> (|containsVars1| (|Asp41| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp41| *3 *4 *5))
--R              7> (|containsVars1| (|Asp41| *3 *4 *5))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp35| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp35| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp35| *3))
--R              7> (|containsVars1| (|Asp35| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp35| *3))
--R              7> (|containsVars1| (|Asp35| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp35| *3))
--R              7> (|containsVars1| (|Asp35| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp31| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp31| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp31| *3))
--R              7> (|containsVars1| (|Asp31| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp31| *3))
--R              7> (|containsVars1| (|Asp31| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp31| *3))
--R              7> (|containsVars1| (|Asp31| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranExpression| # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp24| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp24| *3) (*2 |FortranExpression| # # #)))
--R            6> (|containsVars| (|Asp24| *3))
--R              7> (|containsVars1| (|Asp24| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp24| *3))
--R              7> (|containsVars1| (|Asp24| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp24| *3))
--R              7> (|containsVars1| (|Asp24| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Matrix| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp20| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp20| *3) (*2 |Matrix| #)))
--R            6> (|containsVars| (|Asp20| *3))
--R              7> (|containsVars1| (|Asp20| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp20| *3))
--R              7> (|containsVars1| (|Asp20| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp20| *3))
--R              7> (|containsVars1| (|Asp20| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|FortranExpression| # # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp1| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp1| *3) (*2 |FortranExpression| # # #)))
--R            6> (|containsVars| (|Asp1| *3))
--R              7> (|containsVars1| (|Asp1| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp1| *3))
--R              7> (|containsVars1| (|Asp1| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp1| *3))
--R              7> (|containsVars1| (|Asp1| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp19| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp19| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp19| *3))
--R              7> (|containsVars1| (|Asp19| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp19| *3))
--R              7> (|containsVars1| (|Asp19| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp19| *3))
--R              7> (|containsVars1| (|Asp19| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofType| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|Asp10| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *3 (|Symbol|)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |Asp10| *3) (*2 |Vector| #)))
--R            6> (|containsVars| (|Asp10| *3))
--R              7> (|containsVars1| (|Asp10| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp10| *3))
--R              7> (|containsVars1| (|Asp10| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|Asp10| *3))
--R              7> (|containsVars1| (|Asp10| *3))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*3) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *2 *3) (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Any|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|AnyFunctions1| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Type|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *2 *3) ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #) (|ofCategory| *3 #)))
--R            <6 (|evalMmDom| ((*1 |AnyFunctions1| *3) (*2 |Any|)))
--R            6> (|containsVars| (|Any|))
--R              7> (|containsVars1| (|Any|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|SparseMultivariatePolynomial| # #)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|isDomain| *1 (|AlgebraicNumber|)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |AlgebraicNumber|) (*2 |SparseMultivariatePolynomial| # #)))
--R            6> (|containsVars| (|AlgebraicNumber|))
--R              7> (|containsVars1| (|AlgebraicNumber|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars| NIL)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofType| *6 #) (|isDomain| *1 #) (|ofType| *4 #) (|ofType| *5 #)))
--R        4> (|evalMmStack| (AND (|isDomain| *2 #) (|ofCategory| *3 #) (|ofType| *6 #) (|isDomain| *1 #) (|ofType| *4 #) (|ofType| *5 #)))
--R          5> (|evalMmStackInner| (|isDomain| *2 (|Vector| *3)))
--R          <5 (|evalMmStackInner| ((|isDomain| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *3 (|Field|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *3 #)))
--R          5> (|evalMmStackInner| (|ofType| *6 (|Vector| #)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|isDomain| *1 (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6)))
--R          <5 (|evalMmStackInner| ((|isDomain| *1 #)))
--R          5> (|evalMmStackInner| (|ofType| *4 (|PositiveInteger|)))
--R          <5 (|evalMmStackInner| NIL)
--R          5> (|evalMmStackInner| (|ofType| *5 (|List| #)))
--R          <5 (|evalMmStackInner| NIL)
--R        <4 (|evalMmStack| ((# # #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            6> (|evalMmDom| ((|isDomain| *2 #) (|ofCategory| *3 #) (|isDomain| *1 #)))
--R            <6 (|evalMmDom| ((*1 |AlgebraGivenByStructuralConstants| *3 *4 *5 *6) (*2 |Vector| *3)))
--R            6> (|containsVars| (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6))
--R              7> (|containsVars1| (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6))
--R              7> (|containsVars1| (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R            6> (|containsVars| (|AlgebraGivenByStructuralConstants| *4 *5 *6))
--R              7> (|containsVars1| (|AlgebraGivenByStructuralConstants| *4 *5 *6))
--R              <7 (|containsVars1| T)
--R            <6 (|containsVars| T)
--R          <5 (|evalMmCond0| |failed|)
--R        <4 (|evalMmCond| |failed|)
--R      <3 (|evalMm| NIL)
--R      3> (|matchTypes| (*2) ((|Integer|)) ((|Integer|)))
--R      <3 (|matchTypes| NIL)
--R      3> (|evalMm| |coerce| (|List| (|Integer|)) (*1 *1 *2) (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R        4> (|evalMmStack| (AND (|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *1 (|Algebra| *2)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *1 #)))
--R          5> (|evalMmStackInner| (|ofCategory| *2 (|CommutativeRing|)))
--R          <5 (|evalMmStackInner| ((|ofCategory| *2 #)))
--R        <4 (|evalMmStack| ((# #)))
--R        4> (|evalMmCond| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R          5> (|evalMmCond0| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            6> (|evalMmDom| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R            <6 (|evalMmDom| NIL)
--R            6> (|evalMmCat| |coerce| (*1 *1 *2) ((|ofCategory| *1 #) (|ofCategory| *2 #)) NIL)
--R              7> (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R                8> (|mmCatComp| (|ofCategory| *1 (|Algebra| *2)) (|ofCategory| *2 (|CommutativeRing|)))
--R                <8 (|mmCatComp| NIL)
--R                8> (|mmCatComp| (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *1 (|Algebra| *2)))
--R                <8 (|mmCatComp| NIL)
--R              <7 (|orderMmCatStack| ((|ofCategory| *1 #) (|ofCategory| *2 #)))
--R              7> (|evalMmCat1| (|ofCategory| *1 (|Algebra| *2)) |coerce| NIL)
--R                8> (|hasCate| *1 (|Algebra| *2) NIL)
--R                  9> (|hasCate1| (|List| (|Integer|)) (|Algebra| *2) NIL *1)
--R                    10> (|hasCate| (|List| (|Integer|)) (|Algebra| *2) NIL)
--R                    <10 (|hasCate| |failed|)
--R                  <9 (|hasCate1| |failed|)
--R                  9> (|hasCateSpecial| *1 (|List| (|Integer|)) (|Algebra| *2) NIL)
--R                    10> (|hasCateSpecialNew| *1 (|List| (|Integer|)) (|Algebra| *2) NIL)
--R                    <10 (|hasCateSpecialNew| |failed|)
--R                  <9 (|hasCateSpecial| |failed|)
--R                <8 (|hasCate| |failed|)
--R                8> (|defaultTypeForCategory| (|Algebra| *2) NIL)
--R                <8 (|defaultTypeForCategory| NIL)
--R              <7 (|evalMmCat1| NIL)
--R              7> (|evalMmCat1| (|ofCategory| *2 (|CommutativeRing|)) |coerce| NIL)
--R                8> (|hasCate| *2 (|CommutativeRing|) NIL)
--R                  9> (|hasCate1| (|Integer|) (|CommutativeRing|) NIL *2)
--R                    10> (|hasCate| (|Integer|) (|CommutativeRing|) NIL)
--R                    <10 (|hasCate| NIL)
--R                  <9 (|hasCate1| NIL)
--R                <8 (|hasCate| NIL)
--R              <7 (|evalMmCat1| NIL)
--R            <6 (|evalMmCat| NIL)
--R          <5 (|evalMmCond0| NIL)
--R        <4 (|evalMmCond| NIL)
--R        4> (|fixUpTypeArgs| NIL)
--R        <4 (|fixUpTypeArgs| NIL)
--R        4> (|containsVars| ((|List| #) (|List| #) (|Integer|)))
--R          5> (|containsVars1| ((|List| #) (|List| #) (|Integer|)))
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|List| (|Integer|)))
--R              7> (|containsVars1| (|Integer|))
--R              <7 (|containsVars1| NIL)
--R            <6 (|containsVars1| NIL)
--R            6> (|containsVars1| (|Integer|))
--R            <6 (|containsVars1| NIL)
--R          <5 (|containsVars1| NIL)
--R        <4 (|containsVars| NIL)
--R      <3 (|evalMm| NIL)
--R    <2 (|selectMmsGen,matchMms| NIL)
--R  <1 (|selectMmsGen| NIL)
--R
--R   (4)  [555555,1,4,2,- 6,0,3,5,4,2,3]
--R                                                           Type: List Integer
--E 4

)lisp (untrace)
 
)lisp (trace |hasAtt|)

--S 5 of 31
removeDuplicates l
--R 
--R  1> (|hasAtt| (|List| (|Integer|)) |finiteAggregate| NIL)
--R  <1 (|hasAtt| NIL)
--R
--R   (5)  [1,4,2,- 6,0,3,5]
--R                                                           Type: List Integer
--E 5

)lisp (untrace)
 
)lisp (trace |defaultTargetFE|)
)lisp (trace |domArg|)
)lisp (trace |domainDepth|)
)lisp (trace |hasCaty1|)
)lisp (trace |hitListOfTarget|)
)lisp (trace |mmCost|)
)lisp (trace |mmCost0|)

--S 6 of 31
p := numeric %pi
--R 
--R  1> (|defaultTargetFE| (|Pi|))
--R  <1 (|defaultTargetFE| (|Expression| (|Integer|)))
--R  1> (|hasCaty1| (OR (|has| # #) (|has| # #) (|has| # #) (|has| # #) (|has| # #)) NIL)
--R  <1 (|hasCaty1| NIL)
--R  1> (|defaultTargetFE| (|Integer|))
--R  <1 (|defaultTargetFE| (|Expression| (|Integer|)))
--R  1> (|hasCaty1| (OR (|has| # #) (|has| # #) (|has| # #)) NIL)
--R  <1 (|hasCaty1| NIL)
--R  1> (|domArg| (|Pi|) 0 ((|Fraction| #)) ((|Symbol|)))
--R  <1 (|domArg| (|Pi|))
--R  1> (|domArg| (|Pi|) 0 ((|Integer|)) ((|Symbol|)))
--R  <1 (|domArg| (|Pi|))
--R  1> (|domArg| (|Pi|) 0 (|#1|) ((|Symbol|)))
--R  <1 (|domArg| (|Symbol|))
--R  1> (|domArg| (|Pi|) 0 ((|Symbol|)) ((|Symbol|)))
--R  <1 (|domArg| (|Pi|))
--R  1> (|mmCost| |numeric| ((|Numeric| #) (|Float|) (|Fraction| #)) (NIL) NIL ((|Pi|)) (NIL))
--R    2> (|mmCost0| |numeric| ((|Numeric| #) (|Float|) (|Fraction| #)) (NIL) NIL ((|Pi|)) (NIL))
--R      3> (|domainDepth| (|Float|))
--R        4> (|domainDepth| |Float|)
--R        <4 (|domainDepth| 0)
--R        4> (|domainDepth| NIL)
--R        <4 (|domainDepth| 0)
--R      <3 (|domainDepth| 1)
--R      3> (|hitListOfTarget| (|Float|))
--R      <3 (|hitListOfTarget| 500)
--R    <2 (|mmCost0| 51500)
--R  <1 (|mmCost| 51500)
--R  1> (|mmCost| |numeric| ((|Numeric| #) (|Float|) (|Pi|)) (NIL) NIL ((|Pi|)) (NIL))
--R    2> (|mmCost0| |numeric| ((|Numeric| #) (|Float|) (|Pi|)) (NIL) NIL ((|Pi|)) (NIL))
--R      3> (|domainDepth| (|Float|))
--R        4> (|domainDepth| |Float|)
--R        <4 (|domainDepth| 0)
--R        4> (|domainDepth| NIL)
--R        <4 (|domainDepth| 0)
--R      <3 (|domainDepth| 1)
--R      3> (|hitListOfTarget| (|Float|))
--R      <3 (|hitListOfTarget| 500)
--R    <2 (|mmCost0| 11500)
--R  <1 (|mmCost| 11500)
--R  1> (|mmCost| |numeric| ((|Numeric| #) (|Float|) (|Polynomial| #)) (NIL) NIL ((|Pi|)) (NIL))
--R    2> (|mmCost0| |numeric| ((|Numeric| #) (|Float|) (|Polynomial| #)) (NIL) NIL ((|Pi|)) (NIL))
--R      3> (|domainDepth| (|Float|))
--R        4> (|domainDepth| |Float|)
--R        <4 (|domainDepth| 0)
--R        4> (|domainDepth| NIL)
--R        <4 (|domainDepth| 0)
--R      <3 (|domainDepth| 1)
--R      3> (|hitListOfTarget| (|Float|))
--R      <3 (|hitListOfTarget| 500)
--R    <2 (|mmCost0| 51500)
--R  <1 (|mmCost| 51500)
--R
--R   (6)  3.1415926535 897932385
--R                                                                  Type: Float
--E 6

)lisp (untrace)
 
)lisp (trace |findCommonSigInDomain|)
)lisp (trace |isOpInDomain|)
)lisp (trace |selectDollarMms|)

--S 7 of 31
a := 163.0
--R 
--R  1> (|isOpInDomain| |float| (|Float|) 1)
--R  <1 (|isOpInDomain| NIL)
--R  1> (|isOpInDomain| |float| (|Float|) 3)
--R  <1 (|isOpInDomain| ((# 107 T ELT)))
--R  1> (|findCommonSigInDomain| |float| (|Float|) 3)
--R  <1 (|findCommonSigInDomain| ((|Float|) (|Integer|) (|Integer|) (|PositiveInteger|)))
--R  1> (|selectDollarMms| (|Float|) |float| ((|Integer|) (|Integer|) (|PositiveInteger|)) (NIL NIL (|Integer|)))
--R  <1 (|selectDollarMms| ((# # #)))
--R
--R   (7)  163.0
--R                                                                  Type: Float
--E 7

)lisp (untrace)
 
)lisp (trace |isAVariableType|)

--S 8 of 31
16*c**4 - 16*c**2 + 1
--R 
--R  1> (|isAVariableType| (|Variable| |c|))
--R  <1 (|isAVariableType| T)
--R  1> (|isAVariableType| (|Variable| |c|))
--R  <1 (|isAVariableType| T)
--R
--R           4      2
--R   (8)  16c  - 16c  + 1
--R                                                     Type: Polynomial Integer
--E 8

)lisp (untrace)
 
)lisp (trace |hasAttSig|)
)lisp (trace |hasSig|)

--S 9 of 31
u := factor (x**4 - y**4)
--R 
--R  1> (|hasAttSig| (|Symbol|) ((SIGNATURE |convert| #)) ((*5 |Symbol|) (*4 |IndexedExponents| #) (*3 |Polynomial| #) (*1 |MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3) (*2 |Factored| *3)))
--R    2> (|hasSig| (|Symbol|) |convert| ((|Symbol|) (|Symbol|)) ((*5 |Symbol|) (*4 |IndexedExponents| #) (*3 |Polynomial| #) (*1 |MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3) (*2 |Factored| *3)))
--R    <2 (|hasSig| ((*5 |Symbol|) (*4 |IndexedExponents| #) (*3 |Polynomial| #) (*1 |MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3) (*2 |Factored| *3)))
--R  <1 (|hasAttSig| ((*5 |Symbol|) (*4 |IndexedExponents| #) (*3 |Polynomial| #) (*1 |MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3) (*2 |Factored| *3)))
--R  1> (|hasAttSig| (|Symbol|) ((SIGNATURE |convert| #)) NIL)
--R    2> (|hasSig| (|Symbol|) |convert| ((|Symbol|) (|Symbol|)) NIL)
--R    <2 (|hasSig| NIL)
--R  <1 (|hasAttSig| NIL)
--R
--R                          2    2
--R   (9)  - (y - x)(y + x)(y  + x )
--R                                            Type: Factored Polynomial Integer
--E 9

)lisp (untrace)
 
)lisp (trace |getSymbolType|)

--S 10 of 31
v := nilFactor(x-y,2) * nilFactor(x+y,2) * nilFactor(x**2 + y**2,1)
--R 
--R  1> (|getSymbolType| *1)
--R  <1 (|getSymbolType| (|Polynomial| (|Integer|)))
--R  1> (|getSymbolType| *1)
--R  <1 (|getSymbolType| (|Polynomial| (|Integer|)))
--R  1> (|getSymbolType| *2)
--R  <1 (|getSymbolType| (|Polynomial| (|Integer|)))
--R  1> (|getSymbolType| *1)
--R  <1 (|getSymbolType| (|Polynomial| (|Integer|)))
--R  1> (|getSymbolType| *1)
--R  <1 (|getSymbolType| (|Polynomial| (|Integer|)))
--R  1> (|getSymbolType| *1)
--R  <1 (|getSymbolType| (|Polynomial| (|Integer|)))
--R  1> (|getSymbolType| *1)
--R  <1 (|getSymbolType| (|Polynomial| (|Integer|)))
--R  1> (|getSymbolType| *1)
--R  <1 (|getSymbolType| (|Polynomial| (|Integer|)))
--R  1> (|getSymbolType| *2)
--R  <1 (|getSymbolType| (|Polynomial| (|Integer|)))
--R  1> (|getSymbolType| *1)
--R  <1 (|getSymbolType| (|Polynomial| (|Integer|)))
--R  1> (|getSymbolType| *1)
--R  <1 (|getSymbolType| (|Polynomial| (|Integer|)))
--R  1> (|getSymbolType| *1)
--R  <1 (|getSymbolType| (|Polynomial| (|Integer|)))
--R  1> (|getSymbolType| *1)
--R  <1 (|getSymbolType| (|Polynomial| (|Integer|)))
--R  1> (|getSymbolType| *1)
--R  <1 (|getSymbolType| (|Polynomial| (|Integer|)))
--R
--R                2       2  2    2
--R   (10)  (y - x) (y + x) (y  + x )
--R                                            Type: Factored Polynomial Integer
--E 10

)lisp (untrace)
 
)lisp (trace |constrArg|)
)lisp (trace |makeConstrArg|)

--S 11 of 31
ux:UP(x,PF(19)) :=3*x**4+2*x**2+15*x+18
--R 
--R  1> (|constrArg| (|PositiveInteger|) ((|#1| . 19) ($ |PrimeField| 19)) ((*4 . *3) (*3 |PrimeField| 19) (*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R  <1 (|constrArg| (|PositiveInteger|))
--R  1> (|constrArg| (|PositiveInteger|) ((|#1| . 19) ($ |PrimeField| 19)) ((*4 . *3) (*3 |PrimeField| 19) (*1 |FiniteFieldHomomorphisms| *2 *4 *3)))
--R  <1 (|constrArg| (|PositiveInteger|))
--R  1> (|makeConstrArg| 19 19 (|PositiveInteger|) (|PositiveInteger|) NIL)
--R  <1 (|makeConstrArg| 19)
--R  1> (|constrArg| (|PositiveInteger|) ((|#1| . 19) ($ |PrimeField| 19)) ((*4 . *3) (*3 |PrimeField| 19) (*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R  <1 (|constrArg| (|PositiveInteger|))
--R  1> (|constrArg| (|PositiveInteger|) ((|#1| . 19) ($ |PrimeField| 19)) ((*4 . *3) (*3 |PrimeField| 19) (*1 |FiniteFieldHomomorphisms| *3 *4 *2)))
--R  <1 (|constrArg| (|PositiveInteger|))
--R  1> (|makeConstrArg| 19 19 (|PositiveInteger|) (|PositiveInteger|) NIL)
--R  <1 (|makeConstrArg| 19)
--R
--R           4     2
--R   (11)  3x  + 2x  + 15x + 18
--R                                  Type: UnivariatePolynomial(x,PrimeField 19)
--E 11

)lisp (untrace)
 
)lisp (trace |getFunctionFromDomain|)
)lisp (trace |isTowerWithSubdomain|)

--S 12 of 31
f:MPOLY([x,y,z],FRAC INT) :=(4/9*x**2-1/16)*(x**3/27+125)
--R 
--R  1> (|isTowerWithSubdomain| (|Fraction| (|Integer|)) (|Integer|))
--R  <1 (|isTowerWithSubdomain| (|Fraction| (|Integer|)))
--R  1> (|getFunctionFromDomain| |ground?| (|MultivariatePolynomial| (|x| |y| |z|) (|Fraction| #)) ((|MultivariatePolynomial| # #)))
--I  <1 (|getFunctionFromDomain| (#<compiled-function |SMP;ground?;$B;16|> . #<vector 09454d58>))
--R  1> (|getFunctionFromDomain| |leadingMonomial| (|MultivariatePolynomial| (|x| |y| |z|) (|Fraction| #)) ((|MultivariatePolynomial| # #)))
--I  <1 (|getFunctionFromDomain| (#<compiled-function |SMP;leadingMonomial;2$;78|> . #<vector 09454d58>))
--R  1> (|getFunctionFromDomain| |leadingCoefficient| (|MultivariatePolynomial| (|x| |y| |z|) (|Fraction| #)) ((|MultivariatePolynomial| # #)))
--I  <1 (|getFunctionFromDomain| (#<compiled-function |SMP;leadingCoefficient;$R;77|> . #<vector 09454d58>))
--R  1> (|isTowerWithSubdomain| (|Fraction| (|Integer|)) (|Integer|))
--R  <1 (|isTowerWithSubdomain| (|Fraction| (|Integer|)))
--R  1> (|getFunctionFromDomain| |primitiveMonomials| (|MultivariatePolynomial| (|x| |y| |z|) (|Fraction| #)) ((|MultivariatePolynomial| # #)))
--I  <1 (|getFunctionFromDomain| (#<compiled-function |POLYCAT-;primitiveMonomials;SL;12|> . #<vector 093c071c>))
--R  1> (|isTowerWithSubdomain| (|MultivariatePolynomial| (|x| |y| |z|) (|Fraction| #)) (|Fraction| (|Integer|)))
--R  <1 (|isTowerWithSubdomain| (|MultivariatePolynomial| (|x| |y| |z|) (|Fraction| #)))
--R  1> (|getFunctionFromDomain| |reductum| (|MultivariatePolynomial| (|x| |y| |z|) (|Fraction| #)) ((|MultivariatePolynomial| # #)))
--I  <1 (|getFunctionFromDomain| (#<compiled-function |SMP;reductum;2$;79|> . #<vector 09454d58>))
--R  1> (|getFunctionFromDomain| |ground?| (|MultivariatePolynomial| (|x| |y| |z|) (|Fraction| #)) ((|MultivariatePolynomial| # #)))
--I  <1 (|getFunctionFromDomain| (#<compiled-function |SMP;ground?;$B;16|> . #<vector 09454d58>))
--R  1> (|getFunctionFromDomain| |ground| (|MultivariatePolynomial| (|x| |y| |z|) (|Fraction| #)) ((|MultivariatePolynomial| # #)))
--I  <1 (|getFunctionFromDomain| (#<compiled-function |FAMR-;ground;SR;4|> . #<vector 09151e70>))
--R  1> (|getFunctionFromDomain| + (|Fraction| (|MultivariatePolynomial| # #)) ((|Fraction| #) (|Fraction| #)))
--I  <1 (|getFunctionFromDomain| (#<compiled-function |FRAC;+;3$;21|> . #<vector 093c0e54>))
--R  1> (|getFunctionFromDomain| * (|Fraction| (|MultivariatePolynomial| # #)) ((|Fraction| #) (|Fraction| #)))
--I  <1 (|getFunctionFromDomain| (#<compiled-function |FRAC;*;3$;23|> . #<vector 093c0e54>))
--R  1> (|isTowerWithSubdomain| (|Fraction| (|MultivariatePolynomial| # #)) (|MultivariatePolynomial| (|x| |y| |z|) (|Integer|)))
--R  <1 (|isTowerWithSubdomain| (|Fraction| (|MultivariatePolynomial| # #)))
--R  1> (|isTowerWithSubdomain| (|MultivariatePolynomial| (|x| |y| |z|) (|Integer|)) (|Integer|))
--R  <1 (|isTowerWithSubdomain| (|MultivariatePolynomial| (|x| |y| |z|) (|Integer|)))
--R
--R          4   5    1   3   500  2   125
--R   (12)  --- x  - --- x  + --- x  - ---
--R         243      432       9        16
--R                       Type: MultivariatePolynomial([x,y,z],Fraction Integer)
--E 12

)lisp (untrace)
 
)lisp (trace |doReplaceSharpCalls|)

--S 13 of 31
g:DMP([x,y],FRAC POLY INT):=a**2*x**2/b**2 -c**2*y**2/d**2
--R 
--R  1> (|doReplaceSharpCalls| (|DirectProduct| (|#| #) (|NonNegativeInteger|)))
--R    2> (|doReplaceSharpCalls| (|#| (|x| |y|)))
--R    <2 (|doReplaceSharpCalls| 2)
--R    2> (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R    <2 (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R  <1 (|doReplaceSharpCalls| (|DirectProduct| 2 (|NonNegativeInteger|)))
--R  1> (|doReplaceSharpCalls| (|DirectProduct| (|#| #) (|NonNegativeInteger|)))
--R    2> (|doReplaceSharpCalls| (|#| (|x| |y|)))
--R    <2 (|doReplaceSharpCalls| 2)
--R    2> (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R    <2 (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R  <1 (|doReplaceSharpCalls| (|DirectProduct| 2 (|NonNegativeInteger|)))
--R  1> (|doReplaceSharpCalls| (|DirectProduct| (|#| #) (|NonNegativeInteger|)))
--R    2> (|doReplaceSharpCalls| (|#| (|x| |y|)))
--R    <2 (|doReplaceSharpCalls| 2)
--R    2> (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R    <2 (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R  <1 (|doReplaceSharpCalls| (|DirectProduct| 2 (|NonNegativeInteger|)))
--R  1> (|doReplaceSharpCalls| (|DirectProduct| (|#| #) (|NonNegativeInteger|)))
--R    2> (|doReplaceSharpCalls| (|#| (|x| |y|)))
--R    <2 (|doReplaceSharpCalls| 2)
--R    2> (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R    <2 (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R  <1 (|doReplaceSharpCalls| (|DirectProduct| 2 (|NonNegativeInteger|)))
--R  1> (|doReplaceSharpCalls| (|DirectProduct| (|#| #) (|NonNegativeInteger|)))
--R    2> (|doReplaceSharpCalls| (|#| (|x| |y|)))
--R    <2 (|doReplaceSharpCalls| 2)
--R    2> (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R    <2 (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R  <1 (|doReplaceSharpCalls| (|DirectProduct| 2 (|NonNegativeInteger|)))
--R  1> (|doReplaceSharpCalls| (|DirectProduct| (|#| #) (|NonNegativeInteger|)))
--R    2> (|doReplaceSharpCalls| (|#| (|x| |y|)))
--R    <2 (|doReplaceSharpCalls| 2)
--R    2> (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R    <2 (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R  <1 (|doReplaceSharpCalls| (|DirectProduct| 2 (|NonNegativeInteger|)))
--R  1> (|doReplaceSharpCalls| (|DirectProduct| (|#| #) (|NonNegativeInteger|)))
--R    2> (|doReplaceSharpCalls| (|#| (|x| |y|)))
--R    <2 (|doReplaceSharpCalls| 2)
--R    2> (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R    <2 (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R  <1 (|doReplaceSharpCalls| (|DirectProduct| 2 (|NonNegativeInteger|)))
--R  1> (|doReplaceSharpCalls| (|DirectProduct| (|#| #) (|NonNegativeInteger|)))
--R    2> (|doReplaceSharpCalls| (|#| (|x| |y|)))
--R    <2 (|doReplaceSharpCalls| 2)
--R    2> (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R    <2 (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R  <1 (|doReplaceSharpCalls| (|DirectProduct| 2 (|NonNegativeInteger|)))
--R  1> (|doReplaceSharpCalls| (|DirectProduct| (|#| #) (|NonNegativeInteger|)))
--R    2> (|doReplaceSharpCalls| (|#| (|x| |y|)))
--R    <2 (|doReplaceSharpCalls| 2)
--R    2> (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R    <2 (|doReplaceSharpCalls| (|NonNegativeInteger|))
--R  <1 (|doReplaceSharpCalls| (|DirectProduct| 2 (|NonNegativeInteger|)))
--R
--R                     2
--R         26569  2   c   2
--R   (13)  ----- x  - -- y
--R            2        2
--R           b        d
--R   Type: DistributedMultivariatePolynomial([x,y],Fraction Polynomial Integer)
--E 13

)lisp (untrace)
 
)lisp (trace |getLocalMms,f|)

--S 14 of 31
fib(n | n = 0) == 1
--R 
--R                                                                   Type: Void
--E 14

--S 15 of 31
fib(n | n = 1) == 1
--R 
--R                                                                   Type: Void
--E 15

--S 16 of 31
fib(n | n > 1) == fib(n-1) + fib(n-2)
--R 
--R                                                                   Type: Void
--E 16

--S 17 of 31
fib 5
--R 
--R  1> (|getLocalMms,f| (|Integer|) (|Integer|) T)
--R  <1 (|getLocalMms,f| T)
--R  1> (|getLocalMms,f| (|Integer|) (|Integer|) T)
--R  <1 (|getLocalMms,f| T)
--R   Compiling function fib with type Integer -> PositiveInteger 
--R   Compiling function fib as a recurrence relation.
--R  1> (|getLocalMms,f| (|PositiveInteger|) (|Integer|) T)
--R  <1 (|getLocalMms,f| (|PositiveInteger|))
--R
--R   (17)  8
--R                                                        Type: PositiveInteger
--E 17

)clear all
 
)lisp (untrace)
 
)lisp (trace |mkRationalFunction|)

--S 18 of 31
laplace(2/t * (1 - cos(a*t)), t, s)
--R 
--R  1> (|mkRationalFunction| (|Integer|))
--R  <1 (|mkRationalFunction| (|Fraction| (|Polynomial| #)))
--R
--R             2    2
--R   (1)  log(s  + a ) - 2log(s)
--R                                                     Type: Expression Integer
--E 18

)lisp (untrace)
 
)lisp (trace |hasSigAnd|)

--S 19 of 31
rootSimp(normalize(z))
--R 
--R  1> (|hasSigAnd| ((|has| |#1| #) (|has| |#1| #)) ((|#1| . *3) ($ |Expression| *3)) ((*3 |Integer|) (*3 |Integer|) (*3 |Integer|) (*2 |Expression| *3) (*1 |AlgebraicManipulations| *3 *2)))
--R  <1 (|hasSigAnd| ((*3 |Integer|) (*3 |Integer|) (*3 |Integer|) (*2 |Expression| *3) (*1 |AlgebraicManipulations| *3 *2)))
--R  1> (|hasSigAnd| ((|has| |#1| #) (|has| |#1| #)) ((|#1| |Integer|) ($ |Expression| #)) NIL)
--R  <1 (|hasSigAnd| NIL)
--R
--R   (2)  z
--R                                                     Type: Expression Integer
--E 19

)lisp (untrace)
 
)lisp (trace |findFunctionInCategory|)

--S 20 of 31
a : UP('X,IntegerMod(4)) := 2 * X**2
--R 
--R
--R          2
--R   (3)  2X
--R                                   Type: UnivariatePolynomial(X,IntegerMod 4)
--E 20

--S 21 of 31
b : UP('X,IntegerMod(4)) := X**2 + 2*X + 1
--R 
--R
--R         2
--R   (4)  X  + 2X + 1
--R                                   Type: UnivariatePolynomial(X,IntegerMod 4)
--E 21

--S 22 of 31
qr := monicDivide(a, b)
--R 
--R
--R   (5)  [quotient= 2,remainder= 2]
--RType: Record(quotient: UnivariatePolynomial(X,IntegerMod 4),remainder: UnivariatePolynomial(X,IntegerMod 4))
--E 22

--S 23 of 31
a - (qr.quotient * b + qr.remainder)
--R 
--R  1> (|findFunctionInCategory| |elt| (|Record| (|:| |quotient| #) (|:| |remainder| #)) NIL ((|Record| # #) (|Variable| |quotient|)) (NIL (|Symbol|)) NIL NIL)
--R  <1 (|findFunctionInCategory| ((# # #)))
--R  1> (|findFunctionInCategory| |elt| (|Record| (|:| |quotient| #) (|:| |remainder| #)) NIL ((|Record| # #) (|Variable| |remainder|)) (NIL (|Symbol|)) NIL NIL)
--R  <1 (|findFunctionInCategory| ((# # #)))
--R
--R   (6)  0
--R                                   Type: UnivariatePolynomial(X,IntegerMod 4)
--E 23

)clear all
 
)lisp (untrace)
 
)lisp (trace |findUniqueOpInDomain|)

--S 24 of 31
bar?(n:INT):BOOLEAN == prime? n and is?(n, m**2 + 1)
--R 
--R   Function declaration bar? : Integer -> Boolean has been added to 
--R      workspace.
--R                                                                   Type: Void
--E 24

--S 25 of 31
myprimes := [i for i in 1.. | bar? i]
--R 
--I  1> (|findUniqueOpInDomain| #<vector 099f9150> |incrementBy| (|IncrementingMaps| (|PositiveInteger|)))
--R  <1 (|findUniqueOpInDomain| ((|Mapping| # #)))
--R   Compiling function bar? with type Integer -> Boolean 
--R
--R   (2)  [5,17,37,101,197,257,401,577,677,1297,...]
--R                                                 Type: Stream PositiveInteger
--E 25

)lisp (untrace)
 
)lisp (trace |hasCatExpression|)

--S 26 of 31
m5 : MATRIX POLY INT := new(4,4,1)
--R 
--R
--R        +1  1  1  1+
--R        |          |
--R        |1  1  1  1|
--R   (3)  |          |
--R        |1  1  1  1|
--R        |          |
--R        +1  1  1  1+
--R                                              Type: Matrix Polynomial Integer
--E 26

--S 27 of 31
vars : LIST POLY INT := [x,y,z,u]
--R 
--R
--R   (4)  [x,y,z,u]
--R                                                Type: List Polynomial Integer
--E 27

--S 28 of 31
for i in 1..4 repeat for j in 1..3 repeat m5(i,j + 1) := (vars.i)**j
--R 
--R                                                                   Type: Void
--E 28

--S 29 of 31
det := determinant(m5)
--R 
--R  1> (|hasCatExpression| (|has| (|Integer|) (|CommutativeRing|)) NIL)
--R  <1 (|hasCatExpression| NIL)
--R
--R   (6)
--R                2     2    2        2    2   3
--R     ((- x + u)y  + (x  - u )y - u x  + u x)z
--R   + 
--R              3       3    3        3    3   2
--R     ((x - u)y  + (- x  + u )y + u x  - u x)z
--R   + 
--R          2    2  3     3    3  2    2 3    3 2         2    2   3
--R     ((- x  + u )y  + (x  - u )y  - u x  + u x )z + (u x  - u x)y
--R   + 
--R           3    3   2     2 3    3 2
--R     (- u x  + u x)y  + (u x  - u x )y
--R                                                     Type: Polynomial Integer
--E 29

)lisp (untrace)
 
)lisp (trace |hasSigOr|)

--S 30 of 31
t1:=laurent(cos(a+x)/x,x=0)
--R 
--R
--R   (7)
--R            - 1            cos(a)     sin(a)  2   cos(a)  3   sin(a)  4
--R     cos(a)x    - sin(a) - ------ x + ------ x  + ------ x  - ------ x
--R                              2          6          24          120
--R   + 
--R       cos(a)  5   sin(a)  6   cos(a)  7   sin(a)  8    cos(a)  9      10
--R     - ------ x  + ------ x  + ------ x  - ------ x  - ------- x  + O(x  )
--R         720        5040        40320      362880      3628800
--R                        Type: UnivariateLaurentSeries(Expression Integer,x,0)
--E 30

--S 31 of 31
approximate(t1,3)
--R 
--R  1> (|hasSigOr| ((|has| |#1| #) (|has| |#1| #)) ((|#1| |Integer|) ($ |Expression| #)) NIL)
--R  <1 (|hasSigOr| NIL)
--R
--R           3                  4      2
--R        (4x  - 24x)sin(a) + (x  - 12x  + 24)cos(a)
--R   (8)  ------------------------------------------
--R                            24x
--R                                                     Type: Expression Integer
--E 31

 
)spool 
)lisp (bye)
 
\end{chunk}
\end{document}
