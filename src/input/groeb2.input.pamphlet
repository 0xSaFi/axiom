\documentclass{article}
\usepackage{axiom}
\setlength{\textwidth}{400pt}
\begin{document}
\title{\$SPAD/src/input groeb2.input}
\author{Raymond Rogers}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\begin{chunk}{*}
)set break resume
)sys rm -f groeb2.output
)spool groeb2.output
)set message test on
)set message auto off
)clear all

\end{chunk}
Let
\[p(x)=-x^2+x,\quad\quad q(x)=ay^2+by+c\]
Find $d$, $m$, $n$ (depending on the coefficients $a$, $b$, $c$ of $q$)
such that the transformation 
\[p(x)=dq(mx+n)\]

Set up the problem:
\begin{chunk}{*}
--S 1 of 31
Z==>Integer
--R 
--R                                                                   Type: Void
--E 1

--S 2 of 31
Q==>Fraction Z
--R 
--R                                                                   Type: Void
--E 2

--S 3 of 31
CP==>DistributedMultivariatePolynomial([a,b,c],Z)
--R 
--R                                                                   Type: Void
--E 3

--S 4 of 31
CF==>Fraction CP
--R 
--R                                                                   Type: Void
--E 4

--S 5 of 31
P==>DistributedMultivariatePolynomial([d,n,m],CF)
--R 
--R                                                                   Type: Void
--E 5

--S 6 of 31
PX==>UnivariatePolynomial('x,P)
--R 
--R                                                                   Type: Void
--E 6

--S 7 of 31
p(x:PX):PX == x*(1-x)
--R 
--R   Function declaration p : UnivariatePolynomial(x,
--R      DistributedMultivariatePolynomial([d,n,m],Fraction(
--R      DistributedMultivariatePolynomial([a,b,c],Integer)))) -> 
--R      UnivariatePolynomial(x,DistributedMultivariatePolynomial([d,n,m],
--R      Fraction(DistributedMultivariatePolynomial([a,b,c],Integer)))) 
--R      has been added to workspace.
--R                                                                   Type: Void
--E 7

--S 8 of 31
q(y:PX):PX == a*y^2+b*y+c
--R 
--R   Function declaration q : UnivariatePolynomial(x,
--R      DistributedMultivariatePolynomial([d,n,m],Fraction(
--R      DistributedMultivariatePolynomial([a,b,c],Integer)))) -> 
--R      UnivariatePolynomial(x,DistributedMultivariatePolynomial([d,n,m],
--R      Fraction(DistributedMultivariatePolynomial([a,b,c],Integer)))) 
--R      has been added to workspace.
--R                                                                   Type: Void
--E 8

--S 9 of 31
y:PX:=m*x+n
--R 
--R
--R   (9)  m x + n
--RType: UnivariatePolynomial(x,DistributedMultivariatePolynomial([d,n,m],Fraction(DistributedMultivariatePolynomial([a,b,c],Integer))))
--E 9

--S 10 of 31
r:PX:=p(x)-d*q(y)
--R 
--R   Compiling function p with type UnivariatePolynomial(x,
--R      DistributedMultivariatePolynomial([d,n,m],Fraction(
--R      DistributedMultivariatePolynomial([a,b,c],Integer)))) -> 
--R      UnivariatePolynomial(x,DistributedMultivariatePolynomial([d,n,m],
--R      Fraction(DistributedMultivariatePolynomial([a,b,c],Integer)))) 
--R   Compiling function q with type UnivariatePolynomial(x,
--R      DistributedMultivariatePolynomial([d,n,m],Fraction(
--R      DistributedMultivariatePolynomial([a,b,c],Integer)))) -> 
--R      UnivariatePolynomial(x,DistributedMultivariatePolynomial([d,n,m],
--R      Fraction(DistributedMultivariatePolynomial([a,b,c],Integer)))) 
--R
--R                 2      2                                    2
--R   (10)  (- a d m  - 1)x  + (- 2a d n m - b d m + 1)x - a d n  - b d n - c d
--RType: UnivariatePolynomial(x,DistributedMultivariatePolynomial([d,n,m],Fraction(DistributedMultivariatePolynomial([a,b,c],Integer))))
--E 10


\end{chunk}
Compute the solution.

We must first extract the coefficients, since each coefficient of any
power of $x$ must vanish if the polynomial $r$ is identically 0.
\begin{chunk}{*}
--S 11 of 31
coeffs:=coefficients r
--R 
--R
--R                 2                                   2
--R   (11)  [- a d m  - 1,- 2a d n m - b d m + 1,- a d n  - b d n - c d]
--RType: List(DistributedMultivariatePolynomial([d,n,m],Fraction(DistributedMultivariatePolynomial([a,b,c],Integer))))
--E 11

\end{chunk}
Now we compute a Groebner basis and then solve for the respective
variables
\begin{chunk}{*}
--S 12 of 31
bg:=groebner coeffs
--R 
--R
--R                                                  2
--R                  a         1      b  2   4a c - b
--R   (12)  [d - ---------,n + - m + --,m  + ---------]
--R                      2     2     2a           2
--R              4a c - b                        a
--RType: List(DistributedMultivariatePolynomial([d,n,m],Fraction(DistributedMultivariatePolynomial([a,b,c],Integer))))
--E 12

--S 13 of 31
egb:List Equation Fraction Polynomial Z := [p=0 for p in bg]
--R 
--R
--R                   2                             2 2           2
--R          (4a c - b )d - a    2a n + a m + b    a m  + 4a c - b
--R   (13)  [----------------= 0,--------------= 0,----------------= 0]
--R                      2             2a                  2
--R              4a c - b                                 a
--R                          Type: List(Equation(Fraction(Polynomial(Integer))))
--E 13

--S 14 of 31
solve(egb,[d,m,n])
--R 
--R
--R                  a        - 2a n - b    2
--R   (14)  [[d= ---------,m= ----------,a n  + b n + c= 0]]
--R                      2         a
--R              4a c - b
--R                    Type: List(List(Equation(Fraction(Polynomial(Integer)))))
--E 14

--S 15 of 31
ecoeffs: List Equation Fraction Polynomial Z := [p=0 for p in coeffs]
--R 
--R
--R                 2                                         2
--R   (15)  [- a d m  - 1= 0,- 2a d m n - b d m + 1= 0,- a d n  - b d n - c d= 0]
--R                          Type: List(Equation(Fraction(Polynomial(Integer))))
--E 15

--S 16 of 31
solve(ecoeffs,[d,m,n])
--R 
--R
--R                  a        - 2a n - b    2
--R   (16)  [[d= ---------,m= ----------,a n  + b n + c= 0]]
--R                      2         a
--R              4a c - b
--R                    Type: List(List(Equation(Fraction(Polynomial(Integer)))))
--E 16

\end{chunk}

Of course, the result depends on the order of the variables given
to the solve command.
\begin{chunk}{*}
--S 17 of 31
solve(ecoeffs,[d,n,m])
--R 
--R
--R                  a        - a m - b  2 2           2
--R   (17)  [[d= ---------,n= ---------,a m  + 4a c - b = 0]]
--R                      2        2a
--R              4a c - b
--R                    Type: List(List(Equation(Fraction(Polynomial(Integer)))))
--E 17

--S 18 of 31
PolyToGauss:=[d,n,m]
--R 
--R
--R   (18)  [d,n,m]
--R                                     Type: List(OrderedVariableList([d,n,m]))
--E 18

--S 19 of 31
GaussToPoly:=[x,y,a,b,c]
--R 
--R
--R   (19)  [x,m x + n,a,b,c]
--RType: List(UnivariatePolynomial(x,DistributedMultivariatePolynomial([d,n,m],Fraction(DistributedMultivariatePolynomial([a,b,c],Integer)))))
--E 19

\end{chunk}
coefficient arrays
\begin{chunk}{*}
--S 20 of 31
corg:=d*matrix[[c,b,a]]
--R 
--R
--R   (20)  [c d  b d  a d]
--R                                            Type: Matrix(Polynomial(Integer))
--E 20

\end{chunk}
Explicit target
\begin{chunk}{*}
--S 21 of 31
cgauss:=matrix [[0,1,-1]]
--R 
--R
--R   (21)  [0  1  - 1]
--R                                                        Type: Matrix(Integer)
--E 21

\end{chunk}
Generalized target
\begin{chunk}{*}
--S 22 of 31
ctar:=matrix[[w,v,u]]
--R 
--R
--R   (22)  [w  v  u]
--R                                            Type: Matrix(Polynomial(Integer))
--E 22

\end{chunk}
Polynomial basis arrays
\begin{chunk}{*}
--S 23 of 31
xorg:=matrix([[1,x,x^2]])
--R 
--R
--R   (23)  +       2+
--R         +1  x  x +
--R                                            Type: Matrix(Polynomial(Integer))
--E 23

--S 24 of 31
xgauss:=([[1,y,y^2]])
--R 
--R
--R                      2 2             2
--R   (24)  [[1,m x + n,m x  + 2n m x + n ]]
--RType: List(List(UnivariatePolynomial(x,DistributedMultivariatePolynomial([d,n,m],Fraction(DistributedMultivariatePolynomial([a,b,c],Integer))))))
--E 24

\end{chunk}
Example
\begin{chunk}{*}
--S 25 of 31
row(corg*transpose(xorg),1)
--R 
--R
--R               2
--R   (25)  [a d x  + b d x + c d]
--R                                            Type: Vector(Polynomial(Integer))
--E 25

\end{chunk}
Translation matrix Pascal Pa(n) for 3x3 case. See Aceto below
for references.
\begin{chunk}{*}
--S 26 of 31
Pa(n) == matrix [[1,0,0],[n,1,0],[n^2,2*n,1]]
--R 
--R                                                                   Type: Void
--E 26

\end{chunk}
Scalar matrix
\begin{chunk}{*}
--S 27 of 31
Sc(m)==diagonalMatrix [1,m,m^2]
--R 
--R                                                                   Type: Void
--E 27

\end{chunk}
Now define the transform in matrix form
\begin{chunk}{*}
--S 28 of 31
D:=corg-(cgauss*Pa(n)*Sc(m))
--R 
--R   Compiling function Pa with type Variable(n) -> Matrix(Polynomial(
--R      Integer)) 
--R   Compiling function Sc with type Variable(m) -> Matrix(Polynomial(
--R      Integer)) 
--R
--R   (28)  + 2                             2      +
--R         +n  - n + c d  2m n - m + b d  m  + a d+
--R                                            Type: Matrix(Polynomial(Integer))
--E 28

\end{chunk}
Now we do a more realistic solve in two steps.\\
Step one: disallow silly answers
\begin{chunk}{*}
--S 29 of 31
E:=groebnerFactorize(row(D,1),[b*d,m,a,b^2-3*a*c],true)
--R 
--R   we found a groebner basis and check whether it
--R   contains reducible polynomials
--R   [1]
--R   factorGroebnerBasis: no reducible polynomials in this basis
--R   we found a groebner basis and check whether it
--R   contains reducible polynomials
--R     2
--R   [n  - n + c d, 2m n - m + b d, 2b d n + (- 4c d + 1)m - b d, 2a n - b m - a,
--R     2                 2
--R    m  + a d, (4a c - b )d - a]
--R   factorGroebnerBasis: no reducible polynomials in this basis
--R
--R   (29)
--R   [
--R       2
--R     [n  - n + c d, 2m n - m + b d, 2b d n + (- 4c d + 1)m - b d,
--R                       2                 2
--R      2a n - b m - a, m  + a d, (4a c - b )d - a]
--R     ,
--R    [1]]
--R                                        Type: List(List(Polynomial(Integer)))
--E 29

\end{chunk}
and clean it up (a lot). 
\begin{chunk}{*}
--S 30 of 31
solve(E.1,PolyToGauss)
--R 
--R
--R                  a        b m + a          2  2    2
--R   (30)  [[d= ---------,n= -------,(4a c - b )m  + a = 0]]
--R                      2       2a
--R              4a c - b
--R                    Type: List(List(Equation(Fraction(Polynomial(Integer)))))
--E 30

\end{chunk}
Now lets test the reasonableness the width to start with is
\[2*\frac{\sqrt{(b^2-4ac)}}{2a}\]
which the left hand term yields. There is a sign ambiguity
corresponding to whether the source quadratic is to the left
or right. We could swap $n$ and $m$ in $solve()$ but then the $n$
term (left hand one) is more obscure.

Knowing the width $m$ we can copute moving the center to $1/2$
(for $x*(x-1)$). It should amount to $=b/(2*a)+1/2$ and in fact that
is the answer $m=m(scale factor)(b/2a)+1/2$. The $d$ is required
and is the ``normalizing term''.
\begin{chunk}{*}
--S 31 of 31
Dorg:=corg-(ctar*Pa(n)*Sc(m))
--R 
--R
--R   (31)  +             2                                  2       +
--R         +- w - n v - n u + c d  - m v - 2m n u + b d  - m u + a d+
--R                                            Type: Matrix(Polynomial(Integer))
--E 31

)spool 
)lisp (bye)
 
\end{chunk}
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
