
(1577508 . 3619047074)       
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Union| (|Boolean|) "failed")) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *3 *1) (AND (|isDomain| *2 (|Record| (|:| |cycle?| (|Boolean|)) (|:| |prefix| (|NonNegativeInteger|)) (|:| |period| (|NonNegativeInteger|)))) (|isDomain| *1 (|Stream| *4)) (|ofCategory| *4 (|Type|)) (|isDomain| *3 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|)) (|isDomain| *1 (|ErrorFunctions|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Exit|)) (|isDomain| *1 (|ErrorFunctions|)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|)) (|isDomain| *1 (|ErrorFunctions|)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|String|))) (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|)) (|isDomain| *1 (|ErrorFunctions|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Cell| *3)) (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *2 *3 *3 *3) (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *3 *3) (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Float|)) (|isDomain| *1 (|RoutinesTable|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *1 (|BinarySearchTree| *2)) (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3 *4 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|FiniteLinearAggregate| *5)) (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|MatrixManipulation| *5 *6 *7 *3)) (|ofCategory| *3 (|MatrixCategory| *5 *6 *7)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|List| (|PositiveInteger|))) (|isDomain| *5 (|PositiveInteger|)) (|ofCategory| *6 (|Field|)) (|ofCategory| *7 (|FiniteLinearAggregate| *6)) (|ofCategory| *8 (|FiniteLinearAggregate| *6)) (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|MatrixManipulation| *6 *7 *8 *3)) (|ofCategory| *3 (|MatrixCategory| *6 *7 *8)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|List| (|PositiveInteger|))) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *6 (|Field|)) (|ofCategory| *7 (|FiniteLinearAggregate| *6)) (|ofCategory| *8 (|FiniteLinearAggregate| *6)) (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|MatrixManipulation| *6 *7 *8 *3)) (|ofCategory| *3 (|MatrixCategory| *6 *7 *8)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *4 (|List| (|PositiveInteger|))) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|FiniteLinearAggregate| *5)) (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|MatrixManipulation| *5 *6 *7 *3)) (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Expression| (|DoubleFloat|))) (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *2 (|List| (|DoubleFloat|))) (|isDomain| *1 (|d01AgentsPackage|)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Expression| (|DoubleFloat|))) (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *2 (|List| (|DoubleFloat|))) (|isDomain| *1 (|ExpertSystemContinuityPackage|))))) 
(((*1 *2 *2 *3 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|PseudoRemainderSequence| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *4)) (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6))) (|isDomain| *2 (|Record| (|:| |particular| (|Union| *4 "failed")) (|:| |basis| (|List| *4)))) (|isDomain| *1 (|PureAlgebraicLODE| *5 *6 *7 *4))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *5 (|Join| (|FloatingPointSystem|) (|RetractableTo| *4) (|Field|) (|TranscendentalFunctionCategory|) (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *2) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Mapping| *4 (|Integer|))) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Polynomial| (|Float|))) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofCategory| *5 (|RetractableTo| (|Float|))) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|)))) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofCategory| *5 (|RetractableTo| (|Float|))) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Expression| (|Float|))) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofCategory| *5 (|RetractableTo| (|Float|))) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofCategory| *5 (|RetractableTo| (|Integer|))) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|)))) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofCategory| *5 (|RetractableTo| (|Integer|))) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofCategory| *5 (|RetractableTo| (|Integer|))) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| *2)) (|ofType| *4 (|List| *2)) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Expression| *5)) (|ofCategory| *5 (|FortranMachineTypeCategory|)) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Integer|))))) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Float|))))) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Integer|)))) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Float|)))) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|)))) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Matrix| (|Expression| (|Float|)))) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|)))) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|)))) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Polynomial| (|Float|))) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Expression| (|Integer|))) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Expression| (|Float|))) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Integer|))))) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Float|))))) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Vector| (|Polynomial| (|Integer|)))) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Vector| (|Polynomial| (|Float|)))) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Vector| (|Expression| (|Integer|)))) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Vector| (|Expression| (|Float|)))) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *2 *3) (|partial| AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofCategory| *5 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|SparseUnivariatePolynomial| (|SparseUnivariatePolynomial| *4))) (|isDomain| *1 (|NormRetractPackage| *4 *5 *6 *3 *7)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *6)) (|ofType| *7 (|PositiveInteger|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6)))) ((*1 *2 *1) (|partial| AND (|ofCategory| *1 (|RetractableTo| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2) (|partial| OR (AND (|isDomain| *2 (|Polynomial| *3)) (AND (|not| (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))) (|not| (|ofCategory| *3 (|Algebra| (|Integer|)))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|))) (AND (|isDomain| *2 (|Polynomial| *3)) (AND (|not| (|ofCategory| *3 (|IntegerNumberSystem|))) (|not| (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))) (|ofCategory| *3 (|Algebra| (|Integer|))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|))) (AND (|isDomain| *2 (|Polynomial| *3)) (AND (|not| (|ofCategory| *3 (|QuotientFieldCategory| (|Integer|)))) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|))))) ((*1 *1 *2) (|partial| OR (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (AND (|not| (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))) (|ofCategory| *3 (|Algebra| (|Integer|))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|))) (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|))))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|)))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|Join| (|FloatingPointSystem|) (|RetractableTo| *4) (|Field|) (|TranscendentalFunctionCategory|) (|ElementaryFunctionCategory|))) (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3 *4 *4) (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|ofCategory| *6 (|FiniteLinearAggregate| *3)) (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *3 *5 *6))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|RetractableTo| (|Integer|))) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|AlgebraicFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|ComplexCategory&| *3 *4)) (|ofCategory| *3 (|ComplexCategory| *4)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|Ring|)) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *3)))) ((*1 *2) (AND (|ofCategory| *1 (|MonogenicAlgebra| *3 *2)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *3 *2)) (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|))) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|))))) ((*1 *2 *3 *1) (AND (|isDomain| *2 (|Record| (|:| |less| (|BinarySearchTree| *3)) (|:| |greater| (|BinarySearchTree| *3)))) (|isDomain| *1 (|BinarySearchTree| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|DivisorCategory| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|IntegrationResult| *4)) (|ofCategory| *4 (|Join| (|AlgebraicallyClosedFunctionSpace| *3) (|TranscendentalFunctionCategory|))) (|ofCategory| *3 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|IntegrationResultToFunction| *3 *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|IntegrationResult| (|Fraction| (|Polynomial| *3)))) (|ofCategory| *3 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|IntegrationResultRFToFunction| *3)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| *3 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Record| (|:| |normal| *3) (|:| |special| *3))) (|isDomain| *1 (|MonomialExtensionTools| *5 *3)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Vector| *5)) (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|List| (|List| (|Matrix| *5)))) (|isDomain| *1 (|RepresentationPackage2| *5)) (|isDomain| *3 (|List| (|Matrix| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Vector| (|Vector| *5))) (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|List| (|List| (|Matrix| *5)))) (|isDomain| *1 (|RepresentationPackage2| *5)) (|isDomain| *3 (|List| (|Matrix| *5))))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|CharacterClass|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|StringAggregate|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Character|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|StringAggregate|))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|List| (|NewSparseUnivariatePolynomial| *3))) (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *2 *2 *3) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Mapping| *4 (|Integer|) (|Integer|))) (|ofCategory| *4 (|Ring|)) (|ofCategory| *1 (|MatrixCategory| *4 *5 *6)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|List| (|OutputForm|)))) (|isDomain| *1 (|OutputForm|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|SquareMatrix| *3 *4)) (|isDomain| *1 (|QuadraticForm| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|List| *5))) (|ofCategory| *5 (|Ring|)) (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary")) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary")) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *3 (|PartialDifferentialRing| *5)) (|isDomain| *2 (|Vector| *3)) (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *3 *6 *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *3)) (|ofCategory| *4 (|Join| (|FiniteLinearAggregate| *5) (CATEGORY |package| (ATTRIBUTE |finiteAggregate|))))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| (|List| (|Point| *3)))))) ((*1 *1 *2 *3 *3) (AND (|isDomain| *2 (|List| (|List| (|Point| *4)))) (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *1 (|ThreeSpaceCategory| *4)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|List| (|Point| *3)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|ThreeSpaceCategory| *3)))) ((*1 *1 *1 *2 *3 *3) (AND (|isDomain| *2 (|List| (|List| (|List| *4)))) (|isDomain| *3 (|Boolean|)) (|ofCategory| *1 (|ThreeSpaceCategory| *4)) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *1 *2 *3 *3) (AND (|isDomain| *2 (|List| (|List| (|Point| *4)))) (|isDomain| *3 (|Boolean|)) (|ofCategory| *1 (|ThreeSpaceCategory| *4)) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *1 *2 *3 *4) (AND (|isDomain| *2 (|List| (|List| (|List| *5)))) (|isDomain| *3 (|List| (|SubSpaceComponentProperty|))) (|isDomain| *4 (|SubSpaceComponentProperty|)) (|ofCategory| *1 (|ThreeSpaceCategory| *5)) (|ofCategory| *5 (|Ring|)))) ((*1 *1 *1 *2 *3 *4) (AND (|isDomain| *2 (|List| (|List| (|Point| *5)))) (|isDomain| *3 (|List| (|SubSpaceComponentProperty|))) (|isDomain| *4 (|SubSpaceComponentProperty|)) (|ofCategory| *1 (|ThreeSpaceCategory| *5)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 *3)))) 
(((*1 *2 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *2 *1) (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1) (|isDomain| *1 (|TwoDimensionalViewport|)))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |outval| (|Complex| *4)) (|:| |outmult| (|Integer|)) (|:| |outvect| (|List| (|Matrix| (|Complex| *4))))))) (|isDomain| *1 (|NumericComplexEigenPackage| *4)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4 *3) (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *4 (|PrimitiveArray| (|DoubleFloat|))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|BlasLevelOne|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ApplicationProgramInterface|))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Matrix| *1)) (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *2 (|Vector| *1)))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Matrix| *1)) (|ofCategory| *1 (|CharacteristicNonZero|)) (|ofCategory| *1 (|PolynomialFactorizationExplicit|)) (|isDomain| *2 (|Vector| *1))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|ofCategory| *1 (|IntervalCategory| *3)) (|ofCategory| *3 (|Join| (|FloatingPointSystem|) (|TranscendentalFunctionCategory|))))) ((*1 *1 *2) (AND (|ofCategory| *1 (|IntervalCategory| *2)) (|ofCategory| *2 (|Join| (|FloatingPointSystem|) (|TranscendentalFunctionCategory|))))) ((*1 *1 *2 *2) (AND (|ofCategory| *1 (|IntervalCategory| *2)) (|ofCategory| *2 (|Join| (|FloatingPointSystem|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteSetAggregate| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |convert| ((|Symbol|) $))))) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *3 *5 *2)) (|ofCategory| *2 (|PolynomialCategory| (|Fraction| (|Polynomial| *5)) *4 *3)))) ((*1 *2 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |convert| ((|Symbol|) $)) (SIGNATURE |variable| ((|Union| $ "failed") (|Symbol|)))))) (|isDomain| *1 (|PushVariables| *4 *5 *3 *2)) (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *3)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |convert| ((|Symbol|) $)) (SIGNATURE |variable| ((|Union| $ "failed") (|Symbol|)))))) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *1 (|PushVariables| *4 *5 *6 *2)) (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))))) 
(((*1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *6 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *7 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *8 (|PlacesCategory| *3 *7)) (|ofCategory| *9 (|DivisorCategory| *8)) (|ofCategory| *10 (|InfinitlyClosePointCategory| *3 *4 *2 *5 *6 *7 *8 *9 *12)) (|ofCategory| *12 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|PolynomialCategory| *3 *5 (|OrderedVariableList| *4))) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *2 *5 *6 *7 *8 *9 *10 *11 *12)) (|ofCategory| *11 (|DesingTreeCategory| *10)))) ((*1 *2) (AND (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *3)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *3)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|IntegrationResult| *3)) (|isDomain| *1 (|FunctionSpaceComplexIntegration| *5 *3)) (|ofCategory| *3 (|Join| (|TranscendentalFunctionCategory|) (|AlgebraicallyClosedFunctionSpace| *5)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DefiniteIntegrationTools| *4 *5)) (|ofCategory| *5 (|Join| (|TranscendentalFunctionCategory|) (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|QuotientFieldCategory| *3)) (|isDomain| *1 (|CommonDenominator| *3 *4 *2)) (|ofCategory| *2 (|FiniteLinearAggregate| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|QuotientFieldCategory| *4)) (|ofCategory| *2 (|FiniteLinearAggregate| *4)) (|isDomain| *1 (|InnerCommonDenominator| *4 *5 *2 *3)) (|ofCategory| *3 (|FiniteLinearAggregate| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| *5)) (|ofCategory| *5 (|QuotientFieldCategory| *4)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|MatrixCommonDenominator| *4 *5)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|QuotientFieldCategory| *3)) (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *3 *4 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2) (AND (|isDomain| *1 (|IntegerPrimesPackage| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3 *3 *3 *4) (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Stream| (|List| (|Integer|)))) (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|OrderedFreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|LyndonWord| *3))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ComplexCategory&| *3 *4)) (|ofCategory| *3 (|ComplexCategory| *4)))) ((*1 *2) (AND (|ofType| *4 *2) (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5)) (|ofCategory| *3 (|DirectProductCategory| *4 *5)))) ((*1 *2) (AND (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FunctionSpace&| *3 *4)) (|ofCategory| *3 (|FunctionSpace| *4)))) ((*1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|IntegerNumberSystem&| *3)) (|ofCategory| *3 (|IntegerNumberSystem|)))) ((*1 *2) (AND (|ofCategory| *1 (|NonAssociativeRing|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OctonionCategory&| *3 *4)) (|ofCategory| *3 (|OctonionCategory| *4)))) ((*1 *2) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|QuotientFieldCategory&| *3 *4)) (|ofCategory| *3 (|QuotientFieldCategory| *4)))) ((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|QuaternionCategory&| *3 *4)) (|ofCategory| *3 (|QuaternionCategory| *4)))) ((*1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|RealClosedField&| *3)) (|ofCategory| *3 (|RealClosedField|)))) ((*1 *2) (AND (|ofCategory| *1 (|Ring|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|RealNumberSystem&| *3)) (|ofCategory| *3 (|RealNumberSystem|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *6))) (|ofCategory| *6 (|IntegralDomain|)) (|ofCategory| *2 (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *5 *4)) (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |convert| ((|Symbol|) $)))))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|LocalPowerSeriesCategory| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|)) (|ofType| *9 (|Mapping| *6 *4)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Field|)) (|ofType| *10 (|Mapping| *7 *5)) (|ofCategory| *8 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *9 (|Mapping| *5 *8)) (|isDomain| *2 (|List| (|Record| (|:| |function| *7) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9 *10)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *8) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|))))) (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *5 (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *5 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *5))))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *3 *6)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3) (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *4))) (|isDomain| *3 (|SparseUnivariatePolynomial| *4)) (|ofCategory| *4 (|PolynomialFactorizationExplicit|)) (|isDomain| *1 (|LinearPolynomialEquationByFractions| *4))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2)) (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *1) (|partial| AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|OutputForm|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *4 (|Permutation| (|Integer|))) (|isDomain| *2 (|Matrix| (|Integer|))) (|isDomain| *1 (|IrrRepSymNatPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|List| (|Matrix| (|Integer|)))) (|isDomain| *1 (|IrrRepSymNatPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *4 (|List| (|Permutation| (|Integer|)))) (|isDomain| *2 (|List| (|Matrix| (|Integer|)))) (|isDomain| *1 (|IrrRepSymNatPackage|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3 *3 *2) (AND (|isDomain| *2 (|Result|)) (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|d01AgentsPackage|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2) (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Expression| (|DoubleFloat|))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *3 *3 *3 *3) (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Mapping| (|List| *4) *4)) (|isDomain| *1 (|Bezier| *4)) (|isDomain| *3 (|List| *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|DivisorCategory| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *3 (|Join| (|IntegralDomain|) (|GcdDomain|))) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FractionFreeFastGaussian| *3 *5)) (|ofCategory| *5 (|AbelianMonoidRing| *3 *4))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *4 (|Integer|))) (|isDomain| *5 (|Mapping| (|Stream| *4))) (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Stream| *4)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|OnePointCompletion| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *3 (|None|)) (|isDomain| *1 (|Any|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|isDomain| *3 (|Symbol|)) (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|)))) ((*1 *1 *2 *1 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|isDomain| *3 (|Symbol|)) (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|)))) ((*1 *1 *2 *2 *3 *1 *4) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|PseudoAlgebraicClosureOfRationalNumber|))) (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Symbol|)) (|isDomain| *1 (|PseudoAlgebraicClosureOfRationalNumber|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Stream| *7))) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|PolynomialCategory| *5 (|IndexedExponents| *6) *6)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Mapping| (|Stream| *7) *7)) (|isDomain| *1 (|SparseMultivariateTaylorSeries| *5 *6 *7))))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |stiffness| (|Float|)) (|:| |stability| (|Float|)) (|:| |expense| (|Float|)) (|:| |accuracy| (|Float|)) (|:| |intermediateResults| (|Float|)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|isDomain| *3 (|Symbol|)) (|ofCategory| *1 (|AlgebraicallyClosedField|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|AlgebraicallyClosedField|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Polynomial| *1)) (|ofCategory| *1 (|AlgebraicallyClosedField|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))))) ((*1 *1 *1) (AND (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *2)) (|ofCategory| *2 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Mapping| (|Float|))) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *1 *2 *2) (AND (|isDomain| *2 (|Union| (|:| I (|Expression| (|Integer|))) (|:| F (|Expression| (|Float|))) (|:| CF (|Expression| (|Complex| (|Float|)))) (|:| |switch| (|Switch|)))) (|isDomain| *1 (|Switch|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|)))) ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|RadixUtilities|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|Join| (|FloatingPointSystem|) (|RetractableTo| *4) (|Field|) (|TranscendentalFunctionCategory|) (|ElementaryFunctionCategory|))) (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *2 (|Join| (|FloatingPointSystem|) (|RetractableTo| *5) (|Field|) (|TranscendentalFunctionCategory|) (|ElementaryFunctionCategory|))) (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *2)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2 *3 *2) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *1 (|DistinctDegreeFactorize| *4 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *2) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|OppositeMonogenicLinearOperator| *2 *3)) (|ofCategory| *2 (|MonogenicLinearOperator| *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|OctonionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3)) (|:| |coef1| (|NewSparseUnivariatePolynomial| *3)) (|:| |coef2| (|NewSparseUnivariatePolynomial| *3)))) (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |gcd| *1) (|:| |coef1| *1) (|:| |coef2| *1))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5)) (|ofType| *3 (|NonNegativeInteger|)) (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| (|BasicStochasticDifferential|))) (|isDomain| *1 (|BasicStochasticDifferential|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|Queue| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|PolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|)))) ((*1 *2 *3 *1) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *1)))) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3)))) ((*1 *1 *1) (|ofCategory| *1 (|UniqueFactorizationDomain|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|UnivariatePolynomialSquareFree| *3 *2)) (|ofCategory| *2 (|Join| (|UnivariatePolynomialCategory| *3) (|IntegralDomain|) (CATEGORY |domain| (SIGNATURE |gcd| ($ $ $)))))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|Stream| *4)) (|ofCategory| *4 (|Algebra| *3)) (|ofCategory| *4 (|Ring|)) (|isDomain| *3 (|Fraction| (|Integer|))) (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *3 *4 *4) (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *5 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|IntegrationResult| *3)) (|isDomain| *1 (|PureAlgebraicIntegration| *5 *3 *6)) (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DrawOption|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))) (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| (|Complex| *4)))))) (|isDomain| *1 (|FloatingComplexPackage| *4)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))) (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| (|Complex| *4)))))) (|isDomain| *1 (|FloatingComplexPackage| *4)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| (|Integer|))))) (|isDomain| *2 (|List| (|Equation| (|Polynomial| (|Complex| *4))))) (|isDomain| *1 (|FloatingComplexPackage| *4)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))) (|isDomain| *2 (|List| (|Equation| (|Polynomial| (|Complex| *4))))) (|isDomain| *1 (|FloatingComplexPackage| *4)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|))))) (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|SortPackage| *4 *2)) (|ofCategory| *2 (|Join| (|IndexedAggregate| (|Integer|) *4) (CATEGORY |package| (ATTRIBUTE |finiteAggregate|) (ATTRIBUTE |shallowlyMutable|)))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|SortPackage| *3 *2)) (|ofCategory| *2 (|Join| (|IndexedAggregate| (|Integer|) *3) (CATEGORY |package| (ATTRIBUTE |finiteAggregate|) (ATTRIBUTE |shallowlyMutable|))))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |key| (|Record| (|:| |xinit| (|DoubleFloat|)) (|:| |xend| (|DoubleFloat|)) (|:| |fn| (|Vector| (|Expression| (|DoubleFloat|)))) (|:| |yinit| (|List| (|DoubleFloat|))) (|:| |intvals| (|List| (|DoubleFloat|))) (|:| |g| (|Expression| (|DoubleFloat|))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|:| |entry| (|Record| (|:| |stiffness| (|Float|)) (|:| |stability| (|Float|)) (|:| |expense| (|Float|)) (|:| |accuracy| (|Float|)) (|:| |intermediateResults| (|Float|))))))) (|isDomain| *1 (|ODEIntensityFunctionsTable|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|CycleIndicators|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Expression| (|DoubleFloat|))) (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Factored| *2)) (|ofCategory| *2 (|PolynomialCategory| *7 *5 *6)) (|isDomain| *1 (|MultivariateSquareFree| *5 *6 *7 *2)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|EuclideanDomain|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| (|LyndonWord| *5))) (|isDomain| *1 (|LyndonWord| *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PolynomialIdeals| (|Fraction| (|Integer|)) (|DirectProduct| *5 (|NonNegativeInteger|)) (|OrderedVariableList| *4) (|DistributedMultivariatePolynomial| *4 (|Fraction| (|Integer|))))) (|ofType| *4 (|List| (|Symbol|))) (|ofType| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IdealDecompositionPackage| *4 *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|d01AgentsPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpertSystemContinuityPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *3 (|List| (|Record| (|:| |flg| (|Union| "nil" "sqfr" "irred" "prime")) (|:| |fctr| *2) (|:| |xpnt| (|Integer|))))) (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|Factored| *2)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |contp| (|Integer|)) (|:| |factors| (|List| (|Record| (|:| |irr| *4) (|:| |pow| (|Integer|))))))) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|))) (|isDomain| *2 (|Factored| *4)) (|isDomain| *1 (|GaloisGroupFactorizer| *4))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|PositiveInteger|))) (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|Record| (|:| |lcmfij| *5) (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *7) (|:| |polj| *7))) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1) (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *1 *1) (|partial| |ofCategory| *1 (|MonadWithUnit|)))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Stream| (|Integer|))) (|isDomain| *1 (|StreamTaylorSeriesOperations| *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|))))) (|isDomain| *1 (|IntegrationFunctionsTable|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|KeyedDictionary| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |xinit| (|DoubleFloat|)) (|:| |xend| (|DoubleFloat|)) (|:| |fn| (|Vector| (|Expression| (|DoubleFloat|)))) (|:| |yinit| (|List| (|DoubleFloat|))) (|:| |intvals| (|List| (|DoubleFloat|))) (|:| |g| (|Expression| (|DoubleFloat|))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|))))) (|isDomain| *1 (|ODEIntensityFunctionsTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4)))) ((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ODEIntensityFunctionsTable|))))) 
(((*1 *2 *2 *3 *3) (AND (|isDomain| *3 (|List| (|PositiveInteger|))) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6)))) ((*1 *2 *2 *3 *3) (AND (|isDomain| *3 (|Segment| (|PositiveInteger|))) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6)))) ((*1 *1 *1 *2 *2 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3))))) 
(((*1 *1 *1) (|isDomain| *1 (|RoutinesTable|)))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|ofCategory| *5 (|FunctionSpace| *4)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|FunctionSpaceUnivariatePolynomialFactor| *4 *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Record| (|:| |ans| (|Fraction| *5)) (|:| |nosol| (|Boolean|)))) (|isDomain| *1 (|TranscendentalRischDE| *4 *5)) (|isDomain| *3 (|Fraction| *5))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|List| (|Record| (|:| |eigval| (|Union| (|Fraction| (|Polynomial| *4)) (|SuchThat| (|Symbol|) (|Polynomial| *4)))) (|:| |geneigvec| (|List| (|Matrix| (|Fraction| (|Polynomial| *4)))))))) (|isDomain| *1 (|EigenPackage| *4)) (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))))) 
(((*1 *2 *2 *2 *3 *4) (AND (|isDomain| *3 (|Automorphism| *5)) (|isDomain| *4 (|Mapping| *5 *5)) (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *2)) (|ofCategory| *2 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *1 (|PlacesCategory| *4 *5)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|LocalPowerSeriesCategory| *4)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|CharacteristicZero|)) (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |func| *3) (|:| |kers| (|List| (|Kernel| *3))) (|:| |vals| (|List| *3)))) (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |lfn| (|List| (|Expression| (|DoubleFloat|)))) (|:| |init| (|List| (|DoubleFloat|))))) (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|e04AgentsPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 *2) (|ofType| *4 *2) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|List| (|Symbol|))))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *5)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5)) (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)) (SIGNATURE |numer| (*7 $)) (SIGNATURE |denom| (*7 $))))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *5)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|List| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4))) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|RationalFunction| *4))))) 
(((*1 *2 *3 *3 *3 *4 *5) (AND (|isDomain| *5 (|List| (|List| (|DoubleFloat|)))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|List| (|Point| *4))) (|isDomain| *1 (|TubePlotTools|)) (|isDomain| *3 (|Point| *4))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|OpenMathConnection|)) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PlacesCategory| *3 *4)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *3)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *3 *3 *4) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|))) (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4)) (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|DivisorCategory| *10)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *11 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|DesingTreePackage| *4 *5 *6 *7 *8 *9 *10 *11 *12 *3 *13)) (|ofCategory| *3 (|DesingTreeCategory| *12))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgebraicFunction| *4 *5)) (|ofCategory| *5 (|FunctionSpace| *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CombinatorialFunction| *4 *5)) (|ofCategory| *5 (|FunctionSpace| *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ElementaryFunction| *4 *5)) (|ofCategory| *5 (|Join| (|FunctionSpace| *4) (|RadicalCategory|))))) ((*1 *2 *3) (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ExpressionSpace&| *4)) (|ofCategory| *4 (|ExpressionSpace|)))) ((*1 *2 *3) (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FunctionSpace&| *4 *5)) (|ofCategory| *4 (|FunctionSpace| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FunctionalSpecialFunction| *4 *5)) (|ofCategory| *5 (|FunctionSpace| *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LiouvillianFunction| *4 *5)) (|ofCategory| *5 (|Join| (|FunctionSpace| *4) (|RadicalCategory|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4 *5 *6 *7) (AND (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *6)))) (|isDomain| *4 (|Reference| (|OrderedCompletion| (|Integer|)))) (|isDomain| *5 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|))) (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *6))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3))) (|isDomain| *1 (|CoordinateSystems| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|isDomain| *1 (|CombinatorialFunction| *4 *2)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2) (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *2)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *2)))) ((*1 *2) (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TabulatedComputationPackage| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|LocalPowerSeriesCategory| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|has| *1 (ATTRIBUTE |arbitraryPrecision|)) (|ofCategory| *1 (|FloatingPointSystem|)))) ((*1 *2) (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|)))) ((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *2))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *1 (|PermutationCategory| *3))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|UnivariatePolynomial| *5 *4)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|OrderedIntegralDomain|)) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|SturmHabichtPackage| *4 *5))))) 
(((*1 *1 *1 *1) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|DoublyLinkedAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1 *2) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1 *1) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *3 *4 *4 *5) (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|)))) ((*1 *2 *1 *3 *4 *4 *5) (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|)))) (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) *2)) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|List| (|Record| (|:| |deg| (|NonNegativeInteger|)) (|:| |eq| *5)))) (|isDomain| *1 (|PrimitiveRatRicDE| *4 *5 *3 *6)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5)) (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| (|Fraction| *5)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|DivisorCategory| *10)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *11 *14)) (|ofCategory| *14 (|BlowUpMethodCategory|)) (|isDomain| *2 (|List| *10)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *4 *5 *6 *7 *8 *9 *10 *11 *12 *13 *14)) (|ofCategory| *13 (|DesingTreeCategory| *12)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *5 (|List| *9)) (|ofCategory| *9 (|ProjectiveSpaceCategory| *6)) (|ofCategory| *6 (|Field|)) (|ofType| *7 (|List| (|Symbol|))) (|ofCategory| *4 (|PolynomialCategory| *6 *8 (|OrderedVariableList| *7))) (|ofCategory| *8 (|DirectProductCategory| (|#| *7) (|NonNegativeInteger|))) (|ofCategory| *10 (|LocalPowerSeriesCategory| *6)) (|ofCategory| *11 (|PlacesCategory| *6 *10)) (|ofCategory| *12 (|DivisorCategory| *11)) (|ofCategory| *13 (|InfinitlyClosePointCategory| *6 *7 *4 *8 *9 *10 *11 *12 *15)) (|ofCategory| *15 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|IntersectionDivisorPackage| *6 *7 *4 *8 *9 *10 *11 *12 *13 *14 *15)) (|ofCategory| *14 (|DesingTreeCategory| *13)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|List| (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *4))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *4 *5 *6)) (|ofCategory| (|PseudoAlgebraicClosureOfFiniteField| *4) (|Finite|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|List| (|Places| *4))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *4 *5 *6)) (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|))))) 
(((*1 *1 *1 *2) (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *7)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *1 (|PseudoRemainderSequence| *4 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|FiniteFieldCategory|)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| (|SparseUnivariatePolynomial| *5)))) (|isDomain| *1 (|TwoFactorize| *5)) (|isDomain| *3 (|SparseUnivariatePolynomial| (|SparseUnivariatePolynomial| *5)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *2 *1) (|partial| AND (|isDomain| *2 (|Fraction| *1)) (|ofCategory| *1 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|IntegralDomain|)))) ((*1 *1 *1 *1) (|partial| AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|TemplateUtilities|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Union| (|:| |noa| (|Record| (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |init| (|List| (|DoubleFloat|))) (|:| |lb| (|List| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |cf| (|List| (|Expression| (|DoubleFloat|)))) (|:| |ub| (|List| (|OrderedCompletion| (|DoubleFloat|)))))) (|:| |lsa| (|Record| (|:| |lfn| (|List| (|Expression| (|DoubleFloat|)))) (|:| |init| (|List| (|DoubleFloat|))))))) (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|e04AgentsPackage|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Complex| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DoubleFloat|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Kernel| *4)) (|isDomain| *1 (|KernelFunctions2| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|QuasiAlgebraicSet| (|Fraction| (|Integer|)) (|OrderedVariableList| *3) (|DirectProduct| *4 (|NonNegativeInteger|)) (|DistributedMultivariatePolynomial| *3 (|Fraction| (|Integer|))))) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|QuasiAlgebraicSet2| *3 *4))))) 
(((*1 *2) (AND (|isDomain| *2 (|OnePointCompletion| (|Integer|))) (|isDomain| *1 (|Infinity|)))) ((*1 *1) (AND (|isDomain| *1 (|OnePointCompletion| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *3 (|PolynomialCategory| *4 *6 (|OrderedVariableList| *5))) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *9 (|PlacesCategory| *4 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *4 *5 *3 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DesingTreePackage| *4 *5 *3 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *5 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|OnePointCompletion| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| *2 *2)) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *2))) (|ofCategory| *2 (|UnivariatePolynomialCategory| *5)) (|isDomain| *1 (|DoubleResultantPackage| *5 *2 *6 *3)) (|ofCategory| *3 (|FunctionFieldCategory| *5 *2 *6))))) 
(((*1 *1 *2 *3) (AND (|ofCategory| *1 (|FreeModuleCat| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|OrderedFreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *1 (|XFreeAlgebra| *4 *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Record| (|:| |cd| (|String|)) (|:| |name| (|String|)))) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PartialFraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|))) (|isDomain| *2 (|FortranCode|)) (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|WuWenTsunTriangularSet| *4 *5 *6 *7))) (|isDomain| *1 (|WuWenTsunTriangularSet| *4 *5 *6 *7)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|List| *9)) (|isDomain| *4 (|Mapping| (|Boolean|) *9 *9)) (|isDomain| *5 (|Mapping| *9 *9 *9)) (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8)) (|ofCategory| *6 (|IntegralDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|isDomain| *2 (|List| (|WuWenTsunTriangularSet| *6 *7 *8 *9))) (|isDomain| *1 (|WuWenTsunTriangularSet| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|ofCategory| *2 (|PlacesCategory| *5 *8)) (|isDomain| *1 (|LocalParametrizationOfSimplePointPackage| *5 *6 *4 *7 *3 *8 *2)) (|ofCategory| *4 (|PolynomialCategory| *5 *7 (|OrderedVariableList| *6))) (|ofCategory| *3 (|ProjectiveSpaceCategory| *5)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|DecimalExpansion|))))) 
(((*1 *2 *3 *1) (AND (|isDomain| *3 (|XRecursivePolynomial| *4 *2)) (|ofCategory| *1 (|FreeLieAlgebra| *4 *2)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|OrderedFreeMonoid| *4)) (|ofCategory| *1 (|XFreeAlgebra| *4 *2)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|U32Vector|))) (|isDomain| *1 (|U32VectorPolynomialOperations|)) (|isDomain| *3 (|U32Vector|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OrdinaryWeightedPolynomials| *4 *5 *6 *7)) (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| *3)) (|ofType| *7 *3))) ((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofType| *8 (|List| *5)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|WeightedPolynomials| *4 *5 *6 *7 *8 *9 *10)) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5)) (|ofType| *9 (|List| *3)) (|ofType| *10 *3)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |lcmfij| *5) (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *7) (|:| |polj| *7))) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TabulatedComputationPackage| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ToolsForSign| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3) (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Table| (|PositiveInteger|) (|NonNegativeInteger|)))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|ParametricSpaceCurve| (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|ParametricSpaceCurve| (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *3 (|ParametricSurface| (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|ParametricSurface| (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|ParametricSpaceCurve| *6)) (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|ofCategory| *6 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctions| *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|ParametricSpaceCurve| *5)) (|isDomain| *4 (|SegmentBinding| (|Float|))) (|ofCategory| *5 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctions| *5)))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctions| *3)) (|ofCategory| *3 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctions| *3)) (|ofCategory| *3 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *3 (|ParametricSurface| *6)) (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|ofCategory| *6 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctions| *6)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|ParametricSurface| *5)) (|isDomain| *4 (|SegmentBinding| (|Float|))) (|ofCategory| *5 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctions| *5))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|)) (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3 *1) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|SymbolTable|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Union| (|:| |%expansion| (|ExponentialExpansion| *5 *3 *6 *7)) (|:| |%problem| (|Record| (|:| |func| (|String|)) (|:| |prob| (|String|)))))) (|isDomain| *1 (|FunctionSpaceToExponentialExpansion| *5 *3 *6 *7)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))) (|ofType| *6 (|Symbol|)) (|ofType| *7 *3)))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|InputForm|)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3)) (|ofCategory| *3 (|ConvertibleTo| (|InputForm|))))) ((*1 *2 *3 *2 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3)) (|ofCategory| *3 (|ConvertibleTo| (|InputForm|))))) ((*1 *2 *3 *2 *2 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3)) (|ofCategory| *3 (|ConvertibleTo| (|InputForm|))))) ((*1 *2 *3 *2 *4) (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3)) (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *3 (|PolynomialCategory| *5 *7 (|OrderedVariableList| *6))) (|ofCategory| *7 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *5)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *5)) (|ofCategory| *10 (|PlacesCategory| *5 *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *5 *6 *3 *7 *8 *9 *10 *2 *12)) (|ofCategory| *12 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|DivisorCategory| *10)) (|isDomain| *1 (|DesingTreePackage| *5 *6 *3 *7 *8 *9 *10 *2 *11 *4 *12)) (|ofCategory| *4 (|DesingTreeCategory| *11))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|ParametricPlaneCurve| (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|ParametricPlaneCurve| (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|ParametricSpaceCurve| (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|ParametricSpaceCurve| (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *3 (|ParametricSurface| (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|ParametricSurface| (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))) (|isDomain| *4 (|Segment| (|Float|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|)))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| (|DrawOption|))) (|ofCategory| *7 (|FunctionSpace| *6)) (|ofCategory| *6 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForAlgebraicCurves| *6 *7)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctions| *3)) (|ofCategory| *3 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctions| *3)) (|ofCategory| *3 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|ParametricPlaneCurve| *6)) (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|ofCategory| *6 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctions| *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|ParametricPlaneCurve| *5)) (|isDomain| *4 (|SegmentBinding| (|Float|))) (|ofCategory| *5 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctions| *5)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|ParametricSpaceCurve| *6)) (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|ofCategory| *6 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctions| *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|ParametricSpaceCurve| *5)) (|isDomain| *4 (|SegmentBinding| (|Float|))) (|ofCategory| *5 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctions| *5)))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctions| *3)) (|ofCategory| *3 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctions| *3)) (|ofCategory| *3 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *3 (|ParametricSurface| *6)) (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|List| (|DrawOption|))) (|ofCategory| *6 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctions| *6)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|ParametricSurface| *5)) (|isDomain| *4 (|SegmentBinding| (|Float|))) (|ofCategory| *5 (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctions| *5)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|)))) ((*1 *2 *3 *3 *4) (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *4 (|List| (|DrawOption|))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|)))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|)))) (|isDomain| *4 (|List| (|DrawOption|))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|)))) ((*1 *2 *3 *3 *3) (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|)))) ((*1 *2 *3 *3 *3 *4) (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *4 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Queue| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *2 *3 *3 *3) (AND (|isDomain| *2 (|Stream| (|List| (|Integer|)))) (|isDomain| *1 (|PartitionsAndPermutations|)) (|isDomain| *3 (|Integer|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Stream| (|List| (|Integer|)))) (|isDomain| *1 (|PartitionsAndPermutations|)) (|isDomain| *3 (|Integer|)))) ((*1 *2 *3 *3) (AND (|isDomain| *2 (|Stream| (|List| (|Integer|)))) (|isDomain| *1 (|PartitionsAndPermutations|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|DrawOption|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|BasicOperator|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *2 *3 *4) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|Kernel| *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3)) (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|GcdDomain|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|))) (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|HeuGcd| *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|GcdDomain|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *3 *4 *2 *5 *6 *7 *8 *9 *10) (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *13))) (|isDomain| *3 (|SparseUnivariatePolynomial| *13)) (|isDomain| *4 (|List| *12)) (|isDomain| *5 (|List| *10)) (|isDomain| *6 (|List| *13)) (|isDomain| *7 (|List| (|List| (|Record| (|:| |expt| (|NonNegativeInteger|)) (|:| |pcoef| *13))))) (|isDomain| *8 (|List| (|NonNegativeInteger|))) (|isDomain| *9 (|Vector| (|List| (|SparseUnivariatePolynomial| *10)))) (|ofCategory| *12 (|OrderedSet|)) (|ofCategory| *10 (|EuclideanDomain|)) (|ofCategory| *13 (|PolynomialCategory| *10 *11 *12)) (|ofCategory| *11 (|OrderedAbelianMonoidSup|)) (|isDomain| *1 (|MultivariateLifting| *11 *12 *10 *13))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| (|Complex| *3)))))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| (|Complex| *4)))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|TrigonometricManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *3))))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|TrigonometricManipulations| *4 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4)))))) 
(((*1 *2) (|partial| AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Record| (|:| |particular| *1) (|:| |basis| (|List| *1)))) (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)))) ((*1 *2) (|partial| AND (|isDomain| *2 (|Record| (|:| |particular| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|:| |basis| (|List| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *2) (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Kernel| (|AlgebraicNumber|)))) (|isDomain| *1 (|AlgebraicNumber|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|QuotientFieldCategory| *2)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *2 (|EuclideanDomain|)) (|isDomain| *1 (|FractionalIdeal| *2 *3 *4 *5)) (|ofCategory| *5 (|Join| (|FramedAlgebra| *3 *4) (|RetractableTo| *3))))) ((*1 *2 *1) (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1))) (|ofCategory| *1 (|FunctionSpace| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Kernel| (|InnerAlgebraicNumber|)))) (|isDomain| *1 (|InnerAlgebraicNumber|)))) ((*1 *2 *1) (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *2 (|SubsetCategory| (|Monoid|) *4)) (|isDomain| *1 (|LocalAlgebra| *3 *4 *2)) (|ofCategory| *3 (|Algebra| *4)))) ((*1 *2 *1) (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *2 (|SubsetCategory| (|Monoid|) *4)) (|isDomain| *1 (|Localize| *3 *4 *2)) (|ofCategory| *3 (|Module| *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QuotientFieldCategory| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *3 *3 *3) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|)))) ((*1 *2) (AND (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|OnePointCompletion| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|LiouvillianFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|InternalRationalUnivariateRepresentationPackage| *5 *6 *7 *8 *3)) (|ofCategory| *3 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|Record| (|:| |complexRoots| (|SparseUnivariatePolynomial| *5)) (|:| |coordinates| (|List| (|Polynomial| *5)))))) (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *5 *6)) (|isDomain| *3 (|List| (|Polynomial| *5))) (|ofType| *6 (|List| (|Symbol|))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|Record| (|:| |complexRoots| (|SparseUnivariatePolynomial| *4)) (|:| |coordinates| (|List| (|Polynomial| *4)))))) (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *4 *5)) (|isDomain| *3 (|List| (|Polynomial| *4))) (|ofType| *5 (|List| (|Symbol|))))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|Record| (|:| |complexRoots| (|SparseUnivariatePolynomial| *5)) (|:| |coordinates| (|List| (|Polynomial| *5)))))) (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *5 *6)) (|isDomain| *3 (|List| (|Polynomial| *5))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|Record| (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *4)))) (|:| |basis| (|List| (|Vector| (|Fraction| (|Polynomial| *4))))))) (|isDomain| *3 (|List| *7)) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5)) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|))) (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4)) (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Kernel| (|AlgebraicNumber|)))) (|isDomain| *1 (|AlgebraicNumber|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *4 (|QuotientFieldCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Vector| *6)) (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6)) (|ofCategory| *6 (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4))))) ((*1 *2 *1) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1))) (|ofCategory| *1 (|FunctionSpace| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Kernel| (|InnerAlgebraicNumber|)))) (|isDomain| *1 (|InnerAlgebraicNumber|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *2 (|Algebra| *3)) (|isDomain| *1 (|LocalAlgebra| *2 *3 *4)) (|ofCategory| *4 (|SubsetCategory| (|Monoid|) *3)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *2 (|Module| *3)) (|isDomain| *1 (|Localize| *2 *3 *4)) (|ofCategory| *4 (|SubsetCategory| (|Monoid|) *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QuotientFieldCategory| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ComplexDoubleFloatMatrix|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ComplexDoubleFloatVector|)))) ((*1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DoubleFloatMatrix|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DoubleFloatVector|)))) ((*1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|U16Matrix|)))) ((*1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|U32Matrix|)))) ((*1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|U8Matrix|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FileCategory| *2 *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FunctionCalled| *3)) (|ofType| *3 *2))) ((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RuleCalled| *3)) (|ofType| *3 *2))) ((*1 *1 *1) (|isDomain| *1 (|Symbol|)))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2)) (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *2 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|PseudoRemainderSequence| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *2 *3 *3 *1) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *1)))) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5)) (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5)) (|ofCategory| *3 (|Join| (|Field|) (|OrderedSet|))) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|ModuleMonomial| *3 *2 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofType| *4 (|Mapping| (|Boolean|) (|Record| (|:| |index| *3) (|:| |exponent| *2)) (|Record| (|:| |index| *3) (|:| |exponent| *2))))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|ContinuedFraction| *2)) (|ofCategory| *2 (|EuclideanDomain|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|CycleIndicators|)) (|isDomain| *3 (|Integer|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|LazyStreamAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1) (|ofCategory| *1 (|PAdicIntegerCategory| *2))) ((*1 *1 *1) (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|)))) 
(((*1 *2 *3 *1 *4) (AND (|isDomain| *3 (|SplittingNode| *5 *6)) (|isDomain| *4 (|Mapping| (|Boolean|) *6 *6)) (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *6 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingTree| *5 *6))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3))) (|isDomain| *1 (|CoordinateSystems| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|)))))) 
(((*1 *2 *2) (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1 *2) (|partial| AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|EuclideanDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| (|Segment| (|Float|)))) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Segment| (|Float|)))) (|isDomain| *1 (|DrawOption|)))) ((*1 *2 *1 *2) (AND (|isDomain| *2 (|List| (|Segment| (|Float|)))) (|isDomain| *1 (|GraphImage|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Segment| (|Float|)))) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1 *2 *2) (AND (|ofCategory| *1 (|ComplexCategory| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *1 *1 *2) (AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|OutputForm|))))) 
(((*1 *2 *1 *2) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *2 *7 *8 *9 *10)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *2 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *7 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *8 (|PlacesCategory| *3 *7)) (|ofCategory| *9 (|DivisorCategory| *8)) (|ofCategory| *10 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3))) (|isDomain| *1 (|NonCommutativeOperatorDivision| *3 *4)) (|ofCategory| *3 (|MonogenicLinearOperator| *4)))) ((*1 *2 *1 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1))) (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3)))) ((*1 *2 *3 *3 *4) (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3))) (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3)) (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *4))) (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *3))))) ((*1 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3)))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ComplexCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Expression| *4)) (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| (|Complex| *4)))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|OctonionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QuaternionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|TrigonometricManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *3)))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| (|List| *8))) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|EuclideanDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7)) (|isDomain| *2 (|Record| (|:| |unitPart| *9) (|:| |suPart| (|List| (|Record| (|:| |factor| (|SparseUnivariatePolynomial| *9)) (|:| |exponent| (|Integer|))))))) (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9)) (|isDomain| *3 (|SparseUnivariatePolynomial| *9))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Mapping| *6 (|NonNegativeInteger|) (|Vector| (|SparseUnivariatePolynomial| *6)))) (|isDomain| *5 (|List| (|NonNegativeInteger|))) (|ofCategory| *6 (|Join| (|IntegralDomain|) (|GcdDomain|))) (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *6))) (|isDomain| *1 (|FractionFreeFastGaussian| *6 *7)) (|ofCategory| *7 (|AbelianMonoidRing| *6 (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Mapping| *5 *5)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5))) (|isDomain| *2 (|Record| (|:| |num| *1) (|:| |den| *5) (|:| |derivden| *5) (|:| |gd| *5))) (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Vector| *6)) (|isDomain| *1 (|FiniteDivisor| *3 *4 *5 *6)) (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Expression| (|DoubleFloat|)))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|e04AgentsPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *4 *5 *5 *4 *6) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *6 (|Mapping| (|Void|) (|Vector| *5) (|Vector| *5) (|Float|))) (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4))))) ((*1 *2 *3 *4) (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|))) (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *1 *1) (|isDomain| *1 (|Boolean|)))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialIdeals| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2 *2 *3) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *3 (|Matrix| (|Integer|))) (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *2 (|List| (|Complex| *4))) (|isDomain| *1 (|ComplexRootPackage| *3 *4)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| (|Integer|)))) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *2 (|List| (|Complex| *4))) (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4))))) ((*1 *2 *3 *4) (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *2 (|List| (|Complex| *4))) (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2))) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *1 *1 *1) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|BinaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OrderedVariableList| *3)) (|ofType| *3 (|List| *2)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|QueryEquation|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SegmentBinding| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|Symbol|)))) ((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Variable| *3)) (|ofType| *3 *2)))) 
(((*1 *2 *1) (|partial| AND (|isDomain| *2 (|Mapping| (|InputForm|) (|List| (|InputForm|)))) (|isDomain| *1 (|BasicOperator|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Mapping| (|InputForm|) (|List| (|InputForm|)))) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Complex| (|Integer|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaussianFactorizationPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PolynomialIdeals| (|Fraction| (|Integer|)) (|DirectProduct| *5 (|NonNegativeInteger|)) (|OrderedVariableList| *4) (|DistributedMultivariatePolynomial| *4 (|Fraction| (|Integer|))))) (|ofType| *4 (|List| (|Symbol|))) (|ofType| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IdealDecompositionPackage| *4 *5)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerPrimesPackage| *3)) (|ofCategory| *3 (|IntegerNumberSystem|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UniqueFactorizationDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Record| (|:| |goodPols| (|List| *7)) (|:| |badPols| (|List| *7)))) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7)) (|isDomain| *3 (|List| *7))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *7)) (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| *3)) (|ofCategory| *3 (|PolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |poly| *3) (|:| |mult| *5))) (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *7 *3))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| (|List| *4))) (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *1 (|LinesOpPack| *4))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|AttributeButtons|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|))) ((*1 *2 *3) (AND (|isDomain| *3 (|Factored| *4)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Record| (|:| |coef| (|NonNegativeInteger|)) (|:| |logand| *4)))) (|isDomain| *1 (|FactoredFunctions| *4)))) ((*1 *1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|LiePolynomial| *3 *4)) (|isDomain| *1 (|LieExponentials| *3 *4 *5)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Join| (|CommutativeRing|) (|Module| (|Fraction| (|Integer|))))) (|ofType| *5 (|PositiveInteger|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|))))) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|XExponentialPackage| *4 *5 *2)) (|ofCategory| *2 (|XPolynomialsCat| *5 *4)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|XPBWPolynomial| *3 *4)) (|ofCategory| *4 (|Module| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *2 *2 *1) (AND (|isDomain| *1 (|ListMultiDictionary| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|PrimitiveRatRicDE| *4 *3 *2 *5)) (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *3)) (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| (|Fraction| *3))))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Fraction| *5)) (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|PrimitiveRatRicDE| *4 *5 *2 *6)) (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *5)) (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *7)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4)))) (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|PolynomialInterpolationAlgorithms| *4 *2))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *4 *5)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5)) (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|AlgebraPackage| *3 *4)) (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2) (AND (|ofType| *4 *2) (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5)) (|ofCategory| *3 (|DirectProductCategory| *4 *5)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|CancellationAbelianMonoid|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2) (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4)) (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2) (AND (|ofCategory| *1 (|Finite|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2) (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FiniteSetAggregate&| *3 *4)) (|ofCategory| *3 (|FiniteSetAggregate| *4)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4))) ((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|MonogenicAlgebra&| *3 *4 *5)) (|ofCategory| *3 (|MonogenicAlgebra| *4 *5)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OrderedFreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|))) (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2 *2 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|OnePointCompletion| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|e04AgentsPackage|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|isDomain| *1 (|FortranType|))))) 
(((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|U32VectorPolynomialOperations|)))) ((*1 *2 *3 *4 *4 *4) (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Record| (|:| |factor| *4) (|:| |degree| (|Integer|))))) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|))) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GaloisGroupFactorizer| *4))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|Symbol|)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|ofCategory| *4 (|Join| (|AlgebraicallyClosedFunctionSpace| *6) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|))) (|isDomain| *2 (|Record| (|:| |particular| *4) (|:| |basis| (|List| *4)))) (|isDomain| *1 (|ConstantLODE| *6 *4 *3)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|List| (|Kernel| *4))) (|ofCategory| *4 (|FunctionSpace| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|IntegrationTools| *3 *4)))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|PatternMatchResult| *2 *3)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|SetAggregate| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|SetAggregate| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|SetAggregate| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *3 *4 *4) (|partial| AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Fraction| *6)) (|isDomain| *1 (|PadeApproximants| *5 *4 *6)) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)))) ((*1 *2 *3 *3 *4 *4) (|partial| AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|UnivariateTaylorSeries| *5 *6 *7)) (|ofCategory| *5 (|Field|)) (|ofType| *6 (|Symbol|)) (|ofType| *7 *5) (|isDomain| *2 (|Fraction| (|UnivariatePolynomial| *6 *5))) (|isDomain| *1 (|PadeApproximantPackage| *5 *6 *7)))) ((*1 *2 *3 *3 *4) (|partial| AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|UnivariateTaylorSeries| *5 *6 *7)) (|ofCategory| *5 (|Field|)) (|ofType| *6 (|Symbol|)) (|ofType| *7 *5) (|isDomain| *2 (|Fraction| (|UnivariatePolynomial| *6 *5))) (|isDomain| *1 (|PadeApproximantPackage| *5 *6 *7))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|PartialDifferentialRing| *5)) (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *2 *3 *4)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|Join| (|FiniteLinearAggregate| *5) (CATEGORY |package| (ATTRIBUTE |finiteAggregate|))))))) 
(((*1 *2 *1) (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|Product| *2 *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2 *5 *6) (AND (|isDomain| *5 (|Record| (|:| |done| (|List| *11)) (|:| |todo| (|List| (|Record| (|:| |val| *3) (|:| |tower| *11)))))) (|isDomain| *6 (|NonNegativeInteger|)) (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *10)) (|:| |tower| *11)))) (|isDomain| *3 (|List| *10)) (|isDomain| *4 (|List| *11)) (|ofCategory| *10 (|RecursivePolynomialCategory| *7 *8 *9)) (|ofCategory| *11 (|RegularTriangularSetCategory| *7 *8 *9 *10)) (|ofCategory| *7 (|GcdDomain|)) (|ofCategory| *8 (|OrderedAbelianMonoidSup|)) (|ofCategory| *9 (|OrderedSet|)) (|isDomain| *1 (|RegularSetDecompositionPackage| *7 *8 *9 *10 *11)))) ((*1 *2 *3 *4 *2 *5 *6) (AND (|isDomain| *5 (|Record| (|:| |done| (|List| *11)) (|:| |todo| (|List| (|Record| (|:| |val| *3) (|:| |tower| *11)))))) (|isDomain| *6 (|NonNegativeInteger|)) (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *10)) (|:| |tower| *11)))) (|isDomain| *3 (|List| *10)) (|isDomain| *4 (|List| *11)) (|ofCategory| *10 (|RecursivePolynomialCategory| *7 *8 *9)) (|ofCategory| *11 (|SquareFreeRegularTriangularSetCategory| *7 *8 *9 *10)) (|ofCategory| *7 (|GcdDomain|)) (|ofCategory| *8 (|OrderedAbelianMonoidSup|)) (|ofCategory| *9 (|OrderedSet|)) (|isDomain| *1 (|SquareFreeRegularSetDecompositionPackage| *7 *8 *9 *10 *11))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5) (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|))) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Record| (|:| |value| *4) (|:| |error| *4) (|:| |totalpts| (|Integer|)) (|:| |success| (|Boolean|)))) (|isDomain| *1 (|NumericalQuadrature|)) (|isDomain| *5 (|Integer|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|LinesOpPack| *3))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Result|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *1 (|PlacesCategory| *4 *5)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|LocalPowerSeriesCategory| *4)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Mapping| (|Float|))) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| (|List| (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|)))))) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2)) (|ofCategory| *2 (|Join| (|FiniteLinearAggregate| *4) (CATEGORY |package| (ATTRIBUTE |shallowlyMutable|))))))) 
(((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|)) (|ofCategory| *7 (|GcdDomain|)) (|ofCategory| *8 (|OrderedAbelianMonoidSup|)) (|ofCategory| *9 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *7 *8 *9)) (|isDomain| *2 (|Record| (|:| |done| (|List| *4)) (|:| |todo| (|List| (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4)))))) (|isDomain| *1 (|RegularSetDecompositionPackage| *7 *8 *9 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *7 *8 *9 *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8)) (|isDomain| *2 (|Record| (|:| |done| (|List| *4)) (|:| |todo| (|List| (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4)))))) (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Record| (|:| |done| (|List| *4)) (|:| |todo| (|List| (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4)))))) (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|)) (|ofCategory| *7 (|GcdDomain|)) (|ofCategory| *8 (|OrderedAbelianMonoidSup|)) (|ofCategory| *9 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *7 *8 *9)) (|isDomain| *2 (|Record| (|:| |done| (|List| *4)) (|:| |todo| (|List| (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4)))))) (|isDomain| *1 (|SquareFreeRegularSetDecompositionPackage| *7 *8 *9 *3 *4)) (|ofCategory| *4 (|SquareFreeRegularTriangularSetCategory| *7 *8 *9 *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8)) (|isDomain| *2 (|Record| (|:| |done| (|List| *4)) (|:| |todo| (|List| (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4)))))) (|isDomain| *1 (|SquareFreeRegularSetDecompositionPackage| *6 *7 *8 *3 *4)) (|ofCategory| *4 (|SquareFreeRegularTriangularSetCategory| *6 *7 *8 *3)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Record| (|:| |done| (|List| *4)) (|:| |todo| (|List| (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4)))))) (|isDomain| *1 (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|IntegrationTools| *4 *2)) (|ofCategory| *2 (|FunctionSpace| *4))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *1 *1) (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 *3)))) 
(((*1 *2 *3 *3 *3) (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Mapping| (|List| *4) *4)) (|isDomain| *1 (|Bezier| *4)) (|isDomain| *3 (|List| *4))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3)) (|isDomain| *1 (|PartialFraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Kernel| *5))) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Kernel| *5)) (|isDomain| *1 (|IntegrationTools| *4 *5)) (|ofCategory| *5 (|FunctionSpace| *4))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Float|)) (|isDomain| *1 (|RoutinesTable|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Magma| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|OrderedFreeMonoid| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1) (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *2 *3 *4 *5)) (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|UnaryRecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|List| (|Polynomial| *4))))) ((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|List| (|Polynomial| *4))) (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|List| (|Polynomial| *3))))) ((*1 *2) (AND (|isDomain| *2 (|List| (|Polynomial| *3))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3))))) ((*1 *2 *3) (AND (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))) (|isDomain| *2 (|List| (|Polynomial| *4))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|)) (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|Vector| (|Matrix| *4)))))) 
(((*1 *2) (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *2))) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *2 *5)) (|ofCategory| *3 (|FunctionFieldCategory| *4 *2 *5)))) ((*1 *2) (|partial| AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *2 *4)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2))) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *2 *1) (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1) (AND (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|ArrayStack| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Heap| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Multiset| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Queue| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Stack| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|BasicOperator|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|BasicOperator|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *5 (|DifferentialVariableCategory| *3)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|DifferentialVariableCategory| *4)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|DifferentialVariableCategory| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|isDomain| *1 (|CombinatorialFunction| *4 *2)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *3 *3 *2 *4) (AND (|isDomain| *3 (|Matrix| *2)) (|isDomain| *4 (|Integer|)) (|ofCategory| *2 (|Join| (|EuclideanDomain|) (CATEGORY |domain| (SIGNATURE |squareFree| ((|Factored| $) $))))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *2)) (|isDomain| *1 (|IntegralBasisTools| *2 *5 *6)) (|ofCategory| *6 (|FramedAlgebra| *2 *5))))) 
(((*1 *2 *3 *4 *3 *4 *3 *5 *5) (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *2 (|List| (|PrimitiveArray| *5))) (|isDomain| *1 (|BlasLevelOne|)) (|isDomain| *4 (|PrimitiveArray| *5))))) 
(((*1 *2 *1 *2 *3) (|partial| AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|RoutinesTable|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|RetractableTo| (|Integer|))) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|AlgebraicManipulations| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)) (|ofCategory| *2 (|Join| (|Field|) (|ExpressionSpace|) (CATEGORY |domain| (SIGNATURE |numer| ((|SparseMultivariatePolynomial| *3 (|Kernel| $)) $)) (SIGNATURE |denom| ((|SparseMultivariatePolynomial| *3 (|Kernel| $)) $)) (SIGNATURE |coerce| ($ (|SparseMultivariatePolynomial| *3 (|Kernel| $)))))))))) 
(((*1 *1 *1 *2) (AND (|ofCategory| *1 (|SetAggregate| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|SetAggregate| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2) (AND (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5))) (|isDomain| *2 (|List| (|List| *4))) (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6)) (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6)))) ((*1 *2) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|ofCategory| *3 (|Finite|)) (|isDomain| *2 (|List| (|List| *3))))) ((*1 *2) (AND (|ofCategory| *3 (|Finite|)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *5 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2) (AND (|isDomain| *2 (|List| (|ProjectivePlaneOverPseudoAlgebraicClosureOfFiniteField| *3))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|List| (|ProjectivePlane| *3))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|isDomain| *2 (|List| *8)) (|isDomain| *1 (|ProjectiveAlgebraicSetPackage| *5 *6 *3 *7 *8)) (|ofCategory| *3 (|PolynomialCategory| *5 *7 (|OrderedVariableList| *6))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *5))))) 
(((*1 *2 *1 *3 *2) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|AffineSpaceCategory| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *1 *3 *3 *2) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5)) (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *5 (|FiniteLinearAggregate| *2)))) ((*1 *1 *1 *2 *1) (AND (|isDomain| *2 "right") (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|BinaryRecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *1 *2 *1) (AND (|isDomain| *2 "left") (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|BinaryRecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *1 *3 *2) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1 *3 *2) (AND (|isDomain| *2 (|Any|)) (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|Library|)))) ((*1 *2 *1 *3 *2) (AND (|isDomain| *3 (|UniversalSegment| (|Integer|))) (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1 *2 *2 *1) (AND (|isDomain| *2 (|List| (|Integer|))) (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)))) ((*1 *2 *1 *3 *2) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|ProjectiveSpaceCategory| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *1 *3 *2) (AND (|isDomain| *3 "value") (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1 *2) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1 *3 *2) (AND (|ofCategory| *1 (|TableAggregate| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1 *3 *2) (AND (|isDomain| *3 "last") (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1 *2 *1) (AND (|isDomain| *2 "rest") (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|UnaryRecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *1 *3 *2) (AND (|isDomain| *3 "first") (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *3))))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4))))) ((*1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4)))) (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8 *9))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteRankAlgebra| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5)) (|ofCategory| *4 (|DirectProductCategory| *3 *2)) (|ofCategory| *5 (|DirectProductCategory| *3 *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *1 (|CyclotomicPolynomialPackage|)) (|isDomain| *3 (|Integer|)))) ((*1 *2 *3 *2) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *1 (|PolynomialNumberTheoryFunctions|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|DivisorCategory| *10)) (|ofCategory| *3 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *11 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|DesingTreePackage| *4 *5 *6 *7 *8 *9 *10 *11 *3 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *3))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|AffineSpaceCategory| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *1 *3 *3 *2) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5)) (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *5 (|FiniteLinearAggregate| *2)))) ((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *5 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 "right") (|ofCategory| *1 (|BinaryRecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 "left") (|ofCategory| *1 (|BinaryRecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 (|Integer|)) (|ofType| *5 (|NonNegativeInteger|)))) ((*1 *2 *1 *3 *3 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3) (|ofType| *5 (|NonNegativeInteger|)))) ((*1 *2 *1 *3 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3) (|ofType| *5 (|NonNegativeInteger|)))) ((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3) (|ofType| *5 (|NonNegativeInteger|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3) (|ofType| *5 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *2)) (|ofType| *3 (|Integer|)) (|ofType| *4 (|NonNegativeInteger|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|DataList| (|String|))) (|isDomain| *1 (|Database| *4)) (|ofCategory| *4 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |elt| ((|String|) $ *3)) (SIGNATURE |display| ((|Void|) $)) (SIGNATURE |fullDisplay| ((|Void|) $))))))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|QueryEquation|)) (|isDomain| *1 (|Database| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |elt| ((|String|) $ (|Symbol|))) (SIGNATURE |display| ((|Void|) $)) (SIGNATURE |fullDisplay| ((|Void|) $))))))) ((*1 *2 *1 *3) (AND (|isDomain| *3 "count") (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|DataList| *4)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 "sort") (|isDomain| *1 (|DataList| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 "unique") (|isDomain| *1 (|DataList| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|Eltable| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1 *3 *2) (AND (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1 *2) (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *1 (|EuclideanModularRing| *3 *2 *4 *5 *6 *7)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *4)) (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4)) (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *4)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *1 *2 *1 *1 *1 *1) (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|BasicOperator|)))) ((*1 *1 *2 *1 *1 *1) (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|BasicOperator|)))) ((*1 *1 *2 *1 *1) (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|BasicOperator|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|BasicOperator|)))) ((*1 *2 *1 *2 *2) (AND (|ofCategory| *1 (|FunctionFieldCategory| *2 *3 *4)) (|ofCategory| *2 (|UniqueFactorizationDomain|)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3))))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|IndexCard|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|Library|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|UniversalSegment| (|Integer|))) (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *1 *3 *3 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|ThreeDimensionalMatrix| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *2 *2) (AND (|isDomain| *2 (|List| (|Integer|))) (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| (|Pattern| *4))) (|isDomain| *1 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *1 *2) (AND (|ofCategory| *1 (|PermutationCategory| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Permutation| *4)) (|isDomain| *1 (|PermutationGroup| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|PlacesCategory| *2 *4)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|ProjectiveSpaceCategory| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|DirectProduct| *4 *2)) (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|QuadraticForm| *4 *2)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 "value") (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1 *3 *3 *2) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *5 *2)) (|ofCategory| *7 (|DirectProductCategory| *4 *2)))) ((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7)) (|ofCategory| *6 (|DirectProductCategory| *5 *2)) (|ofCategory| *7 (|DirectProductCategory| *4 *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Join| (|Ring|) (|PatternMatchable| *4) (|OrderedSet|) (|ConvertibleTo| (|Pattern| *4)))) (|isDomain| *1 (|RewriteRule| *4 *5 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4) (|ConvertibleTo| (|Pattern| *4)))))) ((*1 *2 *1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Join| (|Ring|) (|PatternMatchable| *4) (|OrderedSet|) (|ConvertibleTo| (|Pattern| *4)))) (|isDomain| *1 (|Ruleset| *4 *5 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4) (|ConvertibleTo| (|Pattern| *4)))))) ((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *2)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Integer|))) (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *7)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *7)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|StringAggregate|))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|)))) ((*1 *2 *3 *2) (AND (|isDomain| *3 (|Fraction| *1)) (|ofCategory| *1 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Fraction| *1)) (|ofCategory| *1 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|IntegralDomain|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3)) (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 "last") (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 "rest") (|ofCategory| *1 (|UnaryRecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 "first") (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *2 *3 *4 *5)) (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *1 (|GuessFiniteFunctions| *3)) (|ofCategory| *3 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|))))))) 
(((*1 *2) (AND (|ofCategory| *3 (|Finite|)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *5 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|DivisorCategory| *10)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *11 *14)) (|ofCategory| *14 (|BlowUpMethodCategory|)) (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *4 *5 *6 *7 *8 *9 *10 *11 *12 *13 *14)) (|ofCategory| *13 (|DesingTreeCategory| *12)))) ((*1 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| (|PseudoAlgebraicClosureOfFiniteField| *3) (|Finite|)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *4 *5 *6)) (|ofCategory| (|PseudoAlgebraicClosureOfFiniteField| *4) (|Finite|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *3 (|Finite|)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *4 *5 *6)) (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Mapping| (|Stream| (|Polynomial| *4)) (|Stream| (|Polynomial| *4)))) (|isDomain| *1 (|WeierstrassPreparation| *4)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|)) (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|)))) ((*1 *2 *3 *4 *4 *5 *6) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|)) (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|)))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|AffineSpaceCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|List| *3)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|ListAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|List| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *2 *1) (AND (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|Collection| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *2 *1 *3) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *4)) (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|Multiset| *4)))) ((*1 *1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Multiset| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|SplittingNode| *3 *4)) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *2 *2 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|isDomain| *1 (|PackageForPoly| *4 *2 *5 *6)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *4 *5))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|FactoredFunctionUtilities| *3))))) 
(((*1 *1 *1) (|isDomain| *1 (|RoutinesTable|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|isDomain| *1 (|CombinatorialFunction| *4 *2)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *1 *1 *2) (AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *1 *1) (|ofCategory| *1 (|FieldOfPrimeCharacteristic|)))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|ComplexCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|RealNumberSystem|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|OctonionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|RealNumberSystem|)))) ((*1 *1 *1) (|ofCategory| *1 (|OrderedRing|))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QuaternionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|RealNumberSystem|)))) ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|))) ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *2 (|FunctionSpace| *3)) (|isDomain| *1 (|AlgebraicFunction| *3 *2)) (|ofCategory| *3 (|RetractableTo| *4)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerRetractions| *3)) (|ofCategory| *3 (|RetractableTo| (|Integer|))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *7)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *1 (|RepeatedDoubling| *2)) (|ofCategory| *2 (|Join| (|SetCategory|) (CATEGORY |domain| (SIGNATURE + ($ $ $)))))))) 
(((*1 *2 *2 *2 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *6 *5)) (|isDomain| *4 (|ProjectivePlaneOverPseudoAlgebraicClosureOfFiniteField| *5)) (|ofCategory| *5 (|FiniteFieldCategory|)) (|ofType| *6 (|List| (|Symbol|))) (|isDomain| *2 (|DistributedMultivariatePolynomial| *6 (|PseudoAlgebraicClosureOfFiniteField| *5))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *5 *6 *7)) (|ofCategory| *7 (|BlowUpMethodCategory|)))) ((*1 *2 *2 *3 *4) (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|DirectProductCategory| *7 (|NonNegativeInteger|))) (|ofType| *7 (|NonNegativeInteger|)) (|isDomain| *1 (|PolynomialPackageForCurve| *5 *2 *6 *7 *3)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *5 *6)) (|ofCategory| *3 (|ProjectiveSpaceCategory| *5)))) ((*1 *2 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|isDomain| *1 (|PolynomialPackageForCurve| *4 *2 *5 *6 *3)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *4 *5)) (|ofCategory| *3 (|ProjectiveSpaceCategory| *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|ofCategory| *1 (|DirectProductCategory| *3 *4)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|Type|)))) ((*1 *1 *2) (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *5 (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|))) (|ofType| *6 (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *5)) (|Record| (|:| |index| *2) (|:| |exponent| *5)))) (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *2 *5 *6 *7)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 (|OrderedVariableList| *3))))) ((*1 *2 *2) (AND (|isDomain| *2 (|Point| (|DoubleFloat|))) (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *2 (|List| (|List| *3))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)) (|isDomain| *2 (|List| (|List| *5))))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|Tableau| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|AntiSymm| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|List| (|Symbol|))))) ((*1 *1 *1) (AND (|isDomain| *1 (|DeRhamComplex| *2 *3)) (|ofCategory| *2 (|Join| (|Ring|) (|OrderedSet|))) (|ofType| *3 (|List| (|Symbol|))))) ((*1 *1 *1) (AND (|isDomain| *1 (|Divisor| *2)) (|ofCategory| *2 (|SetCategoryWithDegree|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|FreeModuleCat| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *1) (AND (|ofType| *2 (|List| (|Symbol|))) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *5 (|DirectProductCategory| (|#| *2) (|NonNegativeInteger|))) (|ofType| *6 (|Mapping| (|Boolean|) (|Record| (|:| |index| *4) (|:| |exponent| *5)) (|Record| (|:| |index| *4) (|:| |exponent| *5)))) (|isDomain| *1 (|GeneralModulePolynomial| *2 *3 *4 *5 *6 *7)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *7 (|PolynomialCategory| *3 *5 (|OrderedVariableList| *2))))) ((*1 *1 *1) (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *2 *3)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *1) (AND (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|LaurentPolynomial| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|MonogenicLinearOperator| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|MonoidRing| *2 *3)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|Monoid|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *2 *5)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *3 *4)) (|ofCategory| *2 (|DirectProductCategory| *3 *4))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|List| *8))) (|isDomain| *3 (|List| *8)) (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *1 *2 *3 *3 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Boolean|)) (|isDomain| *1 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Complex| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|SplittingTree| *2 *3)) (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *4 *4 *5 *3 *3 *3 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RepresentationPackage2| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5)) (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5) (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|))) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Record| (|:| |value| *4) (|:| |error| *4) (|:| |totalpts| (|Integer|)) (|:| |success| (|Boolean|)))) (|isDomain| *1 (|NumericalQuadrature|)) (|isDomain| *5 (|Integer|))))) 
(((*1 *2 *3 *4 *4 *4 *3 *5 *3 *4 *6 *7) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp7| FCN)))) (|isDomain| *7 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp8| OUTPUT)))) (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOrdinaryDifferentialEquationsPackage|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *1 *1) (|ofCategory| *1 (|Aggregate|))) ((*1 *1 *1) (AND (|isDomain| *1 (|ArrayStack| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1) (|isDomain| *1 (|BasicOperator|))) ((*1 *1 *1) (|isDomain| *1 (|SubSpaceComponentProperty|))) ((*1 *1 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|Heap| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|))) ((*1 *1 *1) (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|Queue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|SplittingNode| *2 *3)) (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))))) ((*1 *1 *1) (AND (|isDomain| *1 (|Stack| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3)) (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|AntiSymm| *2 *3)) (|ofType| *3 (|List| (|Symbol|))))) ((*1 *2 *1) (AND (|isDomain| *2 (|Expression| *3)) (|isDomain| *1 (|DeRhamComplex| *3 *4)) (|ofCategory| *3 (|Join| (|Ring|) (|OrderedSet|))) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FreeModuleCat| *2 *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *1) (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *5 (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|))) (|ofType| *6 (|Mapping| (|Boolean|) (|Record| (|:| |index| *4) (|:| |exponent| *5)) (|Record| (|:| |index| *4) (|:| |exponent| *5)))) (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|GeneralModulePolynomial| *3 *2 *4 *5 *6 *7)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *7 (|PolynomialCategory| *2 *5 (|OrderedVariableList| *3))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *2 *3)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|LaurentPolynomial| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|MonogenicLinearOperator| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|MonoidRing| *2 *3)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|Monoid|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4)) (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Record| (|:| |gen| *3) (|:| |exp| (|Integer|)))) (|isDomain| *1 (|Divisor| *3)) (|ofCategory| *3 (|SetCategoryWithDegree|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *3 *4 *4 *3 *3 *5 *3 *4 *6 *7) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp9| G)))) (|isDomain| *7 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp7| FCN)))) (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOrdinaryDifferentialEquationsPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|DictionaryOperations| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *1 (|ExtensibleLinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Expression| (|DoubleFloat|))) (|isDomain| *1 (|d03AgentsPackage|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2 *1) (AND (|isDomain| *1 (|Stream| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FreeModuleCat| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *6 (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|))) (|ofType| *7 (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6)) (|Record| (|:| |index| *5) (|:| |exponent| *6)))) (|isDomain| *2 (|ModuleMonomial| *5 *6 *7)) (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *6 *7 *8)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *8 (|PolynomialCategory| *4 *6 (|OrderedVariableList| *3))))) ((*1 *2 *1) (AND (|ofCategory| *2 (|Monoid|)) (|ofCategory| *2 (|OrderedSet|)) (|isDomain| *1 (|MonoidRing| *3 *2)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3 *4 *4 *3 *5 *3 *6 *4 *7 *8 *9) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|String|)) (|isDomain| *6 (|Matrix| (|DoubleFloat|))) (|isDomain| *7 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp9| G)))) (|isDomain| *8 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp7| FCN)))) (|isDomain| *9 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp8| OUTPUT)))) (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOrdinaryDifferentialEquationsPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5)) (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|IntegrationResult| *3)) (|isDomain| *1 (|FunctionSpaceComplexIntegration| *5 *3)) (|ofCategory| *3 (|Join| (|TranscendentalFunctionCategory|) (|AlgebraicallyClosedFunctionSpace| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|IntegrationResult| (|Fraction| (|Polynomial| *5)))) (|isDomain| *1 (|RationalFunctionIntegration| *5)) (|isDomain| *3 (|Fraction| (|Polynomial| *5)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4)))) ((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|CycleIndicators|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|)))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *1 (|SetAggregate| *3)))) ((*1 *1) (AND (|ofCategory| *1 (|SetAggregate| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3)) (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FunctionSpace| *2)) (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3 *4 *4 *5 *4 *3 *6 *3 *4 *7 *8 *9 *10) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|String|)) (|isDomain| *6 (|Matrix| (|DoubleFloat|))) (|isDomain| *7 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp9| G)))) (|isDomain| *8 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp7| FCN)))) (|isDomain| *9 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp31| PEDERV)))) (|isDomain| *10 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp8| OUTPUT)))) (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOrdinaryDifferentialEquationsPackage|))))) 
(((*1 *2 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Kernel| *6))) (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Kernel| *6)) (|ofCategory| *6 (|FunctionSpace| *5)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|IntegrationTools| *5 *6))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|Vector| (|Symbol|))) (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)) (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|)) (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|Vector| (|Matrix| *4))))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)) (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|)) (|ofType| *6 (|List| *2)) (|ofType| *7 (|Vector| (|Matrix| *4))))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3))))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|Symbol|))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3))))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| *2)) (|ofType| *6 (|Vector| (|Matrix| *3))))) ((*1 *1) (AND (|isDomain| *1 (|GenericNonAssociativeAlgebra| *2 *3 *4 *5)) (|ofCategory| *2 (|CommutativeRing|)) (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|List| (|Symbol|))) (|ofType| *5 (|Vector| (|Matrix| *2)))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| (|List| (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|)))))) (|isDomain| *1 (|FiniteFieldFunctions| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|MyExpression| *3 *4)) (|ofType| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|Ring|) (|OrderedSet|) (|IntegralDomain|))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|FortranType|)) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Complex| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3 *3 *4 *5 *5 *5 *4 *4 *4 *3 *4 *4 *6) (AND (|isDomain| *3 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp7| FCN)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOrdinaryDifferentialEquationsPackage|))))) 
(((*1 *2 *2 *2) (|partial| AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|NonCommutativeOperatorDivision| *2 *3)) (|ofCategory| *2 (|MonogenicLinearOperator| *3)))) ((*1 *1 *1 *1) (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|OrderedCompletion| (|Float|))) (|isDomain| *2 (|OrderedCompletion| (|DoubleFloat|))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *3 *4 *2) (AND (|isDomain| *4 (|Mapping| *2 *2)) (|ofCategory| *2 (|LeftModule| *5)) (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|ApplyUnivariateSkewPolynomial| *5 *2 *3)) (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)))) ((*1 *2 *1 *2 *2) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *3 *2 *2 *4 *5) (AND (|isDomain| *4 (|Automorphism| *2)) (|isDomain| *5 (|Mapping| *2 *2)) (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *2 *3)) (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *2))))) 
(((*1 *1 *1) (|ofCategory| *1 (|DivisionRing|))) ((*1 *1 *1) (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4)) (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4)) (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4)))) ((*1 *1 *1) (OR (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Type|))) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Group|)) (|ofCategory| *2 (|Type|))))) ((*1 *1 *1) (|ofCategory| *1 (|Group|))) ((*1 *2 *2) (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3)))) ((*1 *1 *1) (AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3)) (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3)) (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|OctonionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TabulatedComputationPackage| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *3 (|DivisorCategory| *10)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *3 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Record| (|:| |num| (|List| *6)) (|:| |den| *6))) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *4 *5 *6 *7 *8 *9 *10 *3 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Divisor| (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *5))) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|FiniteFieldCategory|)) (|isDomain| *2 (|List| (|Fraction| (|DistributedMultivariatePolynomial| *6 *5)))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *5 *6 *7)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|BlowUpMethodCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Divisor| (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *4))) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Record| (|:| |num| (|List| (|DistributedMultivariatePolynomial| *5 *4))) (|:| |den| (|DistributedMultivariatePolynomial| *5 *4)))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Divisor| (|Places| *5))) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| (|Fraction| (|DistributedMultivariatePolynomial| *6 *5)))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *5 *6 *7)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|BlowUpMethodCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Divisor| (|Places| *4))) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Record| (|:| |num| (|List| (|DistributedMultivariatePolynomial| *5 *4))) (|:| |den| (|DistributedMultivariatePolynomial| *5 *4)))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3 *3 *4 *3 *4 *4 *4 *5 *5 *5 *5 *4 *4 *6 *7) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp77| FCNF)))) (|isDomain| *7 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp78| FCNG)))) (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOrdinaryDifferentialEquationsPackage|))))) 
(((*1 *2 *3 *3 *2) (AND (|isDomain| *2 (|Matrix| (|Integer|))) (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *1) (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *4 *2 *2 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|Record| (|:| |lcmfij| *6) (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *4) (|:| |polj| *4))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|PolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *7 *4))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *2 (|Record| (|:| |max| (|Union| (|Integer|) "failed")) (|:| |ord| (|Union| (|Integer|) "failed")) (|:| |ker| (|Kernel| *5)))) (|isDomain| *1 (|RecurrenceOperator| *6 *5)) (|ofCategory| *5 (|Join| (|FunctionSpace| *6) (|AbelianMonoid|) (|RetractableTo| (|Integer|)) (|RetractableTo| *4) (|PartialDifferentialRing| *4) (|CombinatorialOpsCategory|)))))) 
(((*1 *2 *3) (AND (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|OrderedRing|)) (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4 *4 *5 *4 *4 *5 *5 *3 *4 *4 *6 *7) (AND (|isDomain| *3 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp10| COEFFN)))) (|isDomain| *7 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp80| BDYVAL)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOrdinaryDifferentialEquationsPackage|)))) ((*1 *2 *3 *4 *4 *5 *4 *4 *5 *5 *3 *4 *4 *6 *7 *8 *8) (AND (|isDomain| *3 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp10| COEFFN)))) (|isDomain| *7 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp80| BDYVAL)))) (|isDomain| *8 (|FileName|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOrdinaryDifferentialEquationsPackage|))))) 
(((*1 *1 *2 *2) (AND (|isDomain| *1 (|ParametricPlaneCurve| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2 *2 *2) (AND (|isDomain| *1 (|ParametricSpaceCurve| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| (|Point| *3))))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|ThreeSpaceCategory| *3)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))) (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) (|Symbol|))) (|:| A (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|AlgebraicNumber|)) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) (|Symbol|) (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|AlgebraicNumber|)) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|AlgebraicNumber|)) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| *4)) (|UnivariateFormalPowerSeries| *4))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) (|Symbol|))) (|:| A (|Mapping| *4 (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| *4))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| *4) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) (|Symbol|) (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| *4) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessFinite| *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|Fraction| (|Integer|)))) (|UnivariateFormalPowerSeries| (|Fraction| (|Integer|))))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) (|Symbol|))) (|:| A (|Mapping| (|Integer|) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|Integer|)))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) (|Symbol|) (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|Integer|)) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Integer|))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| *4)) (|UnivariateFormalPowerSeries| *4))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|))) (|:| A (|Mapping| *5 (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| *5))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| *4) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| AX (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6)) (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|ofType| *9 (|Mapping| *6 *4)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|)))) (|List| *4) (|List| (|GuessOption|)))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|Fraction| (|Polynomial| (|Integer|))))) (|UnivariateFormalPowerSeries| (|Fraction| (|Polynomial| (|Integer|)))))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|)))))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|))))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) (|Symbol|))) (|:| A (|Mapping| (|Polynomial| (|Integer|)) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|)))) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|))))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) (|Symbol|) (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|Polynomial| (|Integer|))) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Polynomial| (|Integer|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| HPSPEC (|List| (|GuessOption|)))) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)) (|ofType| *4 (|Symbol|))))) 
(((*1 *1 *2 *3 *1) (AND (|isDomain| *2 (|SegmentBinding| (|Polynomial| (|Integer|)))) (|isDomain| *3 (|Polynomial| (|Integer|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|SegmentBinding| (|Polynomial| (|Integer|)))) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|DifferentialVariableCategory| *4)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|)) (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|))))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|)) (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))))) 
(((*1 *2 *3 *3 *3 *3 *4 *3 *3 *3 *3 *3 *3 *5 *5 *4 *3 *6 *7) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp41| FCN JACOBF JACEPS)))) (|isDomain| *7 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp42| G JACOBG JACGEP)))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOrdinaryDifferentialEquationsPackage|))))) 
(((*1 *1 *1 *2) (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|CharacterClass|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Character|))))) 
(((*1 *2 *3 *4) (|partial| AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|ConvertibleTo| (|Pattern| (|Integer|)))) (|ofCategory| *5 (|PatternMatchable| (|Integer|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|RetractableTo| (|Integer|)) (|GcdDomain|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |special| *3) (|:| |integrand| *3))) (|isDomain| *1 (|PatternMatchIntegration| *5 *3)) (|ofCategory| *3 (|LiouvillianFunctionCategory|)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))))) ((*1 *2 *2 *3 *4 *4) (|partial| AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|OrderedCompletion| *2)) (|ofCategory| *2 (|SpecialFunctionCategory|)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))) (|ofCategory| *5 (|ConvertibleTo| (|Pattern| (|Integer|)))) (|ofCategory| *5 (|PatternMatchable| (|Integer|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|RetractableTo| (|Integer|)) (|GcdDomain|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|PatternMatchIntegration| *5 *2))))) 
(((*1 *2 *3 *4 *5 *5) (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|PartialDifferentialRing| *6)) (|isDomain| *2 (|Matrix| *7)) (|isDomain| *1 (|MultiVariableCalculusFunctions| *6 *7 *3 *4)) (|ofCategory| *3 (|FiniteLinearAggregate| *7)) (|ofCategory| *4 (|Join| (|FiniteLinearAggregate| *6) (CATEGORY |package| (ATTRIBUTE |finiteAggregate|))))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpaceComponentProperty|))))) 
(((*1 *2 *3 *4 *2) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Fraction| (|SparseUnivariatePolynomial| *2)))) (|isDomain| *4 (|Kernel| *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *5 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|GenusZeroIntegration| *5 *2 *6)) (|ofCategory| *6 (|SetCategory|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *2))) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *2 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)) (SIGNATURE |numer| (*7 $)) (SIGNATURE |denom| (*7 $))))) (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *2)) (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *5))))) (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Fraction| (|Polynomial| *5))) (|isDomain| *1 (|RationalFunction| *5)) (|ofCategory| *5 (|IntegralDomain|))))) 
(((*1 *2 *2 *3 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PrimitiveArray| (|Float|))) (|isDomain| *1 (|BlasLevelOne|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *2 (|List| *5))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| *6 *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Record| (|:| |ir| (|IntegrationResult| (|Fraction| *6))) (|:| |specpart| (|Fraction| *6)) (|:| |polypart| *6))) (|isDomain| *1 (|TranscendentalIntegration| *5 *6)) (|isDomain| *3 (|Fraction| *6))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| (|Polynomial| *3))) (|ofCategory| *3 (|GcdDomain|)) (|isDomain| *1 (|FGLMIfCanPackage| *3 *4)) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|GroebnerPackage| *3 *4 *5 *6)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|GroebnerPackage| *4 *5 *6 *7)))) ((*1 *2 *2 *3 *3) (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|GroebnerPackage| *4 *5 *6 *7)))) ((*1 *1 *1) (AND (|ofCategory| *2 (|Field|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|PolynomialIdeals| *2 *3 *4 *5)) (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| *7)) (|ofCategory| *7 (|PolynomialCategory| *3 *5 *6)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|InterfaceGroebnerPackage| *3 *4 *5 *6 *7)) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| (|NewSparseMultivariatePolynomial| *3 (|OrderedVariableList| *4)))) (|ofCategory| *3 (|GcdDomain|)) (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *1 (|LexTriangularPackage| *3 *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Palette|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))) 
(((*1 *1 *2 *3) (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|)))) ((*1 *1 *2 *3) (AND (|isDomain| *3 (|List| (|PositiveInteger|))) (|isDomain| *1 (|CliffordAlgebra| *4 *2 *5)) (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *2 (|Field|)) (|ofType| *5 (|QuadraticForm| *4 *2)))) ((*1 *1 *2 *3) (AND (|isDomain| *3 (|ModuleMonomial| *5 *6 *7)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofType| *7 (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6)) (|Record| (|:| |index| *5) (|:| |exponent| *6)))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|GeneralModulePolynomial| *4 *2 *5 *6 *7 *8)) (|ofCategory| *8 (|PolynomialCategory| *2 *6 (|OrderedVariableList| *4))))) ((*1 *1 *2 *3) (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *2 *3)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|LaurentPolynomial| *2 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *2)))) ((*1 *1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|MonogenicLinearOperator| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *2 *3) (AND (|isDomain| *1 (|MonoidRing| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|Monoid|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| *5)) (|isDomain| *3 (|List| (|NonNegativeInteger|))) (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *2)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|List| (|NonNegativeInteger|))) (|ofCategory| *1 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|PolynomialCategory| *4 *5 *2)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|List| *5)) (|ofCategory| *1 (|PowerSeriesCategory| *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoid|)) (|ofCategory| *6 (|OrderedSet|)))) ((*1 *1 *1 *2 *3) (AND (|ofCategory| *1 (|PowerSeriesCategory| *4 *3 *2)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|isDomain| *1 (|PackageForPoly| *4 *2 *5 *6)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *4 *5))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|)) (|isDomain| *1 (|PolynomialDecomposition| *2 *4)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1) (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|RealClosedField|))))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *3 *5)) (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|FiniteLinearAggregate| *4)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)))) ((*1 *2 *1 *3 *4 *5) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|List| *6)) (|isDomain| *5 (|List| *7)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|Ring|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *6 *7)))) ((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Record| (|:| |Indices| (|List| *5)) (|:| |Entries| (|List| *6)))) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *5 *6))))) 
(((*1 *1 *1) (AND (|ofCategory| *2 (|CharacteristicZero|)) (|ofCategory| *2 (|EuclideanDomain|)) (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5)) (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3)))) ((*1 *2 *3) (AND (|isDomain| *3 (|AlgebraicNumber|)) (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *1 (|SimplifyAlgebraicNumberConvertPackage|)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *3 *4 *3 *4 *4 *4 *4 *5) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp1| G)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagIntegrationPackage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| *6)) (|ofCategory| *5 (|UniqueFactorizationDomain|)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|Record| (|:| |exponent| (|NonNegativeInteger|)) (|:| |coef| *3) (|:| |radicand| *6))) (|isDomain| *1 (|ChangeOfVariable| *5 *6 *7)) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |key| (|Symbol|)) (|:| |entry| *4)))) (|isDomain| *1 (|PatternMatchResult| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3 *4 *4 *4 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagIntegrationPackage|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3)) (|ofCategory| *3 (|MatrixCategory| *4 *5 *6)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3)) (|ofCategory| *3 (|MatrixCategory| *4 *5 *6)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| *6 *4 *5)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *5 *4)) (|isDomain| *1 (|MappingPackage3| *4 *5 *6))))) 
(((*1 *2 *1 *3 *3) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Void|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5)) (|ofType| *3 *2) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|QuadraticForm| *3 *4))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Vector| *4)) (|ofCategory| *4 (|Type|)) (|ofCategory| *1 (|DirectProductCategory| *3 *4))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|BinaryTournament| *3))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|LinearlyExplicitRingOver| (|Integer|))) (|isDomain| *2 (|Vector| (|Fraction| (|Integer|)))) (|isDomain| *1 (|IntegerLinearDependence| *4))))) 
(((*1 *2 *3 *3 *2) (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *4)))) ((*1 *1 *2 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|UnivariateFormalPowerSeries| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *2 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3))) ((*1 *1 *2 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|DrawOption|))) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|DrawOption|))) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|DrawOption|))) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|DrawOption|))) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4)) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *4 *4 *3 *5 *3 *3 *3 *6) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp4| FUNCTN)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagIntegrationPackage|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ComplexCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Expression| *4)) (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| (|Complex| *4)))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|TrigonometricManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *3)))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| (|Integer|))))) (|isDomain| *2 (|List| (|Complex| *4))) (|isDomain| *1 (|FloatingComplexPackage| *4)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))) (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|List| (|Complex| *5)))) (|isDomain| *1 (|FloatingComplexPackage| *5)) (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *3 *4 *4) (AND (|isDomain| *3 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagIntegrationPackage|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XPolynomialRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|List| (|Union| (|:| |name| (|Symbol|)) (|:| |bounds| (|List| (|Union| (|:| S (|Symbol|)) (|:| P (|Polynomial| (|Integer|)))))))))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|has| *1 (ATTRIBUTE |arbitraryPrecision|)) (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|d02AgentsPackage|)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| (|Float|))) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|d02AgentsPackage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|AlgebraicNumber|))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|))))) ((*1 *2 *3) (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|AlgebraicNumber|))) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgebraicMultFact| *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| (|AlgebraicNumber|) *6 *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|AlgebraicNumber|))) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|PolynomialCategory| (|AlgebraicNumber|) *6 *5)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7))) (|isDomain| *1 (|AlgebraicMultFact| *5 *6 *7)) (|isDomain| *3 (|SparseUnivariatePolynomial| *7)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|ComplexFactorization| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4))))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4))))) ((*1 *2 *3 *4) (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3 *4) (AND (|ofCategory| *4 (|PseudoAlgebraicClosureOfAlgExtOfRationalNumberCategory|)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *4))) (|isDomain| *1 (|FactorisationOverPseudoAlgebraicClosureOfAlgExtOfRationalNumber| *4)) (|isDomain| *3 (|SparseUnivariatePolynomial| *4)))) ((*1 *2 *3 *4) (AND (|ofCategory| *4 (|PseudoAlgebraicClosureOfRationalNumberCategory|)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *4))) (|isDomain| *1 (|FactorisationOverPseudoAlgebraicClosureOfRationalNumber| *4)) (|isDomain| *3 (|SparseUnivariatePolynomial| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|FiniteFieldFactorization| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|FiniteFieldFactorizationWithSizeParseBySideEffect| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|NonNegativeInteger|))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|List| (|NonNegativeInteger|))) (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3) (AND (|isDomain| *2 (|Factored| (|Complex| (|Integer|)))) (|isDomain| *1 (|GaussianFactorizationPackage|)) (|isDomain| *3 (|Complex| (|Integer|))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |convert| ((|Symbol|) $)) (SIGNATURE |variable| ((|Union| $ "failed") (|Symbol|)))))) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|GeneralizedMultivariateFactorize| *4 *5 *6 *7 *3)) (|ofCategory| *6 (|IntegralDomain|)) (|ofCategory| *3 (|PolynomialCategory| *7 *5 *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *4))) (|isDomain| *1 (|GenUFactorize| *4)) (|isDomain| *3 (|SparseUnivariatePolynomial| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| (|Factored| *6) *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Field|)) (|ofCategory| *7 (|Join| (|Field|) (|CharacteristicZero|) (|MonogenicAlgebra| *5 *6))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|InnerAlgFactor| *5 *6 *7 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *7)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *7)) (|SparseUnivariatePolynomial| *7))) (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|InnerMultFact| *5 *6 *7 *3)) (|ofCategory| *3 (|PolynomialCategory| *7 *6 *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *7)) (|SparseUnivariatePolynomial| *7))) (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|PolynomialCategory| *7 *6 *5)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *8))) (|isDomain| *1 (|InnerMultFact| *5 *6 *7 *8)) (|isDomain| *3 (|SparseUnivariatePolynomial| *8)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|IntegerFactorizationPackage| *3)) (|ofCategory| *3 (|IntegerNumberSystem|)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| (|List| *5) *6)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|List| (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))) (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *5 *6)) (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|AlgebraicallyClosedField|)) (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|List| (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))) (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *4 *5)) (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5))))) ((*1 *2 *3) (AND (|isDomain| *3 (|OrderedFreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|List| (|LyndonWord| *4))) (|isDomain| *1 (|LyndonWord| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|FiniteFieldCategory|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|MultFiniteFactorize| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|FiniteFieldCategory|)) (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7))) (|isDomain| *1 (|MultFiniteFactorize| *4 *5 *6 *7)) (|isDomain| *3 (|SparseUnivariatePolynomial| *7)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |convert| ((|Symbol|) $)) (SIGNATURE |variable| ((|Union| $ "failed") (|Symbol|)))))) (|ofCategory| *6 (|EuclideanDomain|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|MPolyCatPolyFactorizer| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| (|Polynomial| *6) *4 *5)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |convert| ((|Symbol|) $))))) (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *4 *5)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|MRationalFactorize| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| (|Fraction| *6) *4 *5)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|MultivariateFactorize| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7))) (|isDomain| *1 (|MultivariateFactorize| *4 *5 *6 *7)) (|isDomain| *3 (|SparseUnivariatePolynomial| *7)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|RationalFactorize| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|)))))) ((*1 *2 *3) (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|RationalFunctionFactor| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Polynomial| (|Integer|))))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|)))) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|MonogenicAlgebra| (|Fraction| (|Integer|)) *4))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|SimpleAlgebraicExtensionAlgFactor| *4 *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Polynomial| (|Integer|))))) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|MonogenicAlgebra| (|Fraction| (|Polynomial| (|Integer|))) *4))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|SAERationalFunctionAlgFactor| *4 *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| (|Fraction| *7)))) (|isDomain| *1 (|SupFractionFactorizer| *4 *5 *6 *7)) (|isDomain| *3 (|SparseUnivariatePolynomial| (|Fraction| *7))))) ((*1 *2 *1) (AND (|isDomain| *2 (|Factored| *1)) (|ofCategory| *1 (|UniqueFactorizationDomain|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|UnivariateFactorize| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *2 *3 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|MyUnivariatePolynomial| *4 *3)) (|ofType| *4 (|Symbol|)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2 *3 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2 *3 *1) (AND (|isDomain| *1 (|PolynomialRing| *3 *2)) (|ofCategory| *2 (|CancellationAbelianMonoid|)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|)))) ((*1 *1 *1 *2 *3 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2 *3 *1) (AND (|isDomain| *2 (|Partition|)) (|ofCategory| *2 (|CancellationAbelianMonoid|)) (|isDomain| *1 (|SymmetricPolynomial| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2 *3 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|UnivariatePolynomial| *4 *3)) (|ofType| *4 (|Symbol|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4 *4 *3 *5 *3 *3 *4 *3 *6) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp4| FUNCTN)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagIntegrationPackage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|NewSparseMultivariatePolynomial| *5 (|OrderedVariableList| *6)))) (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|)) (|ofType| *6 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|RegularChain| *5 *6))) (|isDomain| *1 (|LexTriangularPackage| *5 *6))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *3 *4 *5 *6)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|EuclideanDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *7)))) ((*1 *2 *2 *3 *3) (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|EuclideanDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *7))))) 
(((*1 *1 *1) (|partial| AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Monoid|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Kernel| *1)) (|ofCategory| *1 (|FunctionSpace| *4)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *1))))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|SparseUnivariatePolynomial| *3)))) (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7)) (|isDomain| *5 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *7 (|SetCategory|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|PackageForPoly| *4 *3 *5 *6)) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *4 *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Variable| *5)) (|ofType| *5 (|Symbol|)) (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|UnivariatePolynomial| *5 (|Polynomial| *6))) (|isDomain| *1 (|PolynomialToUnivariatePolynomial| *5 *6)) (|isDomain| *3 (|Polynomial| *6)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *3)))) ((*1 *2 *1 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4)) (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *3))) (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *3)) (|ofCategory| *3 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)) (SIGNATURE |numer| (*7 $)) (SIGNATURE |denom| (*7 $))))))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)) (SIGNATURE |numer| (*7 $)) (SIGNATURE |denom| (*7 $))))) (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|)) (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *3)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *5))))) (|isDomain| *1 (|RationalFunction| *5)) (|isDomain| *3 (|Fraction| (|Polynomial| *5)))))) 
(((*1 *2 *3 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ArrayStack| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Heap| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *3 *1) (AND (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *4)))) ((*1 *2 *3 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Queue| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SetOfMIntegersInOneToN| *4 *5)) (|ofType| *4 *3) (|ofType| *5 *3))) ((*1 *2 *3 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stack| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *1 *2) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3)) (|ofCategory| *3 (|Algebra| *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|OrderedFreeMonoid| *2)) (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|AlgebraicNumber|)) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| *4) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessFinite| *4)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3)) (|ofCategory| (|Integer|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Integer|))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Field|)) (|ofType| *10 (|Mapping| *7 *5)) (|ofCategory| *8 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *9 (|Mapping| *5 *8)) (|isDomain| *2 (|List| (|Record| (|:| |function| *7) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9 *10)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *8) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|)) (|ofType| *9 (|Mapping| *6 *4)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|)))) (|List| *4) (|List| (|GuessOption|)))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| *3) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| *3) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))) (|ofType| *9 (|Mapping| *6 *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3)) (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Polynomial| (|Integer|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *5 (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *5 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|))))) (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)) (|ofType| *4 *3)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Kernel| *1))) (|ofCategory| *1 (|ExpressionSpace|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|EuclideanDomain|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *2 (|Record| (|:| |Hermite| *3) (|:| |eqMat| *3))) (|isDomain| *1 (|SmithNormalForm| *4 *5 *6 *3)) (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FunctionSpaceReduce| *3 *4)) (|ofCategory| *4 (|FunctionSpace| *3))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|FunctionSpaceToExponentialExpansion| *3 *2 *4 *5)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *3))) (|ofType| *4 (|Symbol|)) (|ofType| *5 *2))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *3) (CATEGORY |domain| (SIGNATURE |coerce| ($ *4))))) (|ofCategory| *4 (|OrderedRing|)) (|ofCategory| *5 (|Join| (|UnivariatePowerSeriesCategory| *2 *4) (|Field|) (|TranscendentalFunctionCategory|) (CATEGORY |domain| (SIGNATURE |differentiate| ($ $)) (SIGNATURE |integrate| ($ $))))) (|isDomain| *1 (|FunctionSpaceToUnivariatePowerSeries| *3 *2 *4 *5 *6 *7)) (|ofCategory| *6 (|PartialTranscendentalFunctions| *5)) (|ofType| *7 (|Symbol|))))) 
(((*1 *2 *1) (|partial| AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4)) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *3)) (|ofCategory| *3 (|ConvertibleTo| (|Float|))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *3)) (|ofCategory| *3 (|ConvertibleTo| (|Float|))))) ((*1 *2 *3) (AND (|isDomain| *3 (|Complex| *4)) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Complex| *5)) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| (|Complex| *4))) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Polynomial| (|Complex| *5))) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4))) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *4)))) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *5)))) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *4 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Expression| (|Complex| *4))) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *4 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Expression| (|Complex| *5))) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *8))) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |goodPols| (|List| *8)) (|:| |badPols| (|List| *8)))) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8)) (|isDomain| *4 (|List| *8))))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialIdeals| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Integer|)) (|isDomain| *1 (|GaloisGroupUtilities| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *3) (|partial| AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |var| (|Kernel| *1)) (|:| |exponent| (|Integer|)))) (|ofCategory| *1 (|FunctionSpace| *4)))) ((*1 *2 *1 *3) (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |var| (|Kernel| *1)) (|:| |exponent| (|Integer|)))) (|ofCategory| *1 (|FunctionSpace| *4)))) ((*1 *2 *1) (|partial| AND (|ofCategory| *3 (|SemiGroup|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |var| (|Kernel| *1)) (|:| |exponent| (|Integer|)))) (|ofCategory| *1 (|FunctionSpace| *3)))) ((*1 *2 *1) (|partial| AND (|isDomain| *2 (|Record| (|:| |val| (|Pattern| *3)) (|:| |exponent| (|NonNegativeInteger|)))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (|partial| AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |var| *5) (|:| |exponent| (|NonNegativeInteger|)))))) ((*1 *2 *3) (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5)) (|isDomain| *2 (|Record| (|:| |var| *5) (|:| |exponent| (|Integer|)))) (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)) (SIGNATURE |numer| (*7 $)) (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|OrderedFreeMonoid| *2)) (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *1 *2 *3 *3 *4 *4) (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Segment| (|Fraction| (|Integer|)))) (|isDomain| *1 (|PlaneAlgebraicCurvePlot|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|List| (|Record| (|:| |left| (|Fraction| (|Integer|))) (|:| |right| (|Fraction| (|Integer|)))))) (|isDomain| *1 (|RealZeroPackage| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *4) (AND (|isDomain| *2 (|List| (|Record| (|:| |left| (|Fraction| (|Integer|))) (|:| |right| (|Fraction| (|Integer|)))))) (|isDomain| *1 (|RealZeroPackage| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))) (|isDomain| *4 (|Record| (|:| |left| (|Fraction| (|Integer|))) (|:| |right| (|Fraction| (|Integer|))))))) ((*1 *2 *3 *4) (AND (|isDomain| *2 (|List| (|Record| (|:| |left| (|Fraction| (|Integer|))) (|:| |right| (|Fraction| (|Integer|)))))) (|isDomain| *1 (|RealZeroPackage| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))) (|isDomain| *4 (|Fraction| (|Integer|))))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|Fraction| (|Integer|))) (|isDomain| *2 (|List| (|Record| (|:| |left| *5) (|:| |right| *5)))) (|isDomain| *1 (|RealZeroPackage| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))) (|isDomain| *4 (|Record| (|:| |left| *5) (|:| |right| *5))))) ((*1 *2 *3) (AND (|isDomain| *2 (|List| (|Record| (|:| |left| (|Fraction| (|Integer|))) (|:| |right| (|Fraction| (|Integer|)))))) (|isDomain| *1 (|RealZeroPackageQ| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|)))))) ((*1 *2 *3 *4) (AND (|isDomain| *2 (|List| (|Record| (|:| |left| (|Fraction| (|Integer|))) (|:| |right| (|Fraction| (|Integer|)))))) (|isDomain| *1 (|RealZeroPackageQ| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|)))) (|isDomain| *4 (|Record| (|:| |left| (|Fraction| (|Integer|))) (|:| |right| (|Fraction| (|Integer|))))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *2 (|List| (|Record| (|:| |left| *4) (|:| |right| *4)))) (|isDomain| *1 (|RealZeroPackageQ| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|Fraction| (|Integer|))) (|isDomain| *2 (|List| (|Record| (|:| |left| *5) (|:| |right| *5)))) (|isDomain| *1 (|RealZeroPackageQ| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)) (|isDomain| *4 (|Record| (|:| |left| *5) (|:| |right| *5)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|ScriptFormulaFormat|)))) ((*1 *2 *1 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3))))) 
(((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *5 "failed") *7)) (|isDomain| *4 (|SparseUnivariatePolynomial| *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *7 (|Ring|)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *5)) (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *2 *6 *7)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|List| (|Vector| *4))) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Vector| *3)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3 *3) (AND (|has| *2 (ATTRIBUTE (|commutative| "*"))) (|ofCategory| *5 (|FiniteLinearAggregate| *2)) (|ofCategory| *6 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|BezoutMatrix| *2 *3 *4 *5 *6)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *4 (|MatrixCategory| *2 *5 *6))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Union| (|BasicStochasticDifferential|) (|Integer|))) (|isDomain| *1 (|BasicStochasticDifferential|))))) 
(((*1 *1 *1 *1 *2 *3) (AND (|isDomain| *2 (|Point| *5)) (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *3 *3 *4 *4) (|partial| AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|ContinuedFraction| *6)) (|isDomain| *1 (|PadeApproximants| *5 *4 *6)) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|ODETools| *4 *5)) (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Matrix| *5)) (|isDomain| *1 (|ODETools| *5 *6)) (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2) (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|RadicalCategory|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *2 *3 *4 *5) (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|Integer|)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *1 (|RecurrenceOperator| *6 *5)) (|ofCategory| *5 (|Join| (|FunctionSpace| *6) (|AbelianMonoid|) (|RetractableTo| *2) (|RetractableTo| *4) (|PartialDifferentialRing| *4) (|CombinatorialOpsCategory|)))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|BalancedPAdicRational| *3)) (|ofType| *3 *2))) ((*1 *1 *1) (AND (|isDomain| *1 (|BalancedPAdicRational| *2)) (|ofType| *2 (|Integer|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|LocalPowerSeriesCategory| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *3 (|Field|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PAdicRational| *3)) (|ofType| *3 *2))) ((*1 *1 *1) (AND (|isDomain| *1 (|PAdicRational| *2)) (|ofType| *2 (|Integer|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|ofType| *3 *2) (|isDomain| *1 (|PAdicRationalConstructor| *3 *4)) (|ofCategory| *4 (|PAdicIntegerCategory| *3)))) ((*1 *1 *1) (AND (|ofType| *2 (|Integer|)) (|isDomain| *1 (|PAdicRationalConstructor| *2 *3)) (|ofCategory| *3 (|PAdicIntegerCategory| *2)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *2))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|MultiDictionary| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|CRApackage| *2)) (|ofCategory| *2 (|EuclideanDomain|)))) ((*1 *2 *3 *2) (AND (|isDomain| *3 (|List| (|List| *4))) (|isDomain| *2 (|List| *4)) (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *1 (|CRApackage| *4)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| (|Record| (|:| |basis| (|Matrix| *7)) (|:| |basisDen| *7) (|:| |basisInv| (|Matrix| *7))))) (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *8 (|UnivariatePolynomialCategory| *7)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6)) (|ofCategory| *6 (|FiniteFieldCategory|)) (|isDomain| *2 (|Record| (|:| |basis| (|Matrix| *7)) (|:| |basisDen| *7) (|:| |basisInv| (|Matrix| *7)))) (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *6 *7 *8)))) ((*1 *2 *2 *2 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|BasicFunctions|))))) 
(((*1 *2) (AND (|isDomain| *2 (|OrderedCompletion| (|Integer|))) (|isDomain| *1 (|Infinity|)))) ((*1 *1) (AND (|isDomain| *1 (|OrderedCompletion| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|Record| (|:| |factor| *3) (|:| |degree| *4)))) (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedRing|)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *5)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *2) (AND (|isDomain| *2 (|OrderedCompletion| (|Integer|))) (|isDomain| *1 (|Infinity|)))) ((*1 *1) (AND (|isDomain| *1 (|OrderedCompletion| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *2 *3) (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1 *2 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1 *2 *3) (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|)) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2 *1 *2 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|VectorCategory| *3)) (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *3 *4 *2) (AND (|isDomain| *2 (|List| (|List| (|List| *5)))) (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5)) (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|TableauxBumpers| *5))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *5 (|Join| (|FloatingPointSystem|) (|RetractableTo| *4) (|Field|) (|TranscendentalFunctionCategory|) (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|DivisorCategory| *10)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *11 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|DesingTreePackage| *4 *5 *6 *7 *8 *9 *10 *11 *12 *3 *13)) (|ofCategory| *3 (|DesingTreeCategory| *12)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| *7)) (|ofCategory| *7 (|PolynomialCategory| *5 *8 (|OrderedVariableList| *6))) (|ofCategory| *8 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *9 (|ProjectiveSpaceCategory| *5)) (|ofCategory| *10 (|LocalPowerSeriesCategory| *5)) (|ofCategory| *11 (|PlacesCategory| *5 *10)) (|ofCategory| *12 (|DivisorCategory| *11)) (|ofCategory| *13 (|InfinitlyClosePointCategory| *5 *6 *7 *8 *9 *10 *11 *12 *14)) (|ofCategory| *14 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|DesingTreePackage| *5 *6 *7 *8 *9 *10 *11 *12 *13 *3 *14)) (|ofCategory| *3 (|DesingTreeCategory| *13))))) 
(((*1 *2 *3 *4 *4 *4 *4) (AND (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Record| (|:| |brans| (|List| (|List| (|Point| *4)))) (|:| |xValues| (|Segment| *4)) (|:| |yValues| (|Segment| *4)))) (|isDomain| *1 (|TwoDimensionalPlotClipping|)) (|isDomain| *3 (|List| (|List| (|Point| *4))))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Mapping| (|List| *4) *4)) (|isDomain| *1 (|Bezier| *4)) (|isDomain| *3 (|List| *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *7)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *5 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Complex| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1))) (|isDomain| *1 (|Expression| *4)) (|isDomain| *3 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *2 *3) (AND (|ofCategory| *1 (|PolynomialFactorizationExplicit|)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1))) (|isDomain| *3 (|SparseUnivariatePolynomial| *1))))) 
(((*1 *1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *2 *2 *3) (AND (|isDomain| *2 (|Vector| (|Integer|))) (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|)))) ((*1 *2 *3 *2 *4) (AND (|isDomain| *2 (|Vector| (|Integer|))) (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *4 (|Integer|)) (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |radval| (|Expression| (|Integer|))) (|:| |radmult| (|Integer|)) (|:| |radvect| (|List| (|Matrix| (|Expression| (|Integer|)))))))) (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Fraction| (|Polynomial| *4))))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Fraction| (|Polynomial| *4)))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3 *4 *5 *5 *5 *6 *4 *4 *4 *5 *4 *5 *7) (AND (|isDomain| *3 (|String|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Matrix| (|Integer|))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|OrderedFreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *4))))) 
(((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|LiouvillianFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3))) (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *5)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3 *3 *3 *4 *4 *4 *4 *4 *5 *3 *3 *3 *6 *4 *3) (AND (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|Matrix| (|Integer|))) (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| (|List| *4)))) (|isDomain| *1 (|TableauxBumpers| *4)) (|isDomain| *3 (|List| (|List| *4)))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *1 (|PolynomialNumberTheoryFunctions|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|MergeThing| *3))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PlacesCategory| *3 *4)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *3)) (|isDomain| *2 (|List| *4))))) 
(((*1 *2 *3 *3 *1) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Union| *3 (|List| *1))) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|LeftModule| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *3 *4)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|Operator| *3))))) 
(((*1 *2 *3 *4 *5 *4 *5 *5 *6 *4 *4 *4 *4 *4 *5 *4 *5 *5 *7 *4) (AND (|isDomain| *3 (|String|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Matrix| (|Integer|))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *3 (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6))) (|isDomain| *4 (|OrderedVariableList| *5)) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *5 *6)) (|isDomain| *1 (|LinGroebnerPackage| *5 *6)) (|ofCategory| *6 (|GcdDomain|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6))) (|isDomain| *4 (|OrderedVariableList| *5)) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *5 *6)) (|isDomain| *1 (|LinGroebnerPackage| *5 *6)) (|ofCategory| *6 (|GcdDomain|))))) 
(((*1 *2 *3 *4 *5 *5 *5 *5 *6 *4 *4 *4 *4 *4 *5 *4 *5 *5 *4) (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *2 *3 *3 *3) (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|RegularTriangularSetGcdPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *3 *3) (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2) (|partial| AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Record| (|:| |particular| *1) (|:| |basis| (|List| *1)))) (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)))) ((*1 *2) (|partial| AND (|isDomain| *2 (|Record| (|:| |particular| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|:| |basis| (|List| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1) (|partial| AND (|ofCategory| *3 (|AbelianSemiGroup|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|FunctionSpace| *3)))) ((*1 *2 *1) (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (|partial| AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5)))) ((*1 *2 *3) (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)) (SIGNATURE |numer| (*7 $)) (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *3 *4 *5 *5) (AND (|isDomain| *3 (|Union| (|Fraction| (|Polynomial| *6)) (|SuchThat| (|Symbol|) (|Polynomial| *6)))) (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *6))))) (|isDomain| *1 (|EigenPackage| *6)) (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *6)))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Record| (|:| |eigval| (|Union| (|Fraction| (|Polynomial| *5)) (|SuchThat| (|Symbol|) (|Polynomial| *5)))) (|:| |eigmult| (|NonNegativeInteger|)) (|:| |eigvec| (|List| *4)))) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *5))))) (|isDomain| *1 (|EigenPackage| *5)) (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|OnePointCompletion| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *4 (|List| (|Expression| (|DoubleFloat|)))) (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|d03AgentsPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5)) (|isDomain| *2 (|Record| (|:| |id| (|FractionalIdeal| *4 (|Fraction| *4) *5 *6)) (|:| |principalPart| *6))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| *6 *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Record| (|:| |poly| *6) (|:| |normal| (|Fraction| *6)) (|:| |special| (|Fraction| *6)))) (|isDomain| *1 (|MonomialExtensionTools| *5 *6)) (|isDomain| *3 (|Fraction| *6)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PolynomialDecomposition| *3 *4)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3 *4 *4) (|partial| AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Record| (|:| |left| *3) (|:| |right| *3))) (|isDomain| *1 (|PolynomialDecomposition| *3 *5)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)))) ((*1 *2 *3 *2 *4 *4) (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9)))) ((*1 *2 *3 *2 *4 *4 *4 *4 *4) (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9)))) ((*1 *2 *3 *2 *4 *4) (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *1 (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8 *9)))) ((*1 *2 *3 *2 *4 *4 *4 *4 *4) (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *1 (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8 *9))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|))))) (|isDomain| *1 (|RadicalEigenPackage|)) (|isDomain| *3 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *3 *3 *4 *4 *4 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2)) (|ofCategory| *2 (|Join| (|FiniteLinearAggregate| *4) (CATEGORY |package| (ATTRIBUTE |shallowlyMutable|))))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|IntegerRoots| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|)))) (|isDomain| *1 (|PointsOfFiniteOrderTools| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Fraction| *3)))))) 
(((*1 *2 *3 *3 *3 *3 *4 *4 *4 *4 *4 *3 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Vector| *4)) (|isDomain| *1 (|SymmetricFunctions| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *3)) (|isDomain| *1 (|SymmetricFunctions| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Permutation| *3))) (|isDomain| *1 (|PermutationGroup| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|Vector| (|Vector| (|Integer|)))) (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *1 (|GrayCode|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Polynomial| *6))) (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *6 (|Join| (|IntegralDomain|) (|RetractableTo| *5))) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|List| (|List| (|Equation| (|Fraction| (|Polynomial| *6)))))) (|isDomain| *1 (|RetractSolvePackage| *5 *6))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3 *3 *4 *5 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 *3)))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *1) (AND (|ofCategory| *1 (|GradedAlgebra| *2 *3)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|)))) ((*1 *1) (|isDomain| *1 (|InputForm|))) ((*1 *1) (|ofCategory| *1 (|MonadWithUnit|))) ((*1 *1) (|ofCategory| *1 (|Monoid|))) ((*1 *1) (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1) (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2)) (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1))) (|ofCategory| *1 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|ConvertibleTo| (|Pattern| *3))) (|ofCategory| *3 (|PatternMatchable| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|ConvertibleTo| (|Pattern| *3))) (|ofCategory| *2 (|PatternMatchable| *3)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *3 *4 *4 *3 *4 *4 *3 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3 *2 *2) (AND (|isDomain| *2 (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5))) (|isDomain| *3 (|OrderedVariableList| *4)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3 *4 *4 *3 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagInterpolationPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|UnaryRecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5)) (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|has| $ (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|ArrayStack| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|has| $ (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Dequeue| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|has| $ (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|Heap| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|has| $ (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Queue| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|has| $ (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Stack| *3))))) 
(((*1 *1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|CommutativeRing|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|)) (|ofType| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|CommutativeRing|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|MatrixCategory| *3 *2 *4)) (|ofCategory| *2 (|FiniteLinearAggregate| *3)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)))) ((*1 *1 *1) (AND (|isDomain| *1 (|SquareMatrix| *2 *3)) (|ofType| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1 *1) (|partial| AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4)))) (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|List| (|Union| (|Fraction| (|Polynomial| *4)) (|SuchThat| (|Symbol|) (|Polynomial| *4))))) (|isDomain| *1 (|EigenPackage| *4))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DirichletRing| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|None|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|OctonionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Matrix| (|Integer|))) (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *2 (|List| *8)) (|isDomain| *1 (|ProjectiveAlgebraicSetPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4))))) 
(((*1 *2 *3 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagInterpolationPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |key| (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|:| |entry| (|Record| (|:| |endPointContinuity| (|Union| (|:| |continuous| "Continuous at the end points") (|:| |lowerSingular| "There is a singularity at the lower end point") (|:| |upperSingular| "There is a singularity at the upper end point") (|:| |bothSingular| "There are singularities at both end points") (|:| |notEvaluated| "End point continuity not yet evaluated"))) (|:| |singularitiesStream| (|Union| (|:| |str| (|Stream| (|DoubleFloat|))) (|:| |notEvaluated| "Internal singularities not yet evaluated"))) (|:| |range| (|Union| (|:| |finite| "The range is finite") (|:| |lowerInfinite| "The bottom of range is infinite") (|:| |upperInfinite| "The top of range is infinite") (|:| |bothInfinite| "Both top and bottom points are infinite") (|:| |notEvaluated| "Range not yet evaluated")))))))) (|isDomain| *1 (|IntegrationFunctionsTable|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *4))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| *8)) (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|Record| (|:| |rank| (|NonNegativeInteger|)) (|:| |eqns| (|List| (|Record| (|:| |det| *8) (|:| |rows| (|List| (|Integer|))) (|:| |cols| (|List| (|Integer|)))))) (|:| |fgb| (|List| *8))))) (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8)) (|isDomain| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *4 *4 *4 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagInterpolationPackage|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2))))) 
(((*1 *1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *1) (|partial| AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3)))) (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4 *3) (|partial| AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|Record| (|:| |ratpart| (|Fraction| (|Polynomial| *5))) (|:| |coeff| (|Fraction| (|Polynomial| *5))))) (|isDomain| *1 (|RationalFunctionIntegration| *5)) (|isDomain| *3 (|Fraction| (|Polynomial| *5)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)))) ((*1 *1) (|ofCategory| *1 (|Finite|))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)))) ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|))) ((*1 *1) (|ofCategory| *1 (|IntegerNumberSystem|))) ((*1 *1 *1) (|isDomain| *1 (|Integer|))) ((*1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|))) ((*1 *2 *1) (AND (|isDomain| *2 (|Permutation| *3)) (|isDomain| *1 (|PermutationGroup| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Permutation| *4)) (|isDomain| *1 (|PermutationGroup| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *1) (AND (|ofCategory| *1 (|QuotientFieldCategory| *2)) (|ofCategory| *2 (|IntegerNumberSystem|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| (|Complex| *3)))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|TrigonometricManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *3)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| *5 *5)) (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4)) (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *2 (|Mapping| (|Stream| *4) (|Stream| *4))) (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerNumberTheoryFunctions|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|PolynomialNumberTheoryFunctions|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *3 *4 *4 *4 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagInterpolationPackage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *7 (|Ring|)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|SparseUnivariatePolynomial| (|SparseUnivariatePolynomial| *7))) (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *6 *4 *7)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|List| (|RegularChain| *5 *6))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7)) (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|List| (|RegularChain| *5 *6))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7)) (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Polynomial| *4))) (|ofCategory| *4 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|List| (|RegularChain| *4 *5))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| (|Point| *3)))))) 
(((*1 *2 *3 *4 *4 *4 *5 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagInterpolationPackage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5)) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *4)) (|ofCategory| *6 (|Field|)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *4)) (|ofCategory| *6 (|Field|)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3))) (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *6)) (|ofCategory| *6 (|MatrixCategory| *3 *4 *5)))) ((*1 *2 *3 *3) (AND (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3))) (|isDomain| *1 (|ModularHermitianRowReduction| *3)) (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *3 *4 *4 *2 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|Record| (|:| |lcmfij| *6) (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *4) (|:| |polj| *4))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|PolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *7 *4))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3 *3 *4 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagInterpolationPackage|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *3 (|FreeGroup| (|BasicOperator|))) (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *2 *4)) (|ofCategory| *4 (|LeftModule| *2)))) ((*1 *1 *2 *3) (AND (|isDomain| *3 (|FreeGroup| (|BasicOperator|))) (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *1) (|isDomain| *1 (|GraphImage|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| (|Expression| (|DoubleFloat|)))) (|isDomain| *2 (|Vector| (|Expression| (|Float|)))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|isDomain| *1 (|CombinatorialFunction| *4 *2)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|SplittingNode| *2 *3)) (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *4 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagInterpolationPackage|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3))))) 
(((*1 *1) (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 *3)))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3))) (|isDomain| *1 (|CoordinateSystems| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|)))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Set| (|Symbol|))) (|isDomain| *1 (|ApplicationProgramInterface|)) (|isDomain| *3 (|Symbol|))))) 
(((*1 *2) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|StochasticDifferential| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|PseudoAlgebraicClosureOfRationalNumber|)) (|isDomain| *1 (|PseudoAlgebraicClosureOfAlgExtOfRationalNumber| *3)) (|ofType| *3 *2)))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *3 *4 *5 *6 *5 *3 *7) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *6 (|Record| (|:| |try| (|Float|)) (|:| |did| (|Float|)) (|:| |next| (|Float|)))) (|isDomain| *7 (|Mapping| (|Void|) (|Vector| *5) (|Vector| *5) (|Float|))) (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|)))) ((*1 *2 *3 *4 *5 *6 *5 *3 *7 *3 *3 *3 *3 *3 *3 *3) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *6 (|Record| (|:| |try| (|Float|)) (|:| |did| (|Float|)) (|:| |next| (|Float|)))) (|isDomain| *7 (|Mapping| (|Void|) (|Vector| *5) (|Vector| *5) (|Float|))) (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *2 *2) (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|)) (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *2)) (|ofCategory| *2 (|PolynomialCategory| *5 *3 *4)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6)) (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|)) (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *6)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|PolynomialCategory| *6 *4 *5)) (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *2)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))))) 
(((*1 *2 *3 *4 *4 *4 *3 *3 *5 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagInterpolationPackage|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|isDomain| *2 (|DistributedMultivariatePolynomial| (|construct| (QUOTE X) (QUOTE Y)) *5)) (|isDomain| *1 (|BlowUpPackage| *5 *6 *3 *7 *4)) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *5 *7)) (|ofCategory| *4 (|BlowUpMethodCategory|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|TangentExpansions| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1) (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *1 *1) (|partial| |ofCategory| *1 (|MonadWithUnit|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|HTMLFormat|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|MathMLFormat|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *1) (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *6 (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *2)) (|Record| (|:| |index| *5) (|:| |exponent| *2)))) (|ofCategory| *2 (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|))) (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *2 *6 *7)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *7 (|PolynomialCategory| *4 *2 (|OrderedVariableList| *3)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| (|Expression| (|DoubleFloat|)))) (|isDomain| *2 (|Record| (|:| |additions| (|Integer|)) (|:| |multiplications| (|Integer|)) (|:| |exponentiations| (|Integer|)) (|:| |functionCalls| (|Integer|)))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| (|InputForm|))) (|isDomain| *1 (|InputForm|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ApplicationProgramInterface|))))) 
(((*1 *2 *3 *1) (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *1 (|PermutationGroup| *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|QuotientFieldCategory| *2)) (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|IntegerNumberSystem|)))) ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) *2)) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|List| (|Point| *4))) (|ofCategory| *1 (|ThreeSpaceCategory| *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Record| (|:| |den| (|Integer|)) (|:| |gcdnum| (|Integer|))))) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2))) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *5)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| (|construct| (QUOTE X) (QUOTE Y)) *4)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|)))) (|isDomain| *1 (|BlowUpPackage| *4 *5 *6 *7 *8)) (|ofCategory| *6 (|FiniteAbelianMonoidRing| *4 *7)) (|ofCategory| *8 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|)))) ((*1 *2) (AND (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|InnerNumericEigenPackage| *5 *6 *4)) (|ofCategory| *6 (|Field|)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3 *4 *3 *4 *3) (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *4 (|PrimitiveArray| (|DoubleFloat|))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|BlasLevelOne|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|FiniteFieldSquareFreeDecomposition| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Record| (|:| |endPointContinuity| (|Union| (|:| |continuous| "Continuous at the end points") (|:| |lowerSingular| "There is a singularity at the lower end point") (|:| |upperSingular| "There is a singularity at the upper end point") (|:| |bothSingular| "There are singularities at both end points") (|:| |notEvaluated| "End point continuity not yet evaluated"))) (|:| |singularitiesStream| (|Union| (|:| |str| (|Stream| (|DoubleFloat|))) (|:| |notEvaluated| "Internal singularities not yet evaluated"))) (|:| |range| (|Union| (|:| |finite| "The range is finite") (|:| |lowerInfinite| "The bottom of range is infinite") (|:| |upperInfinite| "The top of range is infinite") (|:| |bothInfinite| "Both top and bottom points are infinite") (|:| |notEvaluated| "Range not yet evaluated"))))) (|isDomain| *1 (|IntegrationFunctionsTable|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|ArrayStack| *3))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *2 (|Stream| (|List| (|Integer|)))) (|isDomain| *1 (|PartitionsAndPermutations|)) (|isDomain| *3 (|List| (|Integer|)))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3) (|ConvertibleTo| (|Pattern| *3)))) (|isDomain| *1 (|RewriteRule| *3 *4 *2)) (|ofCategory| *4 (|Join| (|Ring|) (|PatternMatchable| *3) (|OrderedSet|) (|ConvertibleTo| (|Pattern| *3)))))) ((*1 *2 *1) (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|SuchThat| *3 *2)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *1 (|PolynomialNumberTheoryFunctions|)) (|isDomain| *3 (|Integer|)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *1 (|SmithNormalForm| *3 *4 *5 *2)) (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpaceComponentProperty|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3)) (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *3 *6) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp35| FCN)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagRootFindingPackage|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StorageEfficientMatrixOperations| *3)))) ((*1 *2 *2 *2 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|PolynomialFactorizationExplicit|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7))) (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7)) (|isDomain| *3 (|SparseUnivariatePolynomial| *7)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|PolynomialFactorizationExplicit|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *5))) (|isDomain| *1 (|PolynomialFactorizationByRecursionUnivariate| *4 *5)) (|isDomain| *3 (|SparseUnivariatePolynomial| *5))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *2 *2 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|MonogenicLinearOperator| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *1 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|NonNegativeInteger|))))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|CancellationAbelianMonoid|)) (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4)))))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |coef| *3) (|:| |monom| *4)))) (|isDomain| *1 (|MonoidRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|Stream| (|Record| (|:| |k| *4) (|:| |c| *3))))))) 
(((*1 *2 *3 *3 *3 *4 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *2 *2 *3 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PrimitiveArray| (|Complex| (|Float|)))) (|isDomain| *1 (|BlasLevelOne|))))) 
(((*1 *2 *3 *4 *5 *4) (AND (|isDomain| *3 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Boolean|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagPolynomialRootsPackage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|FlexibleArray| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|IndexedFlexibleArray| *3 *4)) (|ofType| *4 (|Integer|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|))) (|isDomain| *2 (|FortranCode|)) (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Union| (|:| |finite| "The range is finite") (|:| |lowerInfinite| "The bottom of range is infinite") (|:| |upperInfinite| "The top of range is infinite") (|:| |bothInfinite| "Both top and bottom points are infinite") (|:| |notEvaluated| "Range not yet evaluated"))) (|isDomain| *1 (|d01AgentsPackage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *2 (|List| *2))) (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5)) (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *5 *2))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |coef2| *3) (|:| |subResultant| *3))) (|isDomain| *1 (|PseudoRemainderSequence| *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| *5)) (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Mapping| *5 *4)) (|isDomain| *1 (|MappingPackage2| *4 *5)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|DirectProductCategory| *5 (|NonNegativeInteger|))) (|ofType| *5 (|NonNegativeInteger|)) (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|PackageForPoly| *2 *3 *4 *5)) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *2 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *1 (|PatternMatchAssertions|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Cell| *4)) (|ofCategory| *4 (|RealClosedField|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SimpleCell| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |outval| *4) (|:| |outmult| (|Integer|)) (|:| |outvect| (|List| (|Matrix| *4)))))) (|isDomain| *1 (|NumericRealEigenPackage| *4)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4 *5 *4) (AND (|isDomain| *3 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Boolean|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagPolynomialRootsPackage|))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|MachineFloat|)) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|HexadecimalExpansion|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *1 (|DrawOption|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *1 (|DrawOption|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *5 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7)) (|ofCategory| *6 (|DirectProductCategory| *5 *2)) (|ofCategory| *7 (|DirectProductCategory| *4 *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|UniqueFactorizationDomain|)) (|isDomain| *1 (|ChangeOfVariable| *2 *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3 *4 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *5 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2) (AND (|isDomain| *2 (|List| (|ProjectivePlaneOverPseudoAlgebraicClosureOfFiniteField| *3))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|List| (|ProjectivePlane| *3))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|ProjectiveAlgebraicSetPackage| *4 *5 *3 *6 *7)) (|ofCategory| *3 (|PolynomialCategory| *4 *6 (|OrderedVariableList| *5))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *4))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *2 (|Record| (|:| |start| *3) (|:| |factors| (|Factored| *3)))) (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|PartialFraction| *2)) (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|OpenMathEncoding|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3) (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Record| (|:| |radicand| (|Fraction| *5)) (|:| |deg| (|NonNegativeInteger|)))) (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3) (|partial| AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Record| (|:| |bas| (|GeneralTriangularSet| *4 *5 *6 *7)) (|:| |top| (|List| *7)))) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7)) (|isDomain| *3 (|List| *7))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|AssociationList| (|String|) (|None|))) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Field|)) (|ofType| *10 (|Mapping| *7 *5)) (|ofCategory| *8 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *9 (|Mapping| *5 *8)) (|isDomain| *2 (|List| (|Record| (|:| |function| *7) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9 *10)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *8) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|)) (|ofType| *9 (|Mapping| *6 *4)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *5 (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *5 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|))))) (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4))))) 
(((*1 *1 *2 *2) (AND (|ofCategory| *1 (|IntervalCategory| *2)) (|ofCategory| *2 (|Join| (|FloatingPointSystem|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Mapping| *3 *3 (|Integer|))) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|Automorphism| *3)))) ((*1 *1 *2 *2) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|Automorphism| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|Automorphism| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|SquareMatrix| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|)) (|isDomain| *1 (|QuadraticForm| *3 *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|)) (|ofType| *9 (|Mapping| *6 *4)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Field|)) (|ofType| *10 (|Mapping| *7 *5)) (|ofCategory| *8 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *9 (|Mapping| *5 *8)) (|isDomain| *2 (|List| (|Record| (|:| |function| *7) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9 *10)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *8) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|))))) (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *5 (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *5 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *5))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ApplicationProgramInterface|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|AbelianMonoidRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FreeModuleCat| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LaurentPolynomial| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|MonoidRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *3) (|partial| AND (|isDomain| *3 (|Mapping| *6 *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Join| (|AlgebraicallyClosedField|) (|FunctionSpace| *4))) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|) (|RetractableTo| (|Integer|)))) (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6))) (|isDomain| *1 (|AlgebraicIntegrate| *4 *5 *6 *7 *2)) (|ofCategory| *2 (|FunctionFieldCategory| *5 *6 *7))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |lcmfij| *5) (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *3) (|:| |polj| *3)))) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|))) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5)) (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|DoubleFloat|))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *1 *1 *2 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *1) (AND (|ofCategory| *2 (|MonogenicLinearOperator| *3)) (|isDomain| *1 (|OppositeMonogenicLinearOperator| *2 *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Vector| *2)) (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *6 (|QuotientFieldCategory| *5)) (|ofCategory| *2 (|Join| (|FramedAlgebra| *6 *7) (|RetractableTo| *6))) (|isDomain| *1 (|FractionalIdeal| *5 *6 *7 *2)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |convert| ((|Symbol|) $))))) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *3 *5 *2)) (|ofCategory| *2 (|PolynomialCategory| (|Fraction| (|Polynomial| *5)) *4 *3)))) ((*1 *2 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |convert| ((|Symbol|) $)) (SIGNATURE |variable| ((|Union| $ "failed") (|Symbol|)))))) (|isDomain| *1 (|PushVariables| *4 *5 *3 *2)) (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *3)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |convert| ((|Symbol|) $)) (SIGNATURE |variable| ((|Union| $ "failed") (|Symbol|)))))) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *1 (|PushVariables| *4 *5 *6 *2)) (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|List| (|Equation| *4))) (|isDomain| *1 (|LieExponentials| *3 *4 *5)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Join| (|CommutativeRing|) (|Module| (|Fraction| (|Integer|))))) (|ofType| *5 (|PositiveInteger|))))) 
(((*1 *2 *3 *2 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|U32Vector|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *3 (|String|)) (|isDomain| *1 (|AttributeButtons|)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *3 (|String|)) (|isDomain| *1 (|AttributeButtons|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|SplittingTree| *3 *4)) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| (|Integer|))) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| *1)) (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|List| *1)))) ((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|List| *1)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|))) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|Product| *3 *2)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Complex| (|Expression| *4))) (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| (|Complex| *4)))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Complex| *3)) (|isDomain| *1 (|TrigonometricManipulations| *4 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|PositiveInteger|))) (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1) (|isDomain| *1 (|ODEIntensityFunctionsTable|)))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|CommutativeRing|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|)) (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|)) (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Field|)))) ((*1 *2 *2 *3 *4) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Mapping| *5 *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *5 *2)) (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1))) (|isDomain| *1 (|Expression| *4)) (|isDomain| *3 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *2 *3) (AND (|ofCategory| *1 (|PolynomialFactorizationExplicit|)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1))) (|isDomain| *3 (|SparseUnivariatePolynomial| *1))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|DrawOption|)))) ((*1 *1) (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *3 *4 *5 *3) (AND (|isDomain| *4 (|Mapping| *7 *7)) (|isDomain| *5 (|Mapping| (|Union| (|Record| (|:| |ratpart| *6) (|:| |coeff| *6)) "failed") *6)) (|ofCategory| *6 (|Field|)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6)) (|isDomain| *2 (|Union| (|Record| (|:| |answer| (|Fraction| *7)) (|:| |a0| *6)) (|Record| (|:| |ratpart| (|Fraction| *7)) (|:| |coeff| (|Fraction| *7))) "failed")) (|isDomain| *1 (|TranscendentalIntegration| *6 *7)) (|isDomain| *3 (|Fraction| *7))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UserDefinedVariableOrdering|)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OneDimensionalArray| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|OneDimensionalArray| *3))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|Result|)) (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|e04AgentsPackage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *4 *5)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *1 (|MappingPackage3| *4 *5 *6))))) 
(((*1 *1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|CommutativeRing|)))) ((*1 *1 *1 *2 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|CommutativeRing|)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|PolynomialIdeals| (|Fraction| (|Integer|)) (|DirectProduct| *5 (|NonNegativeInteger|)) (|OrderedVariableList| *4) (|DistributedMultivariatePolynomial| *4 (|Fraction| (|Integer|))))) (|isDomain| *3 (|List| (|OrderedVariableList| *4))) (|ofType| *4 (|List| (|Symbol|))) (|ofType| *5 (|NonNegativeInteger|)) (|isDomain| *1 (|IdealDecompositionPackage| *4 *5))))) 
(((*1 *2) (AND (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|OrderedSet|) (|RetractableTo| (|Integer|)) (|GcdDomain|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |const| *3) (|:| |nconst| *3))) (|isDomain| *1 (|PatternMatchIntegration| *5 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5)))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3 *4 *2 *3 *2 *3) (AND (|isDomain| *2 (|PrimitiveArray| (|Complex| (|DoubleFloat|)))) (|isDomain| *3 (|SingleInteger|)) (|isDomain| *4 (|Complex| (|DoubleFloat|))) (|isDomain| *1 (|BlasLevelOne|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|)) (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|)))) ((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|ComplexCategory&| *3 *4)) (|ofCategory| *3 (|ComplexCategory| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *4)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3)) (|ofCategory| *3 (|MatrixCategory| *4 *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|LinearSystemMatrixPackage1| *5)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Join| (|FiniteLinearAggregate| *5) (CATEGORY |package| (ATTRIBUTE |shallowlyMutable|)))) (|ofCategory| *4 (|Join| (|FiniteLinearAggregate| *5) (CATEGORY |package| (ATTRIBUTE |shallowlyMutable|)))) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3)) (|ofCategory| *3 (|MatrixCategory| *5 *6 *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3)) (|ofCategory| *3 (|MatrixCategory| *4 *5 *6)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Record| (|:| |unit| *1) (|:| |canonical| *1) (|:| |associate| *1))) (|ofCategory| *1 (|IntegralDomain|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Stream| (|Stream| (|Polynomial| *5)))) (|isDomain| *1 (|WeierstrassPreparation| *5)) (|isDomain| *4 (|Stream| (|Polynomial| *5)))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1) (|partial| AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |val| *1) (|:| |exponent| (|Integer|)))) (|ofCategory| *1 (|FunctionSpace| *3)))) ((*1 *2 *1) (|partial| AND (|isDomain| *2 (|Record| (|:| |val| (|Pattern| *3)) (|:| |exponent| (|Pattern| *3)))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3) (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5)) (|isDomain| *2 (|Record| (|:| |val| *3) (|:| |exponent| (|Integer|)))) (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)) (SIGNATURE |numer| (*7 $)) (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *2 *2 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PartialFraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *6 (|FiniteLinearAggregate| *5)) (|ofCategory| *4 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|Record| (|:| |particular| (|Union| *4 "failed")) (|:| |basis| (|List| *4)))) (|isDomain| *1 (|SmithNormalForm| *5 *6 *4 *3)) (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1) (|isDomain| *1 (|RoutinesTable|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|FreeAbelianMonoidCategory| *2 *4)) (|ofCategory| *4 (|CancellationAbelianMonoid|)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|ListMonoidOps| *2 *4 *5)) (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|OrderedFreeMonoid| *2)) (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *1 (|AlgebraicallyClosedField|)) (|isDomain| *2 (|List| *1)))) ((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|AlgebraicallyClosedField|)) (|isDomain| *2 (|List| *1)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| *1)) (|ofCategory| *1 (|AlgebraicallyClosedField|)) (|isDomain| *2 (|List| *1)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SortedCache| *3)) (|ofCategory| *3 (|CachableSet|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|NAGLinkSupportPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *1 (|MakeUnaryCompiledFunction| *4 *5 *6)) (|ofCategory| *4 (|ConvertibleTo| (|InputForm|))) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *2 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5 *4)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *1 (|MappingPackage3| *5 *4 *6))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8)) (|isDomain| *2 (|Record| (|:| |done| (|List| *4)) (|:| |todo| (|List| (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4)))))) (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Record| (|:| |done| (|List| *4)) (|:| |todo| (|List| (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4)))))) (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8)) (|isDomain| *2 (|Record| (|:| |done| (|List| *4)) (|:| |todo| (|List| (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4)))))) (|isDomain| *1 (|SquareFreeRegularSetDecompositionPackage| *6 *7 *8 *3 *4)) (|ofCategory| *4 (|SquareFreeRegularTriangularSetCategory| *6 *7 *8 *3)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Record| (|:| |done| (|List| *4)) (|:| |todo| (|List| (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4)))))) (|isDomain| *1 (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|UnivariateFormalPowerSeries| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|UnivariateFormalPowerSeriesFunctions| *3))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|Record| (|:| |theta| (|DoubleFloat|)) (|:| |phi| (|DoubleFloat|)) (|:| |scale| (|DoubleFloat|)) (|:| |scaleX| (|DoubleFloat|)) (|:| |scaleY| (|DoubleFloat|)) (|:| |scaleZ| (|DoubleFloat|)) (|:| |deltaX| (|DoubleFloat|)) (|:| |deltaY| (|DoubleFloat|)))) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |theta| (|DoubleFloat|)) (|:| |phi| (|DoubleFloat|)) (|:| |scale| (|DoubleFloat|)) (|:| |scaleX| (|DoubleFloat|)) (|:| |scaleY| (|DoubleFloat|)) (|:| |scaleZ| (|DoubleFloat|)) (|:| |deltaX| (|DoubleFloat|)) (|:| |deltaY| (|DoubleFloat|)))) (|isDomain| *1 (|DrawOption|)))) ((*1 *2 *1 *3 *3 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2 *1 *3 *3 *4 *4 *4) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Record| (|:| |theta| (|DoubleFloat|)) (|:| |phi| (|DoubleFloat|)) (|:| |scale| (|DoubleFloat|)) (|:| |scaleX| (|DoubleFloat|)) (|:| |scaleY| (|DoubleFloat|)) (|:| |scaleZ| (|DoubleFloat|)) (|:| |deltaX| (|DoubleFloat|)) (|:| |deltaY| (|DoubleFloat|)))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Record| (|:| |theta| (|DoubleFloat|)) (|:| |phi| (|DoubleFloat|)) (|:| |scale| (|DoubleFloat|)) (|:| |scaleX| (|DoubleFloat|)) (|:| |scaleY| (|DoubleFloat|)) (|:| |scaleZ| (|DoubleFloat|)) (|:| |deltaX| (|DoubleFloat|)) (|:| |deltaY| (|DoubleFloat|)))) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2 *1 *3 *3 *3 *3 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|IntegerNumberTheoryFunctions|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Graphviz|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9)) (|isDomain| *4 (|List| *7)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|EuclideanDomain|)) (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9)) (|isDomain| *5 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *3 (|SubSpaceComponentProperty|)) (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3 *4 *2 *5) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| (|Pattern| *6))) (|isDomain| *5 (|Mapping| (|PatternMatchResult| *6 *8) *8 (|Pattern| *6) (|PatternMatchResult| *6 *8))) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *8 (|Join| (|Ring|) (|ConvertibleTo| (|Pattern| *6)) (|RetractableTo| *7))) (|isDomain| *2 (|PatternMatchResult| *6 *8)) (|ofCategory| *7 (|Join| (|Ring|) (|OrderedSet|))) (|isDomain| *1 (|PatternMatchTools| *6 *7 *8))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary")) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary")) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|)))) ((*1 *2) (AND (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *4 *4 *5 *6) (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|)) (|isDomain| *1 (|ViewportPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *2 (|GraphImage|)) (|isDomain| *1 (|ViewportPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *4 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|)) (|isDomain| *1 (|ViewportPackage|))))) 
(((*1 *1) (AND (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|PatternMatchListResult| *2 *3 *4)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *4 (|ListAggregate| *3)))) ((*1 *1) (AND (|isDomain| *1 (|PatternMatchResult| *2 *3)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *2 *4 *5) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *5 (|PositiveInteger|)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *1 (|GeneralHenselPackage| *4 *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5)) (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1 *1 *2) (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|)))) ((*1 *2 *3 *3 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|U32Vector|)) (|isDomain| *1 (|U32VectorPolynomialOperations|)))) ((*1 *2 *3 *3) (AND (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|PseudoRemainderSequence| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|FiniteFieldSquareFreeDecomposition| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Union| (|:| |nullBranch| "null") (|:| |assignmentBranch| (|Record| (|:| |var| (|Symbol|)) (|:| |arrayIndex| (|List| (|Polynomial| (|Integer|)))) (|:| |rand| (|Record| (|:| |ints2Floats?| (|Boolean|)) (|:| |expr| (|OutputForm|)))))) (|:| |arrayAssignmentBranch| (|Record| (|:| |var| (|Symbol|)) (|:| |rand| (|OutputForm|)) (|:| |ints2Floats?| (|Boolean|)))) (|:| |conditionalBranch| (|Record| (|:| |switch| (|Switch|)) (|:| |thenClause| (|FortranCode|)) (|:| |elseClause| (|FortranCode|)))) (|:| |returnBranch| (|Record| (|:| |empty?| (|Boolean|)) (|:| |value| (|Record| (|:| |ints2Floats?| (|Boolean|)) (|:| |expr| (|OutputForm|)))))) (|:| |blockBranch| (|List| (|FortranCode|))) (|:| |commentBranch| (|List| (|String|))) (|:| |callBranch| (|String|)) (|:| |forBranch| (|Record| (|:| |range| (|SegmentBinding| (|Polynomial| (|Integer|)))) (|:| |span| (|Polynomial| (|Integer|))) (|:| |body| (|FortranCode|)))) (|:| |labelBranch| (|SingleInteger|)) (|:| |loopBranch| (|Record| (|:| |switch| (|Switch|)) (|:| |body| (|FortranCode|)))) (|:| |commonBranch| (|Record| (|:| |name| (|Symbol|)) (|:| |contents| (|List| (|Symbol|))))) (|:| |printBranch| (|List| (|OutputForm|))))) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| *3)) (|ofCategory| *3 (|RegularTriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|QuasiComponentPackage| *5 *6 *7 *8 *3)))) ((*1 *2 *3 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| *3)) (|ofCategory| *3 (|RegularTriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *5 *6 *7 *8 *3))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5) (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|))) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Record| (|:| |value| *4) (|:| |error| *4) (|:| |totalpts| (|Integer|)) (|:| |success| (|Boolean|)))) (|isDomain| *1 (|NumericalQuadrature|)) (|isDomain| *5 (|Integer|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|GcdDomain|)) (|isDomain| *1 (|PseudoRemainderSequence| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Record| (|:| |goodPols| (|List| *7)) (|:| |badPols| (|List| *7)))) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7)) (|isDomain| *3 (|List| *7))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *3 *3 *3 *4 *5) (AND (|isDomain| *5 (|Mapping| *3 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *6)) (|ofCategory| *6 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| *4))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Union| (|:| |ans| (|Record| (|:| |ans| *3) (|:| |nosol| (|Boolean|)))) (|:| |eq| (|Record| (|:| |b| *3) (|:| |c| *3) (|:| |m| *4) (|:| |alpha| *3) (|:| |beta| *3))))) (|isDomain| *1 (|TranscendentalRischDE| *6 *3))))) 
(((*1 *1 *1 *2) (|partial| AND (|ofCategory| *1 (|ComplexCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *1 *1 *2) (|partial| AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *1 *1 *1) (|partial| |ofCategory| *1 (|IntegralDomain|))) ((*1 *1 *1 *2) (|partial| AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *1 *1 *1) (|partial| |isDomain| *1 (|NonNegativeInteger|))) ((*1 *1 *1 *2) (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|Vector| *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|PseudoRemainderSequence| *3 *4)))) ((*1 *1 *1 *2) (|partial| AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *2 *5 *6)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *4 *2)) (|ofCategory| *6 (|DirectProductCategory| *3 *2)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *2 *2 *2) (|partial| AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| (|List| (|List| *4)))) (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FlexibleArray| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IndexedFlexibleArray| *3 *4)) (|ofCategory| *3 (|Type|)) (|ofType| *4 (|Integer|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|)))) ((*1 *2 *1 *2) (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|GraphImage|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|GraphImage|)))) ((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Palette|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UserDefinedPartialOrdering| *4)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UserDefinedPartialOrdering| *4))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Graphviz|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|ArrayStack| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|)) (|ofCategory| *1 (|BagAggregate| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Dequeue| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|Heap| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Queue| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Stack| *3))))) 
(((*1 *2 *1) (|partial| AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicStochasticDifferential|))))) 
(((*1 *2 *3 *3 *2) (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *4)))) ((*1 *1 *2 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|UnivariateFormalPowerSeries| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *2 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3))) ((*1 *1 *2 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|))))) 
(((*1 *2 *2 *2 *3) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *3 (|Boolean|)) (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|OpenMathConnection|)) (|isDomain| *4 (|Any|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *1 (|GenExEuclid| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *2 *3) (AND (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *1 (|GeneralHenselPackage| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *2 *3) (AND (|ofCategory| *3 (|EuclideanDomain|)) (|ofType| *4 *3) (|ofType| *5 (|Mapping| *3 *3 (|NonNegativeInteger|))) (|isDomain| *1 (|InnerModularGcd| *3 *2 *4 *5)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *3) (|partial| AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|None|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|List| *5))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|TubePlot| *2)) (|ofCategory| *2 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8)) (|ofCategory| *5 (|FunctionSpace| *4)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6))) (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |order| (|NonNegativeInteger|)) (|:| |function| *8))) (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8)))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|)))) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|ofCategory| *6 (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5)) (|isDomain| *2 (|Record| (|:| |order| (|NonNegativeInteger|)) (|:| |function| *6))) (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))) 
(((*1 *2) (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|))) (|isDomain| *1 (|FiniteFieldCyclicGroup| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|)))) ((*1 *2) (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|))) (|isDomain| *1 (|FiniteFieldCyclicGroupExtensionByPolynomial| *3 *4)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|SparseUnivariatePolynomial| *3)))) ((*1 *2) (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|))) (|isDomain| *1 (|FiniteFieldCyclicGroupExtension| *3 *4)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|List| (|BasicOperator|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|Graphviz|))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|CyclicStreamTools| *3 *2)) (|ofCategory| *2 (|LazyStreamAggregate| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5 *2)) (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))) 
(((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|NonCommutativeOperatorDivision| *2 *3)) (|ofCategory| *2 (|MonogenicLinearOperator| *3)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |lfn| (|List| (|Expression| (|DoubleFloat|)))) (|:| |init| (|List| (|DoubleFloat|))))) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|e04AgentsPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Vector| (|Expression| (|DoubleFloat|)))) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Record| (|:| |val| (|List| *8)) (|:| |towers| (|List| (|RegularTriangularSet| *5 *6 *7 *8))))) (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8)) (|isDomain| *3 (|List| *8)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Record| (|:| |val| (|List| *8)) (|:| |towers| (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))) (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)) (|isDomain| *3 (|List| *8))))) 
(((*1 *2 *2 *3 *3) (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *4)))) ((*1 *1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|UnivariateFormalPowerSeries| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3))) ((*1 *1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| *7 *7)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6)) (|ofCategory| *6 (|Join| (|AlgebraicallyClosedField|) (|FunctionSpace| *5))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|IntegralDomain|) (|RetractableTo| (|Integer|)))) (|ofCategory| *8 (|UnivariatePolynomialCategory| (|Fraction| *7))) (|isDomain| *2 (|IntegrationResult| *3)) (|isDomain| *1 (|AlgebraicIntegrate| *5 *6 *7 *8 *3)) (|ofCategory| *3 (|FunctionFieldCategory| *6 *7 *8))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Record| (|:| |coef1| *1) (|:| |coef2| *1) (|:| |generator| *1))) (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|)))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|TubePlotTools|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|PatternMatchable| *5)) (|isDomain| *2 (|PatternMatchListResult| *5 *6 (|List| *6))) (|isDomain| *1 (|PatternMatch| *5 *6 *4)) (|isDomain| *3 (|List| *6)) (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5))))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|List| (|Equation| *3))) (|isDomain| *1 (|PatternMatch| *5 *3 *4)) (|ofCategory| *3 (|RetractableTo| (|Symbol|))) (|ofCategory| *3 (|PatternMatchable| *5)) (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5))))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|List| (|Equation| (|Polynomial| *3)))) (|isDomain| *1 (|PatternMatch| *5 *3 *4)) (|ofCategory| *3 (|Ring|)) (|not| (|ofCategory| *3 (|RetractableTo| (|Symbol|)))) (|ofCategory| *3 (|PatternMatchable| *5)) (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5))))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|PatternMatchResult| *5 *3)) (|isDomain| *1 (|PatternMatch| *5 *3 *4)) (|not| (|ofCategory| *3 (|RetractableTo| (|Symbol|)))) (|not| (|ofCategory| *3 (|Ring|))) (|ofCategory| *3 (|PatternMatchable| *5)) (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DeRhamComplex| *3 *4)) (|ofCategory| *3 (|Join| (|Ring|) (|OrderedSet|))) (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|KeyedAccessFile| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1) (|isDomain| *1 (|Library|)))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|List| (|Kernel| *5))) (|isDomain| *3 (|Symbol|)) (|ofCategory| *5 (|FunctionSpace| *4)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|IntegrationTools| *4 *5))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|))))) 
(((*1 *2 *3 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ArrayStack| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ArrayStack| *4)))) ((*1 *2 *3 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Dequeue| *4)))) ((*1 *2 *3 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Heap| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Heap| *4)))) ((*1 *2 *3 *1) (AND (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *3 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Queue| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Queue| *4)))) ((*1 *2 *3 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Stack| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Stack| *4))))) 
(((*1 *2 *2) (|partial| AND (|isDomain| *1 (|IntegerFactorizationPackage| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4)))) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *2 *6)) (|isDomain| *4 (|Mapping| *6 *5)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|MappingPackageInternalHacks3| *5 *6 *2))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *2 (|List| (|DoubleFloat|))) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *6 *3)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |rnum| *4) (|:| |polnum| *3) (|:| |den| *4)))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|CombinatorialFunction| *4 *2)) (|ofCategory| *2 (|FunctionSpace| *4)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|SegmentBinding| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|CombinatorialFunction| *4 *2)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|SegmentBinding| *1)) (|ofCategory| *1 (|CombinatorialOpsCategory|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|CombinatorialOpsCategory|)) (|isDomain| *2 (|Symbol|))))) 
(((*1 *2 *2 *2 *2 *2) (AND (|ofCategory| *2 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ArrayStack| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|StackAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Stack| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|Graphviz|))))) 
(((*1 *2 *2 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Any|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|FunctionSpace| *2)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|MyExpression| *2 *3)) (|ofType| *2 (|Symbol|)) (|ofCategory| *3 (|Join| (|Ring|) (|OrderedSet|) (|IntegralDomain|))))) ((*1 *1 *1) (AND (|ofCategory| *1 (|QuotientFieldCategory| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *1) (|partial| |ofCategory| *1 (|StepThrough|)))) 
(((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|SingleInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Union| "left" "center" "right" "vertical" "horizontal"))))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|)))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *2) (AND (|ofCategory| *1 (|NumericalIntegrationCategory|)) (|isDomain| *2 (|Result|)) (|isDomain| *3 (|Record| (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|List| (|Segment| (|OrderedCompletion| (|DoubleFloat|))))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))))) ((*1 *2 *3 *2) (AND (|ofCategory| *1 (|NumericalIntegrationCategory|)) (|isDomain| *2 (|Result|)) (|isDomain| *3 (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|))))))) 
(((*1 *2 *1 *2) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *2 *10)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *2 (|DivisorCategory| *9)) (|ofCategory| *10 (|BlowUpMethodCategory|))))) 
(((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|Color|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *3 *3 *3 *4) (|partial| AND (|isDomain| *4 (|Mapping| *6 *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |a| *6) (|:| |b| (|Fraction| *6)) (|:| |h| *6) (|:| |c1| (|Fraction| *6)) (|:| |c2| (|Fraction| *6)) (|:| |t| *6))) (|isDomain| *1 (|TranscendentalRischDESystem| *5 *6)) (|isDomain| *3 (|Fraction| *6))))) 
(((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |mainpart| *3) (|:| |limitedlogs| (|List| (|Record| (|:| |coeff| *3) (|:| |logand| *3)))))) (|isDomain| *1 (|ElementaryIntegration| *6 *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2 *1 *1) (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Record| (|:| |var| (|List| (|Symbol|))) (|:| |pred| (|Any|)))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| (|Integer|))))) (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| (|NonNegativeInteger|))))) (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |factor| *3) (|:| |exponent| (|Integer|))))) (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| (|NonNegativeInteger|))))) (|isDomain| *1 (|OrderedFreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|AlgebraicManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|Field|) (|ExpressionSpace|) (CATEGORY |domain| (SIGNATURE |numer| ((|SparseMultivariatePolynomial| *3 (|Kernel| $)) $)) (SIGNATURE |denom| ((|SparseMultivariatePolynomial| *3 (|Kernel| $)) $)) (SIGNATURE |coerce| ($ (|SparseMultivariatePolynomial| *3 (|Kernel| $))))))))) ((*1 *2 *2 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|AlgebraicManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|Field|) (|ExpressionSpace|) (CATEGORY |domain| (SIGNATURE |numer| ((|SparseMultivariatePolynomial| *3 (|Kernel| $)) $)) (SIGNATURE |denom| ((|SparseMultivariatePolynomial| *3 (|Kernel| $)) $)) (SIGNATURE |coerce| ($ (|SparseMultivariatePolynomial| *3 (|Kernel| $))))))))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|Join| (|Field|) (|ExpressionSpace|) (CATEGORY |domain| (SIGNATURE |numer| ((|SparseMultivariatePolynomial| *4 (|Kernel| $)) $)) (SIGNATURE |denom| ((|SparseMultivariatePolynomial| *4 (|Kernel| $)) $)) (SIGNATURE |coerce| ($ (|SparseMultivariatePolynomial| *4 (|Kernel| $))))))) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *1 (|AlgebraicManipulations| *4 *2)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| (|Kernel| *2))) (|ofCategory| *2 (|Join| (|Field|) (|ExpressionSpace|) (CATEGORY |domain| (SIGNATURE |numer| ((|SparseMultivariatePolynomial| *4 (|Kernel| $)) $)) (SIGNATURE |denom| ((|SparseMultivariatePolynomial| *4 (|Kernel| $)) $)) (SIGNATURE |coerce| ($ (|SparseMultivariatePolynomial| *4 (|Kernel| $))))))) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *1 (|AlgebraicManipulations| *4 *2))))) 
(((*1 *2 *3 *4 *4 *5 *6 *7) (AND (|isDomain| *5 (|Symbol|)) (|isDomain| *6 (|Mapping| (|Union| (|Record| (|:| |mainpart| *4) (|:| |limitedlogs| (|List| (|Record| (|:| |coeff| *4) (|:| |logand| *4))))) "failed") *4 (|List| *4))) (|isDomain| *7 (|Mapping| (|Union| (|Record| (|:| |ratpart| *4) (|:| |coeff| *4)) "failed") *4 *4)) (|ofCategory| *4 (|Join| (|TranscendentalFunctionCategory|) (|AlgebraicallyClosedField|) (|FunctionSpace| *8))) (|ofCategory| *8 (|Join| (|GcdDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| *3) (|LinearlyExplicitRingOver| *3))) (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Record| (|:| |ans| *4) (|:| |right| *4) (|:| |sol?| (|Boolean|)))) (|isDomain| *1 (|ElementaryRischDE| *8 *4))))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|))) (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpressionToOpenMath| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|))) (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpressionToOpenMath| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *4 (|Expression| *5)) (|ofCategory| *5 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExpressionToOpenMath| *5)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *4 (|Expression| *6)) (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExpressionToOpenMath| *6)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *2 (|String|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|String|)))) ((*1 *2 *3 *1) (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *2 (|Void|)))) ((*1 *2 *3 *1 *4) (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *4 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Graphviz|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *3 (|PolynomialCategory| *4 *6 (|OrderedVariableList| *5))) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *9 (|PlacesCategory| *4 *8)) (|ofCategory| *10 (|InfinitlyClosePointCategory| *4 *5 *3 *6 *7 *8 *9 *2 *12)) (|ofCategory| *12 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|DivisorCategory| *9)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *4 *5 *3 *6 *7 *8 *9 *2 *10 *11 *12)) (|ofCategory| *11 (|DesingTreeCategory| *10)))) ((*1 *2 *3 *3 *4 *5) (AND (|isDomain| *4 (|List| *13)) (|isDomain| *5 (|List| *9)) (|ofCategory| *9 (|ProjectiveSpaceCategory| *6)) (|ofCategory| *13 (|DesingTreeCategory| *12)) (|ofCategory| *6 (|Field|)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *6 *7 *3 *8 *9 *10 *11 *2 *14)) (|ofCategory| *14 (|BlowUpMethodCategory|)) (|ofType| *7 (|List| (|Symbol|))) (|ofCategory| *3 (|PolynomialCategory| *6 *8 (|OrderedVariableList| *7))) (|ofCategory| *8 (|DirectProductCategory| (|#| *7) (|NonNegativeInteger|))) (|ofCategory| *10 (|LocalPowerSeriesCategory| *6)) (|ofCategory| *11 (|PlacesCategory| *6 *10)) (|ofCategory| *2 (|DivisorCategory| *11)) (|isDomain| *1 (|IntersectionDivisorPackage| *6 *7 *3 *8 *9 *10 *11 *2 *12 *13 *14)))) ((*1 *2 *3) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *5 *4)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *2 (|Divisor| (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *4))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *4 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *5 *4)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *2 (|Divisor| (|Places| *4))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *4 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|))))) 
(((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *3 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Vector| *3)) (|isDomain| *1 (|ModMonic| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|Stream| (|List| (|Integer|)))) (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *2 *3) (|partial| AND (|isDomain| *2 (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5))) (|isDomain| *3 (|List| (|OrderedVariableList| *4))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *1 (|GroebnerSolve| *4 *5 *6)) (|ofCategory| *6 (|GcdDomain|))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|Record| (|:| |exponent| (|NonNegativeInteger|)) (|:| |center| *4) (|:| |num| *4)))) (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |endPointContinuity| (|Union| (|:| |continuous| "Continuous at the end points") (|:| |lowerSingular| "There is a singularity at the lower end point") (|:| |upperSingular| "There is a singularity at the upper end point") (|:| |bothSingular| "There are singularities at both end points") (|:| |notEvaluated| "End point continuity not yet evaluated"))) (|:| |singularitiesStream| (|Union| (|:| |str| (|Stream| (|DoubleFloat|))) (|:| |notEvaluated| "Internal singularities not yet evaluated"))) (|:| |range| (|Union| (|:| |finite| "The range is finite") (|:| |lowerInfinite| "The bottom of range is infinite") (|:| |upperInfinite| "The top of range is infinite") (|:| |bothInfinite| "Both top and bottom points are infinite") (|:| |notEvaluated| "Range not yet evaluated"))))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *3) (AND (|ofCategory| *1 (|NumericalOptimizationCategory|)) (|isDomain| *3 (|Record| (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |init| (|List| (|DoubleFloat|))) (|:| |lb| (|List| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |cf| (|List| (|Expression| (|DoubleFloat|)))) (|:| |ub| (|List| (|OrderedCompletion| (|DoubleFloat|)))))) (|isDomain| *2 (|Result|)))) ((*1 *2 *3) (AND (|ofCategory| *1 (|NumericalOptimizationCategory|)) (|isDomain| *3 (|Record| (|:| |lfn| (|List| (|Expression| (|DoubleFloat|)))) (|:| |init| (|List| (|DoubleFloat|))))) (|isDomain| *2 (|Result|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3)) (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|FreeLieAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|XPolynomialsCat| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5)) (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *2 (|List| *3)))) ((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|ArrayStack| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Heap| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *3)))) ((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Queue| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Stack| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *4 *5)) (|isDomain| *1 (|MappingPackage3| *4 *5 *6)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|AlgebraicFunction| *4 *2))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|FloatingPointSystem&| *3)) (|ofCategory| *3 (|FloatingPointSystem|)))) ((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|FloatingPointSystem&| *3)) (|ofCategory| *3 (|FloatingPointSystem|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|has| *1 (ATTRIBUTE |arbitraryPrecision|)) (|ofCategory| *1 (|FloatingPointSystem|)))) ((*1 *2) (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3)) (|isDomain| *2 (|Stream| (|Integer|)))))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *1 (|TriangularMatrixOperations| *3 *4 *5 *2)) (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *3 *4) (|partial| AND (|isDomain| *4 (|Fraction| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *5)) (|isDomain| *1 (|PrimitiveRatDE| *5 *2 *3 *6)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2)) (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|Fraction| *2))) (|ofCategory| *2 (|UnivariatePolynomialCategory| *5)) (|isDomain| *1 (|PrimitiveRatDE| *5 *2 *3 *6)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2)) (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| (|Fraction| *2)))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ElementaryFunction| *4 *3)) (|ofCategory| *3 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary")) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary")) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *3 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4)))) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5 *5) (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8)) (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4)))) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *6 *7 *8 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9)))) (|isDomain| *5 (|Boolean|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *6 *7 *4)) (|ofCategory| *9 (|RegularTriangularSetCategory| *6 *7 *4 *8)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|List| (|Record| (|:| |val| *8) (|:| |tower| *9)))) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *6 *7 *4 *8 *9))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Stream| (|DoubleFloat|))) (|isDomain| *1 (|d01AgentsPackage|)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Expression| (|DoubleFloat|))) (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *2 (|Stream| (|DoubleFloat|))) (|isDomain| *1 (|ExpertSystemContinuityPackage|)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Vector| (|Expression| (|DoubleFloat|)))) (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *2 (|Stream| (|DoubleFloat|))) (|isDomain| *1 (|ExpertSystemContinuityPackage|))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Vector| *1)) (|isDomain| *4 (|Mapping| *5 *5)) (|ofCategory| *5 (|Field|)) (|ofCategory| *1 (|MonogenicAlgebra| *5 *6)) (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|Matrix| *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *3 (|PartialDifferentialRing| *6)) (|isDomain| *2 (|Matrix| *3)) (|isDomain| *1 (|MultiVariableCalculusFunctions| *6 *3 *7 *4)) (|ofCategory| *7 (|FiniteLinearAggregate| *3)) (|ofCategory| *4 (|Join| (|FiniteLinearAggregate| *6) (CATEGORY |package| (ATTRIBUTE |finiteAggregate|))))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |pde| (|List| (|Expression| (|DoubleFloat|)))) (|:| |constraints| (|List| (|Record| (|:| |start| (|DoubleFloat|)) (|:| |finish| (|DoubleFloat|)) (|:| |grid| (|NonNegativeInteger|)) (|:| |boundaryType| (|Integer|)) (|:| |dStart| (|Matrix| (|DoubleFloat|))) (|:| |dFinish| (|Matrix| (|DoubleFloat|)))))) (|:| |f| (|List| (|List| (|Expression| (|DoubleFloat|))))) (|:| |st| (|String|)) (|:| |tol| (|DoubleFloat|)))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|d03AgentsPackage|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|DirectProductCategory| *5 (|NonNegativeInteger|))) (|ofType| *5 (|NonNegativeInteger|)) (|isDomain| *1 (|PackageForPoly| *3 *2 *4 *5)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *3 *4)))) ((*1 *2 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|isDomain| *1 (|PolynomialPackageForCurve| *4 *2 *5 *6 *3)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *4 *5)) (|ofCategory| *3 (|ProjectiveSpaceCategory| *4)))) ((*1 *2 *2 *3 *4) (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|DirectProductCategory| *7 (|NonNegativeInteger|))) (|ofType| *7 (|NonNegativeInteger|)) (|isDomain| *1 (|PolynomialPackageForCurve| *5 *2 *6 *7 *3)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *5 *6)) (|ofCategory| *3 (|ProjectiveSpaceCategory| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Permutation| *3))) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|PermutationGroup| *3))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpaceComponentProperty|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|AlgebraicNumber|)) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| *4) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessFinite| *4)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3)) (|ofCategory| (|Integer|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Integer|))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|)) (|ofType| *9 (|Mapping| *6 *4)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Field|)) (|ofType| *10 (|Mapping| *7 *5)) (|ofCategory| *8 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *9 (|Mapping| *5 *8)) (|isDomain| *2 (|List| (|Record| (|:| |function| *7) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9 *10)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *8) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|)))) (|List| *4) (|List| (|GuessOption|)))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| *3) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| *3) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))) (|ofType| *9 (|Mapping| *6 *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3)) (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Polynomial| (|Integer|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|))))) (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *5 (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *5 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)) (|ofType| *4 *3)))) 
(((*1 *1 *1 *2) (AND (|ofCategory| *1 (|Monad|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|MonadWithUnit|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|RetractableTo| *3)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *2 *2) (AND (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|LiouvillianFunction| *4 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|RadicalCategory|) (|TranscendentalFunctionCategory|))))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|SegmentBinding| *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|RadicalCategory|) (|TranscendentalFunctionCategory|))) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|LiouvillianFunction| *4 *2)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|PrimitiveFunctionCategory|)) (|isDomain| *2 (|Symbol|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|SegmentBinding| *1)) (|ofCategory| *1 (|PrimitiveFunctionCategory|))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *3 *4 *5) (AND (|isDomain| *3 (|List| (|Matrix| *6))) (|isDomain| *4 (|Boolean|)) (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Matrix| *6)) (|isDomain| *1 (|RepresentationPackage2| *6)) (|ofCategory| *6 (|Field|)) (|ofCategory| *6 (|Ring|)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|RepresentationPackage2| *4)) (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|)))) ((*1 *2 *3 *3 *4) (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Matrix| *5)) (|isDomain| *1 (|RepresentationPackage2| *5)) (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3)) (|ofCategory| *1 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| (|Permutation| *3))) (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3)) (|isDomain| *2 (|Record| (|:| |under| *1) (|:| |floor| *1) (|:| |upper| *1))) (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *3 *6))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|GcdDomain|)) (|isDomain| *1 (|CylindricalAlgebraicDecompositionUtilities| *3 *4))))) 
(((*1 *2 *1 *3 *3 *4) (AND (|isDomain| *3 (|Mapping| (|OutputForm|) (|OutputForm|) (|OutputForm|))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|ListMonoidOps| *5 *6 *7)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|AbelianMonoid|)) (|ofType| *7 *6))) ((*1 *2 *1 *2) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|SparseUnivariateSkewPolynomial| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Automorphism| *3)) (|ofType| *5 (|Mapping| *3 *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|OutputForm|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputForm|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OutputForm|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|)))) ((*1 *2 *1 *2) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *7 *8) (AND (|isDomain| *3 (|Record| (|:| |det| *12) (|:| |rows| (|List| (|Integer|))) (|:| |cols| (|List| (|Integer|))))) (|isDomain| *4 (|Matrix| *12)) (|isDomain| *5 (|List| (|Fraction| (|Polynomial| *9)))) (|isDomain| *6 (|List| (|List| *12))) (|isDomain| *7 (|NonNegativeInteger|)) (|isDomain| *8 (|Integer|)) (|ofCategory| *9 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *12 (|PolynomialCategory| *9 *11 *10)) (|ofCategory| *10 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *11 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Record| (|:| |eqzro| (|List| *12)) (|:| |neqzro| (|List| *12)) (|:| |wcond| (|List| (|Polynomial| *9))) (|:| |bsoln| (|Record| (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *9)))) (|:| |basis| (|List| (|Vector| (|Fraction| (|Polynomial| *9))))))))) (|isDomain| *1 (|ParametricLinearEquations| *9 *10 *11 *12))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *6)) (|ofCategory| *6 (|Join| (|SetCategory|) (|RetractableTo| *5))) (|ofCategory| *5 (|PatternMatchable| *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Mapping| (|Boolean|) *5)) (|isDomain| *1 (|PatternMatchPushDown| *4 *5 *6))))) 
(((*1 *2 *1 *2) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) *2)) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|Finite|)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *5 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| (|PseudoAlgebraicClosureOfFiniteField| *3) (|Finite|)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *3 (|Finite|)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |coef2| *3) (|:| |resultant| *4))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3) (|partial| AND (|ofCategory| *5 (|RetractableTo| (|AlgebraicNumber|))) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|ofCategory| *5 (|FunctionSpace| *4)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))) (|isDomain| *1 (|FunctionSpaceUnivariatePolynomialFactor| *4 *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2) (AND (|isDomain| *2 (|Stack| (|String|))) (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2 *2 *2 *2 *2 *2) (AND (|ofCategory| *2 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *5 *4)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Mapping| *5)) (|isDomain| *1 (|MappingPackage2| *4 *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|IntervalCategory| *2)) (|ofCategory| *2 (|Join| (|FloatingPointSystem|) (|TranscendentalFunctionCategory|))))) ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *2 *3) (|partial| AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *2 *3)) (|ofCategory| *2 (|Type|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *7)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8)) (|isDomain| *2 (|Record| (|:| |done| (|List| *4)) (|:| |todo| (|List| (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4)))))) (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Record| (|:| |done| (|List| *4)) (|:| |todo| (|List| (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4)))))) (|isDomain| *1 (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4)))) (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4) (|partial| AND (|isDomain| *4 (|Equation| (|OnePointCompletion| *3))) (|ofCategory| *5 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|OnePointCompletion| *3)) (|isDomain| *1 (|PowerSeriesLimitPackage| *5 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Equation| (|OnePointCompletion| (|Polynomial| *5)))) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|OnePointCompletion| (|Fraction| (|Polynomial| *5)))) (|isDomain| *1 (|RationalFunctionLimitPackage| *5)) (|isDomain| *3 (|Fraction| (|Polynomial| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *5)))) (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|OnePointCompletion| *3)) (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|EuclideanDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *2))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|CombinatorialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *2 *2) (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|InnerModularGcd| *4 *2 *5 *6)) (|ofCategory| *4 (|EuclideanDomain|)) (|ofType| *5 *4) (|ofType| *6 (|Mapping| *4 *4 (|NonNegativeInteger|)))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *2))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|List| (|Integer|)))) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7)) (|isDomain| *3 (|Integer|)) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *1 *2 *2 *2) (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2)) (|ofCategory| *2 (|Join| (|Field|) (|TranscendentalFunctionCategory|))))) ((*1 *1 *1 *2) (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *2) (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *1 *3 *4 *4) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *1 *2 *3 *3 *4 *5) (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *3 (|List| (|Palette|))) (|isDomain| *4 (|List| (|PositiveInteger|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *1 (|GraphImage|)))) ((*1 *1 *2 *3 *3 *4) (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *3 (|List| (|Palette|))) (|isDomain| *4 (|List| (|PositiveInteger|))) (|isDomain| *1 (|GraphImage|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *1 (|GraphImage|)))) ((*1 *1 *1) (|isDomain| *1 (|GraphImage|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Plot|)) (|isDomain| *2 (|Record| (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|))))) (|:| |xValues| (|Segment| (|DoubleFloat|))) (|:| |yValues| (|Segment| (|DoubleFloat|))))) (|isDomain| *1 (|TwoDimensionalPlotClipping|)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|Plot|)) (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *2 (|Record| (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|))))) (|:| |xValues| (|Segment| (|DoubleFloat|))) (|:| |yValues| (|Segment| (|DoubleFloat|))))) (|isDomain| *1 (|TwoDimensionalPlotClipping|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Record| (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|))))) (|:| |xValues| (|Segment| (|DoubleFloat|))) (|:| |yValues| (|Segment| (|DoubleFloat|))))) (|isDomain| *1 (|TwoDimensionalPlotClipping|)) (|isDomain| *3 (|List| (|Point| (|DoubleFloat|)))))) ((*1 *2 *3) (AND (|isDomain| *2 (|Record| (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|))))) (|:| |xValues| (|Segment| (|DoubleFloat|))) (|:| |yValues| (|Segment| (|DoubleFloat|))))) (|isDomain| *1 (|TwoDimensionalPlotClipping|)) (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|))))))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Segment| (|Float|)))) (|isDomain| *1 (|DrawOption|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *2 *1) (AND (|isDomain| *1 (|ArrayStack| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *2 *1) (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *2 *1) (AND (|isDomain| *1 (|Stack| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| (|PositiveInteger|))) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Segment| (|PositiveInteger|))) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3) (|:| |basisInv| (|Matrix| *3)))) (|ofCategory| *3 (|Join| (|EuclideanDomain|) (CATEGORY |domain| (SIGNATURE |squareFree| ((|Factored| $) $))))) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5)) (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegrationResult| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1) (|isDomain| *1 (|Boolean|)))) 
(((*1 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|AlgebraPackage| *3 *4)) (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *2 *3 *4) (|partial| AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|CharacteristicZero|))) (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7)) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)))) ((*1 *2 *3 *1) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *1) (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|)) (|ofType| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Record| (|:| |high| (|List| (|Symbol|))) (|:| |low| (|List| (|Symbol|))))) (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|FiniteLinearAggregate| *5)) (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|MatrixManipulation| *5 *6 *7 *3)) (|ofCategory| *3 (|MatrixCategory| *5 *6 *7)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|PositiveInteger|))) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|FiniteLinearAggregate| *5)) (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|MatrixManipulation| *5 *6 *7 *3)) (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))) 
(((*1 *2 *3 *1) (|partial| AND (|isDomain| *3 (|Mapping| (|Boolean|) *2)) (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *4 *6) (AND (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|TubePlot| (|Plot3D|))) (|isDomain| *1 (|ExpressionTubePlot|)))) ((*1 *2 *3 *3 *3 *4 *5 *4 *6 *7) (AND (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|Integer|)) (|isDomain| *7 (|String|)) (|isDomain| *2 (|TubePlot| (|Plot3D|))) (|isDomain| *1 (|ExpressionTubePlot|)))) ((*1 *2 *3 *3 *3 *4 *5 *6 *7) (AND (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Integer|)) (|isDomain| *2 (|TubePlot| (|Plot3D|))) (|isDomain| *1 (|ExpressionTubePlot|)))) ((*1 *2 *3 *3 *3 *4 *5 *6 *7 *8) (AND (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Integer|)) (|isDomain| *8 (|String|)) (|isDomain| *2 (|TubePlot| (|Plot3D|))) (|isDomain| *1 (|ExpressionTubePlot|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| *6 *4)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *4 *5)) (|isDomain| *1 (|MappingPackage3| *4 *5 *6)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Stream| (|List| (|Integer|)))) (|isDomain| *1 (|PartitionsAndPermutations|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|DivisorCategory| *10)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *11 *14)) (|ofCategory| *14 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *4 *5 *6 *7 *8 *9 *10 *11 *12 *13 *14)) (|ofCategory| *13 (|DesingTreeCategory| *12)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *4 *5 *6)) (|ofCategory| (|PseudoAlgebraicClosureOfFiniteField| *4) (|Finite|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *4 *5 *6)) (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|))))) 
(((*1 *1 *2 *1) (AND (|ofCategory| *1 (|AbelianGroup|)) (|isDomain| *2 (|Integer|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|AbelianMonoid|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|AbelianSemiGroup|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|)) (|ofType| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|CommutativeRing|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Color|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|Color|)))) ((*1 *2 *1 *2) (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|))) (|isDomain| *1 (|DenavitHartenbergMatrix| *3)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|Monoid|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|Monoid|)))) ((*1 *1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|SemiGroup|)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1 *2) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|SemiGroup|)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2 *3) (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|CancellationAbelianMonoid|)))) ((*1 *1 *1 *2) (AND (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2 *3) (AND (|isDomain| *1 (|FreeModule1| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *2 *3) (AND (|ofCategory| *1 (|FreeModuleCat| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *1 *2) (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *6 (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|))) (|ofType| *7 (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6)) (|Record| (|:| |index| *5) (|:| |exponent| *6)))) (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *6 *7 *2)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|PolynomialCategory| *4 *6 (|OrderedVariableList| *3))))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|GradedModule| *2 *3)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|GradedModule| *2 *3)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *2 (|Field|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|PolynomialIdeals| *2 *3 *4 *5)) (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3)))) ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *1 (|InnerTaylorSeries| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *2 *1) (AND (|isDomain| *1 (|InnerTaylorSeries| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|LeftModule| *2)) (|ofCategory| *2 (|Rng|)))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|Magma| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *7 *6)) (|isDomain| *4 (|Mapping| *6 *5)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Mapping| *7 *5)) (|isDomain| *1 (|MappingPackage3| *5 *6 *7)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Mapping| *4 *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|MappingPackage4| *3 *4)))) ((*1 *2 *2 *1) (AND (|ofCategory| *1 (|MatrixCategory| *3 *2 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|FiniteLinearAggregate| *3)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)))) ((*1 *2 *1 *2) (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *2 (|FiniteLinearAggregate| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|Monad|))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|MyExpression| *2 *3)) (|ofType| *2 (|Symbol|)) (|ofCategory| *3 (|Join| (|Ring|) (|OrderedSet|) (|IntegralDomain|))))) ((*1 *1 *1 *2) (AND (|isDomain| *1 (|OrderedFreeMonoid| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *2 *1) (AND (|isDomain| *1 (|OrderedFreeMonoid| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|LocalPowerSeriesCategory| *4)) (|isDomain| *2 (|Divisor| *1)) (|ofCategory| *1 (|PlacesCategory| *4 *5)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|Vector| *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|PseudoRemainderSequence| *3 *4)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|RightModule| *2)) (|ofCategory| *2 (|Rng|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Matrix| (|Fraction| *4))) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|SemiGroup|))) ((*1 *2 *2 *1) (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *2 *5)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|DirectProductCategory| *3 *4)) (|ofCategory| *5 (|DirectProductCategory| *3 *4)))) ((*1 *2 *1 *2) (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *2)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *3 *4)) (|ofCategory| *2 (|DirectProductCategory| *3 *4)))) ((*1 *1 *2 *1) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *2)) (|ofCategory| *2 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|Point| (|DoubleFloat|))) (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *1 (|TubePlotTools|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|Monoid|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|Monoid|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|VectorCategory| *3)) (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|AbelianGroup|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|GcdDomain|)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|GcdDomain|))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|HeuGcd| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *2 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|))) ((*1 *2 *2 *2) (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|)) (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *2)) (|ofCategory| *2 (|PolynomialCategory| *5 *3 *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|PolynomialCategory| *6 *4 *5)) (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *2)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6)) (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|)) (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *6)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| *7))) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *7)) (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *7)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5)))) ((*1 *1 *1 *1) (|isDomain| *1 (|PositiveInteger|))) ((*1 *2 *2 *2 *3) (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|U32VectorPolynomialOperations|)))) ((*1 *2 *3 *4 *4 *4) (AND (|isDomain| *3 (|PrimitiveArray| (|U32Vector|))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|)) (|isDomain| *1 (|U32VectorPolynomialOperations|)))) ((*1 *2 *2 *2) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|PseudoRemainderSequence| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *2 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *2 *2) (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2)) (|ofCategory| *2 (|IntegerNumberSystem|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Vector| *4))))) 
(((*1 *2) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7)) (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6)))) ((*1 *2) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7)) (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *7)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4)))) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|AlgebraicNumber|)) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| *4) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessFinite| *4)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3)) (|ofCategory| (|Integer|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Integer|))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Field|)) (|ofType| *10 (|Mapping| *7 *5)) (|ofCategory| *8 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *9 (|Mapping| *5 *8)) (|isDomain| *2 (|List| (|Record| (|:| |function| *7) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9 *10)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *8) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|)) (|ofType| *9 (|Mapping| *6 *4)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|)))) (|List| *4) (|List| (|GuessOption|)))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| *3) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| *3) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))) (|ofType| *9 (|Mapping| *6 *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3)) (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Polynomial| (|Integer|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *5 (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *5 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|))))) (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)) (|ofType| *4 *3)))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| (|List| (|List| (|Point| *3)))))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1))) (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3)))) ((*1 *2 *3 *3 *4) (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3))) (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3)) (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1) (|partial| AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Record| (|:| |prime| (|Integer|)) (|:| |factors| (|List| *3)))) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3 *3 *3 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2 *1 *3) (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ArrayStack| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Dequeue| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Heap| *4)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Queue| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stack| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *3 *3) (|partial| AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UserDefinedPartialOrdering| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *3 *4) (AND (|isDomain| *4 (|Mapping| (|Boolean|) *3 *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UserDefinedPartialOrdering| *3))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|))) ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|)))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *3 *3 *3 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|ArrayStack| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Stack| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|PrimitiveArray| (|SparseUnivariatePolynomial| *4))) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4)) (|isDomain| *3 (|SparseUnivariatePolynomial| *4))))) 
(((*1 *2 *1 *3 *3 *2) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5)) (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *5 (|FiniteLinearAggregate| *2)))) ((*1 *2 *1 *3 *2) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|OpenMathErrorKind|)) (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|)))) ((*1 *2 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *3 *3 *3 *3 *3 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedRing|)) (|isDomain| *1 (|ExpertSystemToolsPackage1| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|OpenMathPackage|)) (|isDomain| *3 (|String|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Cell| *5)) (|ofCategory| *5 (|RealClosedField|)) (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5))) (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Kernel| *7)) (|ofCategory| *7 (|Join| (|FunctionSpace| *6) (|AbelianMonoid|) (|RetractableTo| *2) (|RetractableTo| *5) (|PartialDifferentialRing| *5) (|CombinatorialOpsCategory|))) (|isDomain| *5 (|Symbol|)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RecurrenceOperator| *6 *7))))) 
(((*1 *2 *3 *3 *3 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Boolean|))) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|DivisorCategory| *10)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *11 *14)) (|ofCategory| *14 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *4 *5 *6 *7 *8 *9 *10 *11 *12 *13 *14)) (|ofCategory| *13 (|DesingTreeCategory| *12)))) ((*1 *2) (AND (|ofCategory| *1 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|ofCategory| *1 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *3 (|Field|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|isDomain| *1 (|LocalParametrizationOfSimplePointPackage| *3 *4 *5 *6 *7 *8 *9)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)))) ((*1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LocalParametrizationOfSimplePointPackage| *3 *4 *5 *6 *7 *8 *9)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9)))) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9)))) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8 *9))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Mapping| *6 (|List| *6))) (|isDomain| *1 (|UTSodetools| *4 *5 *3 *6)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5)) (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|AlgebraPackage| *4 *3)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *3)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|PlacesCategory| *3 *4))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| *3 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |polypart| *3))) (|isDomain| *1 (|TranscendentalIntegration| *5 *3))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *1 (|LazardSetSolvingPackage| *3 *4 *5 *6 *7 *2)) (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *2 (|SquareFreeRegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *4 *3 *4 *4 *4 *4 *4) (AND (|isDomain| *3 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|GraphImage|)) (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 |RationalNumber|) (|isDomain| *2 (|Mapping| (|Integer|))) (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|)) (|ofType| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|CommutativeRing|)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|CombinatorialFunction| *4 *2)) (|ofCategory| *2 (|FunctionSpace| *4)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|SegmentBinding| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|CombinatorialFunction| *4 *2)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|SegmentBinding| *1)) (|ofCategory| *1 (|CombinatorialOpsCategory|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|CombinatorialOpsCategory|)) (|isDomain| *2 (|Symbol|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|GradedAlgebra| *2 *3)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|)))) ((*1 *1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|XPBWPolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *1 (|CRApackage| *3))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|FunctionSpace| *4)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *1 *2 *1 *1 *1 *1) (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *2 *1 *1 *1) (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *2 *1 *1) (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3 *3 *4 *4 *3 *3 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *3)) (|isDomain| *1 (|AlgebraicManipulations| *4 *3)) (|ofCategory| *3 (|Join| (|Field|) (|ExpressionSpace|) (CATEGORY |domain| (SIGNATURE |numer| ((|SparseMultivariatePolynomial| *4 (|Kernel| $)) $)) (SIGNATURE |denom| ((|SparseMultivariatePolynomial| *4 (|Kernel| $)) $)) (SIGNATURE |coerce| ($ (|SparseMultivariatePolynomial| *4 (|Kernel| $)))))))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|d03AgentsPackage|)) (|isDomain| *3 (|Symbol|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Expression| (|DoubleFloat|))) (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|e04AgentsPackage|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|List| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|LieExponentials| *3 *4 *5)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Join| (|CommutativeRing|) (|Module| (|Fraction| (|Integer|))))) (|ofType| *5 (|PositiveInteger|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Magma| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|OrderedFreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| *2 *2)) (|isDomain| *1 (|MappingPackage1| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| (|List| *5) (|List| *5))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|MappingPackage1| *5)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|GraphImage|)) (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *1 *1 *1 *2) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *3 *6 *6 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Boolean|)) (|isDomain| *6 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |k| (|Symbol|)) (|:| |c| (|XPolynomial| *3))))) (|isDomain| *1 (|XPolynomial| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *3) (|:| |c| (|XRecursivePolynomial| *3 *4))))) (|isDomain| *1 (|XRecursivePolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Integer|) (|Integer|))) (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|NonNegativeInteger|) (|NonNegativeInteger|))) (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *2) (AND (|isDomain| *2 (|Union| (|:| I (|Expression| (|Integer|))) (|:| F (|Expression| (|Float|))) (|:| CF (|Expression| (|Complex| (|Float|)))) (|:| |switch| (|Switch|)))) (|isDomain| *1 (|Switch|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef| *4) (|:| |quotient| *3) (|:| |remainder| *3))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *1 *1) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)))) ((*1 *2 *1 *1) (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Record| (|:| |coef| *3) (|:| |quotient| *1) (|:| |remainder| *1))) (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *3 *3 *4 *4) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1 *3 *3 *4 *4) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *3 *3 *4 *3 *3 *3 *3 *3 *3 *3 *5 *3 *6 *7) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp27| DOT)))) (|isDomain| *7 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp28| IMAGE)))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|)))) ((*1 *2 *3 *3 *4 *3 *3 *3 *3 *3 *3 *3 *5 *3 *6 *7 *8) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp27| DOT)))) (|isDomain| *7 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp28| IMAGE)))) (|isDomain| *8 (|FileName|)) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| (|TaylorSeries| *5))) (|isDomain| *1 (|WeierstrassPreparation| *5)) (|isDomain| *4 (|TaylorSeries| *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ExpertSystemContinuityPackage1| *4 *5)) (|ofType| *4 *3) (|ofType| *5 *3))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ExpertSystemToolsPackage|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *2 *2) (AND (|isDomain| *2 (|Union| (|:| I (|Expression| (|Integer|))) (|:| F (|Expression| (|Float|))) (|:| CF (|Expression| (|Complex| (|Float|)))) (|:| |switch| (|Switch|)))) (|isDomain| *1 (|Switch|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |resultant| *4))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1) (|isDomain| *1 (|Boolean|))) ((*1 *1 *1) (|ofCategory| *1 (|BitAggregate|))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3 *3 *3 *3 *3 *4 *3 *4 *3 *5 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Boolean|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2 *3 *1) (AND (|isDomain| *3 (|SplittingNode| *4 *5)) (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingTree| *4 *5))))) 
(((*1 *1 *1) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1) (|isDomain| *1 (|Switch|))) ((*1 *1 *2) (AND (|isDomain| *2 (|Union| (|:| I (|Expression| (|Integer|))) (|:| F (|Expression| (|Float|))) (|:| CF (|Expression| (|Complex| (|Float|)))) (|:| |switch| (|Switch|)))) (|isDomain| *1 (|Switch|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *2))) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|RationalLODE| *4 *2)) (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *2 (|Fraction| *2))) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|RationalLODE| *4 *2)) (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|)))))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *5 *7)) (|isDomain| *4 (|SparseUnivariatePolynomial| *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *7 (|Ring|)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *5)) (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *2 *6 *7)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *2)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *7 (|Ring|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|SparseUnivariatePolynomial| *7)) (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *4 *6 *7)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *3 *3 *3 *4 *3 *4 *3 *5 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Boolean|)) (|isDomain| *5 (|Matrix| (|Complex| (|DoubleFloat|)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *1 (|MappingPackageInternalHacks2| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4 *4 *5 *4 *5 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagInterpolationPackage|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|ofCategory| *5 (|FunctionSpace| *4)) (|isDomain| *2 (|Union| (|:| |overq| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))) (|:| |overan| (|SparseUnivariatePolynomial| (|AlgebraicNumber|))) (|:| |failed| (|Boolean|)))) (|isDomain| *1 (|FunctionSpaceUnivariatePolynomialFactor| *4 *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *1 (|PatternMatchAssertions|))))) 
(((*1 *1 *1 *2 *1) (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|UniversalSegment| (|Integer|)))))) 
(((*1 *2 *3 *4 *3 *5) (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Complex| (|DoubleFloat|))) (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *1 (|FiniteLinearAggregate| *4)) (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *1 (|MappingPackageInternalHacks2| *2 *3)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *1 (|DesingTreeCategory| *3)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|DesingTreeCategory| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2 *3) (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|DesingTreeCategory| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *1 (|Tree| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Tree| *3)))) ((*1 *1 *2 *3) (AND (|isDomain| *3 (|List| (|Tree| *2))) (|isDomain| *1 (|Tree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4 *3 *5 *5 *5 *5 *5) (|partial| AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8)) (|isDomain| *2 (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *4) (|:| |ineq| (|List| *9)))) (|isDomain| *1 (|QuasiComponentPackage| *6 *7 *8 *9 *4)) (|isDomain| *3 (|List| *9)) (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *9)))) ((*1 *2 *3 *4 *3 *5 *5 *5 *5 *5) (|partial| AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8)) (|isDomain| *2 (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *4) (|:| |ineq| (|List| *9)))) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *6 *7 *8 *9 *4)) (|isDomain| *3 (|List| *9)) (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *9))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|AlgebraicManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|Field|) (|ExpressionSpace|) (CATEGORY |domain| (SIGNATURE |numer| ((|SparseMultivariatePolynomial| *3 (|Kernel| $)) $)) (SIGNATURE |denom| ((|SparseMultivariatePolynomial| *3 (|Kernel| $)) $)) (SIGNATURE |coerce| ($ (|SparseMultivariatePolynomial| *3 (|Kernel| $)))))))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *1 (|PatternMatchAssertions|))))) 
(((*1 *2 *3 *4 *3 *5) (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Complex| (|DoubleFloat|))) (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4)))) (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|has| *1 (ATTRIBUTE |arbitraryPrecision|)) (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|))) ((*1 *1 *1 *2 *2) (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2) (AND (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6)) (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6)))) ((*1 *2) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *5 *3 *6 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Complex| (|DoubleFloat|))) (|isDomain| *6 (|String|)) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Record| (|:| |Indices| (|List| *4)) (|:| |Entries| (|List| *5)))) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Kernel| *4)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Kernel| *4)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternMatch| *5 *3 *4)) (|ofCategory| *3 (|PatternMatchable| *5)) (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|PatternMatchable| *5)) (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternMatch| *5 *6 *4)) (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| (|Complex| *4)))))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TrigonometricManipulations| *4 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4)))))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|Any|)) (|isDomain| *1 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3 *2 *3 *2 *3) (AND (|isDomain| *2 (|PrimitiveArray| (|DoubleFloat|))) (|isDomain| *3 (|SingleInteger|)) (|isDomain| *1 (|BlasLevelOne|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Record| (|:| |Indices| (|List| *4)) (|:| |Entries| (|List| *5)))) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *2) (|partial| AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|PolynomialDecomposition| *2 *3)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|)) (|isDomain| *2 (|DistributedMultivariatePolynomial| (|construct| (QUOTE X) (QUOTE Y)) *3))))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *3 *3 *4) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLapack|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |coef2| *3) (|:| |discriminant| *4))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofCategory| *5 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|NormRetractPackage| *4 *5 *6 *3 *7)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *6)) (|ofType| *7 (|PositiveInteger|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|List| *5))) (|isDomain| *1 (|FloatingRealPackage| *5)) (|ofCategory| *5 (|Join| (|OrderedRing|) (|Field|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|)))) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|FloatingRealPackage| *4)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|StochasticDifferential| *2)) (|ofCategory| *2 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *3 *4 *4 *5 *4 *6 *4 *5) (AND (|isDomain| *3 (|String|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|Matrix| (|Integer|))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLapack|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TemplateUtilities|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| (|Vector| *4))) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *2 *3 *1) (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|PatternMatchResult| *4 *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLapack|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5)) (|isDomain| *2 (|FractionalIdeal| *4 (|Fraction| *4) *5 *6)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| *6)) (|ofCategory| *6 (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4))) (|ofCategory| *4 (|QuotientFieldCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *1 (|Product| *2 *3)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2) (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ExtAlgBasis|))))) 
(((*1 *2 *3 *4 *4 *5 *4 *4 *5) (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLapack|))))) 
(((*1 *2 *1) (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|RealClosedField|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Record| (|:| |coef1| *1) (|:| |coef2| *1) (|:| |generator| *1))) (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofCategory| *4 (|FiniteAlgebraicExtensionField| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|NormRetractPackage| *3 *4 *5 *2 *6)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *5)) (|ofType| *6 (|PositiveInteger|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|ExtensionField| *2)) (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Finite|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|XPolynomialsCat| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|OrderedFreeMonoid| *3)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|OrderedMonoid|)) (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *2 *2 *3) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Type|)) (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)))) ((*1 *1) (|isDomain| *1 (|SubSpaceComponentProperty|))) ((*1 *1 *2 *2 *2) (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|)))) ((*1 *1) (|isDomain| *1 (|ScriptFormulaFormat|))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1) (AND (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|PatternMatchListResult| *2 *3 *4)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *4 (|ListAggregate| *3)))) ((*1 *1) (AND (|isDomain| *1 (|PatternMatchResult| *2 *3)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5)) (|ofCategory| *5 (|Ring|)))) ((*1 *1) (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1) (|isDomain| *1 (|Symbol|))) ((*1 *1) (|isDomain| *1 (|Symbol|))) ((*1 *1) (|isDomain| *1 (|TexFormat|)))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *1 (|RepeatedSquaring| *2)) (|ofCategory| *2 (|Join| (|SetCategory|) (CATEGORY |domain| (SIGNATURE * ($ $ $)))))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Multiset| *3)))) ((*1 *1 *2) (AND (|isDomain| *1 (|Multiset| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1) (AND (|isDomain| *1 (|Multiset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5 *3) (AND (|isDomain| *4 (|Mapping| *7 *7)) (|isDomain| *5 (|Mapping| (|Record| (|:| |ans| *6) (|:| |right| *6) (|:| |sol?| (|Boolean|))) (|Integer|) *6)) (|ofCategory| *6 (|Field|)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6)) (|isDomain| *2 (|Union| (|Record| (|:| |answer| (|Fraction| *7)) (|:| |a0| *6)) (|Record| (|:| |ratpart| (|Fraction| *7)) (|:| |coeff| (|Fraction| *7))) "failed")) (|isDomain| *1 (|TranscendentalIntegration| *6 *7)) (|isDomain| *3 (|Fraction| *7))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))) (|isDomain| *1 (|HeuGcd| *3))))) 
(((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *4 (|Symbol|)) (|isDomain| *1 (|DrawOptionFunctions1| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|DrawOption|)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FiniteFieldFactorization| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FiniteFieldFactorizationWithSizeParseBySideEffect| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|NonNegativeInteger|))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|List| (|NonNegativeInteger|))) (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3) (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|RationalFactorize| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|)))))) ((*1 *2 *3) (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|UnivariateFactorize| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *2 *3 *4 *5)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|DifferentialVariableCategory| *3)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| (|SubSpaceComponentProperty|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|))) (|ofCategory| *2 (|Join| (|FunctionSpace| (|Complex| *4)) (|RadicalCategory|) (|TranscendentalFunctionCategory|))) (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *3 *2)) (|ofCategory| *3 (|Join| (|FunctionSpace| *4) (|RadicalCategory|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4)))) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|List| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *2 *12)) (|ofCategory| *12 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|DivisorCategory| *10)) (|isDomain| *1 (|DesingTreePackage| *4 *5 *6 *7 *8 *9 *10 *2 *11 *3 *12)) (|ofCategory| *3 (|DesingTreeCategory| *11))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *3 *4 *3 *4 *3) (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *2 (|List| (|PrimitiveArray| (|DoubleFloat|)))) (|isDomain| *1 (|BlasLevelOne|)) (|isDomain| *4 (|PrimitiveArray| (|DoubleFloat|)))))) 
(((*1 *1 *2 *3 *1) (AND (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofType| *6 (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *3)) (|Record| (|:| |index| *5) (|:| |exponent| *3)))) (|isDomain| *1 (|GeneralModulePolynomial| *4 *2 *5 *3 *6 *7)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *7 (|PolynomialCategory| *2 *3 (|OrderedVariableList| *4)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| (|DoubleFloat|))) (|isDomain| *2 (|Expression| (|Float|))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9) (|partial| AND (|isDomain| *4 (|List| *11)) (|isDomain| *5 (|List| (|SparseUnivariatePolynomial| *9))) (|isDomain| *6 (|List| *9)) (|isDomain| *7 (|List| *12)) (|isDomain| *8 (|List| (|NonNegativeInteger|))) (|ofCategory| *11 (|OrderedSet|)) (|ofCategory| *9 (|EuclideanDomain|)) (|ofCategory| *12 (|PolynomialCategory| *9 *10 *11)) (|ofCategory| *10 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *12))) (|isDomain| *1 (|MultivariateLifting| *10 *11 *9 *12)) (|isDomain| *3 (|SparseUnivariatePolynomial| *12))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |coef2| *3) (|:| |subResultant| *3))) (|isDomain| *1 (|PseudoRemainderSequence| *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3 *2 *3) (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|)))) ((*1 *2 *3 *2 *4 *1) (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|)))) ((*1 *2 *3 *2 *3 *1) (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|)))) ((*1 *2 *3 *2 *1) (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|SymbolTable|)))) ((*1 *2 *3 *2 *1) (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|DivisorCategory| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|CycleIndicators|)) (|isDomain| *3 (|Integer|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Vector| (|Union| (|GraphImage|) "undefined"))) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *4 *5)) (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|NewtonPolygon| *4 *3 *5 *6))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|LinearlyExplicitRingOver| (|Integer|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerLinearDependence| *4))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Tableau| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|ContinuedFraction| *2)) (|ofCategory| *2 (|EuclideanDomain|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|PartialFraction| *2)) (|ofCategory| *2 (|EuclideanDomain|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QuotientFieldCategory| *2)) (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|EuclideanDomain|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RealNumberSystem|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3) (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |den| (|Integer|)) (|:| |gcdnum| (|Integer|)))) (|isDomain| *1 (|PointsOfFiniteOrderTools| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2))) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3 *4 *3 *3 *3 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|Complex| (|DoubleFloat|)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLinearEquationSolvingPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1) (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|not| (|has| *1 (ATTRIBUTE |arbitraryPrecision|))) (|not| (|has| *1 (ATTRIBUTE |arbitraryExponent|))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteSetAggregate| *2)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Heap| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedSet|))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *1 *2 *3 *4) (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| (|NonNegativeInteger|))) (|isDomain| *4 (|Integer|)) (|ofCategory| *1 (|LocalPowerSeriesCategory| *5)) (|ofCategory| *5 (|Field|))))) 
(((*1 *1 *1 *1 *2) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|AlgebraPackage| *4 *3)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3 *4 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLinearEquationSolvingPackage|))))) 
(((*1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *2 *2) (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2) (AND (|isDomain| *1 (|UniversalSegment| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *3) (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3)) (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|AntiSymm| *2 *3)) (|ofType| *3 (|List| (|Symbol|))))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|List| (|PositiveInteger|))) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|CliffordAlgebra| *4 *2 *5)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|QuadraticForm| *4 *2)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Expression| *3)) (|isDomain| *1 (|DeRhamComplex| *3 *4)) (|ofCategory| *3 (|Join| (|Ring|) (|OrderedSet|))) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *2 *3 *1) (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|CancellationAbelianMonoid|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|FreeModuleCat| *2 *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|LaurentPolynomial| *2 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *2)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|MonogenicLinearOperator| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|MonoidRing| *2 *3)) (|ofCategory| *3 (|Monoid|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| *5)) (|isDomain| *3 (|List| (|NonNegativeInteger|))) (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *2)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|List| (|NonNegativeInteger|))) (|ofCategory| *1 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|PolynomialCategory| *4 *5 *2)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|BasicStochasticDifferential|)) (|isDomain| *2 (|Expression| *4)) (|isDomain| *1 (|StochasticDifferential| *4)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *2 (|PolynomialCategory| *4 (|IndexedExponents| *5) *5)) (|isDomain| *1 (|SparseMultivariateTaylorSeries| *4 *5 *2)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Polynomial| *4)) (|isDomain| *1 (|TaylorSeries| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *1 (|NormalizationPackage| *4 *5 *6 *2 *3)) (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *2))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|RegularChain| *4 *5)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|Record| (|:| |complexRoots| (|SparseUnivariatePolynomial| *4)) (|:| |coordinates| (|List| (|Polynomial| *4)))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6)) (|ofType| *6 (|List| (|Symbol|))))) ((*1 *2 *3 *4 *4 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|List| (|Record| (|:| |complexRoots| (|SparseUnivariatePolynomial| *5)) (|:| |coordinates| (|List| (|Polynomial| *5)))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7)) (|isDomain| *3 (|List| (|Polynomial| *5))) (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|))))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|List| (|Record| (|:| |complexRoots| (|SparseUnivariatePolynomial| *5)) (|:| |coordinates| (|List| (|Polynomial| *5)))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7)) (|isDomain| *3 (|List| (|Polynomial| *5))) (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|List| (|Record| (|:| |complexRoots| (|SparseUnivariatePolynomial| *5)) (|:| |coordinates| (|List| (|Polynomial| *5)))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7)) (|isDomain| *3 (|List| (|Polynomial| *5))) (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|List| (|Record| (|:| |complexRoots| (|SparseUnivariatePolynomial| *4)) (|:| |coordinates| (|List| (|Polynomial| *4)))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6)) (|isDomain| *3 (|List| (|Polynomial| *4))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|))) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|))) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *5 (|UniqueFactorizationDomain|)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6))) (|isDomain| *2 (|List| (|Polynomial| *5))) (|isDomain| *1 (|FunctionFieldCategory&| *4 *5 *6 *7)) (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6)) (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5))) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| (|Polynomial| *4)))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4)))) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *1 (|PermutationCategory| *3))))) 
(((*1 *2 *3 *4 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLinearEquationSolvingPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|SparseUnivariatePolynomial| *4)))) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|isDomain| *2 (|Union| (|List| *8) "failed" "Infinite" (|Integer|))) (|isDomain| *1 (|AffineAlgebraicSetComputeWithResultant| *4 *5 *6 *7 *8)) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|Logic|))) ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *2 *1 *1 *3 *4) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5)) (|isDomain| *4 (|Mapping| (|Boolean|) *6 *6)) (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *6 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *5 *6))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4 *3 *4 *4 *4) (AND (|isDomain| *3 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLinearEquationSolvingPackage|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1 *1 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|)) (|:| |remainder| *1))) (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *3)))) ((*1 *2 *1 *1) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|)) (|:| |remainder| *1))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|Fraction| (|Polynomial| *4)))) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|Heap| *3))))) 
(((*1 *2 *3 *4 *3 *5 *5 *3 *5 *4) (AND (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|Matrix| (|Integer|))) (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLinearEquationSolvingPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|)) (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|Record| (|:| |close| (|List| *6)) (|:| |open| (|List| *6))))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *4 *2)) (|ofCategory| *2 (|LeftModule| *4)))) ((*1 *2 *3 *2) (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Expression| (|DoubleFloat|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|e04AgentsPackage|))))) 
(((*1 *2 *3 *3 *4 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLinearEquationSolvingPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Union| (|SparseUnivariatePolynomial| *4) (|Vector| (|List| (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))) (|isDomain| *1 (|FiniteFieldFunctions| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Polynomial| *4))) (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FGLMIfCanPackage| *4 *5)) (|ofType| *5 (|List| (|Symbol|))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|NewSparseMultivariatePolynomial| *4 (|OrderedVariableList| *5)))) (|ofCategory| *4 (|GcdDomain|)) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LexTriangularPackage| *4 *5))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| *7 *7)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6)) (|ofCategory| *6 (|Join| (|AlgebraicallyClosedField|) (|FunctionSpace| *5))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|IntegralDomain|) (|RetractableTo| (|Integer|)))) (|ofCategory| *8 (|UnivariatePolynomialCategory| (|Fraction| *7))) (|isDomain| *2 (|IntegrationResult| *3)) (|isDomain| *1 (|AlgebraicIntegrate| *5 *6 *7 *8 *3)) (|ofCategory| *3 (|FunctionFieldCategory| *6 *7 *8))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *6 *2)) (|ofType| *6 *2) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|PackageForPoly| *4 *3 *5 *6)) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *4 *5)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *1 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3 *3 *4 *3 *5 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLinearEquationSolvingPackage|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|List| (|DistributedMultivariatePolynomial| *4 *5))) (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *8))) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |goodPols| (|List| *8)) (|:| |badPols| (|List| *8)))) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8)) (|isDomain| *4 (|List| *8))))) 
(((*1 *2 *3 *3 *4 *3 *5 *3 *5 *4 *5 *5 *4 *4 *5 *3) (AND (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|Matrix| (|Integer|))) (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLinearEquationSolvingPackage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|Expression| *5))) (|isDomain| *1 (|RadicalSolvePackage| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5)))) (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|List| (|Expression| *5)))) (|isDomain| *1 (|RadicalSolvePackage| *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|InternalPrintPackage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|))) (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *2 *3 *4 *5 *6 *3 *3 *3 *3 *6 *3 *7 *8) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|Boolean|)) (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp28| APROD)))) (|isDomain| *8 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp34| MSOLVE)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLinearEquationSolvingPackage|))))) 
(((*1 *1 *2 *2) (AND (|isDomain| *2 (|Union| (|:| I (|Expression| (|Integer|))) (|:| F (|Expression| (|Float|))) (|:| CF (|Expression| (|Complex| (|Float|)))) (|:| |switch| (|Switch|)))) (|isDomain| *1 (|Switch|))))) 
(((*1 *2 *2 *3 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PrimitiveArray| (|DoubleFloat|))) (|isDomain| *1 (|BlasLevelOne|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| *1)) (|isDomain| *4 (|Vector| *1)) (|ofCategory| *1 (|LinearlyExplicitRingOver| *5)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Record| (|:| |mat| (|Matrix| *5)) (|:| |vec| (|Vector| *5)))))) ((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| *1)) (|ofCategory| *1 (|LinearlyExplicitRingOver| *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Matrix| *4))))) 
(((*1 *2 *2 *3 *3) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *1 (|SimpleCell| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *3 *4 *5 *3 *4 *3 *3 *3 *3) (AND (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|Matrix| (|Integer|))) (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLinearEquationSolvingPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|)))) ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Character|))) (|isDomain| *1 (|CharacterClass|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|CharacterClass|))))) 
(((*1 *2 *3 *3 *4 *4 *4 *4 *3 *3 *3 *3 *5 *3 *6) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp30| APROD)))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagLinearEquationSolvingPackage|))))) 
(((*1 *2 *2 *3 *3) (|partial| AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|InverseLaplaceTransform| *4 *2)) (|ofCategory| *2 (|Join| (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|) (|SpecialFunctionCategory|) (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Vector| (|NonNegativeInteger|))) (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|List| (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|AlgebraicNumber|)) (|List| (|GuessOption|))))) (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *4 (|List| (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|AlgebraicNumber|)) (|List| (|GuessOption|))))) (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|))) (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *5)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|List| (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| *6) (|List| (|GuessOption|))))) (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *6)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *4 (|List| (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| *7) (|List| (|GuessOption|))))) (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|))) (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *7)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|List| (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Integer|))) (|List| (|GuessOption|))))) (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *4 (|List| (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Integer|))) (|List| (|GuessOption|))))) (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|))) (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|)) (|ofType| *9 (|Mapping| *6 *4)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Field|)) (|ofType| *10 (|Mapping| *7 *5)) (|ofCategory| *8 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *9 (|Mapping| *5 *8)) (|isDomain| *2 (|List| (|Record| (|:| |function| *7) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9 *10)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *8) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|List| (|Mapping| (|List| (|Record| (|:| |function| *8) (|:| |order| (|NonNegativeInteger|)))) (|List| *6) (|List| (|GuessOption|))))) (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|Field|)) (|ofType| *11 (|Mapping| *8 *6)) (|ofCategory| *9 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *10 (|Mapping| *6 *9)) (|isDomain| *2 (|List| (|Record| (|:| |function| *8) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *6 *7 *8 *9 *10 *11)) (|ofCategory| *7 (|GcdDomain|)) (|ofCategory| *8 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *9) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *4 (|List| (|Mapping| (|List| (|Record| (|:| |function| *9) (|:| |order| (|NonNegativeInteger|)))) (|List| *7) (|List| (|GuessOption|))))) (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|))) (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|Field|)) (|ofType| *12 (|Mapping| *9 *7)) (|ofCategory| *10 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *11 (|Mapping| *7 *10)) (|isDomain| *2 (|List| (|Record| (|:| |function| *9) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *7 *8 *9 *10 *11 *12)) (|ofCategory| *8 (|GcdDomain|)) (|ofCategory| *9 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *10) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|List| (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Polynomial| (|Integer|)))) (|List| (|GuessOption|))))) (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *4 (|List| (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Polynomial| (|Integer|)))) (|List| (|GuessOption|))))) (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|))) (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|))))) (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *5 (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *5 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *5)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|List| (|Mapping| (|List| (|Record| (|:| |function| (|MyExpression| *6 (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|MyUnivariatePolynomial| *6 (|Integer|)))) (|List| (|GuessOption|))))) (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *6 (|Integer|))))) (|ofType| *6 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *6 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *6)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *4 (|List| (|Mapping| (|List| (|Record| (|:| |function| (|MyExpression| *7 (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|MyUnivariatePolynomial| *7 (|Integer|)))) (|List| (|GuessOption|))))) (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|))) (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *7 (|Integer|))))) (|ofType| *7 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *7 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *7))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2) (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *2 (|List| (|Record| (|:| |factor| (|Integer|)) (|:| |exponent| (|Integer|)))))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|CartesianTensor| *5 *6 *7)) (|ofType| *5 (|Integer|)) (|ofType| *6 (|NonNegativeInteger|)) (|ofCategory| *7 (|CommutativeRing|)) (|ofCategory| *8 (|CommutativeRing|)) (|isDomain| *2 (|CartesianTensor| *5 *6 *8)) (|isDomain| *1 (|CartesianTensorFunctions2| *5 *6 *7 *8)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *9)) (|ofCategory| *9 (|Ring|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|Ring|)) (|ofCategory| *2 (|PolynomialCategory| *9 *7 *5)) (|isDomain| *1 (|MPolyCatFunctions2| *5 *6 *7 *8 *9 *4 *2)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|PolynomialCategory| *8 *6 *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)) (|isDomain| *1 (|FullPartialFractionExpansion| *3 *2)) (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|HeuGcd| *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1 *3) (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5)) (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3))) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2) (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4)) (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranType|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3 *3 *3 *3) (AND (|ofCategory| *3 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|FractionalIdeal| *3 *4 *5 *6)) (|ofCategory| *6 (|RetractableTo| *4)) (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *4 (|QuotientFieldCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofType| *7 (|Vector| *6)) (|isDomain| *1 (|FramedModule| *3 *4 *5 *6 *7)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| *6)) (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofCategory| *4 (|QuotientFieldCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *1 (|FramedModule| *3 *4 *5 *6 *7)) (|ofType| *7 *2)))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5) (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|))) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Record| (|:| |value| *4) (|:| |error| *4) (|:| |totalpts| (|Integer|)) (|:| |success| (|Boolean|)))) (|isDomain| *1 (|NumericalQuadrature|)) (|isDomain| *5 (|Integer|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|Mapping| *5 *5)) (|isDomain| *1 (|ODEIntegration| *4 *5)) (|ofCategory| *5 (|Join| (|AlgebraicallyClosedFunctionSpace| *4) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|)))))) 
(((*1 *2 *1 *3) (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ArrayStack| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Dequeue| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Heap| *4)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Queue| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stack| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *3 *3) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UserDefinedPartialOrdering| *3)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Join| (|EuclideanDomain|) (CATEGORY |domain| (SIGNATURE |squareFree| ((|Factored| $) $))))) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5)) (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|RoutinesTable|)) (|isDomain| *3 (|String|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|SubSpace| 3 *3)))) ((*1 *1) (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|List| *2))) (|ofCategory| *4 (|Field|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4))))) 
(((*1 *2 *3 *4 *5 *6 *5) (AND (|isDomain| *4 (|Complex| (|DoubleFloat|))) (|isDomain| *5 (|Integer|)) (|isDomain| *6 (|String|)) (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1 *1 *2) (AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|OutputForm|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3)) (|ofCategory| *3 (|ConvertibleTo| (|InputForm|))))) ((*1 *2 *3 *3 *4 *5) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3)) (|ofCategory| *3 (|ConvertibleTo| (|InputForm|))))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|)))) ((*1 *1 *2 *2 *2 *2 *3 *3 *3 *3) (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|)))) ((*1 *1 *2 *2 *2 *2 *3) (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|)))) ((*1 *1 *2 *2 *3 *3 *3) (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|)))) ((*1 *1 *2 *2 *3) (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|)))) ((*1 *1 *2 *3 *3) (AND (|isDomain| *2 (|List| (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))) (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))) (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|)))) ((*1 *1 *2 *3 *3) (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3 *4 *5 *6 *5) (AND (|isDomain| *4 (|Complex| (|DoubleFloat|))) (|isDomain| *5 (|Integer|)) (|isDomain| *6 (|String|)) (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|BalancedBinaryTree| *3))))) 
(((*1 *2 *3 *4 *2 *2 *2 *5) (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *5 (|List| *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *6) (|AbelianMonoid|) (|RetractableTo| (|Integer|)) (|RetractableTo| *4) (|PartialDifferentialRing| *4) (|CombinatorialOpsCategory|))) (|isDomain| *4 (|Symbol|)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *1 (|RecurrenceOperator| *6 *2))))) 
(((*1 *2 *3 *3 *3 *3 *4 *4 *4 *5) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp1| F)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagIntegrationPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Cell| *3)) (|ofCategory| *3 (|RealClosedField|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|RealClosedField|)) (|isDomain| *1 (|SimpleCell| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Stream| (|Fraction| *3))) (|isDomain| *1 (|ContinuedFraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4)))) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4)))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|AlgebraicNumber|)) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| *4) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessFinite| *4)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3)) (|ofCategory| (|Integer|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Integer|))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|)) (|ofType| *9 (|Mapping| *6 *4)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Field|)) (|ofType| *10 (|Mapping| *7 *5)) (|ofCategory| *8 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *9 (|Mapping| *5 *8)) (|isDomain| *2 (|List| (|Record| (|:| |function| *7) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9 *10)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *8) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|)))) (|List| *4) (|List| (|GuessOption|)))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| *3) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| *3) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))) (|ofType| *9 (|Mapping| *6 *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3)) (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Polynomial| (|Integer|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|))))) (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *5 (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *5 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)) (|ofType| *4 *3)))) 
(((*1 *2 *3 *3 *3 *3 *4 *4 *4 *5) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp1| F)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagIntegrationPackage|))))) 
(((*1 *1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Record| (|:| |num| (|Vector| *4)) (|:| |den| *4)))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Magma| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedFreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Color|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Result|))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SimpleCell| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *3 *3 *4 *5 *3 *3 *4 *4 *4 *6) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp1| F)))) (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagIntegrationPackage|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4 *4) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Mapping| *7 *5 *6)) (|isDomain| *1 (|MakeBinaryCompiledFunction| *3 *5 *6 *7)) (|ofCategory| *3 (|ConvertibleTo| (|InputForm|))) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *1 (|MakeUnaryCompiledFunction| *3 *5 *6)) (|ofCategory| *3 (|ConvertibleTo| (|InputForm|))) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *2 *3 *4) (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|ofCategory| *2 (|FunctionSpace| *5)) (|isDomain| *1 (|ExpressionSolve| *5 *2 *6 *7)) (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *2)) (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| (|SparseUnivariatePolynomialExpressions| *2)))))) 
(((*1 *2 *3 *4 *3 *3 *4 *4 *4 *5) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp1| F)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagIntegrationPackage|))))) 
(((*1 *1 *2 *1) (|partial| AND (|isDomain| *2 (|BasicStochasticDifferential|)) (|isDomain| *1 (|StochasticDifferential| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialIdeals| *4 *5 *6 *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *1 (|PolynomialNumberTheoryFunctions|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *5 (|List| *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Vector| *4)) (|isDomain| *1 (|ODETools| *4 *3)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3 *3 *3 *4 *3 *3 *4 *4 *4 *5) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp1| G)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagIntegrationPackage|))))) 
(((*1 *1 *1 *2 *2 *2) (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|)))) ((*1 *1 *1 *2 *2) (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|)))) ((*1 *2 *1 *3 *3 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *1 *2) (AND (|isDomain| *2 (|Mapping| *3 *3 *3 *3 *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|BalancedBinaryTree| *3)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|isDomain| *1 (|BalancedBinaryTree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *1 (|CRApackage| *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|PolynomialFactorizationExplicit|)) (|isDomain| *1 (|GeneralPolynomialGcdPackage| *3 *4 *2 *5)) (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4)))) ((*1 *2) (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|PolynomialFactorizationExplicit|)) (|isDomain| *1 (|PolynomialFactorizationByRecursion| *2 *3 *4 *5)) (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4)))) ((*1 *2) (AND (|ofCategory| *2 (|PolynomialFactorizationExplicit|)) (|isDomain| *1 (|PolynomialFactorizationByRecursionUnivariate| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *2 (|Record| (|:| |adjMat| *3) (|:| |detMat| *4))) (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3)) (|ofCategory| *3 (|MatrixCategory| *4 *5 *6)))) ((*1 *1 *1 *1) (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *2 *3)) (|ofCategory| *3 (|LeftModule| *2)))) ((*1 *1 *1) (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *2 *3)) (|ofCategory| *3 (|LeftModule| *2)))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|LocalPowerSeriesCategory| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|BinaryFile|))))) 
(((*1 *2 *3 *3 *3 *3 *4 *3 *3 *4 *4 *4 *5) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp1| G)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagIntegrationPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *7 (|NonNegativeInteger|))) (|ofType| *7 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|PackageForPoly| *4 *5 *6 *7)) (|ofCategory| *5 (|FiniteAbelianMonoidRing| *4 *6))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|))) ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| (|List| *5) *6)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|List| (|Record| (|:| |constant| *5) (|:| |eq| *3)))) (|isDomain| *1 (|PrimitiveRatRicDE| *5 *6 *3 *7)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *6)) (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| (|Fraction| *6)))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *4))) (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *3))))) ((*1 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3)))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *1 (|FreeLieAlgebra| *3 *4)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|NonCommutativeOperatorDivision| *2 *3)) (|ofCategory| *2 (|MonogenicLinearOperator| *3)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2) (AND (|isDomain| *1 (|IntegerPrimesPackage| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|LaplaceTransform| *4 *2)) (|ofCategory| *2 (|Join| (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|) (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *2 *3 *3 *3 *3 *3 *4 *4 *4 *5) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp1| G)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagIntegrationPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| (|List| *6))) (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4)) (|ofCategory| *3 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *4 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *1 (|ParametricLinearEquations| *3 *4 *5 *6))))) 
(((*1 *1 *2) (|partial| AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|WuWenTsunTriangularSet| *3 *4 *5 *6)))) ((*1 *1 *2 *3 *4) (|partial| AND (|isDomain| *2 (|List| *8)) (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8)) (|isDomain| *4 (|Mapping| *8 *8 *8)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *1 (|WuWenTsunTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|Record| (|:| |det| *8) (|:| |rows| (|List| (|Integer|))) (|:| |cols| (|List| (|Integer|)))))) (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *1 *1 *3) (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *3 (|Character|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *2 *3) (|partial| AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|IntegerRoots| *2)) (|ofCategory| *2 (|IntegerNumberSystem|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Record| (|:| |base| *3) (|:| |exponent| (|NonNegativeInteger|)))) (|isDomain| *1 (|IntegerRoots| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *7)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *3 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *3 *3 *3 *4 *4 *5 *5 *5 *3 *5 *5 *3 *6 *3 *3 *3) (AND (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|Matrix| (|Integer|))) (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|))) ((*1 *2 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Complex| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|))) ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *3 *3) (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Record| (|:| |zeros| (|Stream| (|DoubleFloat|))) (|:| |ones| (|Stream| (|DoubleFloat|))) (|:| |singularities| (|Stream| (|DoubleFloat|))))) (|isDomain| *1 (|BasicFunctions|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|NumericRealEigenPackage| *4)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *2 *3 *3) (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|SingleInteger|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|Color|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|))))) (|isDomain| *2 (|List| (|Complex| *4))) (|isDomain| *1 (|NumericComplexEigenPackage| *4)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Stack| *3))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|FortranPackage|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|CancellationAbelianMonoid|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|FreeGroup| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|FreeMonoid| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5)) (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Record| (|:| |left| (|Fraction| (|Integer|))) (|:| |right| (|Fraction| (|Integer|)))))) (|isDomain| *2 (|List| (|Fraction| (|Integer|)))) (|isDomain| *1 (|RealZeroPackage| *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *3 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *2 *1) (|partial| AND (|ofCategory| *3 (|AbelianSemiGroup|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |coef| (|Integer|)) (|:| |var| (|Kernel| *1)))) (|ofCategory| *1 (|FunctionSpace| *3))))) 
(((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|ViewDefaultsPackage|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *1 *3 *3 *3 *2) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|ThreeDimensionalMatrix| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1 *3 *4 *5) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *3 (|PolynomialCategory| *4 *6 (|OrderedVariableList| *5))) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *9 (|PlacesCategory| *4 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *4 *5 *3 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|List| *12)) (|isDomain| *1 (|DesingTreePackage| *4 *5 *3 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|List| *12)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *5 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2) (AND (|isDomain| *2 (|List| (|DesingTree| (|InfinitlyClosePointOverPseudoAlgebraicClosureOfFiniteField| *3 *4 *5)))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|List| (|DesingTree| (|InfClsPt| *3 *4 *5)))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Matrix| (|Polynomial| *4))) (|isDomain| *1 (|RepresentationPackage1| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *3 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| (|Integer|)))) (|isDomain| *1 (|CyclotomicPolynomialPackage|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *3 *4 *4 *4 *5 *6 *7) (|partial| AND (|isDomain| *5 (|Symbol|)) (|isDomain| *6 (|Mapping| (|Union| (|Record| (|:| |mainpart| *4) (|:| |limitedlogs| (|List| (|Record| (|:| |coeff| *4) (|:| |logand| *4))))) "failed") *4 (|List| *4))) (|isDomain| *7 (|Mapping| (|Union| (|Record| (|:| |ratpart| *4) (|:| |coeff| *4)) "failed") *4 *4)) (|ofCategory| *4 (|Join| (|TranscendentalFunctionCategory|) (|AlgebraicallyClosedField|) (|FunctionSpace| *8))) (|ofCategory| *8 (|Join| (|GcdDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| *3) (|LinearlyExplicitRingOver| *3))) (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|ElementaryRischDESystem| *8 *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |left| (|Fraction| (|Integer|))) (|:| |right| (|Fraction| (|Integer|))))) (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|RealZeroPackage| *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *3 *3 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Record| (|:| |mval| (|Matrix| *4)) (|:| |invmval| (|Matrix| *4)) (|:| |genIdeal| (|PolynomialIdeals| *4 *5 *6 *7)))) (|isDomain| *1 (|PolynomialIdeals| *4 *5 *6 *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *3 (|Mapping| *2 (|NonNegativeInteger|) (|NonNegativeInteger|) *7)) (|isDomain| *4 (|Vector| *7)) (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Vector| (|SparseUnivariatePolynomial| *2))) (|ofCategory| *7 (|AbelianMonoidRing| *2 *5)) (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|))) (|isDomain| *1 (|FractionFreeFastGaussian| *2 *7))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |resultant| *4))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|))) ((*1 *1 *1) (|isDomain| *1 (|Character|))) ((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Stream| (|Integer|))) (|isDomain| *1 (|StreamTaylorSeriesOperations| *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Complex| (|DoubleFloat|))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *1 *2 *2) (AND (|isDomain| *2 (|Union| (|:| I (|Expression| (|Integer|))) (|:| F (|Expression| (|Float|))) (|:| CF (|Expression| (|Complex| (|Float|)))) (|:| |switch| (|Switch|)))) (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *1 (|ArrayStack| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2 *1) (AND (|isDomain| *1 (|BinarySearchTree| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *2 *1) (AND (|isDomain| *1 (|BinaryTournament| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|ExtensibleLinearAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|ExtensibleLinearAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2 *1) (AND (|isDomain| *1 (|Heap| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |key| (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|:| |entry| (|Record| (|:| |endPointContinuity| (|Union| (|:| |continuous| "Continuous at the end points") (|:| |lowerSingular| "There is a singularity at the lower end point") (|:| |upperSingular| "There is a singularity at the upper end point") (|:| |bothSingular| "There are singularities at both end points") (|:| |notEvaluated| "End point continuity not yet evaluated"))) (|:| |singularitiesStream| (|Union| (|:| |str| (|Stream| (|DoubleFloat|))) (|:| |notEvaluated| "Internal singularities not yet evaluated"))) (|:| |range| (|Union| (|:| |finite| "The range is finite") (|:| |lowerInfinite| "The bottom of range is infinite") (|:| |upperInfinite| "The top of range is infinite") (|:| |bothInfinite| "Both top and bottom points are infinite") (|:| |notEvaluated| "Range not yet evaluated"))))))) (|isDomain| *1 (|IntegrationFunctionsTable|)))) ((*1 *1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|MultiDictionary| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |key| (|Record| (|:| |xinit| (|DoubleFloat|)) (|:| |xend| (|DoubleFloat|)) (|:| |fn| (|Vector| (|Expression| (|DoubleFloat|)))) (|:| |yinit| (|List| (|DoubleFloat|))) (|:| |intvals| (|List| (|DoubleFloat|))) (|:| |g| (|Expression| (|DoubleFloat|))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|:| |entry| (|Record| (|:| |stiffness| (|Float|)) (|:| |stability| (|Float|)) (|:| |expense| (|Float|)) (|:| |accuracy| (|Float|)) (|:| |intermediateResults| (|Float|)))))) (|isDomain| *1 (|ODEIntensityFunctionsTable|)))) ((*1 *1 *2 *1) (AND (|isDomain| *1 (|Queue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|isDomain| *1 (|Stack| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TabulatedComputationPackage| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|isDomain| *2 (|List| *8)) (|isDomain| *1 (|AffineAlgebraicSetComputeWithGroebnerBasis| *5 *6 *3 *7 *8)) (|ofCategory| *3 (|PolynomialCategory| *5 *7 (|OrderedVariableList| *6))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|isDomain| *2 (|Union| (|List| *8) "failed" "Infinite" (|Integer|))) (|isDomain| *1 (|AffineAlgebraicSetComputeWithResultant| *5 *6 *3 *7 *8)) (|ofCategory| *3 (|PolynomialCategory| *5 *7 (|OrderedVariableList| *6))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *5))))) 
(((*1 *1) (|ofCategory| *1 (|AbelianMonoid|))) ((*1 *1) (AND (|ofCategory| *1 (|GradedModule| *2 *3)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|)))) ((*1 *1) (|isDomain| *1 (|InputForm|))) ((*1 *1) (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *2 *3) (|partial| AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|GcdDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|ElementaryIntegration| *4 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4)))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|Finite|)))) ((*1 *2) (AND (|isDomain| *2 (|Vector| (|SetOfMIntegersInOneToN| *3 *4))) (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *2 (|PolynomialCategory| *3 *5 (|OrderedVariableList| *4))) (|ofCategory| *5 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *6 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *7 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *8 (|PlacesCategory| *3 *7)) (|ofCategory| *9 (|DivisorCategory| *8)) (|ofCategory| *10 (|InfinitlyClosePointCategory| *3 *4 *2 *5 *6 *7 *8 *9 *12)) (|ofCategory| *12 (|BlowUpMethodCategory|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *2 *5 *6 *7 *8 *9 *10 *11 *12)) (|ofCategory| *11 (|DesingTreeCategory| *10)))) ((*1 *2 *2) (AND (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *3)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *3)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *5 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|CycleIndicators|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GenExEuclid| *3 *5))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *1 (|BasicOperatorFunctions1| *3)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|RetractableTo| (|Integer|))) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|AlgebraicManipulations| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)) (|ofCategory| *2 (|Join| (|Field|) (|ExpressionSpace|) (CATEGORY |domain| (SIGNATURE |numer| ((|SparseMultivariatePolynomial| *3 (|Kernel| $)) $)) (SIGNATURE |denom| ((|SparseMultivariatePolynomial| *3 (|Kernel| $)) $)) (SIGNATURE |coerce| ($ (|SparseMultivariatePolynomial| *3 (|Kernel| $)))))))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|DivisorCategory| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|))) (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4)) (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|isDomain| *1 (|CombinatorialFunction| *4 *2)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Mapping| (|OutputForm|) (|OutputForm|))) (|isDomain| *1 (|BasicOperator|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Mapping| (|OutputForm|) (|List| (|OutputForm|)))) (|isDomain| *1 (|BasicOperator|)))) ((*1 *2 *1) (|partial| AND (|isDomain| *2 (|Mapping| (|OutputForm|) (|List| (|OutputForm|)))) (|isDomain| *1 (|BasicOperator|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Database| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |elt| ((|String|) $ (|Symbol|))) (SIGNATURE |display| (*2 $)) (SIGNATURE |fullDisplay| (*2 $))))))) ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ScriptFormulaFormat|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ScriptFormulaFormat|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|HTMLFormat|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|IndexCard|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|MathMLFormat|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TexFormat|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Union| (|Boolean|) (|List| *1))) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|NonCommutativeOperatorDivision| *2 *3)) (|ofCategory| *2 (|MonogenicLinearOperator| *3)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *3 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Stream| *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|Record| (|:| |contp| (|Integer|)) (|:| |factors| (|List| (|Record| (|:| |irr| *3) (|:| |pow| (|Integer|))))))) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|Record| (|:| |contp| (|Integer|)) (|:| |factors| (|List| (|Record| (|:| |irr| *3) (|:| |pow| (|Integer|))))))) (|isDomain| *1 (|UnivariateFactorize| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *1 *3) (|partial| AND (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternMatchResult| *4 *5)) (|ofCategory| *5 (|SetCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternFunctions1| *5 *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternFunctions1| *5 *6))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|FortranTemplate|)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *2 *3) (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5))) (|isDomain| *3 (|SparseUnivariatePolynomial| *5)) (|ofCategory| *5 (|ComplexCategory| *4)) (|ofCategory| *4 (|IntegerNumberSystem|)) (|isDomain| *1 (|ComplexIntegerSolveLinearPolynomialEquation| *4 *5)))) ((*1 *2 *2 *3) (|partial| AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *1 (|FiniteFieldSolveLinearPolynomialEquation| *4 *5 *3)))) ((*1 *2 *2 *3) (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| (|Integer|)))) (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *1 (|IntegerSolveLinearPolynomialEquation|)))) ((*1 *2 *2 *3) (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *1))) (|isDomain| *3 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|))) ((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|CombinatorialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *2 *2 *2) (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TabulatedComputationPackage| *4 *5)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *1 *1) (|isDomain| *1 (|AlgebraicNumber|))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|OneDimensionalArray| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|OneDimensionalArrayFunctions2| *5 *2)))) ((*1 *2 *3 *1 *2 *2) (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|ofCategory| *2 (|SetCategory|)) (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *3 *1 *2) (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Record| (|:| |pol| (|SparseUnivariatePolynomial| *4)) (|:| |deg| (|PositiveInteger|)))) (|isDomain| *1 (|DegreeReductionPackage| *4 *5)) (|isDomain| *3 (|SparseUnivariatePolynomial| *4)) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|OrderedSet|))))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *3 (|Mapping| *2 *6 *2)) (|isDomain| *4 (|DirectProduct| *5 *6)) (|ofType| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|Type|)) (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|DirectProductFunctions2| *5 *6 *2)))) ((*1 *1 *2 *3) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *1 (|EuclideanModularRing| *4 *2 *3 *5 *6 *7)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *3)) (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3)) (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *3)))) ((*1 *1 *1) (AND (|isDomain| *1 (|Expression| *2)) (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|FiniteDivisorCategory| *2 *3 *4 *5)) (|ofCategory| *2 (|Field|)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3))) (|ofCategory| *5 (|FunctionFieldCategory| *2 *3 *4)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *5 *4 *2 *6)) (|ofCategory| *4 (|FiniteLinearAggregate| *5)) (|ofCategory| *6 (|FiniteLinearAggregate| *2)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|FiniteSetAggregateFunctions2| *5 *4 *2 *6)) (|ofCategory| *4 (|FiniteSetAggregate| *5)) (|ofCategory| *6 (|FiniteSetAggregate| *2)))) ((*1 *1 *1) (|isDomain| *1 (|InnerAlgebraicNumber|))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|ListFunctions2| *5 *2)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *6 (|FiniteLinearAggregate| *5)) (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|ofCategory| *8 (|FiniteLinearAggregate| *2)) (|ofCategory| *9 (|FiniteLinearAggregate| *2)) (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *2 *8 *9 *10)) (|ofCategory| *4 (|MatrixCategory| *5 *6 *7)) (|ofCategory| *10 (|MatrixCategory| *2 *8 *9)))) ((*1 *1 *2 *3) (AND (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3)) (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3)) (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *1 *2 *3) (AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3)) (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3)) (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3)))) ((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Fraction| *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *1 (|MonogenicAlgebra| *3 *4)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *1 (|MonogenicAlgebra| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|PlacesCategory| *4 *5)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|LocalPowerSeriesCategory| *4)) (|isDomain| *2 (|Divisor| *1)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|PrimitiveArray| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|PrimitiveArrayFunctions2| *5 *2)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6)) (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5)) (|ofType| *6 (|List| *2)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *3 (|Mapping| *2 *7 *2)) (|ofCategory| *7 (|Ring|)) (|ofCategory| *2 (|Ring|)) (|ofType| *5 (|NonNegativeInteger|)) (|ofType| *6 (|NonNegativeInteger|)) (|ofCategory| *8 (|DirectProductCategory| *6 *7)) (|ofCategory| *9 (|DirectProductCategory| *5 *7)) (|ofCategory| *10 (|DirectProductCategory| *6 *2)) (|ofCategory| *11 (|DirectProductCategory| *5 *2)) (|isDomain| *1 (|RectangularMatrixCategoryFunctions2| *5 *6 *7 *8 *9 *4 *2 *10 *11 *12)) (|ofCategory| *4 (|RectangularMatrixCategory| *5 *6 *7 *8 *9)) (|ofCategory| *12 (|RectangularMatrixCategory| *5 *6 *2 *10 *11)))) ((*1 *2 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|Stream| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|StreamFunctions2| *5 *2)))) ((*1 *2 *2 *1 *3 *4) (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|isDomain| *4 (|Mapping| (|Boolean|) *2 *2)) (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *2)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *2 (|RecursivePolynomialCategory| *5 *6 *7)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|Vector| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|VectorFunctions2| *5 *2))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2)) (|ofCategory| *2 (|Join| (|FiniteLinearAggregate| *4) (CATEGORY |package| (ATTRIBUTE |shallowlyMutable|))))))) 
(((*1 *2 *3 *4 *2 *3) (AND (|isDomain| *2 (|PrimitiveArray| (|DoubleFloat|))) (|isDomain| *3 (|SingleInteger|)) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *1 (|BlasLevelOne|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Kernel| *6)) (|ofCategory| *6 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *5 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|SparseUnivariatePolynomial| *6)))) (|isDomain| *1 (|GenusZeroIntegration| *5 *6 *7)) (|isDomain| *3 (|SparseUnivariatePolynomial| *6)) (|ofCategory| *7 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)) (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|MonogenicAlgebra| *3 *2)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *3 *4 *4 *5 *6 *7 *8) (|partial| AND (|isDomain| *4 (|SparseUnivariatePolynomial| *11)) (|isDomain| *6 (|List| *10)) (|isDomain| *7 (|List| (|NonNegativeInteger|))) (|isDomain| *8 (|List| *11)) (|ofCategory| *10 (|OrderedSet|)) (|ofCategory| *11 (|EuclideanDomain|)) (|ofCategory| *9 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|PolynomialCategory| *11 *9 *10)) (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5))) (|isDomain| *1 (|MultivariateSquareFree| *9 *10 *11 *5)) (|isDomain| *3 (|SparseUnivariatePolynomial| *5)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5)) (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofType| *6 (|List| *2))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|UnaryRecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|TableauxBumpers| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |integrand| *3) (|:| |intvar| *3)))) (|isDomain| *1 (|IntegrationResult| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *3 *3 *3 *3) (AND (|isDomain| *2 (|PrimitiveArray| (|DoubleFloat|))) (|isDomain| *1 (|BlasLevelOne|)) (|isDomain| *3 (|DoubleFloat|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|NumericalOptimizationProblem|)) (|isDomain| *4 (|RoutinesTable|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalOptimizationPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|NumericalOptimizationProblem|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalOptimizationPackage|)))) ((*1 *2 *3 *4 *5 *6 *5) (AND (|isDomain| *4 (|List| (|Float|))) (|isDomain| *5 (|List| (|OrderedCompletion| (|Float|)))) (|isDomain| *6 (|List| (|Expression| (|Float|)))) (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalOptimizationPackage|)))) ((*1 *2 *3 *4 *5 *5) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|List| (|Float|))) (|isDomain| *5 (|List| (|OrderedCompletion| (|Float|)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalOptimizationPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|List| (|Float|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalOptimizationPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Expression| (|Float|)))) (|isDomain| *4 (|List| (|Float|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalOptimizationPackage|))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpaceComponentProperty|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *3 *3 *3) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Vector| *6)) (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6)) (|isDomain| *1 (|RandomDistributions| *6))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4)))) (|ofCategory| *4 (|RealClosedField|)) (|isDomain| *2 (|List| (|Polynomial| *4))) (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|SquareMatrix| *4 *2)) (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *2 (|Join| (|Ring|) (CATEGORY |package| (ATTRIBUTE (|commutative| "*"))))) (|isDomain| *1 (|Permanent| *4 *2))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|ScriptFormulaFormat|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5)) (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|IntegrationFunctionsTable|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Union| (|Fraction| (|Polynomial| *5)) (|SuchThat| (|Symbol|) (|Polynomial| *5)))) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *5))))) (|isDomain| *1 (|EigenPackage| *5)) (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|)) (|ofCategory| *3 (|PolynomialCategory| *7 *5 *6)) (|isDomain| *2 (|Record| (|:| |exponent| (|NonNegativeInteger|)) (|:| |coef| *3) (|:| |radicand| (|List| *3)))) (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *3 *8)) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *8 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE |numer| (*3 $)) (SIGNATURE |denom| (*3 $)) (SIGNATURE |coerce| ($ *3)))))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *6 (|FunctionSpace| *5)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| (|Kernel| *6))) (|isDomain| *1 (|IntegrationTools| *5 *6))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |lcmfij| *3) (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6) (|:| |polj| *6)))) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|PolynomialCategory| *4 *3 *5)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5 *6))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|Matrix| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|CharacteristicPolynomialPackage| *2)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|CharacteristicPolynomialInMonogenicalAlgebra| *4 *2 *3)) (|ofCategory| *3 (|MonogenicAlgebra| *4 *2)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *5)))) (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Polynomial| *5)) (|isDomain| *1 (|EigenPackage| *5)) (|ofCategory| *5 (|GcdDomain|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4)))) (|isDomain| *2 (|Polynomial| *4)) (|isDomain| *1 (|EigenPackage| *4)) (|ofCategory| *4 (|GcdDomain|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *2)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|))))) (|isDomain| *2 (|Polynomial| (|Complex| (|Fraction| (|Integer|))))) (|isDomain| *1 (|NumericComplexEigenPackage| *4)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|))))) (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Polynomial| (|Complex| (|Fraction| (|Integer|))))) (|isDomain| *1 (|NumericComplexEigenPackage| *5)) (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|))))) ((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|)))) (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|NumericRealEigenPackage| *4)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|)))) (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|NumericRealEigenPackage| *5)) (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|AlgebraPackage| *4 *3)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|ArrayStack| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DoubleFloat|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|Heap| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|))) ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IndexedString| *3)) (|ofType| *3 *2))) ((*1 *2 *1) (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|Queue| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SetCategory|)) (|isDomain| *2 (|SingleInteger|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|Stack| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *7)) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *5 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| (|ProjectivePlaneOverPseudoAlgebraicClosureOfFiniteField| *3))) (|ofCategory| *3 (|FiniteFieldCategory|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| (|ProjectivePlane| *3))) (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Reference| (|OrderedCompletion| (|Integer|)))) (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1) (AND (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *1 (|SplittingNode| *3 *2)) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgFactor| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|InnerModularGcd| *4 *2 *5 *6)) (|ofCategory| *4 (|EuclideanDomain|)) (|ofType| *5 *4) (|ofType| *6 (|Mapping| *4 *4 (|NonNegativeInteger|)))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stream| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5) (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|))) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Record| (|:| |value| *4) (|:| |error| *4) (|:| |totalpts| (|Integer|)) (|:| |success| (|Boolean|)))) (|isDomain| *1 (|NumericalQuadrature|)) (|isDomain| *5 (|Integer|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|CycleIndicators|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Kernel| *1))) (|ofCategory| *1 (|ExpressionSpace|))))) 
(((*1 *2 *3 *3) (|partial| AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3))) (|isDomain| *1 (|UnivariatePolynomialDivisionPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *2 *3 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|IntegerFactorizationPackage| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|CombinatorialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4 *5 *6 *5) (AND (|isDomain| *4 (|Complex| (|DoubleFloat|))) (|isDomain| *5 (|Integer|)) (|isDomain| *6 (|String|)) (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|))) (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|XDistributedPolynomial| (|Symbol|) *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|XPolynomial| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|XRecursivePolynomial| *3 *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Tree| *3))) (|isDomain| *1 (|Tree| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5 *6 *5) (AND (|isDomain| *4 (|Complex| (|DoubleFloat|))) (|isDomain| *5 (|Integer|)) (|isDomain| *6 (|String|)) (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSpecialFunctionsPackage|))))) 
(((*1 *2 *2 *1) (|partial| AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|PrincipalIdealDomain|))))) 
(((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *5 (|Vector| (|List| *3))) (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|GenExEuclid| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|RightOpenIntervalRootCharacterization| (|RealClosure| *4) (|SparseUnivariatePolynomial| (|RealClosure| *4)))) (|isDomain| *3 (|OutputForm|)) (|isDomain| *1 (|RealClosure| *4)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *1 (|FourierSeries| *3 *2)) (|ofCategory| *3 (|Join| (|CommutativeRing|) (|Algebra| (|Fraction| (|Integer|))))) (|ofCategory| *2 (|Join| (|OrderedSet|) (|AbelianGroup|)))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Matrix| *5)) (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|RectangularMatrix| *3 *4 *5)) (|ofType| *3 (|NonNegativeInteger|)) (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSeriesSummationPackage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5)))) (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|List| (|List| (|Polynomial| *5)))) (|isDomain| *1 (|SystemSolvePackage| *5))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Expression| (|DoubleFloat|)))) (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Matrix| (|DoubleFloat|))) (|isDomain| *1 (|e04AgentsPackage|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5)) (|isDomain| *2 (|Record| (|:| |sysok| (|Boolean|)) (|:| |z0| (|List| *7)) (|:| |n0| (|List| *7)))) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7)) (|isDomain| *3 (|List| *7))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| (|HomogeneousDistributedMultivariatePolynomial| *3 *4))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *1 (|LinGroebnerPackage| *3 *4))))) 
(((*1 *2 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSeriesSummationPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|NAGLinkSupportPackage|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|EuclideanDomain|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GenExEuclid| *5 *3))))) 
(((*1 *2 *3 *2) (|partial| AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *1 (|LinearSystemMatrixPackage1| *4)))) ((*1 *2 *3 *2) (|partial| AND (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|Join| (|FiniteLinearAggregate| *4) (CATEGORY |package| (ATTRIBUTE |shallowlyMutable|)))) (|ofCategory| *2 (|Join| (|FiniteLinearAggregate| *4) (CATEGORY |package| (ATTRIBUTE |shallowlyMutable|)))) (|isDomain| *1 (|LinearSystemMatrixPackage| *4 *5 *2 *3)) (|ofCategory| *3 (|MatrixCategory| *4 *5 *2)))) ((*1 *2 *3 *2 *4 *5) (|partial| AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|Mapping| *2 *2)) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|ODETools| *2 *3)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2)))) ((*1 *2 *3) (AND (|ofCategory| *2 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *2 *1) (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4)) (|ofCategory| *1 (|FreeLieAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|)))) ((*1 *1 *1 *1) (|partial| AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *2) (|partial| AND (|isDomain| *1 (|OrderedFreeMonoid| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *1) (|partial| AND (|isDomain| *1 (|OrderedFreeMonoid| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|OrderedFreeMonoid| *3)) (|ofCategory| *1 (|XFreeAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *2 *3 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSeriesSummationPackage|))))) 
(((*1 *2 *3 *3 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|HallBasis|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Record| (|:| |goodPols| (|List| *7)) (|:| |badPols| (|List| *7)))) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7)) (|isDomain| *3 (|List| *7))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *3 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSeriesSummationPackage|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| *7)) (|ofCategory| *7 (|PolynomialCategory| *5 *8 (|OrderedVariableList| *6))) (|ofCategory| *8 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *10 (|LocalPowerSeriesCategory| *5)) (|ofCategory| *11 (|PlacesCategory| *5 *10)) (|isDomain| *2 (|List| (|Vector| *5))) (|isDomain| *1 (|InterpolateFormsPackage| *5 *6 *7 *8 *9 *10 *11 *3)) (|ofCategory| *9 (|ProjectiveSpaceCategory| *5)) (|ofCategory| *3 (|DivisorCategory| *11))))) 
(((*1 *2 *2 *3 *3) (AND (|isDomain| *3 (|Fraction| *5)) (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|ChangeOfVariable| *4 *5 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *3) (AND (|isDomain| *3 (|SymmetricPolynomial| (|Fraction| (|Integer|)))) (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|CycleIndicators|)))) ((*1 *2 *2 *3 *4) (AND (|isDomain| *2 (|Matrix| (|Expression| (|DoubleFloat|)))) (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|Vector| (|Expression| (|DoubleFloat|)))) (|isDomain| *1 (|d02AgentsPackage|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Equation| *3))) (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Equation| *3)))) ((*1 *1 *1 *1) (AND (|ofCategory| *2 (|Evalable| *2)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|Equation| *2)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *1 *1)) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *1 (|List| *1))) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|BasicOperator|))) (|isDomain| *3 (|List| (|Mapping| *1 (|List| *1)))) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|BasicOperator|))) (|isDomain| *3 (|List| (|Mapping| *1 *1))) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Mapping| *1 *1)) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Mapping| *1 (|List| *1))) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|List| (|Mapping| *1 (|List| *1)))) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|List| (|Mapping| *1 *1))) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Equation| *3))) (|ofCategory| *1 (|Evalable| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Equation| *3)) (|ofCategory| *1 (|Evalable| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *2 (|Integer|))) (|isDomain| *4 (|SymmetricPolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|EvaluateCycleIndicators| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|FreeLieAlgebra| *4 *5)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|CommutativeRing|)))) ((*1 *1 *1 *2 *1) (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|)))) ((*1 *1 *1 *2 *3 *4) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Mapping| *1 *1)) (|ofCategory| *1 (|FunctionSpace| *5)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|Ring|)))) ((*1 *1 *1 *2 *3 *4) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Mapping| *1 (|List| *1))) (|ofCategory| *1 (|FunctionSpace| *5)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|Ring|)))) ((*1 *1 *1 *2 *3 *4) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|List| (|NonNegativeInteger|))) (|isDomain| *4 (|List| (|Mapping| *1 (|List| *1)))) (|ofCategory| *1 (|FunctionSpace| *5)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|Ring|)))) ((*1 *1 *1 *2 *3 *4) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|List| (|NonNegativeInteger|))) (|isDomain| *4 (|List| (|Mapping| *1 *1))) (|ofCategory| *1 (|FunctionSpace| *5)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|Ring|)))) ((*1 *1 *1 *2 *3 *4) (AND (|isDomain| *2 (|List| (|BasicOperator|))) (|isDomain| *3 (|List| *1)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *5)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|ConvertibleTo| (|InputForm|))))) ((*1 *1 *1 *2 *1 *3) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *4)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *4 (|ConvertibleTo| (|InputForm|))))) ((*1 *1 *1) (AND (|ofCategory| *1 (|FunctionSpace| *2)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *2 (|ConvertibleTo| (|InputForm|))))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Symbol|))) (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|ConvertibleTo| (|InputForm|))))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|ConvertibleTo| (|InputForm|))))) ((*1 *2 *3 *4) (AND (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *3 (|PolynomialCategory| *2 *6 (|OrderedVariableList| *5))) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *2)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *2)) (|ofCategory| *4 (|PlacesCategory| *2 *8)) (|ofCategory| *9 (|DivisorCategory| *4)) (|ofCategory| *10 (|InfinitlyClosePointCategory| *2 *5 *3 *6 *7 *8 *4 *9 *12)) (|ofCategory| *12 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *2 *5 *3 *6 *7 *8 *4 *9 *10 *11 *12)) (|ofCategory| *11 (|DesingTreeCategory| *10)))) ((*1 *2 *3 *3 *4) (AND (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *3 (|PolynomialCategory| *2 *6 (|OrderedVariableList| *5))) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *2)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *2)) (|ofCategory| *4 (|PlacesCategory| *2 *8)) (|ofCategory| *9 (|DivisorCategory| *4)) (|ofCategory| *10 (|InfinitlyClosePointCategory| *2 *5 *3 *6 *7 *8 *4 *9 *12)) (|ofCategory| *12 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *2 *5 *3 *6 *7 *8 *4 *9 *10 *11 *12)) (|ofCategory| *11 (|DesingTreeCategory| *10)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| *6)) (|ofCategory| *6 (|PolynomialCategory| *2 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *2)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *2)) (|ofCategory| *4 (|PlacesCategory| *2 *9)) (|ofCategory| *10 (|DivisorCategory| *4)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *2 *5 *6 *7 *8 *9 *4 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *2 *5 *6 *7 *8 *9 *4 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *1 *1 *2 *3) (AND (|ofCategory| *1 (|InnerEvalable| *2 *3)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| *5)) (|ofCategory| *1 (|InnerEvalable| *4 *5)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|)))) ((*1 *2 *1 *2) (AND (|isDomain| *2 (|OnePointCompletion| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|MoebiusTransform| *3)))) ((*1 *2 *1 *2) (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *5 *2)) (|isDomain| *4 (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *2)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|FiniteFieldCategory|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *2 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *3 *4) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *5 *2)) (|isDomain| *4 (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *2)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|FiniteFieldCategory|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *2 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|DistributedMultivariatePolynomial| *5 *2))) (|isDomain| *4 (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *2)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|FiniteFieldCategory|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *2 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *5 *2)) (|isDomain| *4 (|Places| *2)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *2 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *3 *4) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *5 *2)) (|isDomain| *4 (|Places| *2)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *2 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|DistributedMultivariatePolynomial| *5 *2))) (|isDomain| *4 (|Places| *2)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *2 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *1 *2) (AND (|ofCategory| *1 (|PermutationCategory| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|PolynomialPackageForCurve| *2 *3 *5 *6 *4)) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *2 *5)) (|ofCategory| *4 (|ProjectiveSpaceCategory| *2)))) ((*1 *2 *2 *3 *2) (AND (|isDomain| *2 (|Fraction| (|Polynomial| *4))) (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *1 (|RationalFunction| *4)))) ((*1 *2 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|List| (|Fraction| (|Polynomial| *5)))) (|isDomain| *2 (|Fraction| (|Polynomial| *5))) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *1 (|RationalFunction| *5)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4)))) (|isDomain| *2 (|Fraction| (|Polynomial| *4))) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *1 (|RationalFunction| *4)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4))))) (|isDomain| *2 (|Fraction| (|Polynomial| *4))) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *1 (|RationalFunction| *4)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|has| *3 (SIGNATURE ** (*3 *3 *4))) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary")) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary")) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|PseudoAlgebraicClosureOfFiniteField| *4))) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|ProjectivePlaneOverPseudoAlgebraicClosureOfFiniteField| *4)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|ProjectivePlane| *4)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *1 (|ProjectiveSpaceCategory| *3))))) 
(((*1 *2 *3 *3 *4 *5 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSeriesSummationPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *2 *1 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3)) (|ofCategory| *1 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|Heap| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4))) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *3 *3 *4 *5 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSeriesSummationPackage|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *4 (|MonogenicAlgebra| *5 *7)) (|isDomain| *2 (|Record| (|:| |mat| (|Matrix| *6)) (|:| |vec| (|Vector| *5)))) (|isDomain| *1 (|ReduceLODE| *5 *6 *7 *4 *3)) (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| (|construct| (QUOTE X) (QUOTE Y)) *5)) (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *5 *7)) (|isDomain| *1 (|BlowUpPackage| *5 *6 *2 *7 *4)) (|ofCategory| *7 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|ofCategory| *4 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|Mapping| *6 (|List| *6)))) (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *5)) (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *5 *6))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *4 *5 *5 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSeriesSummationPackage|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|UnivariatePolynomial| *5 *4)) (|ofCategory| *4 (|OrderedIntegralDomain|)) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|SturmHabichtPackage| *4 *5))))) 
(((*1 *1 *1) (AND (|ofCategory| *2 (|Field|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|PolynomialIdeals| *2 *3 *4 *5)) (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| (|SparseUnivariatePolynomial| *4)))) (|isDomain| *1 (|TwoFactorize| *4)) (|isDomain| *3 (|SparseUnivariatePolynomial| (|SparseUnivariatePolynomial| *4)))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *2 *3 *1) (AND (|isDomain| *3 (|FortranScalarType|)) (|isDomain| *2 (|List| (|Union| (|:| |name| (|Symbol|)) (|:| |bounds| (|List| (|Union| (|:| S (|Symbol|)) (|:| P (|Polynomial| (|Integer|))))))))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3 *3 *4 *5 *5 *5 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSeriesSummationPackage|))))) 
(((*1 *1 *1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|UnivariatePolynomial| *5 *4)) (|ofCategory| *4 (|OrderedIntegralDomain|)) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|SturmHabichtPackage| *4 *5))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSeriesSummationPackage|))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Record| (|:| |resultant| *3) (|:| |coef1| (|NewSparseUnivariatePolynomial| *3)))) (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|FunctionSpaceComplexIntegration| *4 *2)) (|ofCategory| *2 (|Join| (|TranscendentalFunctionCategory|) (|AlgebraicallyClosedFunctionSpace| *4))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|CharacteristicZero|)) (|ofCategory| *5 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Expression| *5)) (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))) 
(((*1 *2 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSeriesSummationPackage|))))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|BinarySearchTree| *3))))) 
(((*1 *1) (|isDomain| *1 (|IntegrationFunctionsTable|)))) 
(((*1 *1 *1) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3)) (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSeriesSummationPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|PermutationGroup| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|))) (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| (|SparseUnivariatePolynomial| *4)))) (|isDomain| *1 (|TwoFactorize| *4)) (|isDomain| *3 (|SparseUnivariatePolynomial| (|SparseUnivariatePolynomial| *4)))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|ArrayStack| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Stack| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagSeriesSummationPackage|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *4 *5))) (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *1 *1 *1) (|partial| |ofCategory| *1 (|CancellationAbelianMonoid|)))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Record| (|:| |coef| (|Fraction| *5)) (|:| |poly| *3))) (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))) 
(((*1 *2 *1) (|partial| AND (|ofCategory| *3 (|SemiGroup|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|FunctionSpace| *3)))) ((*1 *2 *1) (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (|partial| AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5)))) ((*1 *2 *3) (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)) (SIGNATURE |numer| (*7 $)) (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *3 *3) (|partial| AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *3) (|partial| AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|AbelianMonoidRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *1 *2 *1 *1 *3) (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5)) (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)))) ((*1 *1 *2 *1 *1) (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5)) (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5)) (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|OneDimensionalArray| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|OneDimensionalArray| *6)) (|isDomain| *1 (|OneDimensionalArrayFunctions2| *5 *6)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|ArrayStack| *3)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *8 *7)) (|isDomain| *4 (|CartesianTensor| *5 *6 *7)) (|ofType| *5 (|Integer|)) (|ofType| *6 (|NonNegativeInteger|)) (|ofCategory| *7 (|CommutativeRing|)) (|ofCategory| *8 (|CommutativeRing|)) (|isDomain| *2 (|CartesianTensor| *5 *6 *8)) (|isDomain| *1 (|CartesianTensorFunctions2| *5 *6 *7 *8)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Complex| *5)) (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *6 (|CommutativeRing|)) (|isDomain| *2 (|Complex| *6)) (|isDomain| *1 (|ComplexFunctions2| *5 *6)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Dequeue| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Expression| *3) (|Expression| *3))) (|ofCategory| *3 (|Join| (|Ring|) (|OrderedSet|))) (|isDomain| *1 (|DeRhamComplex| *3 *4)) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *7 *6)) (|isDomain| *4 (|DirectProduct| *5 *6)) (|ofType| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|)) (|isDomain| *2 (|DirectProduct| *5 *7)) (|isDomain| *1 (|DirectProductFunctions2| *5 *6 *7)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Equation| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Equation| *6)) (|isDomain| *1 (|EquationFunctions2| *5 *6)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Equation| *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *2 *6)) (|isDomain| *4 (|String|)) (|isDomain| *5 (|Kernel| *6)) (|ofCategory| *6 (|ExpressionSpace|)) (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|ExpressionSpaceFunctions1| *6 *2)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *2 *5)) (|isDomain| *4 (|Kernel| *5)) (|ofCategory| *5 (|ExpressionSpace|)) (|ofCategory| *2 (|ExpressionSpace|)) (|isDomain| *1 (|ExpressionSpaceFunctions2| *5 *2)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Mapping| *1 *1)) (|isDomain| *3 (|Kernel| *1)) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Matrix| *5)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|Matrix| *6)) (|isDomain| *1 (|ExpertSystemToolsPackage2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Expression| *5)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Expression| *6)) (|isDomain| *1 (|ExpressionFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *7 *6)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *7 *5)) (|isDomain| *1 (|FiniteAbelianMonoidRingFunctions2| *5 *6 *4 *7 *2)) (|ofCategory| *4 (|FiniteAbelianMonoidRing| *6 *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *9 *5)) (|isDomain| *4 (|FiniteDivisor| *5 *6 *7 *8)) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6))) (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7)) (|ofCategory| *9 (|Field|)) (|ofCategory| *10 (|UnivariatePolynomialCategory| *9)) (|ofCategory| *11 (|UnivariatePolynomialCategory| (|Fraction| *10))) (|isDomain| *2 (|FiniteDivisor| *9 *10 *11 *12)) (|isDomain| *1 (|FiniteDivisorFunctions2| *5 *6 *7 *8 *9 *10 *11 *12)) (|ofCategory| *12 (|FunctionFieldCategory| *9 *10 *11)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|FullyEvalableOver| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *8 *5)) (|ofCategory| *5 (|UniqueFactorizationDomain|)) (|ofCategory| *8 (|UniqueFactorizationDomain|)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6))) (|ofCategory| *9 (|UnivariatePolynomialCategory| *8)) (|ofCategory| *2 (|FunctionFieldCategory| *8 *9 *10)) (|isDomain| *1 (|FunctionFieldCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2)) (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7)) (|ofCategory| *10 (|UnivariatePolynomialCategory| (|Fraction| *9))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|ofCategory| *2 (|FiniteLinearAggregate| *6)) (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *5 *4 *6 *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *5)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|FreeModuleCat| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Factored| *5)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *6)) (|isDomain| *1 (|FactoredFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Fraction| *5)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Fraction| *6)) (|isDomain| *1 (|FractionFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *9 *5)) (|isDomain| *4 (|FractionalIdeal| *5 *6 *7 *8)) (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *6 (|QuotientFieldCategory| *5)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6)) (|ofCategory| *8 (|Join| (|FramedAlgebra| *6 *7) (|RetractableTo| *6))) (|ofCategory| *9 (|EuclideanDomain|)) (|ofCategory| *10 (|QuotientFieldCategory| *9)) (|ofCategory| *11 (|UnivariatePolynomialCategory| *10)) (|isDomain| *2 (|FractionalIdeal| *9 *10 *11 *12)) (|isDomain| *1 (|FractionalIdealFunctions2| *5 *6 *7 *8 *9 *10 *11 *12)) (|ofCategory| *12 (|Join| (|FramedAlgebra| *10 *11) (|RetractableTo| *10))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *6 (|CommutativeRing|)) (|ofCategory| *2 (|FramedNonAssociativeAlgebra| *6)) (|isDomain| *1 (|FramedNonAssociativeAlgebraFunctions2| *4 *5 *2 *6)) (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *5)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|Factored| *3)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|Join| (|Ring|) (|OrderedSet|))) (|ofCategory| *6 (|Join| (|Ring|) (|OrderedSet|))) (|ofCategory| *2 (|FunctionSpace| *6)) (|isDomain| *1 (|FunctionSpaceFunctions2| *5 *4 *6 *2)) (|ofCategory| *4 (|FunctionSpace| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *2 (|FiniteSetAggregate| *6)) (|isDomain| *1 (|FiniteSetAggregateFunctions2| *5 *4 *6 *2)) (|ofCategory| *4 (|FiniteSetAggregate| *5)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|Heap| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|IntegrationResult| *5)) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|IntegrationResult| *6)) (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Union| (|Record| (|:| |ratpart| *5) (|:| |coeff| *5)) "failed")) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|Record| (|:| |ratpart| *6) (|:| |coeff| *6))) (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Mapping| *2 *5)) (|isDomain| *4 (|Union| *5 "failed")) (|ofCategory| *5 (|Field|)) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|IntegrationResultFunctions2| *5 *2)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Union| (|Record| (|:| |mainpart| *5) (|:| |limitedlogs| (|List| (|Record| (|:| |coeff| *5) (|:| |logand| *5))))) "failed")) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|Record| (|:| |mainpart| *6) (|:| |limitedlogs| (|List| (|Record| (|:| |coeff| *6) (|:| |logand| *6)))))) (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|InfiniteTuple| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|InfiniteTuple| *6)) (|isDomain| *1 (|InfiniteTupleFunctions2| *5 *6)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|InfiniteTuple| *6)) (|isDomain| *5 (|InfiniteTuple| *7)) (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|)) (|isDomain| *2 (|InfiniteTuple| *8)) (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|Stream| *6)) (|isDomain| *5 (|InfiniteTuple| *7)) (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|)) (|isDomain| *2 (|Stream| *8)) (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|InfiniteTuple| *6)) (|isDomain| *5 (|Stream| *7)) (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|)) (|isDomain| *2 (|Stream| *8)) (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|InfiniteTuple| *3)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|ListFunctions2| *5 *6)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|List| *6)) (|isDomain| *5 (|List| *7)) (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|)) (|isDomain| *2 (|List| *8)) (|isDomain| *1 (|ListFunctions3| *6 *7 *8)))) ((*1 *1 *2 *1 *1) (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *8 *5)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *8 (|Ring|)) (|ofCategory| *6 (|FiniteLinearAggregate| *5)) (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|ofCategory| *2 (|MatrixCategory| *8 *9 *10)) (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2)) (|ofCategory| *4 (|MatrixCategory| *5 *6 *7)) (|ofCategory| *9 (|FiniteLinearAggregate| *8)) (|ofCategory| *10 (|FiniteLinearAggregate| *8)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *8 "failed") *5)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *8 (|Ring|)) (|ofCategory| *6 (|FiniteLinearAggregate| *5)) (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|ofCategory| *2 (|MatrixCategory| *8 *9 *10)) (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2)) (|ofCategory| *4 (|MatrixCategory| *5 *6 *7)) (|ofCategory| *9 (|FiniteLinearAggregate| *8)) (|ofCategory| *10 (|FiniteLinearAggregate| *8)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *7 (|IntegralDomain|)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Fraction| *8))) (|isDomain| *1 (|MultipleMap| *5 *6 *4 *7 *8 *2)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *6))) (|ofCategory| *8 (|UnivariatePolynomialCategory| *7)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *9 *8)) (|ofCategory| *8 (|Ring|)) (|ofCategory| *9 (|Ring|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|PolynomialCategory| *9 *7 *5)) (|isDomain| *1 (|MPolyCatFunctions2| *5 *6 *7 *8 *9 *4 *2)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|PolynomialCategory| *8 *6 *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *9 (|Ring|)) (|ofCategory| *2 (|PolynomialCategory| *9 *8 *6)) (|isDomain| *1 (|MPolyCatFunctions3| *5 *6 *7 *8 *9 *4 *2)) (|ofCategory| *8 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|PolynomialCategory| *9 *7 *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|MonoidRing| *5 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|Monoid|)) (|isDomain| *2 (|MonoidRing| *6 *7)) (|isDomain| *1 (|MonoidRingFunctions2| *5 *6 *7)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|MonoidRing| *3 *4)) (|ofCategory| *4 (|Monoid|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|NewSparseUnivariatePolynomial| *5)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|NewSparseUnivariatePolynomial| *6)) (|isDomain| *1 (|NewSparseUnivariatePolynomialFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *6 (|CommutativeRing|)) (|ofCategory| *2 (|OctonionCategory| *6)) (|isDomain| *1 (|OctonionCategoryFunctions2| *4 *5 *2 *6)) (|ofCategory| *4 (|OctonionCategory| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|OnePointCompletion| *5)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|OnePointCompletion| *6)) (|isDomain| *1 (|OnePointCompletionFunctions2| *5 *6)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *2 (|OnePointCompletion| *6)) (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|OnePointCompletion| *5)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|isDomain| *1 (|OnePointCompletionFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|OrderedCompletion| *5)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|OrderedCompletion| *6)) (|isDomain| *1 (|OrderedCompletionFunctions2| *5 *6)))) ((*1 *2 *3 *4 *2 *2) (AND (|isDomain| *2 (|OrderedCompletion| *6)) (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|OrderedCompletion| *5)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|isDomain| *1 (|OrderedCompletionFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|ParametricPlaneCurve| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricPlaneCurve| *6)) (|isDomain| *1 (|ParametricPlaneCurveFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|ParametricSpaceCurve| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricSpaceCurve| *6)) (|isDomain| *1 (|ParametricSpaceCurveFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|ParametricSurface| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricSurface| *6)) (|isDomain| *1 (|ParametricSurfaceFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *7 *6)) (|isDomain| *4 (|PatternMatchResult| *5 *6)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|PatternMatchResult| *5 *7)) (|isDomain| *1 (|PatternMatchResultFunctions2| *5 *6 *7)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Pattern| *6)) (|isDomain| *1 (|PatternFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Polynomial| *5)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|Polynomial| *6)) (|isDomain| *1 (|PolynomialFunctions2| *5 *6)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *2 *7)) (|isDomain| *4 (|Mapping| *2 *8)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|Ring|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|Join| (|SetCategory|) (CATEGORY |domain| (SIGNATURE + ($ $ $)) (SIGNATURE * ($ $ $)) (SIGNATURE ** ($ $ (|NonNegativeInteger|)))))) (|isDomain| *1 (|PolynomialCategoryLifting| *6 *7 *8 *5 *2)) (|ofCategory| *5 (|PolynomialCategory| *8 *6 *7)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|PrimitiveArray| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|PrimitiveArray| *6)) (|isDomain| *1 (|PrimitiveArrayFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Point| *5)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|Point| *6)) (|isDomain| *1 (|PointFunctions2| *5 *6)))) ((*1 *2 *3 *2) (AND (|isDomain| *3 (|Mapping| *2 (|Polynomial| *4))) (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |convert| ((|Symbol|) $)) (SIGNATURE |variable| ((|Union| $ "failed") (|Symbol|)))))) (|isDomain| *1 (|PushVariables| *4 *5 *6 *2)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|IntegralDomain|)) (|ofCategory| *2 (|QuotientFieldCategory| *6)) (|isDomain| *1 (|QuotientFieldCategoryFunctions2| *5 *6 *4 *2)) (|ofCategory| *4 (|QuotientFieldCategory| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *6 (|CommutativeRing|)) (|ofCategory| *2 (|QuaternionCategory| *6)) (|isDomain| *1 (|QuaternionCategoryFunctions2| *4 *5 *2 *6)) (|ofCategory| *4 (|QuaternionCategory| *5)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Queue| *3)))) ((*1 *1 *2 *1 *1) (AND (|isDomain| *2 (|Mapping| *5 *5 *5)) (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *5 *5)) (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *10 *7)) (|ofCategory| *7 (|Ring|)) (|ofCategory| *10 (|Ring|)) (|ofType| *5 (|NonNegativeInteger|)) (|ofType| *6 (|NonNegativeInteger|)) (|ofCategory| *8 (|DirectProductCategory| *6 *7)) (|ofCategory| *9 (|DirectProductCategory| *5 *7)) (|ofCategory| *2 (|RectangularMatrixCategory| *5 *6 *10 *11 *12)) (|isDomain| *1 (|RectangularMatrixCategoryFunctions2| *5 *6 *7 *8 *9 *4 *10 *11 *12 *2)) (|ofCategory| *4 (|RectangularMatrixCategory| *5 *6 *7 *8 *9)) (|ofCategory| *11 (|DirectProductCategory| *6 *10)) (|ofCategory| *12 (|DirectProductCategory| *5 *10)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Segment| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Segment| *6)) (|isDomain| *1 (|SegmentFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Segment| *5)) (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|SegmentFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|SegmentBinding| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|SegmentBinding| *6)) (|isDomain| *1 (|SegmentBindingFunctions2| *5 *6)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *1 (|SegmentExpansionCategory| *4 *2)) (|ofCategory| *4 (|OrderedRing|)) (|ofCategory| *2 (|StreamAggregate| *4)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Stack| *3)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Stream| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Stream| *6)) (|isDomain| *1 (|StreamFunctions2| *5 *6)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|Stream| *6)) (|isDomain| *5 (|Stream| *7)) (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|)) (|isDomain| *2 (|Stream| *8)) (|isDomain| *1 (|StreamFunctions3| *6 *7 *8)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|SparseUnivariatePolynomial| *5)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *6)) (|isDomain| *1 (|SparseUnivariatePolynomialFunctions2| *5 *6)))) ((*1 *1 *2 *1 *1) (AND (|isDomain| *2 (|Mapping| *4 *4 *4)) (|ofCategory| *1 (|TableAggregate| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|UnivariateLaurentSeries| *5 *7 *9)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|)) (|ofType| *7 (|Symbol|)) (|ofType| *9 *5) (|ofType| *10 *6) (|isDomain| *2 (|UnivariateLaurentSeries| *6 *8 *10)) (|isDomain| *1 (|UnivariateLaurentSeriesFunctions2| *5 *6 *7 *8 *9 *10)) (|ofType| *8 (|Symbol|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|UniversalSegment| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|UniversalSegment| *6)) (|isDomain| *1 (|UniversalSegmentFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|UniversalSegment| *5)) (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Stream| *6)) (|isDomain| *1 (|UniversalSegmentFunctions2| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *8 *6)) (|isDomain| *4 (|UnivariatePolynomial| *5 *6)) (|ofType| *5 (|Symbol|)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *8 (|Ring|)) (|isDomain| *2 (|UnivariatePolynomial| *7 *8)) (|isDomain| *1 (|UnivariatePolynomialFunctions2| *5 *6 *7 *8)) (|ofType| *7 (|Symbol|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *6)) (|isDomain| *1 (|UnivariatePolynomialCategoryFunctions2| *5 *4 *6 *2)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|UnivariatePuiseuxSeries| *5 *7 *9)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|)) (|ofType| *7 (|Symbol|)) (|ofType| *9 *5) (|ofType| *10 *6) (|isDomain| *2 (|UnivariatePuiseuxSeries| *6 *8 *10)) (|isDomain| *1 (|UnivariatePuiseuxSeriesFunctions2| *5 *6 *7 *8 *9 *10)) (|ofType| *8 (|Symbol|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *6)) (|isDomain| *1 (|UnivariateTaylorSeriesFunctions2| *5 *6 *4 *2)) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Vector| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Vector| *6)) (|isDomain| *1 (|VectorFunctions2| *5 *6)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *6 "failed") *5)) (|isDomain| *4 (|Vector| *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Vector| *6)) (|isDomain| *1 (|VectorFunctions2| *5 *6)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *1 (|XFreeAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|XPolynomialRing| *3 *4)) (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *2 *3 *3 *3 *3 *4 *5) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp1| F)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagRootFindingPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *2 *1 *3 *4) (AND (|isDomain| *2 (|List| *8)) (|isDomain| *3 (|Mapping| *8 *8 *8)) (|isDomain| *4 (|Mapping| (|Boolean|) *8 *8)) (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SpecialOutputPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *2 *2) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|String|)) (|isDomain| *1 (|QueryEquation|)))) ((*1 *2 *3 *1) (|partial| AND (|isDomain| *2 (|Equation| (|StochasticDifferential| *3))) (|isDomain| *1 (|StochasticDifferential| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))))) ((*1 *2 *1 *3) (|partial| AND (|isDomain| *2 (|Equation| (|StochasticDifferential| *3))) (|isDomain| *1 (|StochasticDifferential| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Segment| *4)) (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|SegmentBinding| *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| (|List| (|SubSpaceComponentProperty|))))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3 *4 *5 *3 *6) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp6| FCN)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagRootFindingPackage|))))) 
(((*1 *1 *1) (|isDomain| *1 (|RoutinesTable|)))) 
(((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *3 (|List| *7)) (|isDomain| *4 (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|) *8)) (|isDomain| *5 (|Vector| *9)) (|isDomain| *6 (|List| (|NonNegativeInteger|))) (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|))) (|ofCategory| *8 (|FiniteAbelianMonoidRing| *7 (|NonNegativeInteger|))) (|ofCategory| *9 (|FiniteAbelianMonoidRing| (|Fraction| *7) (|NonNegativeInteger|))) (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7))) (|isDomain| *1 (|FractionFreeFastGaussianFractions| *7 *8 *9)))) ((*1 *2 *3 *4 *5 *6 *6) (AND (|isDomain| *3 (|List| *7)) (|isDomain| *4 (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|) *8)) (|isDomain| *5 (|Vector| *9)) (|isDomain| *6 (|NonNegativeInteger|)) (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|))) (|ofCategory| *8 (|FiniteAbelianMonoidRing| *7 *6)) (|ofCategory| *9 (|FiniteAbelianMonoidRing| (|Fraction| *7) *6)) (|isDomain| *2 (|Stream| (|Matrix| (|SparseUnivariatePolynomial| *7)))) (|isDomain| *1 (|FractionFreeFastGaussianFractions| *7 *8 *9)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *3 (|List| *7)) (|isDomain| *4 (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|) *8)) (|isDomain| *5 (|Vector| *8)) (|isDomain| *6 (|List| (|NonNegativeInteger|))) (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|))) (|ofCategory| *8 (|AbelianMonoidRing| *7 (|NonNegativeInteger|))) (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7))) (|isDomain| *1 (|FractionFreeFastGaussian| *7 *8)))) ((*1 *2 *3 *4 *5 *6 *6) (AND (|isDomain| *3 (|List| *7)) (|isDomain| *4 (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|) *8)) (|isDomain| *5 (|Vector| *8)) (|isDomain| *6 (|NonNegativeInteger|)) (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|))) (|ofCategory| *8 (|AbelianMonoidRing| *7 *6)) (|isDomain| *2 (|Stream| (|Matrix| (|SparseUnivariatePolynomial| *7)))) (|isDomain| *1 (|FractionFreeFastGaussian| *7 *8))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *1 *1) (|partial| AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4)) (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|QuadraticForm| *2 *3)))) ((*1 *1 *1) (|partial| AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4)) (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4)) (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4)))) ((*1 *1 *1) (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *1 *1) (|partial| AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3)) (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3)) (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3)))) ((*1 *1 *1) (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *1) (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *1) (|partial| |ofCategory| *1 (|MonadWithUnit|))) ((*1 *1 *1) (|partial| |ofCategory| *1 (|Monoid|))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *3))) (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3)))) ((*1 *2 *2 *1) (|partial| AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *3 *2)) (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|))) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *2) (|partial| AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3) (AND (|ofCategory| *1 (|OrdinaryDifferentialEquationsSolverCategory|)) (|isDomain| *3 (|Record| (|:| |xinit| (|DoubleFloat|)) (|:| |xend| (|DoubleFloat|)) (|:| |fn| (|Vector| (|Expression| (|DoubleFloat|)))) (|:| |yinit| (|List| (|DoubleFloat|))) (|:| |intvals| (|List| (|DoubleFloat|))) (|:| |g| (|Expression| (|DoubleFloat|))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Result|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *7)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Record| (|:| |particular| (|Union| (|Vector| (|Fraction| *8)) "failed")) (|:| |basis| (|List| (|Vector| (|Fraction| *8)))))) (|isDomain| *1 (|LinearSystemPolynomialPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *5 (|List| (|List| (|Union| (|:| |array| *6) (|:| |scalar| *3))))) (|isDomain| *4 (|List| (|Union| (|:| |array| (|List| *3)) (|:| |scalar| (|Symbol|))))) (|isDomain| *6 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|FortranPackage|)))) ((*1 *2 *3 *4 *5 *6 *3) (AND (|isDomain| *5 (|List| (|List| (|Union| (|:| |array| *6) (|:| |scalar| *3))))) (|isDomain| *4 (|List| (|Union| (|:| |array| (|List| *3)) (|:| |scalar| (|Symbol|))))) (|isDomain| *6 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|FortranPackage|)))) ((*1 *2 *3 *4 *5 *4) (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|TheSymbolTable|)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|FortranPackage|))))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3) (AND (|ofType| *4 (|List| (|Symbol|))) (|ofType| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|List| (|PolynomialIdeals| (|Fraction| (|Integer|)) (|DirectProduct| *5 (|NonNegativeInteger|)) (|OrderedVariableList| *4) (|DistributedMultivariatePolynomial| *4 (|Fraction| (|Integer|)))))) (|isDomain| *1 (|IdealDecompositionPackage| *4 *5)) (|isDomain| *3 (|PolynomialIdeals| (|Fraction| (|Integer|)) (|DirectProduct| *5 (|NonNegativeInteger|)) (|OrderedVariableList| *4) (|DistributedMultivariatePolynomial| *4 (|Fraction| (|Integer|)))))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| (|Matrix| *4))) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Vector| (|Matrix| (|Polynomial| *4)))) (|isDomain| *1 (|CoerceVectorMatrixPackage| *4))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| *13)) (|ofCategory| *13 (|DesingTreeCategory| *12)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *11 *14)) (|ofCategory| *14 (|BlowUpMethodCategory|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) *2)) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|DivisorCategory| *10)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|DesingTreePackage| *4 *5 *6 *7 *8 *9 *10 *11 *12 *13 *14))))) 
(((*1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *3 *1) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|)) (|isDomain| *2 (|List| *1)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Record| (|:| |zeros| (|List| *4)) (|:| |extDegree| (|Integer|)))) (|isDomain| *1 (|RootsFindingPackage| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|SparseUnivariatePolynomial| (|Polynomial| *4)) (|Polynomial| *4))) (|isDomain| *1 (|WeierstrassPreparation| *4)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *3 *4 *3 *5) (AND (|ofCategory| *6 (|Field|)) (|ofType| *7 (|List| (|Symbol|))) (|ofCategory| *8 (|DirectProductCategory| (|#| *7) (|NonNegativeInteger|))) (|ofCategory| *9 (|LocalPowerSeriesCategory| *6)) (|isDomain| *2 (|Record| (|:| |fnc| *3) (|:| |crv| *3) (|:| |chart| (|List| (|Integer|))))) (|isDomain| *1 (|LocalParametrizationOfSimplePointPackage| *6 *7 *3 *8 *4 *9 *10)) (|isDomain| *5 (|Integer|)) (|ofCategory| *3 (|PolynomialCategory| *6 *8 (|OrderedVariableList| *7))) (|ofCategory| *4 (|ProjectiveSpaceCategory| *6)) (|ofCategory| *10 (|PlacesCategory| *6 *9))))) 
(((*1 *1) (|ofCategory| *1 (|FiniteFieldCategory|))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|FunctionSpace| *4)) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|CharacteristicZero|))) (|isDomain| *2 (|Record| (|:| |primelt| *5) (|:| |poly| (|List| (|SparseUnivariatePolynomial| *5))) (|:| |prim| (|SparseUnivariatePolynomial| *5)))) (|isDomain| *1 (|FunctionSpacePrimitiveElement| *4 *5)))) ((*1 *2 *3 *3) (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|CharacteristicZero|))) (|isDomain| *2 (|Record| (|:| |primelt| *3) (|:| |pol1| (|SparseUnivariatePolynomial| *3)) (|:| |pol2| (|SparseUnivariatePolynomial| *3)) (|:| |prim| (|SparseUnivariatePolynomial| *3)))) (|isDomain| *1 (|FunctionSpacePrimitiveElement| *4 *3)) (|ofCategory| *3 (|AlgebraicallyClosedField|)) (|ofCategory| *3 (|FunctionSpace| *4)))) ((*1 *2 *3 *4 *3 *4) (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|))) (|isDomain| *2 (|Record| (|:| |coef1| (|Integer|)) (|:| |coef2| (|Integer|)) (|:| |prim| (|SparseUnivariatePolynomial| *5)))) (|isDomain| *1 (|PrimitiveElement| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|))) (|isDomain| *2 (|Record| (|:| |coef| (|List| (|Integer|))) (|:| |poly| (|List| (|SparseUnivariatePolynomial| *5))) (|:| |prim| (|SparseUnivariatePolynomial| *5)))) (|isDomain| *1 (|PrimitiveElement| *5)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|List| (|Polynomial| *6))) (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Symbol|)) (|ofCategory| *6 (|Join| (|Field|) (|CharacteristicZero|))) (|isDomain| *2 (|Record| (|:| |coef| (|List| (|Integer|))) (|:| |poly| (|List| (|SparseUnivariatePolynomial| *6))) (|:| |prim| (|SparseUnivariatePolynomial| *6)))) (|isDomain| *1 (|PrimitiveElement| *6))))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|RegularChain| *4 *5)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6)) (|ofType| *6 (|List| (|Symbol|))))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7)) (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7)) (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Polynomial| *4))) (|ofCategory| *4 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|)))) ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2 *2 *2 *3) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|PseudoRemainderSequence| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|))) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|))) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|ScriptFormulaFormat|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Expression| (|DoubleFloat|)))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|e04AgentsPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Expression| (|DoubleFloat|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|e04AgentsPackage|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|BrillhartTests| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|BrillhartTests| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerRetractions| *3)) (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *3 *4 *5 *5) (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8)) (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4)))) (|isDomain| *1 (|RegularTriangularSetGcdPackage| *6 *7 *8 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9)))) (|isDomain| *5 (|Boolean|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *6 *7 *4)) (|ofCategory| *9 (|RegularTriangularSetCategory| *6 *7 *4 *8)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|List| (|Record| (|:| |val| *8) (|:| |tower| *9)))) (|isDomain| *1 (|RegularTriangularSetGcdPackage| *6 *7 *4 *8 *9))))) 
(((*1 *1) (|isDomain| *1 (|Boolean|)))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|NAGLinkSupportPackage|))))) 
(((*1 *2 *2 *3) (|partial| AND (|isDomain| *3 (|List| (|Record| (|:| |func| *2) (|:| |pole| (|Boolean|))))) (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|RadicalCategory|))) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *4 *2))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|QuotientFieldCategory| *4)) (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4))) (|isDomain| *1 (|CommonDenominator| *4 *5 *3)) (|ofCategory| *3 (|FiniteLinearAggregate| *5)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|QuotientFieldCategory| *4)) (|isDomain| *2 (|Record| (|:| |num| *6) (|:| |den| *4))) (|isDomain| *1 (|InnerCommonDenominator| *4 *5 *6 *3)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|ofCategory| *3 (|FiniteLinearAggregate| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| *5)) (|ofCategory| *5 (|QuotientFieldCategory| *4)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |num| (|Matrix| *4)) (|:| |den| *4))) (|isDomain| *1 (|MatrixCommonDenominator| *4 *5)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|Record| (|:| |eq| *7) (|:| |rh| (|List| (|Fraction| *6))))) (|isDomain| *1 (|PrimitiveRatDE| *5 *6 *7 *3)) (|isDomain| *4 (|List| (|Fraction| *6))) (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| (|Fraction| *6))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|QuotientFieldCategory| *4)) (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4))) (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *4 *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|EuclideanDomain|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *2 (|Record| (|:| |Smith| *3) (|:| |leftEqMat| *3) (|:| |rightEqMat| *3))) (|isDomain| *1 (|SmithNormalForm| *4 *5 *6 *3)) (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Record| (|:| |num| (|Vector| *4)) (|:| |den| *4)))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *3 *4 *2) (AND (|isDomain| *2 (|PatternMatchResult| *5 *3)) (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *3 (|ComplexCategory| *6)) (|ofCategory| (|Polynomial| *6) (|PatternMatchable| *5)) (|ofCategory| *6 (|Join| (|PatternMatchable| *5) (|CommutativeRing|))) (|isDomain| *1 (|ComplexPatternMatch| *5 *6 *3)))) ((*1 *2 *1 *3 *2) (AND (|isDomain| *2 (|PatternMatchResult| *4 *1)) (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *1 (|PatternMatchable| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *2 (|PatternMatchResult| *5 *6)) (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Join| (|SetCategory|) (|RetractableTo| *3))) (|ofCategory| *3 (|PatternMatchable| *5)) (|isDomain| *1 (|PatternMatchPushDown| *5 *3 *6)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *2 (|PatternMatchResult| *5 *3)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *3 (|Join| (|FunctionSpace| *6) (|ConvertibleTo| *4) (|PatternMatchable| *5) (|RetractableTo| (|Kernel| $)))) (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *6 (|Join| (|IntegralDomain|) (|OrderedSet|) (|PatternMatchable| *5))) (|isDomain| *1 (|PatternMatchFunctionSpace| *5 *6 *3)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *2 (|PatternMatchResult| (|Integer|) *3)) (|isDomain| *4 (|Pattern| (|Integer|))) (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *1 (|PatternMatchIntegerNumberSystem| *3)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *2 (|PatternMatchResult| *5 *6)) (|isDomain| *3 (|Kernel| *6)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|RetractableTo| (|Kernel| $)) (|ConvertibleTo| *4) (|PatternMatchable| *5))) (|isDomain| *4 (|Pattern| *5)) (|isDomain| *1 (|PatternMatchKernel| *5 *6)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *2 (|PatternMatchListResult| *5 *6 *3)) (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|PatternMatchable| *5)) (|ofCategory| *3 (|ListAggregate| *6)) (|isDomain| *1 (|PatternMatchListAggregate| *5 *6 *3)))) ((*1 *2 *3 *4 *2 *5) (AND (|isDomain| *5 (|Mapping| (|PatternMatchResult| *6 *3) *8 (|Pattern| *6) (|PatternMatchResult| *6 *3))) (|ofCategory| *8 (|OrderedSet|)) (|isDomain| *2 (|PatternMatchResult| *6 *3)) (|isDomain| *4 (|Pattern| *6)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *3 (|Join| (|PolynomialCategory| *9 *7 *8) (|ConvertibleTo| *4))) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *9 (|Join| (|Ring|) (|OrderedSet|) (|PatternMatchable| *6))) (|isDomain| *1 (|PatternMatchPolynomialCategory| *6 *7 *8 *9 *3)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *2 (|PatternMatchResult| *5 *3)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *3 (|Join| (|PolynomialCategory| *8 *6 *7) (|ConvertibleTo| *4))) (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *7 (|PatternMatchable| *5)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|Join| (|Ring|) (|OrderedSet|) (|PatternMatchable| *5))) (|isDomain| *1 (|PatternMatchPolynomialCategory| *5 *6 *7 *8 *3)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *2 (|PatternMatchResult| *5 *3)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *3 (|QuotientFieldCategory| *6)) (|ofCategory| *6 (|Join| (|IntegralDomain|) (|PatternMatchable| *5) (|ConvertibleTo| *4))) (|isDomain| *4 (|Pattern| *5)) (|isDomain| *1 (|PatternMatchQuotientFieldCategory| *5 *6 *3)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *2 (|PatternMatchResult| *5 (|Symbol|))) (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|)) (|isDomain| *1 (|PatternMatchSymbol| *5)))) ((*1 *2 *3 *4 *5 *2 *6) (AND (|isDomain| *4 (|List| (|Pattern| *7))) (|isDomain| *5 (|Mapping| *9 (|List| *9))) (|isDomain| *6 (|Mapping| (|PatternMatchResult| *7 *9) *9 (|Pattern| *7) (|PatternMatchResult| *7 *9))) (|ofCategory| *7 (|SetCategory|)) (|ofCategory| *9 (|Join| (|Ring|) (|ConvertibleTo| (|Pattern| *7)) (|RetractableTo| *8))) (|isDomain| *2 (|PatternMatchResult| *7 *9)) (|isDomain| *3 (|List| *9)) (|ofCategory| *8 (|Join| (|Ring|) (|OrderedSet|))) (|isDomain| *1 (|PatternMatchTools| *7 *8 *9))))) 
(((*1 *2 *1) (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)) (|isDomain| *1 (|SimpleCell| *3 *2)) (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Record| (|:| |rank| (|NonNegativeInteger|)) (|:| |eqns| (|List| (|Record| (|:| |det| *7) (|:| |rows| (|List| (|Integer|))) (|:| |cols| (|List| (|Integer|)))))) (|:| |fgb| (|List| *7))))) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5)) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *3 *4 *5 *5 *6) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *6 (|Boolean|)) (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|ofCategory| *3 (|Join| (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|) (|AlgebraicallyClosedFunctionSpace| *7))) (|isDomain| *2 (|Union| (|:| |f1| (|OrderedCompletion| *3)) (|:| |f2| (|List| (|OrderedCompletion| *3))) (|:| |fail| "failed") (|:| |pole| "potentialPole"))) (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *7 *3)) (|isDomain| *5 (|OrderedCompletion| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Character|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1 *1 *2) (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DoubleFloat|)))) ((*1 *1 *1 *1) (OR (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Type|))) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Group|)) (|ofCategory| *2 (|Type|))))) ((*1 *1 *1 *1) (|ofCategory| *1 (|Field|))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Float|)))) ((*1 *1 *2 *2) (AND (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1))) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *1 (|FunctionSpace| *3)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|Group|))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3)))) ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|))) ((*1 *1 *2 *3) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *1 (|LocalAlgebra| *2 *4 *3)) (|ofCategory| *2 (|Algebra| *4)) (|ofCategory| *3 (|SubsetCategory| (|Monoid|) *4)))) ((*1 *1 *1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *1 (|LocalAlgebra| *3 *4 *2)) (|ofCategory| *3 (|Algebra| *4)) (|ofCategory| *2 (|SubsetCategory| (|Monoid|) *4)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|LieAlgebra| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *2 *3) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *2 *4 *3)) (|ofCategory| *2 (|Module| *4)) (|ofCategory| *3 (|SubsetCategory| (|Monoid|) *4)))) ((*1 *1 *1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *3 *4 *2)) (|ofCategory| *3 (|Module| *4)) (|ofCategory| *2 (|SubsetCategory| (|Monoid|) *4)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Mapping| (|Expression| (|Integer|)) *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|MappingPackage4| *3 *4)) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|MyExpression| *2 *3)) (|ofType| *2 (|Symbol|)) (|ofCategory| *3 (|Join| (|Ring|) (|OrderedSet|) (|IntegralDomain|))))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1 *1) (|partial| AND (|isDomain| *1 (|OrdinaryWeightedPolynomials| *2 *3 *4 *5)) (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|NonNegativeInteger|))) (|ofType| *5 (|NonNegativeInteger|)))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2 *2) (AND (|ofCategory| *1 (|QuotientFieldCategory| *2)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *2 *5 *6)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *4 *2)) (|ofCategory| *6 (|DirectProductCategory| *3 *2)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Expression| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|StochasticDifferential| *3)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|VectorSpace| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *1 *1) (|partial| AND (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *3)) (|isDomain| *1 (|WeightedPolynomials| *2 *3 *4 *5 *6 *7 *8)) (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3)) (|ofType| *7 (|List| (|NonNegativeInteger|))) (|ofType| *8 (|NonNegativeInteger|)))) ((*1 *1 *1 *2) (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3)) (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3))))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Vector| *1)) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Vector| *1)) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *1 (|FramedAlgebra| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|AbelianGroup|))) ((*1 *1 *1) (|ofCategory| *1 (|AbelianGroup|))) ((*1 *1 *1 *1) (|partial| |isDomain| *1 (|CardinalNumber|))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|Database| *2)) (|ofCategory| *2 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |elt| ((|String|) $ (|Symbol|))) (SIGNATURE |display| ((|Void|) $)) (SIGNATURE |fullDisplay| ((|Void|) $))))))) ((*1 *1 *1 *2) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|GradedModule| *2 *3)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|GradedModule| *2 *3)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Mapping| *4 *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|MappingPackage4| *3 *4)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *2 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *3)) (|isDomain| *2 (|Divisor| *1)) (|ofCategory| *1 (|PlacesCategory| *3 *4)))) ((*1 *2 *1 *2) (AND (|isDomain| *2 (|Divisor| *1)) (|ofCategory| *1 (|PlacesCategory| *3 *4)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *3)))) ((*1 *2 *2 *1) (AND (|isDomain| *2 (|Divisor| *1)) (|ofCategory| *1 (|PlacesCategory| *3 *4)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *3)))) ((*1 *2 *1 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *3)) (|isDomain| *2 (|Divisor| *1)) (|ofCategory| *1 (|PlacesCategory| *3 *4)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Point| (|DoubleFloat|))) (|isDomain| *1 (|TubePlotTools|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|AbelianGroup|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|PatternMatchResult| *4 *5)) (|isDomain| *3 (|PatternMatchResult| *4 *6)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|ListAggregate| *5)) (|isDomain| *1 (|PatternMatchListResult| *4 *5 *6))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DesingTree| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DesingTree| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InfClsPt| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InfClsPt| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InfinitlyClosePointOverPseudoAlgebraicClosureOfFiniteField| *3 *4 *5)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InfinitlyClosePointOverPseudoAlgebraicClosureOfFiniteField| *3 *4 *5)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InfinitlyClosePoint| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|isDomain| *1 (|InfinitlyClosePoint| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|PseudoAlgebraicClosureOfAlgExtOfRationalNumber| *3)) (|ofType| *3 (|PseudoAlgebraicClosureOfRationalNumber|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|PseudoAlgebraicClosureOfFiniteField| *3)) (|ofCategory| *3 (|FiniteFieldCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|)) (|isDomain| *2 (|OutputForm|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|PseudoAlgebraicClosureOfRationalNumber|))))) 
(((*1 *1 *1) (|partial| |ofCategory| *1 (|CharacteristicNonZero|))) ((*1 *1 *1) (|ofCategory| *1 (|FiniteFieldCategory|))) ((*1 *1 *1) (|partial| AND (|ofCategory| *1 (|CharacteristicNonZero|)) (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|AbelianSemiGroup|))) ((*1 *1 *1 *1) (|isDomain| *1 (|Color|))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|Database| *2)) (|ofCategory| *2 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |elt| ((|String|) $ (|Symbol|))) (SIGNATURE |display| ((|Void|) $)) (SIGNATURE |fullDisplay| ((|Void|) $))))))) ((*1 *1 *1 *2) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianSemiGroup|)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianSemiGroup|)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *2 *3)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|CancellationAbelianMonoid|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|))) (|isDomain| *1 (|FullPartialFractionExpansion| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|GradedModule| *2 *3)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *2 (|Field|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|PolynomialIdeals| *2 *3 *4 *5)) (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4)))) ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Mapping| *4 *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|MappingPackage4| *3 *4)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1 *2) (AND (|isDomain| *2 (|Divisor| *1)) (|ofCategory| *1 (|PlacesCategory| *3 *4)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *3)))) ((*1 *2 *2 *1) (AND (|isDomain| *2 (|Divisor| *1)) (|ofCategory| *1 (|PlacesCategory| *3 *4)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *3)))) ((*1 *2 *1 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *3)) (|isDomain| *2 (|Divisor| *1)) (|ofCategory| *1 (|PlacesCategory| *3 *4)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Point| (|DoubleFloat|))) (|isDomain| *1 (|TubePlotTools|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|AbelianSemiGroup|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| *7)) (|ofCategory| *7 (|PolynomialCategory| *5 *8 (|OrderedVariableList| *6))) (|ofCategory| *8 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *10 (|LocalPowerSeriesCategory| *5)) (|ofCategory| *11 (|PlacesCategory| *5 *10)) (|isDomain| *2 (|List| (|Vector| *5))) (|isDomain| *1 (|InterpolateFormsPackage| *5 *6 *7 *8 *9 *10 *11 *3)) (|ofCategory| *9 (|ProjectiveSpaceCategory| *5)) (|ofCategory| *3 (|DivisorCategory| *11))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|LocalPowerSeriesCategory| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4))) (|ofCategory| *4 (|RealClosedField|)) (|isDomain| *2 (|List| (|Polynomial| *4))) (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|List| (|List| *7))) (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7)) (|isDomain| *3 (|List| *7)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|List| *8))) (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8)) (|isDomain| *3 (|List| *8))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Kernel| *5)) (|ofCategory| *5 (|FunctionSpace| *4)) (|ofCategory| *4 (|RetractableTo| (|Integer|))) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *2 (|SparseUnivariatePolynomial| *5)) (|isDomain| *1 (|AlgebraicFunction| *4 *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Kernel| *1)) (|ofCategory| *1 (|Ring|)) (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *1))))) 
(((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|CyclicStreamTools| *3 *2)) (|ofCategory| *2 (|LazyStreamAggregate| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Vector| (|Record| (|:| |scaleX| (|DoubleFloat|)) (|:| |scaleY| (|DoubleFloat|)) (|:| |deltaX| (|DoubleFloat|)) (|:| |deltaY| (|DoubleFloat|)) (|:| |points| (|Integer|)) (|:| |connect| (|Integer|)) (|:| |spline| (|Integer|)) (|:| |axes| (|Integer|)) (|:| |axesColor| (|Palette|)) (|:| |units| (|Integer|)) (|:| |unitsColor| (|Palette|)) (|:| |showing| (|Integer|))))) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|PAdicIntegerCategory| *2)))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3 *3 *3 *4 *3 *5 *5 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagPartialDifferentialEquationsPackage|))))) 
(((*1 *2 *3 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4)))) (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3) (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5)) (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3))) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *5 *5) (AND (|isDomain| *4 (|List| *10)) (|isDomain| *5 (|Boolean|)) (|ofCategory| *10 (|RegularTriangularSetCategory| *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8)) (|isDomain| *2 (|List| (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *10) (|:| |ineq| (|List| *9))))) (|isDomain| *1 (|QuasiComponentPackage| *6 *7 *8 *9 *10)) (|isDomain| *3 (|List| *9)))) ((*1 *2 *3 *4 *5 *5) (AND (|isDomain| *4 (|List| *10)) (|isDomain| *5 (|Boolean|)) (|ofCategory| *10 (|RegularTriangularSetCategory| *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8)) (|isDomain| *2 (|List| (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *10) (|:| |ineq| (|List| *9))))) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *6 *7 *8 *9 *10)) (|isDomain| *3 (|List| *9))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|NAGLinkSupportPackage|))))) 
(((*1 *2 *2 *3 *4 *5) (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|Mapping| (|Boolean|) *9)) (|isDomain| *4 (|Mapping| (|Boolean|) *9 *9)) (|isDomain| *5 (|Mapping| *9 *9 *9)) (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8)) (|ofCategory| *6 (|IntegralDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *6 *7 *8 *9))))) 
(((*1 *2 *3 *3 *3 *3 *4 *4 *4 *5 *4 *6 *7) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|String|)) (|isDomain| *6 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp73| PDEF)))) (|isDomain| *7 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp74| BNDY)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagPartialDifferentialEquationsPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|DivisorCategory| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|ArrayStack| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Heap| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Queue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Stack| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *2 *5)) (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *2 (|FiniteLinearAggregate| *4)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *6 *2 *7)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|DirectProductCategory| *4 *6)) (|ofCategory| *2 (|DirectProductCategory| *5 *6)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Record| (|:| |Indices| (|List| *4)) (|:| |Entries| (|List| *5)))) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3 *3 *4 *4 *5 *5 *3 *3 *4 *4 *5 *5 *3 *3 *4 *4 *5 *5 *3 *4 *4 *4 *6 *4) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|ThreeDimensionalMatrix| (|DoubleFloat|))) (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagPartialDifferentialEquationsPackage|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|ViewDefaultsPackage|)))) ((*1 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Point| *4)) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|BalancedBinaryTree| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *4) (|partial| AND (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *3 (|PolynomialCategory| *2 *6 (|OrderedVariableList| *5))) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *2)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *2)) (|ofCategory| *4 (|PlacesCategory| *2 *8)) (|ofCategory| *9 (|DivisorCategory| *4)) (|ofCategory| *10 (|InfinitlyClosePointCategory| *2 *5 *3 *6 *7 *8 *4 *9 *12)) (|ofCategory| *12 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *2 *5 *3 *6 *7 *8 *4 *9 *10 *11 *12)) (|ofCategory| *11 (|DesingTreeCategory| *10)))) ((*1 *2 *3 *3 *4) (|partial| AND (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *3 (|PolynomialCategory| *2 *6 (|OrderedVariableList| *5))) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *2)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *2)) (|ofCategory| *4 (|PlacesCategory| *2 *8)) (|ofCategory| *9 (|DivisorCategory| *4)) (|ofCategory| *10 (|InfinitlyClosePointCategory| *2 *5 *3 *6 *7 *8 *4 *9 *12)) (|ofCategory| *12 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *2 *5 *3 *6 *7 *8 *4 *9 *10 *11 *12)) (|ofCategory| *11 (|DesingTreeCategory| *10)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Fraction| *6)) (|ofCategory| *6 (|PolynomialCategory| *2 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *2)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *2)) (|ofCategory| *4 (|PlacesCategory| *2 *9)) (|ofCategory| *10 (|DivisorCategory| *4)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *2 *5 *6 *7 *8 *9 *4 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *2 *5 *6 *7 *8 *9 *4 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *5 *2)) (|isDomain| *4 (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *2)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|FiniteFieldCategory|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *2 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *3 *4) (|partial| AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *5 *2)) (|isDomain| *4 (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *2)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|FiniteFieldCategory|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *2 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Fraction| (|DistributedMultivariatePolynomial| *5 *2))) (|isDomain| *4 (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *2)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|FiniteFieldCategory|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *2 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *5 *2)) (|isDomain| *4 (|Places| *2)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *2 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *3 *4) (|partial| AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *5 *2)) (|isDomain| *4 (|Places| *2)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *2 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Fraction| (|DistributedMultivariatePolynomial| *5 *2))) (|isDomain| *4 (|Places| *2)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *2 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|PermutationCategory| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|SetAggregate| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|HeuGcd| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|FiniteFieldFactorization| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|FiniteFieldFactorizationWithSizeParseBySideEffect| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|)))) (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Integer|)) (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *6 *2)) (|ofCategory| *6 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |key| *3) (|:| |entry| *4)))) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|TableAggregate| *3 *4)))) ((*1 *1) (AND (|ofCategory| *1 (|TableAggregate| *2 *3)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2) (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2)) (|ofCategory| *2 (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2 *2 *2) (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2)) (|ofCategory| *2 (|Join| (|Field|) (|TranscendentalFunctionCategory|))))) ((*1 *2 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *7 (|NonNegativeInteger|))) (|ofType| *7 (|NonNegativeInteger|)) (|isDomain| *1 (|PackageForPoly| *5 *2 *6 *7)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *5 *6)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|isDomain| *1 (|PackageForPoly| *4 *2 *5 *6)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *4 *5)))) ((*1 *2 *1 *3 *4 *4) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Complex| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|StreamAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |coef2| *3) (|:| |resultantReduit| *4))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1 *1 *3) (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ArrayStack| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|BasicType|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2 *2) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Heap| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Queue| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Reference| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stack| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Table| (|Symbol|) (|BasicStochasticDifferential|))) (|isDomain| *1 (|BasicStochasticDifferential|))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3))) (|isDomain| *1 (|PseudoRemainderSequence| *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *7 (|PolynomialCategory| *3 *5 *6)) (|isDomain| *2 (|Record| (|:| |exponent| (|NonNegativeInteger|)) (|:| |coef| *8) (|:| |radicand| *8))) (|isDomain| *1 (|PolynomialRoots| *5 *6 *3 *7 *8)) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *8 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE |numer| (*7 $)) (SIGNATURE |denom| (*7 $)) (SIGNATURE |coerce| ($ *7)))))))) 
(((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Union| "left" "center" "right" "vertical" "horizontal")) (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|DirectProductCategory| *8 (|NonNegativeInteger|))) (|ofType| *8 (|NonNegativeInteger|)) (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|NewtonPolygon| *6 *3 *7 *8)) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *6 *7))))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Tableau| (|List| *4))) (|isDomain| *1 (|TableauxBumpers| *4)) (|isDomain| *3 (|List| *4))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |lcmfij| *4) (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6) (|:| |polj| *6)))) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|LinearlyExplicitRingOver| (|Integer|))) (|isDomain| *2 (|Vector| (|Integer|))) (|isDomain| *1 (|IntegerLinearDependence| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Expression| (|DoubleFloat|))) (|isDomain| *2 (|Expression| (|Float|))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Stream| (|Fraction| *3))) (|isDomain| *1 (|ContinuedFraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5)) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Polynomial| *4))) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|DivisorCategory| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stream| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|PatternFunctions1| *4 *5)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|IntegralDomain|) (|CharacteristicZero|))) (|isDomain| *1 (|InfiniteProductCharacteristicZero| *3 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|Field|) (|Finite|) (|ConvertibleTo| (|Integer|)))) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|MonogenicAlgebra| *3 *4)) (|isDomain| *1 (|InfiniteProductFiniteField| *3 *4 *5 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|Field|) (|Finite|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *1 (|InfiniteProductPrimeField| *3 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Join| (|IntegralDomain|) (|CharacteristicZero|))) (|isDomain| *1 (|StreamInfiniteProduct| *3))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2) (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *2)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *2)))) ((*1 *2) (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|d01AgentsPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|ExpertSystemContinuityPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *3 *4 *2 *2 *2 *5) (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *5 (|List| *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *6) (|AbelianMonoid|) (|RetractableTo| (|Integer|)) (|RetractableTo| *4) (|PartialDifferentialRing| *4) (|CombinatorialOpsCategory|))) (|isDomain| *4 (|Symbol|)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *1 (|RecurrenceOperator| *6 *2))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|Matrix| *7)) (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5)) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|))))) 
(((*1 *2 *2 *3 *3) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Vector| (|Expression| (|DoubleFloat|)))) (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Matrix| (|Expression| (|DoubleFloat|)))) (|isDomain| *1 (|d02AgentsPackage|)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|PartialDifferentialRing| *5)) (|isDomain| *2 (|Matrix| *6)) (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *6 *3 *4)) (|ofCategory| *3 (|FiniteLinearAggregate| *6)) (|ofCategory| *4 (|Join| (|FiniteLinearAggregate| *5) (CATEGORY |package| (ATTRIBUTE |finiteAggregate|))))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|UniversalSegment| (|Integer|))) (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3) (AND (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|Record| (|:| |glbase| (|List| (|DistributedMultivariatePolynomial| *4 *5))) (|:| |glval| (|List| (|Integer|))))) (|isDomain| *1 (|LinGroebnerPackage| *4 *5)) (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *4 *5)))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|LinearSystemFromPowerSeriesPackage| *5 *3)) (|ofCategory| *3 (|LocalPowerSeriesCategory| *5))))) 
(((*1 *2 *3 *3) (|partial| AND (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Record| (|:| |ratpart| (|Fraction| *5)) (|:| |coeff| (|Fraction| *5)))) (|isDomain| *1 (|RationalIntegration| *4 *5)) (|isDomain| *3 (|Fraction| *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Record| (|:| |deg| (|NonNegativeInteger|)) (|:| |prod| *5)))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|DistinctDegreeFactorize| *4 *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Record| (|:| |factor| *5) (|:| |degree| (|Integer|))))) (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *5))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Record| (|:| |coef| *3) (|:| |gap| (|NonNegativeInteger|)) (|:| |quotient| (|NewSparseUnivariatePolynomial| *3)) (|:| |remainder| (|NewSparseUnivariatePolynomial| *3)))) (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1 *1 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|)) (|:| |quotient| *1) (|:| |remainder| *1))) (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *3)))) ((*1 *2 *1 *1) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|)) (|:| |quotient| *1) (|:| |remainder| *1))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|HTMLFormat|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|MathMLFormat|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|AffineSpaceCategory| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ProjectiveSpaceCategory| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))) (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) (|Symbol|))) (|:| A (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|AlgebraicNumber|)) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) (|Symbol|) (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|AlgebraicNumber|)) (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))) (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) *3)) (|:| A (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|AlgebraicNumber|)) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) *3 (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|AlgebraicNumber|)) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| *4)) (|UnivariateFormalPowerSeries| *4))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) (|Symbol|))) (|:| A (|Mapping| *4 (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| *4))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| *4) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) (|Symbol|) (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *4)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| *4)) (|UnivariateFormalPowerSeries| *4))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) *3)) (|:| A (|Mapping| *4 (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| *4))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| *4) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) *3 (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessFinite| *4)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|Fraction| (|Integer|)))) (|UnivariateFormalPowerSeries| (|Fraction| (|Integer|))))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) (|Symbol|))) (|:| A (|Mapping| (|Integer|) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|Integer|)))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) (|Symbol|) (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|Integer|)) (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3)) (|ofCategory| (|Integer|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|Fraction| (|Integer|)))) (|UnivariateFormalPowerSeries| (|Fraction| (|Integer|))))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) *3)) (|:| A (|Mapping| (|Integer|) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|Integer|)))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) *3 (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|Integer|)) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| *4)) (|UnivariateFormalPowerSeries| *4))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|))) (|:| A (|Mapping| *5 (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| *5))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| *4) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| AX (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6)) (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))) (|ofType| *9 (|Mapping| *6 *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| *4)) (|UnivariateFormalPowerSeries| *4))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| |exprStream| (|Mapping| (|Stream| *6) *6 *3)) (|:| A (|Mapping| *5 (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| *5))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| *4) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| AX (|Mapping| *6 (|NonNegativeInteger|) *3 *6)) (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| *3) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| *3) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))) (|ofType| *9 (|Mapping| *6 *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|Fraction| (|Polynomial| (|Integer|))))) (|UnivariateFormalPowerSeries| (|Fraction| (|Polynomial| (|Integer|)))))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|)))))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|))))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) (|Symbol|))) (|:| A (|Mapping| (|Polynomial| (|Integer|)) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|)))) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|))))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) (|Symbol|) (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|Polynomial| (|Integer|))) (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3)) (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|Fraction| (|Polynomial| (|Integer|))))) (|UnivariateFormalPowerSeries| (|Fraction| (|Polynomial| (|Integer|)))))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|)))))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|))))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) *3)) (|:| A (|Mapping| (|Polynomial| (|Integer|)) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|)))) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|))))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) *3 (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|Polynomial| (|Integer|))) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 HPSPEC) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)) (|ofType| *4 (|Symbol|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| HPSPEC (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)) (|ofType| *4 *3)))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3 *4 *5) (AND (|isDomain| *3 (|List| (|Polynomial| *6))) (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|List| (|List| *7))) (|isDomain| *1 (|InnerNumericFloatSolvePackage| *6 *7 *5)) (|ofCategory| *7 (|Field|)) (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|UnivariatePolynomial| *5 *4)) (|ofCategory| *4 (|OrderedIntegralDomain|)) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|SturmHabichtPackage| *4 *5))))) 
(((*1 *1 *2 *3 *4) (AND (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *4 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofType| *6 (|Mapping| (|Boolean|) (|Record| (|:| |index| *3) (|:| |exponent| *4)) (|Record| (|:| |index| *3) (|:| |exponent| *4)))) (|isDomain| *1 (|GeneralModulePolynomial| *5 *2 *3 *4 *6 *7)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *7 (|PolynomialCategory| *2 *4 (|OrderedVariableList| *5)))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|IntegerFactorizationPackage| *3)) (|ofCategory| *3 (|IntegerNumberSystem|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| *6 *4 *5)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7))) (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7)) (|isDomain| *3 (|SparseUnivariatePolynomial| *7)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Factored| *1)) (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|PolynomialSquareFree| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| (|Fraction| *7)))) (|isDomain| *1 (|SupFractionFactorizer| *4 *5 *6 *7)) (|isDomain| *3 (|SparseUnivariatePolynomial| (|Fraction| *7))))) ((*1 *2 *1) (AND (|isDomain| *2 (|Factored| *1)) (|ofCategory| *1 (|UniqueFactorizationDomain|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|UnivariatePolynomialSquareFree| *4 *3)) (|ofCategory| *3 (|Join| (|UnivariatePolynomialCategory| *4) (|IntegralDomain|) (CATEGORY |domain| (SIGNATURE |gcd| ($ $ $))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|RegularChain| *4 *5)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *4 (|IndexedExponents| (|OrderedVariableList| *6)) (|OrderedVariableList| *6) (|NewSparseMultivariatePolynomial| *4 (|OrderedVariableList| *6))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6)) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Record| (|:| |polyPart| (|LaurentPolynomial| *4 *5)) (|:| |fracPart| (|Fraction| *5)))) (|isDomain| *1 (|LaurentPolynomial| *4 *5)) (|isDomain| *3 (|Fraction| *5)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4))) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Record| (|:| |primePart| *1) (|:| |commonPart| *1))) (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *1) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|GraphImage|)) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *1 *1) (|isDomain| *1 (|TwoDimensionalViewport|)))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Join| (|Ring|) (|PatternMatchable| *3) (|OrderedSet|) (|ConvertibleTo| (|Pattern| *3)))) (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|RewriteRule| *3 *4 *5)) (|ofCategory| *5 (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3) (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *2 *1) (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ContinuedFraction| *3)) (|ofCategory| *3 (|EuclideanDomain|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3)) (|isDomain| *2 (|Integer|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|PointCategory| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7)) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)))) ((*1 *2 *3 *1) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Join| (|Ring|) (|PatternMatchable| *4) (|OrderedSet|) (|ConvertibleTo| (|Pattern| *4)))) (|isDomain| *1 (|ApplyRules| *4 *5 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4) (|ConvertibleTo| (|Pattern| *4))))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *2 *10)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|DivisorCategory| *9))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *6)) (|:| |tower| *7)))) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7)))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *6)) (|:| |tower| *7)))) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *3 (|String|)) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *1 *1) (|isDomain| *1 (|ThreeDimensionalViewport|)))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *4 *3 *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|CombinatorialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|CombinatorialFunction| *4 *2)) (|ofCategory| *2 (|FunctionSpace| *4)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|CombinatorialOpsCategory|)) (|isDomain| *2 (|Symbol|)))) ((*1 *1 *1) (|ofCategory| *1 (|CombinatorialOpsCategory|)))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Tree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RoutinesTable|))))) 
(((*1 *2 *2 *2) (AND (|ofCategory| *2 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8))) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8))) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3)) (|ofCategory| *3 (|ConvertibleTo| (|InputForm|))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3)) (|ofCategory| *3 (|ConvertibleTo| (|InputForm|))))) ((*1 *1 *2) (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *1 (|Plot|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *3) (AND (|ofCategory| *1 (|PartialDifferentialEquationsSolverCategory|)) (|isDomain| *3 (|Record| (|:| |pde| (|List| (|Expression| (|DoubleFloat|)))) (|:| |constraints| (|List| (|Record| (|:| |start| (|DoubleFloat|)) (|:| |finish| (|DoubleFloat|)) (|:| |grid| (|NonNegativeInteger|)) (|:| |boundaryType| (|Integer|)) (|:| |dStart| (|Matrix| (|DoubleFloat|))) (|:| |dFinish| (|Matrix| (|DoubleFloat|)))))) (|:| |f| (|List| (|List| (|Expression| (|DoubleFloat|))))) (|:| |st| (|String|)) (|:| |tol| (|DoubleFloat|)))) (|isDomain| *2 (|Result|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|AlgebraPackage| *3 *4)) (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *2))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *3 (|Factored| *2)) (|ofCategory| *2 (|EuclideanDomain|)) (|isDomain| *1 (|PartialFraction| *2)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|PartialFractionPackage| *5)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Factored| (|Polynomial| *6))) (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Polynomial| *6)) (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|PartialFractionPackage| *6))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|CharacteristicZero|)) (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|QuotientFieldCategory| *2)) (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|CommonDenominator| *2 *4 *3)) (|ofCategory| *3 (|FiniteLinearAggregate| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|QuotientFieldCategory| *2)) (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|InnerCommonDenominator| *2 *4 *5 *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *2)) (|ofCategory| *3 (|FiniteLinearAggregate| *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|QuotientFieldCategory| *2)) (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|MatrixCommonDenominator| *2 *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|QuotientFieldCategory| *2)) (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *2 *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|LocalPowerSeriesCategory| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *7)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|PrimitiveArray| (|ModMonic| *3 *4))) (|isDomain| *1 (|ModMonic| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *2 *3 *4 *5) (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *5 (|Integer|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|AbelianMonoid|)) (|isDomain| *1 (|ListMonoidOps| *4 *2 *5)) (|ofCategory| *4 (|SetCategory|)) (|ofType| *5 *2))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OrderedFreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|)) (|isDomain| *2 (|Segment| (|DoubleFloat|))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|)) (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6)) (|isDomain| *1 (|BezoutMatrix| *4 *3 *2 *5 *6)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4))))) 
(((*1 *2 *3 *4 *2) (AND (|isDomain| *3 (|Mapping| *2 (|NonNegativeInteger|) *2)) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|MappingPackageInternalHacks1| *2)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Mapping| *3 (|NonNegativeInteger|) *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|MappingPackage1| *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|OnePointCompletion| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)) (|isDomain| *4 (|DoubleFloat|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *7)) (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7)))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| *7)) (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|AffineSpaceCategory| *3)) (|ofCategory| *3 (|Field|)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|AffineSpaceCategory| *4)) (|ofCategory| *4 (|Field|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *3 (|Field|)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|))) ((*1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Polynomial| (|Fraction| (|Integer|)))) (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *2 (|List| (|DoubleFloat|))) (|isDomain| *1 (|ExpertSystemContinuityPackage|))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|OrderedSet|)) (|isDomain| *1 (|BasicOperatorFunctions1| *2))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Record| (|:| |func| *3) (|:| |poly| *3) (|:| |c1| (|Fraction| *5)) (|:| |c2| (|Fraction| *5)) (|:| |deg| (|NonNegativeInteger|)))) (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|PolynomialComposition| *2 *3)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| (|Stream| *3))) (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *2) (|partial| AND (|isDomain| *2 (|OrderedFreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|LyndonWord| *3))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|RegularTriangularSetGcdPackage| *3 *4 *5 *6 *7)) (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6)))) ((*1 *2) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *3 *4 *5 *6 *7)) (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Cell| *3)) (|ofCategory| *3 (|RealClosedField|)))) ((*1 *2) (AND (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|CardinalNumber|)) (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5)) (|ofCategory| *3 (|DirectProductCategory| *4 *5)))) ((*1 *2) (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|CardinalNumber|)) (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4)) (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))) ((*1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5)) (|ofType| *3 *2) (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PolynomialIdeals| *4 *5 *6 *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PointCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *2) (AND (|ofCategory| *1 (|VectorSpace| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|CardinalNumber|))))) 
(((*1 *2 *3 *3 *4 *4 *4 *4) (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1))) (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3)))) ((*1 *2 *3 *3 *4) (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3))) (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3)) (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *2 (|Stream| (|List| (|Integer|)))) (|isDomain| *1 (|PartitionsAndPermutations|)) (|isDomain| *3 (|List| (|Integer|))))) ((*1 *2 *3) (AND (|isDomain| *2 (|Stream| (|List| (|Integer|)))) (|isDomain| *1 (|PartitionsAndPermutations|)) (|isDomain| *3 (|List| (|Integer|)))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| *2)) (|isDomain| *4 (|Mapping| *2 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *5)) (|isDomain| *1 (|MonomialExtensionTools| *5 *2)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *2 *3) (|partial| AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|CharacteristicZero|))) (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Mapping| *1)) (|ofCategory| *1 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *3 (|Field|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Mapping| (|Stream| *3))) (|isDomain| *1 (|Stream| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|BasicOperator|)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|FunctionSpaceAssertions| *4 *2)) (|ofCategory| *2 (|FunctionSpace| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|String|)) (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *1 (|PatternMatchAssertions|))))) 
(((*1 *2 *1 *1) (|partial| AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2 *3 *4) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Union| "nil" "sqfr" "irred" "prime")) (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *4 (|Kernel| *3)) (|isDomain| *5 (|Mapping| (|SparseUnivariatePolynomial| *3) (|SparseUnivariatePolynomial| *3))) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|FunctionSpace| *6))) (|ofCategory| *6 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *2 (|IntegrationResult| *3)) (|isDomain| *1 (|AlgebraicIntegration| *6 *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Vector| (|Vector| *5))) (|isDomain| *1 (|RepresentationPackage2| *5)) (|isDomain| *4 (|Vector| *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *1 *2 *3 *1) (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Expression| (|DoubleFloat|))) (|isDomain| *1 (|e04AgentsPackage|))))) 
(((*1 *2 *3 *4 *3) (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *4 (|PrimitiveArray| (|Complex| (|DoubleFloat|)))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|BlasLevelOne|))))) 
(((*1 *2 *3 *4 *2) (AND (|isDomain| *3 (|Mapping| *2 *2)) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|MappingPackageInternalHacks1| *2))))) 
(((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Palette|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Mapping| (|Boolean|) *5)) (|isDomain| *1 (|PatternFunctions1| *4 *5)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|))))) (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|EuclideanDomain|)) (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7)) (|isDomain| *2 (|Record| (|:| |pol| (|SparseUnivariatePolynomial| *9)) (|:| |polval| (|SparseUnivariatePolynomial| *8)))) (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9)) (|isDomain| *3 (|SparseUnivariatePolynomial| *9)) (|isDomain| *4 (|SparseUnivariatePolynomial| *8))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *3))))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|FunctionSpace| *4)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|AlgebraicFunction| *4 *5))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|RepresentationPackage1| *4)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|List| (|Matrix| *4))) (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|RepresentationPackage1| *4))))) 
(((*1 *1 *2 *2) (AND (|isDomain| *2 (|Union| (|:| I (|Expression| (|Integer|))) (|:| F (|Expression| (|Float|))) (|:| CF (|Expression| (|Complex| (|Float|)))) (|:| |switch| (|Switch|)))) (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *1 *1) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|DoublyLinkedAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ArrayStack| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Heap| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Queue| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4)) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|))))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stack| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|CharacteristicZero|))) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|NewSparseMultivariatePolynomial| *5 (|OrderedVariableList| *6)))) (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|)) (|ofType| *6 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 (|IndexedExponents| (|OrderedVariableList| *6)) (|OrderedVariableList| *6) (|NewSparseMultivariatePolynomial| *5 (|OrderedVariableList| *6))))) (|isDomain| *1 (|LexTriangularPackage| *5 *6))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *5 "failed") *8)) (|isDomain| *4 (|Matrix| (|SparseUnivariatePolynomial| *8))) (|ofCategory| *5 (|Ring|)) (|ofCategory| *8 (|Ring|)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|Matrix| *6)) (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *6 *7 *8)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Record| (|:| |factor| *4) (|:| |degree| (|Integer|))))) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|))) (|isDomain| *2 (|Multiset| (|NonNegativeInteger|))) (|isDomain| *1 (|GaloisGroupFactorizer| *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Factored| *5)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Multiset| (|NonNegativeInteger|))) (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *4 *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Record| (|:| |factor| (|SparseUnivariatePolynomial| *6)) (|:| |exponent| (|Integer|))))) (|ofCategory| *6 (|EuclideanDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *2 *3) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|LinesOpPack| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Matrix| *3))) (|isDomain| *1 (|AlgebraPackage| *3 *4)) (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Vector| (|Matrix| *4))) (|isDomain| *1 (|AssociatedEquations| *4 *5)) (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|AlgebraPackage| *3 *4)) (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| *3)) (|ofCategory| *3 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InternalRationalUnivariateRepresentationPackage| *5 *6 *7 *8 *3))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|OpenMathEncoding|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|DivisorCategory| *10)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *11 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|DesingTreePackage| *4 *5 *6 *7 *8 *9 *10 *11 *12 *3 *13)) (|ofCategory| *3 (|DesingTreeCategory| *12))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Complex| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerRoots| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Record| (|:| |scalar| (|Fraction| (|Integer|))) (|:| |coeff| (|SparseUnivariatePolynomial| *2)) (|:| |logand| (|SparseUnivariatePolynomial| *2))))) (|isDomain| *4 (|List| (|Record| (|:| |integrand| *2) (|:| |intvar| *2)))) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|IntegrationResult| *2))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|Matrix| (|Expression| (|Integer|)))) (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|AlgebraPackage| *4 *3)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|ViewDefaultsPackage|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|LinesOpPack| *3))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|SetAggregate| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|AlgebraicFunctionField| *4 *5 *6 *7)) (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5))) (|ofType| *7 *6)))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|DivisorCategory| *10)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *11 *14)) (|ofCategory| *14 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *4 *5 *6 *7 *8 *9 *10 *11 *12 *13 *14)) (|ofCategory| *13 (|DesingTreeCategory| *12)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *4 *5 *6)) (|ofCategory| (|PseudoAlgebraicClosureOfFiniteField| *4) (|Finite|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *4 *5 *6)) (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Equation| (|OrderedCompletion| *3))) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))) (|ofCategory| *5 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Union| (|OrderedCompletion| *3) (|Record| (|:| |leftHandLimit| (|Union| (|OrderedCompletion| *3) "failed")) (|:| |rightHandLimit| (|Union| (|OrderedCompletion| *3) "failed"))) "failed")) (|isDomain| *1 (|PowerSeriesLimitPackage| *5 *3)))) ((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|String|)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|OrderedCompletion| *3)) (|isDomain| *1 (|PowerSeriesLimitPackage| *6 *3)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Equation| (|OrderedCompletion| (|Polynomial| *5)))) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|Union| (|OrderedCompletion| (|Fraction| (|Polynomial| *5))) (|Record| (|:| |leftHandLimit| (|Union| (|OrderedCompletion| (|Fraction| (|Polynomial| *5))) "failed")) (|:| |rightHandLimit| (|Union| (|OrderedCompletion| (|Fraction| (|Polynomial| *5))) "failed"))) "failed")) (|isDomain| *1 (|RationalFunctionLimitPackage| *5)) (|isDomain| *3 (|Fraction| (|Polynomial| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *5)))) (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|Union| (|OrderedCompletion| *3) (|Record| (|:| |leftHandLimit| (|Union| (|OrderedCompletion| *3) "failed")) (|:| |rightHandLimit| (|Union| (|OrderedCompletion| *3) "failed"))) "failed")) (|isDomain| *1 (|RationalFunctionLimitPackage| *5)))) ((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *6)))) (|isDomain| *5 (|String|)) (|isDomain| *3 (|Fraction| (|Polynomial| *6))) (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|OrderedCompletion| *3)) (|isDomain| *1 (|RationalFunctionLimitPackage| *6))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|IntegerNumberTheoryFunctions|)) (|isDomain| *3 (|Integer|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|PolynomialNumberTheoryFunctions|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|PermutationGroup| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|PermutationGroup| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PolynomialIdeals| (|Fraction| (|Integer|)) (|DirectProduct| *5 (|NonNegativeInteger|)) (|OrderedVariableList| *4) (|DistributedMultivariatePolynomial| *4 (|Fraction| (|Integer|))))) (|ofType| *4 (|List| (|Symbol|))) (|ofType| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IdealDecompositionPackage| *4 *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Segment| (|OrderedCompletion| (|Float|)))) (|isDomain| *2 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *5 (|Finite|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|GcdDomain|))) (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *5))) (|isDomain| *1 (|FractionFreeFastGaussian| *5 *6)) (|ofCategory| *6 (|AbelianMonoidRing| *5 *4)))) ((*1 *2 *3 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| *5))) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|GcdDomain|))) (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *5))) (|isDomain| *1 (|FractionFreeFastGaussian| *5 *6)) (|ofCategory| *6 (|AbelianMonoidRing| *5 *4)))) ((*1 *2 *2 *3 *3) (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *5)) (|isDomain| *3 (|List| *5)) (|ofType| *4 (|Symbol|)) (|ofCategory| *5 (|Field|)) (|isDomain| *1 (|PolynomialInterpolation| *4 *5)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *5)) (|isDomain| *1 (|PolynomialInterpolation| *4 *5)) (|ofType| *4 (|Symbol|)))) ((*1 *2 *3 *3 *4 *4) (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|Fraction| (|Polynomial| *6))) (|isDomain| *1 (|RationalInterpolation| *5 *6)) (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|PartialFraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)))) ((*1 *2 *3) (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *3 *4)) (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *1) (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|))) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *3 *4 *5) (AND (|isDomain| *3 (|String|)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *4 (|RecursivePolynomialCategory| *6 *7 *8)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|NormalizationPackage| *6 *7 *8 *4 *5)) (|ofCategory| *5 (|RegularTriangularSetCategory| *6 *7 *8 *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *7)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|LiouvillianFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2 *3) (|partial| AND (|isDomain| *2 (|LaurentPolynomial| *4 *5)) (|isDomain| *3 (|Mapping| (|Record| (|:| |ans| *4) (|:| |right| *4) (|:| |sol?| (|Boolean|))) (|Integer|) *4)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|TranscendentalIntegration| *4 *5))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *1) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|List| (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *1)))) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *4 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *1 (|ParametricLinearEquations| *3 *4 *5 *2)) (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|GraphImage|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *3 (|Mapping| (|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|)))) (|isDomain| *4 (|Segment| (|DoubleFloat|))) (|isDomain| *5 (|Boolean|)) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *4)) (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *1 (|ComplexRootFindingPackage| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Complex| *3)))))) 
(((*1 *2) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|Record| (|:| |gblist| (|List| (|DistributedMultivariatePolynomial| *4 *5))) (|:| |gvlist| (|List| (|Integer|))))) (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|ContinuedFraction| *2)) (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|Finite|)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|List| *9)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *5 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2) (AND (|isDomain| *2 (|List| (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *3))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|List| (|Places| *3))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|PackageForPoly| *2 *3 *5 *6)) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *2 *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|UnivariatePolynomial| *5 *4)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|OrderedIntegralDomain|)) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|SturmHabichtPackage| *4 *5))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *2) (|partial| AND (|isDomain| *2 (|Fraction| *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)))) (|isDomain| *1 (|RationalIntegration| *3 *4))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Boolean|)) (|isDomain| *1 (|Bits|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|has| *1 (ATTRIBUTE |arbitraryPrecision|)) (|ofCategory| *1 (|FloatingPointSystem|)))) ((*1 *2) (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Mapping| (|Boolean|) (|BasicOperator|) (|BasicOperator|))) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|isDomain| *2 (|SparseUnivariatePolynomial| (|SparseUnivariatePolynomial| *4))) (|isDomain| *1 (|AffineAlgebraicSetComputeWithResultant| *4 *5 *3 *6 *7)) (|ofCategory| *3 (|PolynomialCategory| *4 *6 (|OrderedVariableList| *5))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *4))))) 
(((*1 *2 *3 *4 *5 *4 *4 *4) (AND (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *3 (|List| *6)) (|isDomain| *5 (|List| *3)) (|isDomain| *2 (|Record| (|:| |f1| *3) (|:| |f2| (|List| *5)) (|:| |f3| *5) (|:| |f4| (|List| *5)))) (|isDomain| *1 (|TableauxBumpers| *6)) (|isDomain| *4 (|List| *5))))) 
(((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|DirectProductCategory| *5 (|NonNegativeInteger|))) (|ofType| *5 (|NonNegativeInteger|)) (|isDomain| *1 (|PackageForPoly| *3 *2 *4 *5)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *3 *4))))) 
(((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|ViewDefaultsPackage|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *3 (|PartialDifferentialRing| *5)) (|isDomain| *2 (|Matrix| *3)) (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *3 *6 *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *3)) (|ofCategory| *4 (|Join| (|FiniteLinearAggregate| *5) (CATEGORY |package| (ATTRIBUTE |finiteAggregate|))))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| *5 *4 *4)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Mapping| *5 *4)) (|isDomain| *1 (|MappingPackage2| *4 *5))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *1 *4) (AND (|isDomain| *4 (|Mapping| (|Boolean|) *3 *3)) (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *3)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *1 *1) (|partial| AND (|isDomain| *1 (|SplittingTree| *2 *3)) (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4)) (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *2)) (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Vector| (|List| (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|)))))) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *1 *2 *1 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegralDomain|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| (|Stream| *4) (|Stream| *4))) (|isDomain| *2 (|Stream| *4)) (|isDomain| *1 (|ParadoxicalCombinatorsForStreams| *4)) (|ofCategory| *4 (|Type|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| (|List| (|Stream| *5)) (|List| (|Stream| *5)))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|Stream| *5))) (|isDomain| *1 (|ParadoxicalCombinatorsForStreams| *5)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|ExtAlgBasis|))))) 
(((*1 *2 *1) (|partial| AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|GcdDomain|))) (|isDomain| *2 (|OrderedCompletion| *4)) (|isDomain| *1 (|ExponentialExpansion| *3 *4 *5 *6)) (|ofCategory| *4 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *3))) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4))) ((*1 *2 *1) (|partial| AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|GcdDomain|))) (|isDomain| *2 (|OrderedCompletion| *4)) (|isDomain| *1 (|UnivariatePuiseuxSeriesWithExponentialSingularity| *3 *4 *5 *6)) (|ofCategory| *4 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *3))) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|List| (|List| (|Integer|)))) (|isDomain| *1 (|Partition|)) (|isDomain| *3 (|List| (|Integer|)))))) 
(((*1 *1) (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2)) (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofCategory| *2 (|Join| (|FieldOfPrimeCharacteristic|) (CATEGORY |package| (SIGNATURE |coerce| (*2 *4)) (SIGNATURE |lookup| ((|PositiveInteger|) *2)) (SIGNATURE |basis| ((|Vector| *2) (|PositiveInteger|))) (SIGNATURE |Frobenius| (*2 *2))))) (|isDomain| *1 (|FiniteFieldPolynomialPackage2| *2 *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *1 (|AffineSpaceCategory| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|List| (|DoubleFloat|)))) (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|Complex| (|DoubleFloat|))) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *1) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *2 *3) (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| *4))) (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *1 (|RationalFunctionIntegration| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |measure| (|Float|)) (|:| |name| (|String|)) (|:| |explanations| (|List| (|String|))))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|ExpertSystemToolsPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |measure| (|Float|)) (|:| |name| (|String|)) (|:| |explanations| (|List| (|String|))) (|:| |extra| (|Result|)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Matrix| *3))) (|isDomain| *1 (|AlgebraPackage| *3 *4)) (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XPolynomialRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *2 *3 *4 *3 *3) (AND (|isDomain| *3 (|Equation| *6)) (|isDomain| *4 (|BasicOperator|)) (|ofCategory| *6 (|FunctionSpace| *5)) (|ofCategory| *5 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionSpaceODESolver| *5 *6)))) ((*1 *2 *3 *4 *3 *5) (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|List| *7)) (|ofCategory| *7 (|FunctionSpace| *6)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7)))) ((*1 *2 *3 *4 *5 *3) (AND (|isDomain| *3 (|List| (|Equation| *7))) (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Equation| *7)) (|ofCategory| *7 (|FunctionSpace| *6)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *3 (|List| (|Equation| *8))) (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Equation| *8)) (|isDomain| *6 (|List| *8)) (|ofCategory| *8 (|FunctionSpace| *7)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *8)))) ((*1 *2 *3 *4 *5 *3) (AND (|isDomain| *3 (|List| *7)) (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Equation| *7)) (|ofCategory| *7 (|FunctionSpace| *6)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *6 (|List| (|Equation| *8))) (|ofCategory| *8 (|FunctionSpace| *7)) (|isDomain| *5 (|Equation| *8)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *8)))) ((*1 *2 *3 *4 *3 *5) (AND (|isDomain| *3 (|Equation| *5)) (|isDomain| *4 (|BasicOperator|)) (|ofCategory| *5 (|FunctionSpace| *6)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *5)))) ((*1 *2 *3 *4 *5 *3) (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|FunctionSpace| *6)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *3)))) ((*1 *2 *3 *4 *5 *5) (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|FunctionSpace| *6)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *3)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3)) (|isDomain| *6 (|List| *3)) (|ofCategory| *3 (|FunctionSpace| *7)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *3)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Symbol|)) (|isDomain| *6 (|List| *3)) (|ofCategory| *3 (|FunctionSpace| *7)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ExpressionSolve| *7 *3 *2 *8)) (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| (|SparseUnivariatePolynomialExpressions| *3))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 *6)) (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| (|SparseUnivariatePolynomialExpressions| *5))) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5)) (|isDomain| *1 (|TaylorSolve| *5 *2 *6))))) 
(((*1 *2 *3 *3 *4) (|partial| AND (|isDomain| *4 (|Mapping| *6 *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |a| *6) (|:| |b| (|Fraction| *6)) (|:| |c| (|Fraction| *6)) (|:| |t| *6))) (|isDomain| *1 (|TranscendentalRischDE| *5 *6)) (|isDomain| *3 (|Fraction| *6))))) 
(((*1 *2 *3 *1) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|TheSymbolTable|)) (|isDomain| *3 (|Symbol|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Database| *4)) (|ofCategory| *4 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |elt| ((|String|) $ (|Symbol|))) (SIGNATURE |display| (*2 $)) (SIGNATURE |fullDisplay| (*2 $))))))) ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Database| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |elt| ((|String|) $ (|Symbol|))) (SIGNATURE |display| (*2 $)) (SIGNATURE |fullDisplay| (*2 $))))))) ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|IndexCard|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *6) (AND (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3) (AND (|ofCategory| *3 (|Join| (|EuclideanDomain|) (CATEGORY |domain| (SIGNATURE |squareFree| ((|Factored| $) $))))) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *2 (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3) (|:| |basisInv| (|Matrix| *3)))) (|isDomain| *1 (|FunctionFieldIntegralBasis| *3 *4 *5)) (|ofCategory| *5 (|FramedAlgebra| *3 *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *2 (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3) (|:| |basisInv| (|Matrix| *3)))) (|isDomain| *1 (|NumberFieldIntegralBasis| *4 *5)) (|ofCategory| *5 (|FramedAlgebra| *3 *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *3)) (|isDomain| *2 (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3) (|:| |basisInv| (|Matrix| *3)))) (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *4 *3 *5 *6)) (|ofCategory| *6 (|MonogenicAlgebra| *3 *5)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *3)) (|isDomain| *2 (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3) (|:| |basisInv| (|Matrix| *3)))) (|isDomain| *1 (|WildFunctionFieldIntegralBasis| *4 *3 *5 *6)) (|ofCategory| *6 (|FramedAlgebra| *3 *5))))) 
(((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|MultivariateSquareFree| *5 *4 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|))) (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ToolsForSign| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *5 *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *2 (|AbelianMonoid|)) (|isDomain| *1 (|EuclideanModularRing| *3 *4 *2 *5 *6 *7)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofType| *5 (|Mapping| *4 *4 *2)) (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2)) (|ofType| *7 (|Mapping| (|Union| *4 "failed") *4 *4 *2)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|AbelianMonoid|)) (|isDomain| *1 (|ModularField| *3 *2 *4 *5 *6)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|Mapping| *3 *3 *2)) (|ofType| *5 (|Mapping| (|Union| *2 "failed") *2 *2)) (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3 *2)))) ((*1 *2) (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)) (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|AbelianMonoid|)) (|isDomain| *1 (|ModularRing| *3 *2 *4 *5 *6)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|Mapping| *3 *3 *2)) (|ofType| *5 (|Mapping| (|Union| *2 "failed") *2 *2)) (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3 *2)))) ((*1 *2) (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| (|Expression| (|DoubleFloat|)))) (|isDomain| *1 (|e04AgentsPackage|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5)) (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *1 *2 *3 *4) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|FortranScalarType|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|SimpleFortranProgram| *5 *4)) (|ofCategory| *4 (|FunctionSpace| *5))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *2 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4)) (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *2)) (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|)))) ((*1 *2 *3 *4 *1) (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *1 *2 *3 *4) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| (|Polynomial| (|Integer|)))) (|isDomain| *4 (|Expression| (|Complex| (|Float|)))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3 *4) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| (|Polynomial| (|Integer|)))) (|isDomain| *4 (|Expression| (|Float|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3 *4) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| (|Polynomial| (|Integer|)))) (|isDomain| *4 (|Expression| (|Integer|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|Expression| (|Complex| (|Float|))))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|Expression| (|Float|)))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|Expression| (|Integer|)))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|Expression| (|Complex| (|Float|))))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|Expression| (|Float|)))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|Expression| (|Integer|)))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|Complex| (|Float|)))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3 *4) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| (|Polynomial| (|Integer|)))) (|isDomain| *4 (|Expression| (|MachineComplex|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3 *4) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| (|Polynomial| (|Integer|)))) (|isDomain| *4 (|Expression| (|MachineFloat|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3 *4) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| (|Polynomial| (|Integer|)))) (|isDomain| *4 (|Expression| (|MachineInteger|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|Expression| (|MachineComplex|)))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|Expression| (|MachineFloat|)))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|Expression| (|MachineInteger|)))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|Expression| (|MachineComplex|)))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|Expression| (|MachineFloat|)))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|Expression| (|MachineInteger|)))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineComplex|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineFloat|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineInteger|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineComplex|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineFloat|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineInteger|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|MachineComplex|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|MachineFloat|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|MachineInteger|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|String|)) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|OutputForm|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputPackage|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Stream| *4)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2)) (|ofCategory| *2 (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *5 *4)) (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |convert| ((|Symbol|) $))))) (|ofCategory| *6 (|IntegralDomain|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|ParametricPlaneCurve| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|ParametricSpaceCurve| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|ParametricSurface| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2)) (|ofCategory| *2 (|MatrixCategory| *3 *4 *5)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|ofCategory| *7 (|QuotientFieldCategory| *4)) (|ofCategory| *2 (|MatrixCategory| *7 *8 *9)) (|isDomain| *1 (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9 *2)) (|ofCategory| *3 (|MatrixCategory| *4 *5 *6)) (|ofCategory| *8 (|FiniteLinearAggregate| *7)) (|ofCategory| *9 (|FiniteLinearAggregate| *7)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|EuclideanDomain|)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2)) (|ofCategory| *2 (|MatrixCategory| *3 *4 *5)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *1 (|ModularHermitianRowReduction| *3)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *2 *3 *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *3 *4)) (|ofCategory| *6 (|DirectProductCategory| *2 *4)) (|ofCategory| *4 (|EuclideanDomain|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Record| (|:| |Ech| (|SparseEchelonMatrix| *3 *4)) (|:| |Lt| (|Matrix| *4)) (|:| |Pivots| (|List| *4)) (|:| |Rank| (|NonNegativeInteger|)))) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Mapping| (|Float|))) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *1) (|partial| AND (|ofCategory| *1 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|)) (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|IntegrationResult| *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedFunctionSpace| *4) (|TranscendentalFunctionCategory|))) (|isDomain| *1 (|IntegrationResultToFunction| *4 *2)) (|ofCategory| *4 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|LinearlyExplicitRingOver| (|Integer|)))))) ((*1 *2 *3) (AND (|isDomain| *3 (|IntegrationResult| (|Fraction| (|Polynomial| *4)))) (|ofCategory| *4 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Expression| *4)) (|isDomain| *1 (|IntegrationResultRFToFunction| *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Mapping| *7 *7)) (|isDomain| *5 (|Mapping| (|Record| (|:| |ans| *6) (|:| |right| *6) (|:| |sol?| (|Boolean|))) (|Integer|) *6)) (|ofCategory| *6 (|Field|)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6)) (|isDomain| *2 (|Record| (|:| |answer| (|IntegrationResult| (|Fraction| *7))) (|:| |a0| *6))) (|isDomain| *1 (|TranscendentalIntegration| *6 *7)) (|isDomain| *3 (|Fraction| *7))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *2 *3) (AND (|isDomain| *3 (|Any|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AnyFunctions1| *4)) (|ofCategory| *4 (|Type|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DeRhamComplex| *3 *4)) (|ofCategory| *3 (|Join| (|Ring|) (|OrderedSet|))) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Magma| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3)) (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|NewtonInterpolation| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|DisplayPackage|)) (|isDomain| *3 (|String|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|DisplayPackage|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *1) (|partial| AND (|isDomain| *2 (|Kernel| *1)) (|ofCategory| *1 (|ExpressionSpace|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Expression| (|Float|))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *3 (|Polynomial| (|Integer|))) (|isDomain| *5 (|List| (|Symbol|))) (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *2 *6)) (|ofCategory| *6 (|Type|)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5)) (|ofCategory| *3 (|Join| (|Field|) (|OrderedSet|))) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3) (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Mapping| (|Float|))) (|isDomain| *1 (|RandomFloatDistributions|)) (|isDomain| *3 (|Float|))))) 
(((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ArrayStack| *4)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Dequeue| *4)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Heap| *4)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Queue| *4)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stack| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Vector| (|Matrix| *4))))) ((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Vector| (|Matrix| *4))) (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Vector| (|Matrix| *3))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Vector| (|Matrix| (|Fraction| (|Polynomial| *5))))) (|isDomain| *1 (|StructuralConstantsPackage| *5)) (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5)))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Vector| (|Matrix| (|Polynomial| *5)))) (|isDomain| *1 (|StructuralConstantsPackage| *5)) (|isDomain| *4 (|Matrix| (|Polynomial| *5))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Vector| (|Matrix| *4))) (|isDomain| *1 (|StructuralConstantsPackage| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|InputForm|))) (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *2) (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|))) ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Mapping| *3 *4)) (|isDomain| *1 (|MappingPackage2| *4 *3)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2) (|partial| AND (|isDomain| *2 (|List| (|Polynomial| *3))) (|ofCategory| *3 (|GcdDomain|)) (|isDomain| *1 (|FGLMIfCanPackage| *3 *4)) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *2 *2) (|partial| AND (|isDomain| *2 (|List| (|NewSparseMultivariatePolynomial| *3 (|OrderedVariableList| *4)))) (|ofCategory| *3 (|GcdDomain|)) (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *1 (|LexTriangularPackage| *3 *4))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6)))) ((*1 *2 *2 *2 *3) (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Boolean|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Expression| (|Integer|)))) (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|CycleIndicators|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *2 *2) (AND (|isDomain| *2 (|Union| (|:| I (|Expression| (|Integer|))) (|:| F (|Expression| (|Float|))) (|:| CF (|Expression| (|Complex| (|Float|)))) (|:| |switch| (|Switch|)))) (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *3 (|Mapping| (|List| *2) *2 *2 *2)) (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|BalancedBinaryTree| *2)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|BalancedBinaryTree| *2))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|))))) 
(((*1 *1 *2 *2 *3) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|)))) ((*1 *2 *2 *2 *3 *4) (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *3 (|Automorphism| *5)) (|isDomain| *4 (|Mapping| *5 *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *1 (|PseudoLinearNormalForm| *5))))) 
(((*1 *2 *3 *4 *3) (|partial| AND (|isDomain| *4 (|Mapping| *6 *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Record| (|:| |ratpart| (|Fraction| *6)) (|:| |coeff| (|Fraction| *6)))) (|isDomain| *1 (|TranscendentalIntegration| *5 *6)) (|isDomain| *3 (|Fraction| *6))))) 
(((*1 *2 *2 *2 *2 *3 *3 *4) (|partial| AND (|isDomain| *3 (|Kernel| *2)) (|isDomain| *4 (|Mapping| (|Union| *2 "failed") *2 *2 (|Symbol|))) (|ofCategory| *2 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *5 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|PureAlgebraicIntegration| *5 *2 *6)) (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|List| (|List| *7))) (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7)) (|isDomain| *3 (|List| *7)))) ((*1 *2 *3 *3 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|List| *8))) (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8)) (|isDomain| *3 (|List| *8)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|List| (|List| *7))) (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7)) (|isDomain| *3 (|List| *7)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|List| *8))) (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8)) (|isDomain| *3 (|List| *8))))) 
(((*1 *2 *3 *4 *5 *6 *7 *6) (|partial| AND (|isDomain| *5 (|Record| (|:| |contp| *3) (|:| |factors| (|List| (|Record| (|:| |irr| *10) (|:| |pow| (|Integer|))))))) (|isDomain| *6 (|List| *3)) (|isDomain| *7 (|List| *8)) (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *10 (|PolynomialCategory| *3 *9 *8)) (|ofCategory| *9 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Record| (|:| |polfac| (|List| *10)) (|:| |correct| *3) (|:| |corrfact| (|List| (|SparseUnivariatePolynomial| *3))))) (|isDomain| *1 (|LeadingCoefDetermination| *8 *9 *3 *10)) (|isDomain| *4 (|List| (|SparseUnivariatePolynomial| *3)))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |sub| (|List| (|OutputForm|))) (|:| |sup| (|List| (|OutputForm|))) (|:| |presup| (|List| (|OutputForm|))) (|:| |presub| (|List| (|OutputForm|))) (|:| |args| (|List| (|OutputForm|))))) (|isDomain| *1 (|Symbol|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|List| (|OutputForm|)))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|LinearlyExplicitRingOver| *4)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LinearDependence| *4 *5))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *1 (|ViewDefaultsPackage|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4)) (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *2)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| *5 *5)) (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6)) (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5))) (|isDomain| *2 (|Record| (|:| |num| (|Matrix| *5)) (|:| |den| *5)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|List| (|Record| (|:| |eigval| (|Union| (|Fraction| (|Polynomial| *4)) (|SuchThat| (|Symbol|) (|Polynomial| *4)))) (|:| |eigmult| (|NonNegativeInteger|)) (|:| |eigvec| (|List| (|Matrix| (|Fraction| (|Polynomial| *4)))))))) (|isDomain| *1 (|EigenPackage| *4)) (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|Any|))))) 
(((*1 *1 *2) (|partial| AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *1 (|LiePolynomial| *3 *4)))) ((*1 *2 *1) (|partial| AND (|isDomain| *2 (|LiePolynomial| *3 *4)) (|isDomain| *1 (|XPBWPolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|List| *5))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|))) ((*1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Record| (|:| |rank| (|NonNegativeInteger|)) (|:| |eqns| (|List| (|Record| (|:| |det| *7) (|:| |rows| (|List| (|Integer|))) (|:| |cols| (|List| (|Integer|)))))) (|:| |fgb| (|List| *7))))) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5)) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *4 *5 *3 *6) (|partial| AND (|isDomain| *4 (|Kernel| *3)) (|isDomain| *5 (|List| *3)) (|isDomain| *6 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *7 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |mainpart| *3) (|:| |limitedlogs| (|List| (|Record| (|:| |coeff| *3) (|:| |logand| *3)))))) (|isDomain| *1 (|GenusZeroIntegration| *7 *3 *8)) (|ofCategory| *8 (|SetCategory|)))) ((*1 *2 *3 *4 *4 *5 *4 *3 *6) (|partial| AND (|isDomain| *4 (|Kernel| *3)) (|isDomain| *5 (|List| *3)) (|isDomain| *6 (|Fraction| (|SparseUnivariatePolynomial| *3))) (|ofCategory| *3 (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *7 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |mainpart| *3) (|:| |limitedlogs| (|List| (|Record| (|:| |coeff| *3) (|:| |logand| *3)))))) (|isDomain| *1 (|GenusZeroIntegration| *7 *3 *8)) (|ofCategory| *8 (|SetCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8 *9))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NumericalOptimizationProblem|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalOptimizationPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Expression| (|Float|)))) (|isDomain| *4 (|List| (|Float|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalOptimizationPackage|))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *2 *2 *3) (AND (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *4 *2)) (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| (|Integer|)))) (|isDomain| *1 (|CyclotomicPolynomialPackage|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *5 (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *6)) (|SparseUnivariatePolynomial| *6))) (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|List| (|Record| (|:| |outval| *7) (|:| |outmult| (|Integer|)) (|:| |outvect| (|List| (|Matrix| *7)))))) (|isDomain| *1 (|InnerNumericEigenPackage| *6 *7 *4)) (|ofCategory| *7 (|Field|)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Record| (|:| A (|Matrix| *5)) (|:| |eqs| (|List| (|Record| (|:| C (|Matrix| *5)) (|:| |g| (|Vector| *5)) (|:| |eq| *6) (|:| |rh| *5)))))) (|isDomain| *1 (|SystemODESolver| *5 *6)) (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5)) (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5)) (|isDomain| *2 (|Record| (|:| |mat| (|Matrix| *6)) (|:| |vec| (|Vector| *5)))) (|isDomain| *1 (|SystemODESolver| *5 *6)) (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *5))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|PointCategory| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Point| (|DoubleFloat|))) (|isDomain| *1 (|TubePlotTools|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputForm|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|PrintPackage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|)))) (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3) (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5)) (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3))) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|AssociationList| (|String|) (|None|))) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|DoubleFloat|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|DoubleFloat|)))) ((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Float|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Float|))))) 
(((*1 *1 *1 *2 *2) (|partial| AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 *2) (|ofType| *4 *2)))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *1 *2 *2 *3) (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|OpenMathEncoding|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *1 (|SplittingNode| *3 *2)) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *4 *4 *5) (|partial| AND (|isDomain| *4 (|Kernel| *3)) (|isDomain| *5 (|List| *3)) (|ofCategory| *3 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |mainpart| *3) (|:| |limitedlogs| (|List| (|Record| (|:| |coeff| *3) (|:| |logand| *3)))))) (|isDomain| *1 (|PureAlgebraicIntegration| *6 *3 *7)) (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 |RationalNumber|) (|isDomain| *2 (|Mapping| (|Integer|))) (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|))) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5)) (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OpenMathDevice|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrdSetInts|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|QueryEquation|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *1 (|SplittingNode| *2 *3)) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1 *1 *1) (|partial| AND (|isDomain| *2 (|Record| (|:| |coef1| *1) (|:| |coef2| *1))) (|ofCategory| *1 (|EuclideanDomain|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Record| (|:| |coef1| *1) (|:| |coef2| *1) (|:| |generator| *1))) (|ofCategory| *1 (|EuclideanDomain|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *2)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *2 (|BlowUpMethodCategory|))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *2 *3)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|CancellationAbelianMonoid|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RecursiveAggregate| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4))) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2) (|partial| AND (|isDomain| *1 (|IntegerRoots| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|List| *12)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *5 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2) (AND (|isDomain| *2 (|List| (|DesingTree| (|InfinitlyClosePointOverPseudoAlgebraicClosureOfFiniteField| *3 *4 *5)))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|List| (|DesingTree| (|InfClsPt| *3 *4 *5)))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| (|Expression| (|DoubleFloat|)))) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|d02AgentsPackage|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FreeModuleCat| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|MonoidRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))))) 
(((*1 *1 *2 *2 *2 *2 *2 *2 *2 *2) (AND (|ofCategory| *1 (|OctonionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *1 *2 *2) (AND (|isDomain| *2 (|Quaternion| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *1 (|Octonion| *3))))) 
(((*1 *2 *2 *3 *3) (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Integer|)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|))) (|isDomain| *2 (|Complex| *5)) (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *3)) (|ofCategory| *5 (|Join| (|FunctionSpace| *4) (|RadicalCategory|) (|TranscendentalFunctionCategory|))) (|ofCategory| *3 (|Join| (|FunctionSpace| (|Complex| *4)) (|RadicalCategory|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *1 *2) (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|CharacterClass|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Character|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|)))) ((*1 *2 *3 *2) (AND (|isDomain| *3 (|Mapping| *5 *5)) (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|PackageForPoly| *4 *2 *5 *6)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *4 *5))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |coef2| *3) (|:| |resultant| *4))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *2 (|Fraction| (|Integer|)))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2) (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *1 (|TriangularMatrixOperations| *3 *4 *5 *2)) (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2) (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|TopLevelThreeSpace|))))) 
(((*1 *2 *3) (|partial| AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|TabulatedComputationPackage| *3 *2)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2) (|partial| AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicStochasticDifferential|))))) 
(((*1 *2 *3 *4 *3) (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *4 (|PrimitiveArray| (|DoubleFloat|))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|BlasLevelOne|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *4))) (|isDomain| *1 (|TableauxBumpers| *4)) (|isDomain| *3 (|List| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|)) (|isDomain| *1 (|d01AgentsPackage|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *3 *4 *2 *2 *5) (|partial| AND (|isDomain| *2 (|OrderedCompletion| *4)) (|isDomain| *3 (|Kernel| *4)) (|isDomain| *5 (|Boolean|)) (|ofCategory| *4 (|Join| (|TranscendentalFunctionCategory|) (|AlgebraicallyClosedFunctionSpace| *6))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|DefiniteIntegrationTools| *6 *4))))) 
(((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|RetractableTo| (|Integer|))) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|AlgebraicManipulations| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)) (|ofCategory| *2 (|Join| (|Field|) (|ExpressionSpace|) (CATEGORY |domain| (SIGNATURE |numer| ((|SparseMultivariatePolynomial| *3 (|Kernel| $)) $)) (SIGNATURE |denom| ((|SparseMultivariatePolynomial| *3 (|Kernel| $)) $)) (SIGNATURE |coerce| ($ (|SparseMultivariatePolynomial| *3 (|Kernel| $)))))))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *1 (|AlgebraicallyClosedField|)) (|isDomain| *2 (|List| *1)))) ((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|AlgebraicallyClosedField|)) (|isDomain| *2 (|List| *1)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| *1)) (|ofCategory| *1 (|AlgebraicallyClosedField|)) (|isDomain| *2 (|List| *1)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Expression| (|DoubleFloat|))) (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *2 (|Stream| (|DoubleFloat|))) (|isDomain| *1 (|ExpertSystemContinuityPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|OrderedCompletion| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|XFreeAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|CommutativeRing|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|ViewDefaultsPackage|)))) ((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|List| *8))) (|isDomain| *3 (|List| *8)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|)))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *7)) (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7)))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| *7)) (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| (|Point| *3))))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|ThreeSpaceCategory| *3)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *3 *2) (|partial| AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *1 (|GaloisGroupFactorizer| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *2 *4) (|partial| AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|GaloisGroupFactorizer| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *2 *4) (|partial| AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|List| (|NonNegativeInteger|))) (|isDomain| *1 (|GaloisGroupFactorizer| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *2 *4 *5) (|partial| AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|List| (|NonNegativeInteger|))) (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *1 (|GaloisGroupFactorizer| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *2 *4 *5 *6) (|partial| AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|List| (|NonNegativeInteger|))) (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Factored| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *5)) (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *5 *2)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *2 *2 *2 *2) (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Record| (|:| |lm| (|FreeMonoid| *3)) (|:| |mm| (|FreeMonoid| *3)) (|:| |rm| (|FreeMonoid| *3)))) (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Record| (|:| |lm| (|OrderedFreeMonoid| *3)) (|:| |mm| (|OrderedFreeMonoid| *3)) (|:| |rm| (|OrderedFreeMonoid| *3)))) (|isDomain| *1 (|OrderedFreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|GcdDomain|)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6)) (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|PolynomialFactorizationExplicit|)) (|isDomain| *1 (|GeneralPolynomialGcdPackage| *3 *4 *5 *6)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Union| "nil" "sqfr" "irred" "prime")) (|isDomain| *1 (|Factored| *4)) (|ofCategory| *4 (|IntegralDomain|))))) 
(((*1 *2 *1 *3 *4 *4 *4 *4 *5 *5 *5 *5 *6 *5 *6 *5) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *5 (|Integer|)) (|isDomain| *6 (|Palette|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1) (|partial| AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|BinaryFile|)))) ((*1 *2 *1) (|partial| AND (|isDomain| *1 (|File| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (|partial| AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *1 *1) (|isDomain| *1 (|RoutinesTable|)))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Join| (|EuclideanDomain|) (CATEGORY |domain| (SIGNATURE |squareFree| ((|Factored| $) $))))) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5)) (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Permutation| (|Integer|))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|RepresentationPackage1| *5)) (|ofCategory| *5 (|Ring|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Matrix| (|Integer|))) (|isDomain| *1 (|RepresentationPackage1| *4)) (|ofCategory| *4 (|Ring|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Permutation| (|Integer|)))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|Matrix| *4))) (|isDomain| *1 (|RepresentationPackage1| *5)) (|ofCategory| *5 (|Ring|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|List| (|Integer|)))) (|isDomain| *2 (|List| (|Matrix| (|Integer|)))) (|isDomain| *1 (|RepresentationPackage1| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RecursiveAggregate| *3))))) 
(((*1 *2 *3 *4 *5 *6) (AND (|ofCategory| *6 (|Field|)) (|ofType| *7 (|List| (|Symbol|))) (|ofCategory| *9 (|DirectProductCategory| (|#| *7) (|NonNegativeInteger|))) (|isDomain| *2 (|Record| (|:| |mult| (|NonNegativeInteger|)) (|:| |subMult| (|NonNegativeInteger|)) (|:| |blUpRec| (|List| (|Record| (|:| |recTransStr| (|DistributedMultivariatePolynomial| (|construct| (QUOTE X) (QUOTE Y)) *6)) (|:| |recPoint| (|AffinePlane| *6)) (|:| |recChart| *5) (|:| |definingExtension| *6)))))) (|isDomain| *1 (|BlowUpPackage| *6 *7 *8 *9 *5)) (|isDomain| *3 (|DistributedMultivariatePolynomial| (|construct| (QUOTE X) (QUOTE Y)) *6)) (|isDomain| *4 (|AffinePlane| *6)) (|ofCategory| *8 (|FiniteAbelianMonoidRing| *6 *9)) (|ofCategory| *5 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Record| (|:| |eqzro| (|List| *8)) (|:| |neqzro| (|List| *8)) (|:| |wcond| (|List| (|Polynomial| *5))) (|:| |bsoln| (|Record| (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *5)))) (|:| |basis| (|List| (|Vector| (|Fraction| (|Polynomial| *5)))))))))) (|isDomain| *4 (|String|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *6 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6) (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))))) (|ofCategory| *7 (|OrderedRing|)) (|ofCategory| *8 (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|) (|TranscendentalFunctionCategory|) (CATEGORY |domain| (SIGNATURE |differentiate| ($ $)) (SIGNATURE |integrate| ($ $))))) (|isDomain| *2 (|Union| (|:| |%series| *8) (|:| |%problem| (|Record| (|:| |func| (|String|)) (|:| |prob| (|String|)))))) (|isDomain| *1 (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10)) (|isDomain| *5 (|String|)) (|ofCategory| *9 (|PartialTranscendentalFunctions| *8)) (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|DifferentialVariableCategory| *4)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *5 (|DifferentialVariableCategory| *3)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|DifferentialVariableCategory| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|FiniteDivisor| *4 *5 *6 *7)) (|ofCategory| *4 (|Join| (|Finite|) (|Field|))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5))) (|ofCategory| *7 (|FunctionFieldCategory| *4 *5 *6)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FindOrderFinite| *4 *5 *6 *7)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|)) (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|LaurentPolynomial| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1 *3 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *3)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *3)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|PermutationGroup| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8)) (|ofCategory| *5 (|FunctionSpace| *4)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6))) (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8)))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|)))) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|ofCategory| *6 (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|FiniteDivisor| *6 *7 *4 *8)) (|isDomain| *5 (|Mapping| *9 *6)) (|ofCategory| *6 (|Field|)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *7))) (|ofCategory| *8 (|FunctionFieldCategory| *6 *7 *4)) (|ofCategory| *9 (|Join| (|Finite|) (|Field|))) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ReducedDivisor| *6 *7 *4 *8 *9)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1 *2) (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|List| *5))) (|ofCategory| *5 (|FiniteAbelianMonoidRing| *4 *6)) (|ofCategory| *6 (|DirectProductCategory| *7 *2)) (|ofType| *7 *2) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|NewtonPolygon| *4 *5 *6 *7)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|DirectProductCategory| *7 *2)) (|ofType| *7 *2) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|PolynomialPackageForCurve| *5 *3 *6 *7 *4)) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *5 *6)) (|ofCategory| *4 (|ProjectiveSpaceCategory| *5)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|Field|)) (|ofCategory| *7 (|DirectProductCategory| *8 *2)) (|ofType| *8 *2) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|PolynomialPackageForCurve| *6 *3 *7 *8 *4)) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *6 *7)) (|ofCategory| *4 (|ProjectiveSpaceCategory| *6))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4))))) (|isDomain| *1 (|FloatingRealPackage| *4)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| (|Integer|)))))) (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4))))) (|isDomain| *1 (|FloatingRealPackage| *4)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|)))) (|isDomain| *2 (|List| (|Equation| (|Polynomial| *4)))) (|isDomain| *1 (|FloatingRealPackage| *4)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Equation| (|Polynomial| *4)))) (|isDomain| *1 (|FloatingRealPackage| *4)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|))))) ((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *5 (|Symbol|)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|ofCategory| *4 (|Join| (|AlgebraicallyClosedFunctionSpace| *6) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|))) (|isDomain| *2 (|Record| (|:| |particular| *4) (|:| |basis| (|List| *4)))) (|isDomain| *1 (|ElementaryFunctionLODESolver| *6 *4 *3)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4)))) ((*1 *2 *3 *2 *4 *2 *5) (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedFunctionSpace| *6) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|))) (|ofCategory| *6 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *1 (|ElementaryFunctionLODESolver| *6 *2 *3)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Record| (|:| |particular| (|Union| (|Vector| *5) "failed")) (|:| |basis| (|List| (|Vector| *5))))) (|isDomain| *1 (|LinearSystemMatrixPackage1| *5)) (|isDomain| *4 (|Vector| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|List| *5))) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Record| (|:| |particular| (|Union| (|Vector| *5) "failed")) (|:| |basis| (|List| (|Vector| *5))))) (|isDomain| *1 (|LinearSystemMatrixPackage1| *5)) (|isDomain| *4 (|Vector| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| (|Record| (|:| |particular| (|Union| (|Vector| *5) "failed")) (|:| |basis| (|List| (|Vector| *5)))))) (|isDomain| *1 (|LinearSystemMatrixPackage1| *5)) (|isDomain| *4 (|List| (|Vector| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|List| *5))) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| (|Record| (|:| |particular| (|Union| (|Vector| *5) "failed")) (|:| |basis| (|List| (|Vector| *5)))))) (|isDomain| *1 (|LinearSystemMatrixPackage1| *5)) (|isDomain| *4 (|List| (|Vector| *5))))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Join| (|FiniteLinearAggregate| *5) (CATEGORY |package| (ATTRIBUTE |shallowlyMutable|)))) (|ofCategory| *4 (|Join| (|FiniteLinearAggregate| *5) (CATEGORY |package| (ATTRIBUTE |shallowlyMutable|)))) (|isDomain| *2 (|Record| (|:| |particular| (|Union| *4 "failed")) (|:| |basis| (|List| *4)))) (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3)) (|ofCategory| *3 (|MatrixCategory| *5 *6 *4)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Join| (|FiniteLinearAggregate| *5) (CATEGORY |package| (ATTRIBUTE |shallowlyMutable|)))) (|ofCategory| *7 (|Join| (|FiniteLinearAggregate| *5) (CATEGORY |package| (ATTRIBUTE |shallowlyMutable|)))) (|isDomain| *2 (|List| (|Record| (|:| |particular| (|Union| *7 "failed")) (|:| |basis| (|List| *7))))) (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *7 *3)) (|isDomain| *4 (|List| *7)) (|ofCategory| *3 (|MatrixCategory| *5 *6 *7)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|List| (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))) (|isDomain| *1 (|NonLinearSolvePackage| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Polynomial| *4))) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))) (|isDomain| *1 (|NonLinearSolvePackage| *4)))) ((*1 *2 *2 *2 *3 *4) (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *1 (|NonLinearFirstOrderODESolver| *5 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedFunctionSpace| *5) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|))))) ((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *5 (|Symbol|)) (|ofCategory| *7 (|Join| (|AlgebraicallyClosedFunctionSpace| *6) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|))) (|ofCategory| *6 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|Record| (|:| |particular| (|Vector| *7)) (|:| |basis| (|List| (|Vector| *7))))) (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7)) (|isDomain| *4 (|Vector| *7)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *6 (|Join| (|AlgebraicallyClosedFunctionSpace| *5) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|Vector| *6))) (|isDomain| *1 (|ElementaryFunctionODESolver| *5 *6)))) ((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *3 (|List| (|Equation| *7))) (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Symbol|)) (|ofCategory| *7 (|Join| (|AlgebraicallyClosedFunctionSpace| *6) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|))) (|ofCategory| *6 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|Record| (|:| |particular| (|Vector| *7)) (|:| |basis| (|List| (|Vector| *7))))) (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7)))) ((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *3 (|List| *7)) (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Symbol|)) (|ofCategory| *7 (|Join| (|AlgebraicallyClosedFunctionSpace| *6) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|))) (|ofCategory| *6 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|Record| (|:| |particular| (|Vector| *7)) (|:| |basis| (|List| (|Vector| *7))))) (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Symbol|)) (|ofCategory| *7 (|Join| (|AlgebraicallyClosedFunctionSpace| *6) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|))) (|ofCategory| *6 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|Union| (|Record| (|:| |particular| *7) (|:| |basis| (|List| *7))) *7 "failed")) (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Symbol|)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|Union| (|Record| (|:| |particular| *3) (|:| |basis| (|List| *3))) *3 "failed")) (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedFunctionSpace| *6) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|))))) ((*1 *2 *3 *4 *3 *5) (|partial| AND (|isDomain| *3 (|Equation| *2)) (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|List| *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedFunctionSpace| *6) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|))) (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *2)) (|ofCategory| *6 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))))) ((*1 *2 *2 *3 *4 *5) (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Equation| *2)) (|isDomain| *5 (|List| *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedFunctionSpace| *6) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|))) (|ofCategory| *6 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *2)))) ((*1 *2 *3) (AND (|isDomain| *3 (|NumericalODEProblem|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaOrdinaryDifferentialEquationPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|NumericalODEProblem|)) (|isDomain| *4 (|RoutinesTable|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaOrdinaryDifferentialEquationPackage|)))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *3 (|Vector| (|Expression| (|Float|)))) (|isDomain| *4 (|Float|)) (|isDomain| *5 (|List| *4)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaOrdinaryDifferentialEquationPackage|)))) ((*1 *2 *3 *4 *4 *5 *4) (AND (|isDomain| *3 (|Vector| (|Expression| (|Float|)))) (|isDomain| *4 (|Float|)) (|isDomain| *5 (|List| *4)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaOrdinaryDifferentialEquationPackage|)))) ((*1 *2 *3 *4 *4 *5 *6 *4) (AND (|isDomain| *3 (|Vector| (|Expression| *4))) (|isDomain| *5 (|List| (|Float|))) (|isDomain| *6 (|Expression| (|Float|))) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaOrdinaryDifferentialEquationPackage|)))) ((*1 *2 *3 *4 *4 *5 *5 *4) (AND (|isDomain| *3 (|Vector| (|Expression| (|Float|)))) (|isDomain| *4 (|Float|)) (|isDomain| *5 (|List| *4)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaOrdinaryDifferentialEquationPackage|)))) ((*1 *2 *3 *4 *4 *5 *6 *5 *4) (AND (|isDomain| *3 (|Vector| (|Expression| *4))) (|isDomain| *5 (|List| (|Float|))) (|isDomain| *6 (|Expression| (|Float|))) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaOrdinaryDifferentialEquationPackage|)))) ((*1 *2 *3 *4 *4 *5 *6 *5 *4 *4) (AND (|isDomain| *3 (|Vector| (|Expression| *4))) (|isDomain| *5 (|List| (|Float|))) (|isDomain| *6 (|Expression| (|Float|))) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaOrdinaryDifferentialEquationPackage|)))) ((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *5 (|Mapping| (|Union| (|Record| (|:| |particular| *6) (|:| |basis| (|List| *6))) "failed") *7 *6)) (|ofCategory| *6 (|Field|)) (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6)) (|isDomain| *2 (|Record| (|:| |particular| (|Vector| *6)) (|:| |basis| (|Matrix| *6)))) (|isDomain| *1 (|SystemODESolver| *6 *7)) (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6)))) ((*1 *2 *3) (AND (|isDomain| *3 (|NumericalPDEProblem|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaPartialDifferentialEquationPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|NumericalPDEProblem|)) (|isDomain| *4 (|RoutinesTable|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaPartialDifferentialEquationPackage|)))) ((*1 *2 *3 *3 *3 *3 *4 *4 *5 *6 *7 *8) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *6 (|List| (|List| (|Expression| *3)))) (|isDomain| *7 (|String|)) (|isDomain| *8 (|DoubleFloat|)) (|isDomain| *5 (|List| (|Expression| (|Float|)))) (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaPartialDifferentialEquationPackage|)))) ((*1 *2 *3 *3 *3 *3 *4 *4 *5 *6 *7) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *6 (|List| (|List| (|Expression| *3)))) (|isDomain| *7 (|String|)) (|isDomain| *5 (|List| (|Expression| (|Float|)))) (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaPartialDifferentialEquationPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Polynomial| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|RealSolvePackage|)) (|isDomain| *4 (|Float|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Polynomial| (|Integer|))) (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|RealSolvePackage|)) (|isDomain| *4 (|Float|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|Equation| (|Expression| *4)))) (|isDomain| *1 (|TransSolvePackage| *4)) (|isDomain| *3 (|Expression| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|Equation| (|Expression| *4)))) (|isDomain| *1 (|TransSolvePackage| *4)) (|isDomain| *3 (|Equation| (|Expression| *4))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|Equation| (|Expression| *5)))) (|isDomain| *1 (|TransSolvePackage| *5)) (|isDomain| *3 (|Equation| (|Expression| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|Equation| (|Expression| *5)))) (|isDomain| *1 (|TransSolvePackage| *5)) (|isDomain| *3 (|Expression| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5))))) (|isDomain| *1 (|TransSolvePackage| *5)) (|isDomain| *3 (|List| (|Equation| (|Expression| *5)))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5)))) (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|List| (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))) (|isDomain| *1 (|SystemSolvePackage| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|List| (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))) (|isDomain| *1 (|SystemSolvePackage| *5)) (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4)))) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))) (|isDomain| *1 (|SystemSolvePackage| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))) (|isDomain| *1 (|SystemSolvePackage| *4)) (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *5))))) (|isDomain| *1 (|SystemSolvePackage| *5)) (|isDomain| *3 (|Fraction| (|Polynomial| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *5))))) (|isDomain| *1 (|SystemSolvePackage| *5)) (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5)))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *4))))) (|isDomain| *1 (|SystemSolvePackage| *4)) (|isDomain| *3 (|Fraction| (|Polynomial| *4))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *4))))) (|isDomain| *1 (|SystemSolvePackage| *4)) (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))))) 
(((*1 *1 *1 *2) (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4)) (|ofCategory| *2 (|Type|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)))) ((*1 *1 *1 *2) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|IndexedAggregate| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|OctonionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QuaternionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *3 *3 *3 *3 *4 *5 *5 *6 *7 *8 *8 *3) (AND (|isDomain| *6 (|List| (|Boolean|))) (|isDomain| *7 (|Matrix| (|DoubleFloat|))) (|isDomain| *8 (|Matrix| (|Integer|))) (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *5 (|Boolean|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagMatrixOperationsPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|LaurentPolynomial| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|ExpressionSpace|)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|Kernel| *1))) (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Equation| *1))) (|ofCategory| *1 (|ExpressionSpace|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Equation| *1)) (|ofCategory| *1 (|ExpressionSpace|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|DataList| *3))))) 
(((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *4 (|U32Vector|)) (|isDomain| *5 (|Integer|)) (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *3 *6)) (|ofCategory| *3 (|Type|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *3 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Matrix| (|Integer|))) (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2) (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *1) (|ofCategory| *1 (|IntegerNumberSystem|))) ((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|)))) ((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PermutationGroup| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *3 *3 *4 *4 *4 *4 *5 *6 *5 *4 *7 *3) (AND (|isDomain| *4 (|Matrix| (|Integer|))) (|isDomain| *5 (|Boolean|)) (|isDomain| *7 (|Matrix| (|DoubleFloat|))) (|isDomain| *3 (|Integer|)) (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagMatrixOperationsPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *2 (|Vector| (|MachineFloat|))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *1 *1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *2)) (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5)))) ((*1 *1 *1 *1) (AND (|ofCategory| *2 (|Field|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|PolynomialIdeals| *2 *3 *4 *5)) (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|)))) (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|List| (|Float|)))) (|isDomain| *1 (|RealSolvePackage|)) (|isDomain| *5 (|Float|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|RegularChain| *4 *5)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6)) (|ofType| *6 (|List| (|Symbol|))))) ((*1 *2 *3 *4 *4 *4) (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7)) (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|))))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7)) (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7)) (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Polynomial| *4))) (|ofCategory| *4 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4))))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Record| (|:| |preimage| (|List| *3)) (|:| |image| (|List| *3)))) (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *1) (|ofCategory| *1 (|StepThrough|)))) 
(((*1 *2 *3 *3 *3 *3 *4 *5 *6 *6 *7 *7 *3) (AND (|isDomain| *4 (|List| (|Boolean|))) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|Matrix| (|Integer|))) (|isDomain| *7 (|DoubleFloat|)) (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagMatrixOperationsPackage|))))) 
(((*1 *1 *1) (AND (|ofCategory| *2 (|FiniteFieldCategory|)) (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|ModMonic| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *1) (|partial| AND (|ofCategory| *1 (|KeyedDictionary| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|HallBasis|))))) 
(((*1 *2 *2 *2 *2) (AND (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| (|Expression| *3)))) (|ofCategory| *3 (|Join| (|IntegralDomain|) (|OrderedSet|))) (|isDomain| *1 (|TransSolvePackageService| *3))))) 
(((*1 *2 *3 *4 *3 *5 *3) (AND (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|Matrix| (|Integer|))) (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagMatrixOperationsPackage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2 *3 *2) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *1 (|DistinctDegreeFactorize| *4 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2) (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|ComplexCategory&| *3 *2)) (|ofCategory| *3 (|ComplexCategory| *2)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankAlgebra| *2 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2) (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|FramedAlgebra&| *3 *2 *4)) (|ofCategory| *3 (|FramedAlgebra| *2 *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FramedAlgebra| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2) (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|NumberFieldIntegralBasis| *3 *4)) (|ofCategory| *4 (|FramedAlgebra| *2 *3)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|)))) ((*1 *2 *3) (AND (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|PseudoRemainderSequence| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|AlgebraicallyClosedField|)) (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|List| (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))) (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *4 *5)) (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *3 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6)))) ((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6)))) ((*1 *2 *2 *2 *3) (AND (|isDomain| *3 (|Mapping| (|List| *7) (|List| *7))) (|isDomain| *2 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagMatrixOperationsPackage|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *1 *2 *3 *3 *3 *4) (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3))) (|ofCategory| *1 (|FiniteDivisorCategory| *4 *3 *5 *2)) (|ofCategory| *2 (|FunctionFieldCategory| *4 *3 *5)))) ((*1 *1 *2 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Field|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|ofCategory| *1 (|FiniteDivisorCategory| *2 *4 *5 *6)) (|ofCategory| *6 (|FunctionFieldCategory| *2 *4 *5)))) ((*1 *1 *2 *2) (AND (|ofCategory| *2 (|Field|)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3))) (|ofCategory| *1 (|FiniteDivisorCategory| *2 *3 *4 *5)) (|ofCategory| *5 (|FunctionFieldCategory| *2 *3 *4)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *2)) (|ofCategory| *2 (|FunctionFieldCategory| *3 *4 *5)))) ((*1 *1 *2) (AND (|isDomain| *2 (|FractionalIdeal| *4 (|Fraction| *4) *5 *6)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|SymmetricPolynomial| (|Fraction| (|Integer|)))) (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|IrrRepSymNatPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerNumberTheoryFunctions|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|PolynomialNumberTheoryFunctions|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *2) (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *2 *3)) (|ofCategory| *3 (|LeftModule| *2)))) ((*1 *2 *2) (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *3 *4 *4 *5 *4 *5 *4 *4 *5 *4) (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagMatrixOperationsPackage|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|BinaryExpansion|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|InputForm|))) (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *4 (|PolynomialCategory| *5 *7 (|OrderedVariableList| *6))) (|ofCategory| *7 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|ofCategory| *3 (|ProjectiveSpaceCategory| *5)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *5)) (|ofCategory| *9 (|PlacesCategory| *5 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *12 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|DesingTreeCategory| *11)) (|isDomain| *1 (|DesingTreePackage| *5 *6 *4 *7 *3 *8 *9 *10 *11 *2 *12)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *5 *6 *4 *7 *3 *8 *9 *10 *12))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 (|Integer|))) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 (|Integer|))) (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 (|Integer|))) (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| (|List| *5) *6)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|List| (|Record| (|:| |poly| *6) (|:| |eq| *3)))) (|isDomain| *1 (|PrimitiveRatRicDE| *5 *6 *3 *7)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *6)) (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| (|Fraction| *6))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| (|List| *5) *6)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|List| (|Record| (|:| |poly| *6) (|:| |eq| (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))))) (|isDomain| *1 (|RationalRicDE| *5 *6)) (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *3 *3 *2) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|BinaryExpansion|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|DecimalExpansion|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|HexadecimalExpansion|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|QuotientFieldCategory| *2)) (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|EuclideanDomain|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|)))) ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TabulatedComputationPackage| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Record| (|:| |flg| (|Union| "nil" "sqfr" "irred" "prime")) (|:| |fctr| *4) (|:| |xpnt| (|Integer|)))) (|ofCategory| *4 (|Join| (|UnivariatePolynomialCategory| *3) (|IntegralDomain|) (CATEGORY |domain| (SIGNATURE |gcd| ($ $ $))))) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|UnivariatePolynomialSquareFree| *3 *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *4) (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagMatrixOperationsPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *3 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|Complex| (|DoubleFloat|)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagMatrixOperationsPackage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *2 *2 *2 *2 *3) (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|StorageEfficientMatrixOperations| *4))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *3 *3 *3 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *4 *3 *5))))) 
(((*1 *1 *1 *2) (|partial| AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 *2) (|ofType| *4 *2)))) 
(((*1 *1 *1 *2) (|partial| AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *1 (|ODEIntegration| *4 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedFunctionSpace| *4) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|))))) ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *2 *3) (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *3 *4 *4 *5 *4 *5 *4 *4 *5 *4) (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Matrix| (|Complex| (|DoubleFloat|)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagMatrixOperationsPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Record| (|:| |totdeg| (|NonNegativeInteger|)) (|:| |pol| *4))) (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *4 (|PolynomialCategory| *6 *7 *8)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |lcmfij| *7) (|:| |totdeg| *5) (|:| |poli| *4) (|:| |polj| *4))) (|isDomain| *1 (|GroebnerInternalPackage| *6 *7 *8 *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|RetractableTo| (|Integer|))) (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *4) (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Matrix| (|Complex| (|DoubleFloat|)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagMatrixOperationsPackage|))))) 
(((*1 *2 *3 *4 *5 *6) (|partial| AND (|isDomain| *4 (|Mapping| *8 *8)) (|isDomain| *5 (|Mapping| (|Union| (|Record| (|:| |ratpart| *7) (|:| |coeff| *7)) "failed") *7)) (|isDomain| *6 (|List| (|Fraction| *8))) (|ofCategory| *7 (|Field|)) (|ofCategory| *8 (|UnivariatePolynomialCategory| *7)) (|isDomain| *3 (|Fraction| *8)) (|isDomain| *2 (|Record| (|:| |answer| (|Record| (|:| |mainpart| *3) (|:| |limitedlogs| (|List| (|Record| (|:| |coeff| *3) (|:| |logand| *3)))))) (|:| |a0| *7))) (|isDomain| *1 (|TranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|)))) ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2)) (|ofCategory| *2 (|MatrixCategory| *3 *4 *5)))) ((*1 *2 *3) (|partial| AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|ofCategory| *7 (|QuotientFieldCategory| *4)) (|ofCategory| *2 (|MatrixCategory| *7 *8 *9)) (|isDomain| *1 (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9 *2)) (|ofCategory| *3 (|MatrixCategory| *4 *5 *6)) (|ofCategory| *8 (|FiniteLinearAggregate| *7)) (|ofCategory| *9 (|FiniteLinearAggregate| *7)))) ((*1 *1 *1) (|partial| AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *2) (|partial| AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2)) (|ofCategory| *2 (|MatrixCategory| *3 *4 *5)))) ((*1 *1 *1) (|partial| AND (|isDomain| *1 (|Matrix| *2)) (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1) (|partial| AND (|ofCategory| *1 (|SquareMatrixCategory| *2 *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|DirectProductCategory| *2 *3)) (|ofCategory| *5 (|DirectProductCategory| *2 *3)) (|ofCategory| *3 (|Field|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|TableauxBumpers| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *1) (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|MoreSystemCommands|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|Finite|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1) (|isDomain| *1 (|ThreeDimensionalViewport|)))) 
(((*1 *2 *3 *4 *4 *3 *4 *5 *4 *4 *3 *3 *3 *3 *6 *3 *7) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Boolean|)) (|isDomain| *6 (|Matrix| (|DoubleFloat|))) (|isDomain| *7 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp49| OBJFUN)))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOptimisationPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| (|List| (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|)))))) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FiniteFieldFunctions| *4)))) ((*1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|)))) ((*1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|Union| (|SparseUnivariatePolynomial| *3) (|Vector| (|List| (|Record| (|:| |value| *3) (|:| |index| (|SingleInteger|))))))))) ((*1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|))) (|isDomain| *2 (|FortranCode|)) (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *2)) (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Mapping| (|Integer|) *2 *2)) (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Record| (|:| |Index| *4) (|:| |Entry| *5))) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Set| *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Mapping| *4)) (|isDomain| *1 (|RandomDistributions| *4)))) ((*1 *2 *3 *3) (AND (|isDomain| *2 (|Mapping| (|Float|))) (|isDomain| *1 (|RandomFloatDistributions|)) (|isDomain| *3 (|Float|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Segment| (|Integer|))) (|isDomain| *2 (|Mapping| (|Integer|))) (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3 *3 *3 *3 *4 *3 *5) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp50| LSFUN1)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOptimisationPackage|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|)))) (|isDomain| *1 (|BalancedPAdicRational| *3)) (|ofType| *3 (|Integer|)))) ((*1 *1 *2 *3 *3) (AND (|isDomain| *3 (|Stream| *2)) (|ofCategory| *2 (|EuclideanDomain|)) (|isDomain| *1 (|ContinuedFraction| *2)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| *3)) (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *1 (|ContinuedFraction| *3)))) ((*1 *2 *3) (AND (|isDomain| *2 (|ContinuedFraction| (|Integer|))) (|isDomain| *1 (|NumericContinuedFraction| *3)) (|ofCategory| *3 (|FloatingPointSystem|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|)))) (|isDomain| *1 (|PAdicRational| *3)) (|ofType| *3 (|Integer|)))) ((*1 *2 *1) (AND (|ofType| *3 (|Integer|)) (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|)))) (|isDomain| *1 (|PAdicRationalConstructor| *3 *4)) (|ofCategory| *4 (|PAdicIntegerCategory| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Record| (|:| |Indices| (|List| *3)) (|:| |Entries| (|List| *4)))) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3 *3 *3) (AND (|ofCategory| *3 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *3 *3 *3 *4 *3 *5) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp19| LSFUN2)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOptimisationPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |k| (|LyndonWord| *3)) (|:| |c| *4)))) (|isDomain| *1 (|LieExponentials| *3 *4 *5)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Join| (|CommutativeRing|) (|Module| (|Fraction| (|Integer|))))) (|ofType| *5 (|PositiveInteger|))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Vector| *6)) (|isDomain| *1 (|FiniteDivisor| *3 *4 *5 *6)) (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Record| (|:| |Ech| (|SparseEchelonMatrix| *3 *4)) (|:| |Lt| (|Matrix| (|Fraction| *4))) (|:| |Pivots| (|List| *4)) (|:| |Rank| (|NonNegativeInteger|)))) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5)) (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Matrix| *5)) (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *2 *3 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|DisplayPackage|)))) ((*1 *2 *2 *3 *4) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|)) (|isDomain| *1 (|DisplayPackage|)))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3)) (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *3 *3 *3 *4 *4 *4 *3 *5) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp24| FUNCT1)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOptimisationPackage|))))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *1 (|PolynomialIdeals| *4 *5 *6 *2)) (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6)))) ((*1 *1 *1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *2)) (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *2 *4) (|partial| AND (|isDomain| *3 (|List| (|Kernel| *2))) (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *2))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *3 *4 *3 *4 *4 *4 *4) (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *3 *3 *3 *3 *3 *4 *4 *4 *4 *5 *3 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|Boolean|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOptimisationPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FileCategory| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *3 *4 *3) (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *4 (|PrimitiveArray| (|Complex| (|DoubleFloat|)))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|BlasLevelOne|))))) 
(((*1 *2 *3 *3 *3 *3 *3 *3 *3 *3 *4 *5 *5 *5 *5 *5 *5 *6 *6 *6 *3 *3 *5 *7 *3 *8) (AND (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *6 (|Boolean|)) (|isDomain| *7 (|Matrix| (|Integer|))) (|isDomain| *8 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp20| QPHESS)))) (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOptimisationPackage|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|Group|))) ((*1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|)))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|DrawOption|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|isDomain| *1 (|BlowUpPackage| *4 *5 *2 *6 *3)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *4 *6)) (|ofCategory| *3 (|BlowUpMethodCategory|))))) 
(((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineInteger|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineInteger|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|SExpression|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|AxiomServer|))))) 
(((*1 *1 *2) (|partial| AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|WuWenTsunTriangularSet| *3 *4 *5 *6)))) ((*1 *1 *2 *3 *4) (|partial| AND (|isDomain| *2 (|List| *8)) (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8)) (|isDomain| *4 (|Mapping| *8 *8 *8)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *1 (|WuWenTsunTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3 *3 *3 *3 *3 *3 *4 *4 *4 *3 *3 *5 *6 *3 *6 *6 *5 *6 *6 *6 *6 *5 *3 *3 *3 *3 *3 *6 *6 *6 *3 *3 *3 *3 *3 *7 *4 *4 *4 *4 *3 *8 *9) (AND (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|Boolean|)) (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Matrix| (|Integer|))) (|isDomain| *8 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp55| CONFUN)))) (|isDomain| *9 (|Union| (|:| |fn| (|FileName|)) (|:| |fp| (|Asp49| OBJFUN)))) (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOptimisationPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |lcmfij| *5) (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *2) (|:| |polj| *2))) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *2)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Complex| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|GcdDomain|)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|GcdDomain|))) ((*1 *2 *3 *4 *4 *4) (AND (|isDomain| *3 (|PrimitiveArray| (|U32Vector|))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|RootsFindingPackage| *3))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|SortedCache| *3)) (|ofCategory| *3 (|CachableSet|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *3 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagOptimisationPackage|))))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Complex| (|DoubleFloat|))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|BlasLevelOne|))))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *2 *2) (AND (|isDomain| *1 (|IntegerRoots| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3 *4 *4 *5 *3 *3 *4 *3 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|List| (|Polynomial| *4))) (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *1 (|PolyGroebner| *4))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Kernel| *4)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|OrderedSet|)) (|isDomain| *1 (|KernelFunctions2| *2 *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Join| (|Ring|) (|PatternMatchable| *3) (|OrderedSet|) (|ConvertibleTo| *2))) (|isDomain| *2 (|Pattern| *3)) (|isDomain| *1 (|RewriteRule| *3 *4 *5)) (|ofCategory| *5 (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3) (|ConvertibleTo| *2)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5)) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Matrix| *4)))) ((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|FramedAlgebra&| *3 *4 *5)) (|ofCategory| *3 (|FramedAlgebra| *4 *5)))) ((*1 *2) (AND (|ofCategory| *1 (|FramedAlgebra| *3 *4)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Stream| (|DoubleFloat|))) (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|d01AgentsPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Stream| (|DoubleFloat|))) (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|ExpertSystemContinuityPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Stream| (|DoubleFloat|))) (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *2 *3 *4 *4 *5 *3 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *2 *2 *3) (AND (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *4 *2)) (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|IntegerNumberTheoryFunctions|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |lcmfij| *4) (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6) (|:| |polj| *6)))) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5 *6))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Join| (|Ring|) (|PatternMatchable| *3) (|OrderedSet|) (|ConvertibleTo| (|Pattern| *3)))) (|isDomain| *2 (|List| (|RewriteRule| *3 *4 *5))) (|isDomain| *1 (|Ruleset| *3 *4 *5)) (|ofCategory| *5 (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3) (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *4)) (|ofCategory| *4 (|Type|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *1 (|DictionaryOperations| *3)))) ((*1 *1) (AND (|ofCategory| *1 (|DictionaryOperations| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *3 *3 *4 *4 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Color|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4 *4 *3 *3 *5) (|partial| AND (|isDomain| *4 (|Kernel| *3)) (|isDomain| *5 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeff| *3))) (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7)) (|ofCategory| *7 (|SetCategory|)))) ((*1 *2 *3 *4 *4 *3 *4 *3 *5) (|partial| AND (|isDomain| *4 (|Kernel| *3)) (|isDomain| *5 (|Fraction| (|SparseUnivariatePolynomial| *3))) (|ofCategory| *3 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeff| *3))) (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7)) (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *1 *1 *1) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|DoublyLinkedAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *4 *2)))) ((*1 *2 *3 *2 *4) (AND (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| (|Expression| *5)))) (|isDomain| *3 (|Vector| (|Expression| *5))) (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|OrderedSet|))) (|isDomain| *1 (|TransSolvePackageService| *5)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *4 *4 *5 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |mval| (|Matrix| *3)) (|:| |invmval| (|Matrix| *3)) (|:| |genIdeal| (|PolynomialIdeals| *3 *4 *5 *6)))) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|UniversalSegment| (|Integer|))) (|ofCategory| *1 (|ExtensibleLinearAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|ExtensibleLinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3) (AND (|has| *2 (ATTRIBUTE (|commutative| "*"))) (|ofCategory| *5 (|FiniteLinearAggregate| *2)) (|ofCategory| *6 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|BezoutMatrix| *2 *3 *4 *5 *6)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *4 (|MatrixCategory| *2 *5 *6))))) 
(((*1 *2 *3 *4) (|partial| AND (|isDomain| *4 (|List| (|Fraction| *6))) (|isDomain| *3 (|Fraction| *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |mainpart| *3) (|:| |limitedlogs| (|List| (|Record| (|:| |coeff| *3) (|:| |logand| *3)))))) (|isDomain| *1 (|RationalIntegration| *5 *6))))) 
(((*1 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Matrix| *3))) (|isDomain| *1 (|AlgebraPackage| *3 *4)) (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|)))) (|isDomain| *1 (|DrawOption|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Matrix| *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Vector| *3)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *4)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5)) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Matrix| *4)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5)) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Vector| *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FramedAlgebra| *4 *5)) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Matrix| *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FramedAlgebra| *3 *4)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *2 (|Vector| *3)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *4)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *3)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|Matrix| *5))) (|isDomain| *3 (|Matrix| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Vector| *5)) (|isDomain| *1 (|StructuralConstantsPackage| *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *4 *5 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagFittingPackage|))))) 
(((*1 *2 *3 *2 *4) (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|RetractableTo| (|Integer|))) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *1 (|AlgebraicManipulations| *5 *2)) (|ofCategory| *2 (|FunctionSpace| *5)) (|ofCategory| *2 (|Join| (|Field|) (|ExpressionSpace|) (CATEGORY |domain| (SIGNATURE |numer| ((|SparseMultivariatePolynomial| *5 (|Kernel| $)) $)) (SIGNATURE |denom| ((|SparseMultivariatePolynomial| *5 (|Kernel| $)) $)) (SIGNATURE |coerce| ($ (|SparseMultivariatePolynomial| *5 (|Kernel| $)))))))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *2 (|Expression| (|DoubleFloat|))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|Finite|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|FiniteSetAggregate| *2)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|Finite|))))) 
(((*1 *2 *3 *3 *3) (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|RegularTriangularSetGcdPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *3 *3) (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3))) (|isDomain| *1 (|CoordinateSystems| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|))))) ((*1 *2) (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *2))) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *2 *5)) (|ofCategory| *3 (|FunctionFieldCategory| *4 *2 *5)))) ((*1 *2) (|partial| AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *2 *4)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2))) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1) (AND (|ofCategory| *1 (|AffineSpaceCategory| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3))) (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *1 (|Cell| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3)))) (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *1 (|Cell| *3))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6))) (|isDomain| *4 (|Fraction| *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|isDomain| *2 (|Record| (|:| |particular| (|Union| *4 "failed")) (|:| |basis| (|List| *4)))) (|isDomain| *1 (|RationalLODE| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6))) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|isDomain| *2 (|Record| (|:| |basis| (|List| (|Fraction| *6))) (|:| |mat| (|Matrix| *5)))) (|isDomain| *1 (|RationalLODE| *5 *6)) (|isDomain| *4 (|List| (|Fraction| *6))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6))) (|isDomain| *4 (|Fraction| *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|isDomain| *2 (|Record| (|:| |particular| (|Union| *4 "failed")) (|:| |basis| (|List| *4)))) (|isDomain| *1 (|RationalLODE| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6))) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|isDomain| *2 (|Record| (|:| |basis| (|List| (|Fraction| *6))) (|:| |mat| (|Matrix| *5)))) (|isDomain| *1 (|RationalLODE| *5 *6)) (|isDomain| *4 (|List| (|Fraction| *6)))))) 
(((*1 *2) (AND (|isDomain| *2 (|Table| (|StochasticDifferential| *3) (|StochasticDifferential| *3))) (|isDomain| *1 (|StochasticDifferential| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *1 *3) (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *5 (|DifferentialVariableCategory| *3)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|NonNegativeInteger|))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|DifferentialVariableCategory| *4)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5)) (|ofType| *3 (|NonNegativeInteger|)) (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))) (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) (|Symbol|))) (|:| A (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|AlgebraicNumber|)) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) (|Symbol|) (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|AlgebraicNumber|)) (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))) (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) *3)) (|:| A (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|AlgebraicNumber|)) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|AlgebraicNumber|))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) *3 (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|AlgebraicNumber|)) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| *4)) (|UnivariateFormalPowerSeries| *4))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) (|Symbol|))) (|:| A (|Mapping| *4 (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| *4))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| *4) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) (|Symbol|) (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *4)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| *4)) (|UnivariateFormalPowerSeries| *4))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) *3)) (|:| A (|Mapping| *4 (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| *4))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| *4) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) *3 (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessFinite| *4)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|Fraction| (|Integer|)))) (|UnivariateFormalPowerSeries| (|Fraction| (|Integer|))))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) (|Symbol|))) (|:| A (|Mapping| (|Integer|) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|Integer|)))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) (|Symbol|) (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|Integer|)) (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3)) (|ofCategory| (|Integer|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|Fraction| (|Integer|)))) (|UnivariateFormalPowerSeries| (|Fraction| (|Integer|))))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) *3)) (|:| A (|Mapping| (|Integer|) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|Integer|)))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) *3 (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|Integer|)) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| *4)) (|UnivariateFormalPowerSeries| *4))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|))) (|:| A (|Mapping| *5 (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| *5))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| *4) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| AX (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6)) (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))) (|ofType| *9 (|Mapping| *6 *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| *4)) (|UnivariateFormalPowerSeries| *4))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| |exprStream| (|Mapping| (|Stream| *6) *6 *3)) (|:| A (|Mapping| *5 (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| *5))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| *4) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| *4)))) (|:| AX (|Mapping| *6 (|NonNegativeInteger|) *3 *6)) (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| *3) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| *3) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))) (|ofType| *9 (|Mapping| *6 *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|Fraction| (|Polynomial| (|Integer|))))) (|UnivariateFormalPowerSeries| (|Fraction| (|Polynomial| (|Integer|)))))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|)))))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|))))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) (|Symbol|))) (|:| A (|Mapping| (|Polynomial| (|Integer|)) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|)))) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|))))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) (|Symbol|) (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|Polynomial| (|Integer|))) (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3)) (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|Record| (|:| |guessStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|Fraction| (|Polynomial| (|Integer|))))) (|UnivariateFormalPowerSeries| (|Fraction| (|Polynomial| (|Integer|)))))) (|:| |degreeStream| (|Stream| (|NonNegativeInteger|))) (|:| |testStream| (|Mapping| (|Stream| (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|)))))) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|))))))) (|:| |exprStream| (|Mapping| (|Stream| (|Expression| (|Integer|))) (|Expression| (|Integer|)) *3)) (|:| A (|Mapping| (|Polynomial| (|Integer|)) (|NonNegativeInteger|) (|NonNegativeInteger|) (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))) (|:| AF (|Mapping| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|)))) (|NonNegativeInteger|) (|NonNegativeInteger|) (|UnivariateFormalPowerSeries| (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| (|Integer|))))))) (|:| AX (|Mapping| (|Expression| (|Integer|)) (|NonNegativeInteger|) *3 (|Expression| (|Integer|)))) (|:| C (|Mapping| (|List| (|Polynomial| (|Integer|))) (|NonNegativeInteger|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 HPSPEC) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)) (|ofType| *4 (|Symbol|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| HPSPEC (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)) (|ofType| *4 *3)))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RoutinesTable|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|List| (|DoubleFloat|)))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8)) (|ofCategory| *5 (|FunctionSpace| *4)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6))) (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8)))) ((*1 *2 *3) (AND (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|)))) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|ofCategory| *6 (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|))) (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|isDomain| *2 (|List| (|List| (|SparseUnivariatePolynomial| (|SparseUnivariatePolynomial| *4))))) (|isDomain| *1 (|AffineAlgebraicSetComputeWithResultant| *4 *5 *6 *7 *8)) (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|SparseUnivariatePolynomial| *4)))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *3 (|DivisorCategory| *10)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *3 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *4 *5 *6 *7 *8 *9 *10 *3 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|isDomain| *1 (|InterpolateFormsPackage| *4 *5 *6 *7 *8 *9 *10 *3)) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *3 (|DivisorCategory| *10)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Divisor| (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *5))) (|isDomain| *4 (|List| (|DistributedMultivariatePolynomial| *6 *5))) (|ofCategory| *5 (|FiniteFieldCategory|)) (|ofType| *6 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|DistributedMultivariatePolynomial| *6 (|PseudoAlgebraicClosureOfFiniteField| *5)))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *5 *6 *7)) (|ofCategory| *7 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| (|DistributedMultivariatePolynomial| *5 *4))) (|isDomain| *3 (|Divisor| (|Places| *4))) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *4 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|PositiveInteger|)) (|has| *4 (ATTRIBUTE (|commutative| "*"))) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|RepresentationPackage1| *4)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|List| (|Matrix| *4))) (|isDomain| *3 (|PositiveInteger|)) (|has| *4 (ATTRIBUTE (|commutative| "*"))) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|RepresentationPackage1| *4))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |coef2| *3) (|:| |gcd| *3))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|ofCategory| *1 (|NonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| *3 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Record| (|:| |normal| (|Factored| *3)) (|:| |special| (|Factored| *3)))) (|isDomain| *1 (|MonomialExtensionTools| *5 *3))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *2 (|List| *8)) (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *2 *1) (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4)) (|ofCategory| *1 (|FreeLieAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|)))) ((*1 *1 *1 *1) (|partial| AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *2) (|partial| AND (|isDomain| *1 (|OrderedFreeMonoid| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *1) (|partial| AND (|isDomain| *1 (|OrderedFreeMonoid| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|OrderedFreeMonoid| *3)) (|ofCategory| *1 (|XFreeAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *5 *6) (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Union| (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)) "undefined")) (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|)))) ((*1 *2 *3 *4 *4 *5) (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|DoubleFloat|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|)))) ((*1 *2 *2 *3 *4 *4 *5) (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Segment| (|DoubleFloat|))) (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| (|PositiveInteger|))) (|isDomain| *1 (|ViewDefaultsPackage|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| (|PositiveInteger|))) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|PolynomialCategory| *4 *6 (|OrderedVariableList| *5))) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *9 (|PlacesCategory| *4 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *4 *5 *2 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *4 *5 *2 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|DistributedMultivariatePolynomial| *5 *4)) (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *4 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|DistributedMultivariatePolynomial| *5 *4)) (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *4 *5 *6)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|isDomain| *1 (|PackageForPoly| *4 *2 *5 *6)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *4 *5)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|ProjectiveSpaceCategory| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| (|Complex| *3)))))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| (|Complex| *4)))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|TrigonometricManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *3))))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|TrigonometricManipulations| *4 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4)))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|List| (|UnivariatePolynomial| *5 *4))) (|isDomain| *1 (|SturmHabichtPackage| *4 *5)) (|isDomain| *3 (|UnivariatePolynomial| *5 *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *3 *4 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |totdeg| (|NonNegativeInteger|)) (|:| |pol| *3)))) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *3 (|PolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *7 *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FreeModuleCat| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3)))))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |k| (|PoincareBirkhoffWittLyndonBasis| *3)) (|:| |c| *4)))) (|isDomain| *1 (|LieExponentials| *3 *4 *5)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Join| (|CommutativeRing|) (|Module| (|Fraction| (|Integer|))))) (|ofType| *5 (|PositiveInteger|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|LyndonWord| *3))) (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3)) (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *2 *12)) (|ofCategory| *12 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|DivisorCategory| *10)) (|isDomain| *1 (|DesingTreePackage| *4 *5 *6 *7 *8 *9 *10 *2 *11 *3 *12)) (|ofCategory| *3 (|DesingTreeCategory| *11)))) ((*1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *2 *12)) (|ofCategory| *12 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|DivisorCategory| *9)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *5 *6 *7 *8 *9 *2 *10 *11 *12)) (|ofCategory| *11 (|DesingTreeCategory| *10)))) ((*1 *2) (AND (|isDomain| *2 (|Divisor| (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *3))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|Divisor| (|Places| *3))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|CharacteristicZero|)) (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3 *4 *4 *4 *5 *4 *6 *6 *3) (AND (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *5 (|Matrix| (|Integer|))) (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagInterpolationPackage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Integer|)) (|ofCategory| *6 (|LocalPowerSeriesCategory| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Matrix| *5)) (|isDomain| *1 (|LinearSystemFromPowerSeriesPackage| *5 *6))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary")) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary")) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Dequeue| *3)))) ((*1 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|)) (|ofCategory| *1 (|DequeueAggregate| *3)))) ((*1 *1) (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|))))) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|XExponentialPackage| *4 *5 *2)) (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))) 
(((*1 *1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Record| (|:| |goodPols| (|List| *7)) (|:| |badPols| (|List| *7)))) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7)) (|isDomain| *3 (|List| *7))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *3 (|PolynomialCategory| *4 *6 (|OrderedVariableList| *5))) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) *2)) (|ofCategory| *7 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *9 (|PlacesCategory| *4 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *4 *5 *3 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|DesingTreePackage| *4 *5 *3 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2) (AND (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5))) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6)) (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6)))) ((*1 *2) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) *2)) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *5 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *2 (|Union| (|List| *8) "failed" "Infinite" (|Integer|))) (|isDomain| *1 (|AffineAlgebraicSetComputeWithGroebnerBasis| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *2 (|Union| (|List| *8) "failed" "Infinite" (|Integer|))) (|isDomain| *1 (|AffineAlgebraicSetComputeWithResultant| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *1 *1 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1))) (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3)))) ((*1 *2 *1 *1) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1))) (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Vector| (|List| (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|)))))) (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *1 *1 *1) (|partial| AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4)) (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4)) (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4)))) ((*1 *1 *1 *1) (|partial| AND (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3)) (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3)) (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3)))) ((*1 *1 *1 *1) (|partial| AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3)) (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3)) (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))) 
(((*1 *2 *2 *3 *4 *4) (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|ofCategory| *6 (|FiniteLinearAggregate| *3)) (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *3 *5 *6))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2 *2 *3 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *4 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|FiniteFieldCategory|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FiniteFieldFactorization| *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|FiniteFieldCategory|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FiniteFieldFactorizationWithSizeParseBySideEffect| *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|RetractableTo| (|Integer|))) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|AlgebraicFunction| *4 *2)) (|ofCategory| *2 (|FunctionSpace| *4)))) ((*1 *1 *1 *1) (|isDomain| *1 (|CardinalNumber|))) ((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|CombinatorialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *1 *1 *1) (|isDomain| *1 (|DoubleFloat|))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|DivisionRing|)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Algebra| *3)) (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *4 *5 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *4 *5)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Algebra| *3)) (|ofCategory| *5 (|UnivariateLaurentSeriesCategory| *4)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *4 *5 *2 *6)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *5)) (|ofCategory| *6 (|PartialTranscendentalFunctions| *5)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|))) ((*1 *1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|SemiGroup|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|Group|)) (|isDomain| *2 (|Integer|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InputForm|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|InputForm|)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|MappingPackage1| *4)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|Field|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|StorageEfficientMatrixOperations| *4)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *3 *4)) (|ofCategory| *4 (|LeftModule| *3)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *4 *5)) (|ofCategory| *5 (|LeftModule| *4)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|Monad|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|MonadWithUnit|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|Monoid|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|MyExpression| *2 *3)) (|ofType| *2 (|Symbol|)) (|ofCategory| *3 (|Join| (|Ring|) (|OrderedSet|) (|IntegralDomain|))))) ((*1 *1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|OrderedFreeMonoid| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Operator| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Operator| *4)) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|RadicalCategory|)) (|isDomain| *2 (|Fraction| (|Integer|))))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|StochasticDifferential| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|SemiGroup|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *3 *4)) (|ofCategory| *6 (|DirectProductCategory| *3 *4)) (|ofCategory| *4 (|Field|)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|GcdDomain|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|FunctionFieldCategory| *2 *3 *4)) (|ofCategory| *2 (|UniqueFactorizationDomain|)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3))))) ((*1 *1 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|GcdDomain|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|PolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|)))) ((*1 *2 *2 *3) (AND (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|SubResultantPackage| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Record| (|:| |value| *4) (|:| |weight| (|Integer|))))) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Mapping| *4)) (|isDomain| *1 (|RandomDistributions| *4))))) 
(((*1 *2 *3 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4)))) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| *6 *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Field|)) (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6))) (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |logpart| *3))) (|isDomain| *1 (|AlgebraicHermiteIntegration| *5 *6 *7 *3)) (|ofCategory| *3 (|FunctionFieldCategory| *5 *6 *7)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| *6 *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Record| (|:| |answer| (|Fraction| *6)) (|:| |logpart| (|Fraction| *6)) (|:| |specpart| (|Fraction| *6)) (|:| |polypart| *6))) (|isDomain| *1 (|TranscendentalHermiteIntegration| *5 *6)) (|isDomain| *3 (|Fraction| *6))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Factored| *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *5 *6))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InnerAlgebraicNumber|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *2 (|PolynomialCategory| *4 *6 *5)) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *2)) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|)))) ((*1 *2) (AND (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Boolean|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Vector| *3)) (|isDomain| *1 (|ModMonic| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Integer|)) (|ofCategory| *6 (|LocalPowerSeriesCategory| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Matrix| *5)) (|isDomain| *1 (|LinearSystemFromPowerSeriesPackage| *5 *6))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9)) (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| *8)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|Ring|)) (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *8)) (|isDomain| *1 (|FactoringUtilities| *6 *7 *8 *9))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|IrredPolyOverFiniteField| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *1 *1 *1 *2) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|AffineSpaceCategory| *4)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|AffineSpaceCategory| *3)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|PermutationCategory| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Set| *3)))) ((*1 *2 *1 *3) (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Set| (|List| *4))) (|isDomain| *1 (|PermutationGroup| *4)) (|isDomain| *3 (|List| *4)))) ((*1 *2 *1 *3) (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Set| (|Set| *4))) (|isDomain| *1 (|PermutationGroup| *4)) (|isDomain| *3 (|Set| *4)))) ((*1 *2 *1 *3) (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|PermutationGroup| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ProjectiveSpaceCategory| *4)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ProjectiveSpaceCategory| *3))))) 
(((*1 *2 *2 *3 *4) (AND (|isDomain| *2 (|List| *8)) (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8)) (|isDomain| *4 (|Mapping| *8 *8 *8)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3)) (|:| |coef1| (|NewSparseUnivariatePolynomial| *3)))) (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |gcd| *1) (|:| |coef1| *1))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *4 *5 *5 *5 *5 *4 *6) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *6 (|Mapping| (|Void|) (|Vector| *5) (|Vector| *5) (|Float|))) (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|isDomain| *2 (|Union| (|List| *7) "failed" "Infinite" (|Integer|))) (|isDomain| *1 (|AffineAlgebraicSetComputeWithGroebnerBasis| *4 *5 *3 *6 *7)) (|ofCategory| *3 (|PolynomialCategory| *4 *6 (|OrderedVariableList| *5))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|isDomain| *2 (|Union| (|List| *7) "failed" "Infinite" (|Integer|))) (|isDomain| *1 (|AffineAlgebraicSetComputeWithResultant| *4 *5 *3 *6 *7)) (|ofCategory| *3 (|PolynomialCategory| *4 *6 (|OrderedVariableList| *5))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|SparseUnivariatePolynomial| *4))) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|isDomain| *2 (|Union| (|List| *8) "failed" "Infinite" (|Integer|))) (|isDomain| *1 (|AffineAlgebraicSetComputeWithResultant| *4 *5 *6 *7 *8)) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *1) (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|))) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *3) (|partial| AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| *2) (|LinearlyExplicitRingOver| *2) (|GcdDomain|))) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ElementaryFunctionSign| *4 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4))))) ((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|OrderedCompletion| *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6))) (|ofCategory| *6 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| *2) (|LinearlyExplicitRingOver| *2) (|GcdDomain|))) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ElementaryFunctionSign| *6 *3)))) ((*1 *2 *3 *4 *3 *5) (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|)) (|ofCategory| *6 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| *2) (|LinearlyExplicitRingOver| *2) (|GcdDomain|))) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ElementaryFunctionSign| *6 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6))))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4))) (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RationalFunctionSign| *4)))) ((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|OrderedCompletion| (|Fraction| (|Polynomial| *6)))) (|isDomain| *3 (|Fraction| (|Polynomial| *6))) (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RationalFunctionSign| *6)))) ((*1 *2 *3 *4 *3 *5) (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *6))) (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|)) (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RationalFunctionSign| *6)))) ((*1 *2 *3) (|partial| AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ToolsForSign| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|MultiDictionary| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|List| (|Record| (|:| |entry| *3) (|:| |count| (|NonNegativeInteger|)))))))) 
(((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *6 (|PositiveInteger|)) (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|Record| (|:| |plist| (|List| *3)) (|:| |modulo| *5))) (|isDomain| *1 (|GeneralHenselPackage| *5 *3)) (|isDomain| *4 (|List| *3))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|LiouvillianFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FileCategory| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *4 (|Mapping| (|Boolean|) *9)) (|isDomain| *5 (|Mapping| (|Boolean|) *9 *9)) (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8)) (|ofCategory| *6 (|IntegralDomain|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |bas| *1) (|:| |top| (|List| *9)))) (|isDomain| *3 (|List| *9)) (|ofCategory| *1 (|TriangularSetCategory| *6 *7 *8 *9)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *4 (|Mapping| (|Boolean|) *8 *8)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |bas| *1) (|:| |top| (|List| *8)))) (|isDomain| *3 (|List| *8)) (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5)) (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4 *4 *3) (|partial| AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *5 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeff| *3))) (|isDomain| *1 (|PureAlgebraicIntegration| *5 *3 *6)) (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|DivisorCategory| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *1) (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|)) (|ofType| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|FiniteAbelianMonoidRing| *5 *7)) (|ofCategory| *7 (|DirectProductCategory| *8 (|NonNegativeInteger|))) (|ofType| *8 (|NonNegativeInteger|)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialPackageForCurve| *5 *6 *7 *8 *4)) (|ofCategory| *4 (|ProjectiveSpaceCategory| *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SubSpaceComponentProperty|)) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |gcd| *3))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2) (|partial| AND (|isDomain| *2 (|Expression| (|DoubleFloat|))) (|isDomain| *1 (|e04AgentsPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|AttributeButtons|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1 *1 *3) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5)) (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *4 *5)) (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|ArrayStack| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Heap| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Queue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Stack| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5 *6))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FileCategory| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3))) (|isDomain| *1 (|CoordinateSystems| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Record| (|:| |k| (|OrderedFreeMonoid| *3)) (|:| |c| *4)))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Join| (|EuclideanDomain|) (CATEGORY |domain| (SIGNATURE |squareFree| ((|Factored| $) $))))) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5)) (|ofCategory| *5 (|FramedAlgebra| *3 *4)))) ((*1 *2 *2 *2 *3) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Join| (|EuclideanDomain|) (CATEGORY |domain| (SIGNATURE |squareFree| ((|Factored| $) $))))) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5)) (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *6 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6) (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))))) (|ofCategory| *7 (|OrderedRing|)) (|ofCategory| *8 (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|) (|TranscendentalFunctionCategory|) (CATEGORY |domain| (SIGNATURE |differentiate| ($ $)) (SIGNATURE |integrate| ($ $))))) (|isDomain| *2 (|Union| (|:| |%series| *8) (|:| |%problem| (|Record| (|:| |func| (|String|)) (|:| |prob| (|String|)))))) (|isDomain| *1 (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10)) (|isDomain| *5 (|String|)) (|ofCategory| *9 (|PartialTranscendentalFunctions| *8)) (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5)) (|ofCategory| *3 (|Join| (|Field|) (|OrderedSet|))) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |xinit| (|DoubleFloat|)) (|:| |xend| (|DoubleFloat|)) (|:| |fn| (|Vector| (|Expression| (|DoubleFloat|)))) (|:| |yinit| (|List| (|DoubleFloat|))) (|:| |intvals| (|List| (|DoubleFloat|))) (|:| |g| (|Expression| (|DoubleFloat|))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Record| (|:| |stiffnessFactor| (|Float|)) (|:| |stabilityFactor| (|Float|)))) (|isDomain| *1 (|d02AgentsPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))))) 
(((*1 *2 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *2 *1) (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *2 *1) (AND (|isDomain| *1 (|Queue| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *4 *2 *3 *5)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofCategory| *5 (|MonogenicAlgebra| *2 *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |key| (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|:| |entry| (|Record| (|:| |endPointContinuity| (|Union| (|:| |continuous| "Continuous at the end points") (|:| |lowerSingular| "There is a singularity at the lower end point") (|:| |upperSingular| "There is a singularity at the upper end point") (|:| |bothSingular| "There are singularities at both end points") (|:| |notEvaluated| "End point continuity not yet evaluated"))) (|:| |singularitiesStream| (|Union| (|:| |str| (|Stream| (|DoubleFloat|))) (|:| |notEvaluated| "Internal singularities not yet evaluated"))) (|:| |range| (|Union| (|:| |finite| "The range is finite") (|:| |lowerInfinite| "The bottom of range is infinite") (|:| |upperInfinite| "The top of range is infinite") (|:| |bothInfinite| "Both top and bottom points are infinite") (|:| |notEvaluated| "Range not yet evaluated")))))))) (|isDomain| *1 (|IntegrationFunctionsTable|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|)))) ((*1 *2) (AND (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *3 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *9 (|PlacesCategory| *4 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *3 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|List| *9)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *4 *5 *6 *7 *3 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2 *3) (AND (|isDomain| *3 (|ProjectivePlaneOverPseudoAlgebraicClosureOfFiniteField| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|List| (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *4))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|ProjectivePlane| *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| (|Places| *4))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Record| (|:| |op| (|BasicOperator|)) (|:| |w| (|DoubleFloat|)))) (|isDomain| *1 (|d01WeightsPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|d01AgentsPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|ExpertSystemContinuityPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|)))) ((*1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteFieldFactorization| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteFieldFactorizationWithSizeParseBySideEffect| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *1 (|CommuteUnivariatePolynomialCategory| *3 *4 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)))) ((*1 *1 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|DivisorCategory| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|Finite|)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|UnivariateTaylorSeriesCZero| (|Integer|) |t|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *3 *4 *5 *6 *7 *8 *9 *10 *11 *12 *13)) (|ofCategory| *12 (|DesingTreeCategory| *11)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|DivisorCategory| *10)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *11 *14)) (|ofCategory| *14 (|BlowUpMethodCategory|)) (|isDomain| *2 (|UnivariateTaylorSeriesCZero| (|Integer|) |t|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *4 *5 *6 *7 *8 *9 *10 *11 *12 *13 *14)) (|ofCategory| *13 (|DesingTreeCategory| *12)))) ((*1 *2) (AND (|isDomain| *2 (|UnivariateTaylorSeriesCZero| (|Integer|) |t|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| (|PseudoAlgebraicClosureOfFiniteField| *3) (|Finite|)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|UnivariateTaylorSeriesCZero| (|Integer|) |t|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *4 *5 *6)) (|ofCategory| (|PseudoAlgebraicClosureOfFiniteField| *4) (|Finite|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|UnivariateTaylorSeriesCZero| (|Integer|) |t|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *3 (|Finite|)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|UnivariateTaylorSeriesCZero| (|Integer|) |t|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *4 *5 *6)) (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|))))) 
(((*1 *1) (AND (|ofCategory| *1 (|ComplexCategory| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9)) (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| (|List| *8))) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|EuclideanDomain|)) (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Record| (|:| |upol| (|SparseUnivariatePolynomial| *8)) (|:| |Lval| (|List| *8)) (|:| |Lfact| (|List| (|Record| (|:| |factor| (|SparseUnivariatePolynomial| *8)) (|:| |exponent| (|Integer|))))) (|:| |ctpol| *8))) (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Complex| *5)) (|ofCategory| *5 (|Join| (|FunctionSpace| *4) (|RadicalCategory|) (|TranscendentalFunctionCategory|))) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|))) (|ofCategory| *2 (|Join| (|FunctionSpace| (|Complex| *4)) (|RadicalCategory|) (|TranscendentalFunctionCategory|))) (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *2))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Mapping| (|List| *7) *7 (|SparseUnivariatePolynomial| *7))) (|isDomain| *5 (|Mapping| (|Factored| *7) *7)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6)) (|ofCategory| *6 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |frac| (|Fraction| *7)) (|:| |eq| *3)))) (|isDomain| *1 (|PrimitiveRatRicDE| *6 *7 *3 *8)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *7)) (|ofCategory| *8 (|LinearOrdinaryDifferentialOperatorCategory| (|Fraction| *7))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| (|Factored| *6) *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |frac| (|Fraction| *6)) (|:| |eq| (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))))) (|isDomain| *1 (|RationalRicDE| *5 *6)) (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))))) 
(((*1 *1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|SplittingNode| *4 *5))) (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5)) (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *1 (|SplittingTree| *4 *5)))) ((*1 *1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|SplittingNode| *3 *4))) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|EuclideanDomain|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *1 (|ODEIntegration| *4 *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedFunctionSpace| *4) (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|)))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *2 *3 *4) (|partial| AND (|isDomain| *4 (|Mapping| *3)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|IntegralDomain|)) (|ofCategory| *7 (|PolynomialCategory| *6 *5 *3)) (|isDomain| *1 (|GosperSummationMethod| *5 *3 *6 *7 *2)) (|ofCategory| *2 (|Join| (|RetractableTo| (|Fraction| (|Integer|))) (|Field|) (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)) (SIGNATURE |numer| (*7 $)) (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5)) (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| (|DoubleFloat|))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *1 *1) (AND (|ofCategory| *2 (|EuclideanDomain|)) (|ofCategory| *3 (|QuotientFieldCategory| *2)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *1 (|FractionalIdeal| *2 *3 *4 *5)) (|ofCategory| *5 (|Join| (|FramedAlgebra| *3 *4) (|RetractableTo| *3)))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Mapping| *5 *5)) (|ofCategory| *5 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *2 (|Record| (|:| |solns| (|List| *5)) (|:| |maps| (|List| (|Record| (|:| |arg| *5) (|:| |res| *5)))))) (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *5)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2 *2 *3) (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|Divisor| (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *4))) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Divisor| (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *5))) (|isDomain| *4 (|List| (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *5))) (|ofCategory| *5 (|FiniteFieldCategory|)) (|isDomain| *2 (|Matrix| *5)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *5 *6 *7)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|Divisor| (|Places| *4))) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Divisor| (|Places| *5))) (|isDomain| *4 (|List| (|Places| *5))) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Matrix| *5)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *5 *6 *7)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|BlowUpMethodCategory|))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3)) (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *1 *2 *2 *2 *2) (AND (|ofCategory| *1 (|QuaternionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|AbelianMonoidRing| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DeRhamComplex| *3 *4)) (|ofCategory| *3 (|Join| (|Ring|) (|OrderedSet|))) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|DivisorCategory| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *5 (|DifferentialVariableCategory| *3)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ExtAlgBasis|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *8)) (|isDomain| *4 (|List| *6)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|Ring|)) (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *1 (|FactoringUtilities| *5 *6 *7 *8)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|GradedModule| *3 *2)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *2 (|AbelianMonoid|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|LaurentPolynomial| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *3) (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *3 *4)) (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|MonogenicLinearOperator| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|PermutationGroup| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *7 *2)) (|ofType| *7 *2) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|PackageForPoly| *5 *3 *6 *7)) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *5 *6)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *1 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|NonNegativeInteger|))))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|U32VectorPolynomialOperations|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *2 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|OrderedAbelianMonoid|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SetCategoryWithDegree|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *2 (|Fraction| (|Integer|))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|XPolynomialsCat| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *6 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *7 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *8 (|PlacesCategory| *4 *7)) (|ofCategory| *1 (|InfinitlyClosePointCategory| *4 *5 *3 *6 *2 *7 *8 *9 *10)) (|ofCategory| *3 (|PolynomialCategory| *4 *6 (|OrderedVariableList| *5))) (|ofCategory| *2 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|DivisorCategory| *8)) (|ofCategory| *10 (|BlowUpMethodCategory|)))) ((*1 *1 *2 *3 *4 *5 *6 *5 *7 *8 *9) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| (|construct| (QUOTE X) (QUOTE Y)) *8)) (|isDomain| *4 (|AffinePlane| *8)) (|isDomain| *9 (|Symbol|)) (|ofCategory| *8 (|Field|)) (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *12 (|DirectProductCategory| (|#| *10) *5)) (|ofCategory| *13 (|LocalPowerSeriesCategory| *8)) (|ofCategory| *14 (|PlacesCategory| *8 *13)) (|ofCategory| *1 (|InfinitlyClosePointCategory| *8 *10 *11 *12 *2 *13 *14 *7 *6)) (|ofCategory| *11 (|PolynomialCategory| *8 *12 (|OrderedVariableList| *10))) (|ofCategory| *2 (|ProjectiveSpaceCategory| *8)) (|ofCategory| *7 (|DivisorCategory| *14)) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *3 (|Field|)) (|ofCategory| *1 (|PlacesCategory| *3 *4)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *1 (|PlacesCategory| *3 *4)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *3)))) ((*1 *1) (|isDomain| *1 (|SingletonAsOrderedSet|)))) 
(((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Polynomial| *4)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Polynomial| *4)))) ((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Polynomial| *4)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Polynomial| *4))))) 
(((*1 *2 *2 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|CharacteristicZero|))) (|isDomain| *1 (|InfiniteProductCharacteristicZero| *4 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4)))) ((*1 *2 *2 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Join| (|Field|) (|Finite|) (|ConvertibleTo| *3))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *6 (|MonogenicAlgebra| *4 *5)) (|isDomain| *1 (|InfiniteProductFiniteField| *4 *5 *6 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *6)))) ((*1 *2 *2 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Join| (|Field|) (|Finite|) (|ConvertibleTo| *3))) (|isDomain| *1 (|InfiniteProductPrimeField| *4 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4)))) ((*1 *2 *2 *3 *3) (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|CharacteristicZero|))) (|isDomain| *1 (|StreamInfiniteProduct| *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *1) (AND (|isDomain| *1 (|DirichletRing| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *3 *4 *4) (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *1 (|MatrixManipulation| *3 *4 *5 *2)) (|ofCategory| *2 (|MatrixCategory| *3 *4 *5)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|Matrix| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *4)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *6)) (|ofCategory| *5 (|DirectProductCategory| *3 *4)) (|ofCategory| *6 (|DirectProductCategory| *3 *4))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|PrimitiveArray| *3)) (|isDomain| *1 (|SubResultantPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|List| (|List| *4)))) (|isDomain| *2 (|List| (|List| *4))) (|isDomain| *1 (|TableauxBumpers| *4)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5)) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Matrix| *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FramedAlgebra| *3 *4)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *1 *2 *3 *1 *3) (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|PatternMatchResult| *4 *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|AlgebraPackage| *3 *4)) (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OpenMathErrorKind|)) (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SetOfMIntegersInOneToN| *4 *5)) (|ofType| *4 *3) (|ofType| *5 *3)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|DesingTree| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|InfClsPt| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|InfinitlyClosePointOverPseudoAlgebraicClosureOfFiniteField| *3 *4 *5)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|InfinitlyClosePoint| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5)) (|ofCategory| *5 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Fraction| (|Integer|))) (|ofCategory| *5 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Equation| *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))) (|ofCategory| *5 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|Fraction| (|Integer|))) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *3 (|Mapping| *8 (|Fraction| (|Integer|)))) (|isDomain| *4 (|Equation| *8)) (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|)))) (|isDomain| *6 (|Fraction| (|Integer|))) (|ofCategory| *8 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *7))) (|ofCategory| *7 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *8)))) ((*1 *2 *3 *4 *5 *6 *7) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3)) (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|)))) (|isDomain| *7 (|Fraction| (|Integer|))) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *8))) (|ofCategory| *8 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GenerateUnivariatePowerSeries| *8 *3)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Ring|)) (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *3)) (|ofCategory| *3 (|UnivariateLaurentSeriesCategory| *4))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2 *3 *3 *2) (|partial| AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Join| (|Monoid|) (|Finite|) (CATEGORY |package| (SIGNATURE ** (*3 *3 (|Integer|)))))) (|isDomain| *1 (|DiscreteLogarithmPackage| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2)) (|ofCategory| *2 (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|))) (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| (|List| (|List| (|NonNegativeInteger|)))))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *4 (|Field|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2))))) 
(((*1 *1 *1) (AND (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5)) (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5)) (|ofCategory| *5 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| *4) (|LinearlyExplicitRingOver| *4))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Equation| *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))) (|ofCategory| *5 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Equation| *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| *5) (|LinearlyExplicitRingOver| *5))) (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *7 (|Integer|))) (|isDomain| *4 (|Equation| *7)) (|isDomain| *5 (|UniversalSegment| (|Integer|))) (|ofCategory| *7 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6))) (|ofCategory| *6 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3)) (|isDomain| *6 (|UniversalSegment| (|Integer|))) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *7))) (|ofCategory| *7 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *4 *3)) (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6))))) 
(((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|EuclideanDomain|)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Vector| (|List| *6))) (|isDomain| *1 (|GenExEuclid| *4 *6)) (|isDomain| *5 (|List| *6))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *7)) (|isDomain| *3 (|Integer|)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|)) (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|PartialFraction| *2)) (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *1) (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *5 (|ListAggregate| *4)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternMatchResult| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NumericalIntegrationProblem|)) (|isDomain| *2 (|Record| (|:| |measure| (|Float|)) (|:| |name| (|String|)) (|:| |explanations| (|List| (|String|))) (|:| |extra| (|Result|)))) (|isDomain| *1 (|AnnaNumericalIntegrationPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|NumericalIntegrationProblem|)) (|isDomain| *4 (|RoutinesTable|)) (|isDomain| *2 (|Record| (|:| |measure| (|Float|)) (|:| |name| (|String|)) (|:| |explanations| (|List| (|String|))) (|:| |extra| (|Result|)))) (|isDomain| *1 (|AnnaNumericalIntegrationPackage|)))) ((*1 *2 *3 *4) (AND (|ofCategory| *1 (|NumericalIntegrationCategory|)) (|isDomain| *3 (|RoutinesTable|)) (|isDomain| *4 (|Record| (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|List| (|Segment| (|OrderedCompletion| (|DoubleFloat|))))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Record| (|:| |measure| (|Float|)) (|:| |explanations| (|String|)) (|:| |extra| (|Result|)))))) ((*1 *2 *3 *4) (AND (|ofCategory| *1 (|NumericalIntegrationCategory|)) (|isDomain| *3 (|RoutinesTable|)) (|isDomain| *4 (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Record| (|:| |measure| (|Float|)) (|:| |explanations| (|String|)) (|:| |extra| (|Result|)))))) ((*1 *2 *3 *4) (AND (|ofCategory| *1 (|OrdinaryDifferentialEquationsSolverCategory|)) (|isDomain| *3 (|RoutinesTable|)) (|isDomain| *4 (|Record| (|:| |xinit| (|DoubleFloat|)) (|:| |xend| (|DoubleFloat|)) (|:| |fn| (|Vector| (|Expression| (|DoubleFloat|)))) (|:| |yinit| (|List| (|DoubleFloat|))) (|:| |intvals| (|List| (|DoubleFloat|))) (|:| |g| (|Expression| (|DoubleFloat|))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Record| (|:| |measure| (|Float|)) (|:| |explanations| (|String|)))))) ((*1 *2 *3) (AND (|isDomain| *3 (|NumericalODEProblem|)) (|isDomain| *2 (|Record| (|:| |measure| (|Float|)) (|:| |name| (|String|)) (|:| |explanations| (|List| (|String|))))) (|isDomain| *1 (|AnnaOrdinaryDifferentialEquationPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|NumericalODEProblem|)) (|isDomain| *4 (|RoutinesTable|)) (|isDomain| *2 (|Record| (|:| |measure| (|Float|)) (|:| |name| (|String|)) (|:| |explanations| (|List| (|String|))))) (|isDomain| *1 (|AnnaOrdinaryDifferentialEquationPackage|)))) ((*1 *2 *3 *4) (AND (|ofCategory| *1 (|NumericalOptimizationCategory|)) (|isDomain| *3 (|RoutinesTable|)) (|isDomain| *4 (|Record| (|:| |lfn| (|List| (|Expression| (|DoubleFloat|)))) (|:| |init| (|List| (|DoubleFloat|))))) (|isDomain| *2 (|Record| (|:| |measure| (|Float|)) (|:| |explanations| (|String|)))))) ((*1 *2 *3 *4) (AND (|ofCategory| *1 (|NumericalOptimizationCategory|)) (|isDomain| *3 (|RoutinesTable|)) (|isDomain| *4 (|Record| (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |init| (|List| (|DoubleFloat|))) (|:| |lb| (|List| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |cf| (|List| (|Expression| (|DoubleFloat|)))) (|:| |ub| (|List| (|OrderedCompletion| (|DoubleFloat|)))))) (|isDomain| *2 (|Record| (|:| |measure| (|Float|)) (|:| |explanations| (|String|)))))) ((*1 *2 *3) (AND (|isDomain| *3 (|NumericalOptimizationProblem|)) (|isDomain| *2 (|Record| (|:| |measure| (|Float|)) (|:| |name| (|String|)) (|:| |explanations| (|List| (|String|))))) (|isDomain| *1 (|AnnaNumericalOptimizationPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|NumericalOptimizationProblem|)) (|isDomain| *4 (|RoutinesTable|)) (|isDomain| *2 (|Record| (|:| |measure| (|Float|)) (|:| |name| (|String|)) (|:| |explanations| (|List| (|String|))))) (|isDomain| *1 (|AnnaNumericalOptimizationPackage|)))) ((*1 *2 *3 *4) (AND (|ofCategory| *1 (|PartialDifferentialEquationsSolverCategory|)) (|isDomain| *3 (|RoutinesTable|)) (|isDomain| *4 (|Record| (|:| |pde| (|List| (|Expression| (|DoubleFloat|)))) (|:| |constraints| (|List| (|Record| (|:| |start| (|DoubleFloat|)) (|:| |finish| (|DoubleFloat|)) (|:| |grid| (|NonNegativeInteger|)) (|:| |boundaryType| (|Integer|)) (|:| |dStart| (|Matrix| (|DoubleFloat|))) (|:| |dFinish| (|Matrix| (|DoubleFloat|)))))) (|:| |f| (|List| (|List| (|Expression| (|DoubleFloat|))))) (|:| |st| (|String|)) (|:| |tol| (|DoubleFloat|)))) (|isDomain| *2 (|Record| (|:| |measure| (|Float|)) (|:| |explanations| (|String|)))))) ((*1 *2 *3) (AND (|isDomain| *3 (|NumericalPDEProblem|)) (|isDomain| *2 (|Record| (|:| |measure| (|Float|)) (|:| |name| (|String|)) (|:| |explanations| (|List| (|String|))))) (|isDomain| *1 (|AnnaPartialDifferentialEquationPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|NumericalPDEProblem|)) (|isDomain| *4 (|RoutinesTable|)) (|isDomain| *2 (|Record| (|:| |measure| (|Float|)) (|:| |name| (|String|)) (|:| |explanations| (|List| (|String|))))) (|isDomain| *1 (|AnnaPartialDifferentialEquationPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|)))) ((*1 *2) (AND (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5)) (|ofCategory| *5 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Equation| *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))) (|ofCategory| *5 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 (|Integer|))) (|isDomain| *4 (|Equation| *6)) (|ofCategory| *6 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GenerateUnivariatePowerSeries| *5 *6)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6))) (|ofCategory| *6 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *7 (|Integer|))) (|isDomain| *4 (|Equation| *7)) (|isDomain| *5 (|UniversalSegment| (|NonNegativeInteger|))) (|ofCategory| *7 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6))) (|ofCategory| *6 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3)) (|isDomain| *6 (|UniversalSegment| (|NonNegativeInteger|))) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *7))) (|ofCategory| *7 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|)))) ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|d01AgentsPackage|))))) 
(((*1 *2 *3 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *3 *4 *5 *5 *4 *6) (AND (|isDomain| *5 (|Kernel| *4)) (|isDomain| *6 (|SparseUnivariatePolynomial| *4)) (|ofCategory| *4 (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *7 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |particular| (|Union| *4 "failed")) (|:| |basis| (|List| *4)))) (|isDomain| *1 (|GenusZeroIntegration| *7 *4 *3)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *4 *5 *5 *5 *4 *6) (AND (|isDomain| *5 (|Kernel| *4)) (|isDomain| *6 (|Fraction| (|SparseUnivariatePolynomial| *4))) (|ofCategory| *4 (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *7 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |particular| (|Union| *4 "failed")) (|:| |basis| (|List| *4)))) (|isDomain| *1 (|GenusZeroIntegration| *7 *4 *3)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|))) ((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|CombinatorialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *2 *2 *2) (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2)) (|ofCategory| *2 (|IntegerNumberSystem|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *2 *3 *4) (AND (|isDomain| *4 |RationalNumber|) (|isDomain| *2 (|Mapping| (|Integer|))) (|isDomain| *1 (|RandomIntegerDistributions|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Equation| *3))) (|isDomain| *1 (|Equation| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3))) (|isDomain| *1 (|CoordinateSystems| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|)))))) 
(((*1 *1 *1 *2 *1) (AND (|isDomain| *1 (|BinaryTree| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *1 (|BinaryTree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4 *4 *4) (AND (|isDomain| *3 (|Matrix| (|DoubleFloat|))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *2 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *1 (|RecurrenceOperator| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|AbelianMonoid|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Symbol|)) (|PartialDifferentialRing| (|Symbol|)) (|CombinatorialOpsCategory|)))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|d01WeightsPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *1 (|SplittingNode| *2 *3)) (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |sin| (|Stream| *4)) (|:| |cos| (|Stream| *4)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *4)) (|isDomain| *3 (|Stream| *4))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|PseudoRemainderSequence| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4 *4) (AND (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|PolynomialCategory| *5 *8 (|OrderedVariableList| *6))) (|ofCategory| *8 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|ofCategory| *9 (|ProjectiveSpaceCategory| *5)) (|ofCategory| *10 (|LocalPowerSeriesCategory| *5)) (|ofCategory| *11 (|PlacesCategory| *5 *10)) (|ofCategory| *3 (|DivisorCategory| *11)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *5 *6 *7 *8 *9 *10 *11 *3 *14)) (|ofCategory| *14 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Record| (|:| |ord| (|Integer|)) (|:| |num| *7) (|:| |den| *7) (|:| |upTo| (|Integer|)))) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *5 *6 *7 *8 *9 *10 *11 *3 *12 *13 *14)) (|isDomain| *4 (|Integer|)) (|ofCategory| *13 (|DesingTreeCategory| *12)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|Divisor| (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *5))) (|ofCategory| *5 (|FiniteFieldCategory|)) (|isDomain| *2 (|Record| (|:| |ord| (|Integer|)) (|:| |num| (|DistributedMultivariatePolynomial| *6 *5)) (|:| |den| (|DistributedMultivariatePolynomial| *6 *5)) (|:| |upTo| (|Integer|)))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *5 *6 *7)) (|isDomain| *4 (|Integer|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|Divisor| (|Places| *5))) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Record| (|:| |ord| (|Integer|)) (|:| |num| (|DistributedMultivariatePolynomial| *6 *5)) (|:| |den| (|DistributedMultivariatePolynomial| *6 *5)) (|:| |upTo| (|Integer|)))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *5 *6 *7)) (|isDomain| *4 (|Integer|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3 *3 *3 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|)))) ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ComplexCategory| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|RealNumberSystem|)) (|ofCategory| *3 (|TranscendentalFunctionCategory|)) (|isDomain| *2 (|Record| (|:| |r| *3) (|:| |phi| *3)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|OctonionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QuaternionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |f1| (|List| *4)) (|:| |f2| (|List| (|List| (|List| *4)))) (|:| |f3| (|List| (|List| *4))) (|:| |f4| (|List| (|List| (|List| *4)))))) (|isDomain| *1 (|TableauxBumpers| *4)) (|isDomain| *3 (|List| (|List| (|List| *4))))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|TubePlot| *3)) (|isDomain| *1 (|NumericTubePlot| *3)) (|ofCategory| *3 (|PlottableSpaceCurveCategory|)))) ((*1 *1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|TubePlot| *2)) (|ofCategory| *2 (|PlottableSpaceCurveCategory|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|BinaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|LyndonWord| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|Magma| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|))) (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3 *3 *3 *4 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2 *1) (|partial| AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3)) (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3 *3 *4 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|NagEigenPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|IndexedAggregate| *2 *3)) (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Table| (|StochasticDifferential| *3) (|StochasticDifferential| *3))) (|isDomain| *1 (|StochasticDifferential| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|BinaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|LyndonWord| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|Magma| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|))) (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DirichletRing| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|FiniteFieldCategory|)) (|isDomain| *2 (|Record| (|:| |cont| *5) (|:| |factors| (|List| (|Record| (|:| |irr| *3) (|:| |pow| (|Integer|))))))) (|isDomain| *1 (|DistinctDegreeFactorize| *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *1 (|CylindricalAlgebraicDecompositionUtilities| *4 *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *1 *3) (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ArrayStack| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Dequeue| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Heap| *4)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Queue| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stack| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Stream| (|Integer|))) (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1 *2) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *2)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *2 (|BlowUpMethodCategory|))))) 
(((*1 *2 *2 *1) (|partial| AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|EuclideanDomain|))))) 
(((*1 *2 *3 *4 *5 *6 *7) (AND (|isDomain| *3 (|Matrix| *11)) (|isDomain| *4 (|List| (|Fraction| (|Polynomial| *8)))) (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|String|)) (|ofCategory| *8 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *11 (|PolynomialCategory| *8 *10 *9)) (|ofCategory| *9 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *10 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Record| (|:| |rgl| (|List| (|Record| (|:| |eqzro| (|List| *11)) (|:| |neqzro| (|List| *11)) (|:| |wcond| (|List| (|Polynomial| *8))) (|:| |bsoln| (|Record| (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *8)))) (|:| |basis| (|List| (|Vector| (|Fraction| (|Polynomial| *8)))))))))) (|:| |rgsz| (|Integer|)))) (|isDomain| *1 (|ParametricLinearEquations| *8 *9 *10 *11)) (|isDomain| *7 (|Integer|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *4 *5)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Polynomial| *5)) (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *1 (|TubePlot| *3)) (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *1) (|ofCategory| *1 (|Aggregate|))) ((*1 *1) (AND (|isDomain| *1 (|ArrayStack| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1) (AND (|isDomain| *1 (|Heap| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1) (AND (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5)) (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3)))) ((*1 *1) (AND (|isDomain| *1 (|Queue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1) (AND (|isDomain| *1 (|SplittingNode| *2 *3)) (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))))) ((*1 *1) (AND (|isDomain| *1 (|Stack| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1) (|isDomain| *1 (|TheSymbolTable|))) ((*1 *1) (|isDomain| *1 (|SymbolTable|)))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|OnePointCompletion| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)) (|isDomain| *3 (|DoubleFloat|))))) 
(((*1 *1 *1) (|isDomain| *1 (|RoutinesTable|)))) 
(((*1 *1) (|isDomain| *1 (|RoutinesTable|)))) 
(((*1 *2 *3 *4 *5 *6) (|partial| AND (|isDomain| *4 (|Mapping| *8 *8)) (|isDomain| *5 (|Mapping| (|Record| (|:| |ans| *7) (|:| |right| *7) (|:| |sol?| (|Boolean|))) (|Integer|) *7)) (|isDomain| *6 (|List| (|Fraction| *8))) (|ofCategory| *7 (|Field|)) (|ofCategory| *8 (|UnivariatePolynomialCategory| *7)) (|isDomain| *3 (|Fraction| *8)) (|isDomain| *2 (|Record| (|:| |answer| (|Record| (|:| |mainpart| *3) (|:| |limitedlogs| (|List| (|Record| (|:| |coeff| *3) (|:| |logand| *3)))))) (|:| |a0| *7))) (|isDomain| *1 (|TranscendentalIntegration| *7 *8))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|SortPackage| *4 *2)) (|ofCategory| *2 (|Join| (|IndexedAggregate| (|Integer|) *4) (CATEGORY |package| (ATTRIBUTE |finiteAggregate|) (ATTRIBUTE |shallowlyMutable|)))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|SortPackage| *3 *2)) (|ofCategory| *2 (|Join| (|IndexedAggregate| (|Integer|) *3) (CATEGORY |package| (ATTRIBUTE |finiteAggregate|) (ATTRIBUTE |shallowlyMutable|))))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OpenMathDevice|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|IntegrationTools| *4 *2)) (|ofCategory| *2 (|ElementaryFunctionCategory|)) (|ofCategory| *2 (|FunctionSpace| *4))))) 
(((*1 *1 *2 *3 *3 *3 *3) (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|))) (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|))) (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|)))) ((*1 *1 *2 *3 *3 *3) (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|))) (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|))) (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| (|Vector| (|Integer|)))) (|isDomain| *1 (|GrayCode|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|Equation| (|Expression| *5)))) (|isDomain| *1 (|RadicalSolvePackage| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4))) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|Equation| (|Expression| *4)))) (|isDomain| *1 (|RadicalSolvePackage| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5)))) (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|Equation| (|Expression| *5)))) (|isDomain| *1 (|RadicalSolvePackage| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4)))) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|Equation| (|Expression| *4)))) (|isDomain| *1 (|RadicalSolvePackage| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5)))) (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5))))) (|isDomain| *1 (|RadicalSolvePackage| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4)))) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *4))))) (|isDomain| *1 (|RadicalSolvePackage| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *5))))) (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5))))) (|isDomain| *1 (|RadicalSolvePackage| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4))))) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|))) (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *4))))) (|isDomain| *1 (|RadicalSolvePackage| *4))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *5 (|List| *3)) (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LeadingCoefDetermination| *6 *7 *3 *8)) (|ofCategory| *8 (|PolynomialCategory| *3 *7 *6))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3) (|ConvertibleTo| (|Pattern| *3)))) (|isDomain| *1 (|RewriteRule| *3 *4 *2)) (|ofCategory| *4 (|Join| (|Ring|) (|PatternMatchable| *3) (|OrderedSet|) (|ConvertibleTo| (|Pattern| *3)))))) ((*1 *2 *1) (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|SuchThat| *2 *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *2 *3 *4 *5)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|DifferentialVariableCategory| *3)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Set| (|Set| *3))) (|isDomain| *1 (|PermutationGroup| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|AlgebraPackage| *3 *4)) (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *1 *2 *3 *1) (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|PatternMatchResult| *4 *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6)) (|isDomain| *3 (|Integer|)) (|ofCategory| *6 (|EuclideanDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FreeModuleCat| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Record| (|:| |k| *4) (|:| |c| *3)))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *2 (|Mapping| (|Float|))) (|isDomain| *1 (|RandomFloatDistributions|)) (|isDomain| *3 (|Float|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5)) (|isDomain| *1 (|PolToPol| *4 *5)) (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| (|List| (|List| *4)))) (|isDomain| *2 (|List| (|List| *4))) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Set| (|Symbol|))) (|isDomain| *1 (|ApplicationProgramInterface|)) (|isDomain| *3 (|Symbol|))))) 
(((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|IndexedAggregate| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Magma| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|OrderedFreeMonoid| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|LyndonWord| *3)) (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|UnaryRecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *3)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|PlacesCategory| *3 *4))))) 
(((*1 *2 *2 *3 *4) (AND (|isDomain| *2 (|DistributedMultivariatePolynomial| (|construct| (QUOTE X) (QUOTE Y)) *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *3 (|NonNegativeInteger|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *8 (|DirectProductCategory| (|#| *6) *3)) (|isDomain| *1 (|BlowUpPackage| *5 *6 *7 *8 *4)) (|ofCategory| *7 (|FiniteAbelianMonoidRing| *5 *8)) (|ofCategory| *4 (|BlowUpMethodCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *2) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Fraction| *5)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4)) (|isDomain| *1 (|UTSodetools| *4 *5 *6 *2)) (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6))) (|isDomain| *4 (|Mapping| (|List| *5) *6)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|List| (|Fraction| *6))) (|isDomain| *1 (|RationalRicDE| *5 *6)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *7))) (|isDomain| *4 (|Mapping| (|List| *6) *7)) (|isDomain| *5 (|Mapping| (|Factored| *7) *7)) (|ofCategory| *6 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6)) (|isDomain| *2 (|List| (|Fraction| *7))) (|isDomain| *1 (|RationalRicDE| *6 *7)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6))) (|isDomain| *4 (|Mapping| (|List| *5) *6)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|List| (|Fraction| *6))) (|isDomain| *1 (|RationalRicDE| *5 *6)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *7 (|Fraction| *7))) (|isDomain| *4 (|Mapping| (|List| *6) *7)) (|isDomain| *5 (|Mapping| (|Factored| *7) *7)) (|ofCategory| *6 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6)) (|isDomain| *2 (|List| (|Fraction| *7))) (|isDomain| *1 (|RationalRicDE| *6 *7)))) ((*1 *2 *3) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *4 (|AlgebraicallyClosedField|)) (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|isDomain| *2 (|List| (|Fraction| *5))) (|isDomain| *1 (|RationalRicDE| *4 *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6))) (|isDomain| *4 (|Mapping| (|Factored| *6) *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|AlgebraicallyClosedField|)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|isDomain| *2 (|List| (|Fraction| *6))) (|isDomain| *1 (|RationalRicDE| *5 *6)))) ((*1 *2 *3) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *5 (|Fraction| *5))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *4 (|AlgebraicallyClosedField|)) (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|isDomain| *2 (|List| (|Fraction| *5))) (|isDomain| *1 (|RationalRicDE| *4 *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6))) (|isDomain| *4 (|Mapping| (|Factored| *6) *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|AlgebraicallyClosedField|)) (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|isDomain| *2 (|List| (|Fraction| *6))) (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|List| (|Record| (|:| |close| *1) (|:| |open| (|List| *7))))) (|isDomain| *3 (|List| *7)) (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *2 *2 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5) (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|))) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Record| (|:| |value| *4) (|:| |error| *4) (|:| |totalpts| (|Integer|)) (|:| |success| (|Boolean|)))) (|isDomain| *1 (|NumericalQuadrature|)) (|isDomain| *5 (|Integer|))))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *2 *2 *3) (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *2 *3)) (|ofCategory| *2 (|Type|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5) (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|))) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Record| (|:| |value| *4) (|:| |error| *4) (|:| |totalpts| (|Integer|)) (|:| |success| (|Boolean|)))) (|isDomain| *1 (|NumericalQuadrature|)) (|isDomain| *5 (|Integer|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|DequeueAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|Join| (|FloatingPointSystem|) (|RetractableTo| *4) (|Field|) (|TranscendentalFunctionCategory|) (|ElementaryFunctionCategory|))) (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Kernel| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|OnePointCompletion| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *5 (|PolynomialFactorizationExplicit|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *8))) (|isDomain| *1 (|PolynomialFactorizationByRecursion| *5 *6 *7 *8)) (|isDomain| *4 (|SparseUnivariatePolynomial| *8)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|PolynomialFactorizationExplicit|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *5))) (|isDomain| *1 (|PolynomialFactorizationByRecursionUnivariate| *4 *5)) (|isDomain| *3 (|SparseUnivariatePolynomial| *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *1 (|ComplexRootFindingPackage| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Complex| *3)))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *1 (|MakeFloatCompiledFunction| *3)) (|ofCategory| *3 (|ConvertibleTo| (|InputForm|))))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *1 (|MakeFloatCompiledFunction| *3)) (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|IntegerNumberSystem|)) (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *4 (|Field|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2))))) 
(((*1 *2 *2 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *1 (|PseudoRemainderSequence| *4 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|InputForm|)))) (|isDomain| *2 (|BasicOperator|)) (|isDomain| *1 (|RecurrenceOperator| *4 *3)) (|ofCategory| *3 (|Join| (|FunctionSpace| *4) (|AbelianMonoid|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Symbol|)) (|PartialDifferentialRing| (|Symbol|)) (|CombinatorialOpsCategory|)))))) 
(((*1 *2 *1 *1) (|partial| AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *8)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |goodPols| (|List| *8)) (|:| |badPols| (|List| *8)))) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8)) (|isDomain| *4 (|List| *8))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|Reference| (|OrderedCompletion| (|Integer|)))) (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *4)))) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5) (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|))) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Record| (|:| |value| *4) (|:| |error| *4) (|:| |totalpts| (|Integer|)) (|:| |success| (|Boolean|)))) (|isDomain| *1 (|NumericalQuadrature|)) (|isDomain| *5 (|Integer|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|OneDimensionalArray| (|List| (|LyndonWord| *5)))) (|isDomain| *1 (|LyndonWord| *5))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Complex| *4)) (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3)) (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|List| (|UnivariatePolynomial| *5 *4))) (|isDomain| *1 (|SturmHabichtPackage| *4 *5)) (|isDomain| *3 (|UnivariatePolynomial| *5 *4))))) 
(((*1 *1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *4 *4 *5 *6) (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|ViewportPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *4 (|List| (|DrawOption|))) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|ViewportPackage|))))) 
(((*1 *2 *2 *3 *2) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *1 (|DistinctDegreeFactorize| *4 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *2 *3 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *1 *2) (AND (|ofCategory| *1 (|Monad|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|MonadWithUnit|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DisplayPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3 *3 *3 *3 *3) (AND (|ofCategory| *3 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *1) (|partial| AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Monoid|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |mat| (|Matrix| (|Fraction| (|Polynomial| *4)))) (|:| |vec| (|List| (|Fraction| (|Polynomial| *4)))) (|:| |rank| (|NonNegativeInteger|)) (|:| |rows| (|List| (|Integer|))) (|:| |cols| (|List| (|Integer|))))) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Record| (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *4)))) (|:| |basis| (|List| (|Vector| (|Fraction| (|Polynomial| *4))))))) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3))) (|isDomain| *1 (|PseudoRemainderSequence| *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Point| (|DoubleFloat|)))) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *3 (|PolynomialCategory| *5 *7 (|OrderedVariableList| *6))) (|ofCategory| *7 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *5)) (|ofCategory| *4 (|PlacesCategory| *5 *2)) (|ofCategory| *9 (|DivisorCategory| *4)) (|ofCategory| *10 (|InfinitlyClosePointCategory| *5 *6 *3 *7 *8 *2 *4 *9 *12)) (|ofCategory| *12 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|LocalPowerSeriesCategory| *5)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *5 *6 *3 *7 *8 *2 *4 *9 *10 *11 *12)) (|ofCategory| *11 (|DesingTreeCategory| *10)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *6 *5)) (|isDomain| *4 (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *5)) (|ofCategory| *5 (|FiniteFieldCategory|)) (|ofType| *6 (|List| (|Symbol|))) (|isDomain| *2 (|NeitherSparseOrDensePowerSeries| (|PseudoAlgebraicClosureOfFiniteField| *5))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *5 *6 *7)) (|ofCategory| *7 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *6 *5)) (|isDomain| *4 (|Places| *5)) (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|isDomain| *2 (|NeitherSparseOrDensePowerSeries| *5)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *5 *6 *7)) (|ofCategory| *7 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| *2)) (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|ofCategory| *2 (|LocalPowerSeriesCategory| *5)) (|isDomain| *1 (|ParametrizationPackage| *5 *6 *3 *7 *8 *2 *9)) (|ofCategory| *3 (|PolynomialCategory| *5 *7 (|OrderedVariableList| *6))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *5)) (|ofCategory| *9 (|PlacesCategory| *5 *2)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|ofCategory| *2 (|LocalPowerSeriesCategory| *5)) (|isDomain| *1 (|ParametrizationPackage| *5 *6 *3 *7 *8 *2 *4)) (|ofCategory| *3 (|PolynomialCategory| *5 *7 (|OrderedVariableList| *6))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *5)) (|ofCategory| *4 (|PlacesCategory| *5 *2)))) ((*1 *2 *3 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|ofCategory| *2 (|LocalPowerSeriesCategory| *5)) (|isDomain| *1 (|ParametrizationPackage| *5 *6 *3 *7 *8 *2 *4)) (|ofCategory| *3 (|PolynomialCategory| *5 *7 (|OrderedVariableList| *6))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *5)) (|ofCategory| *4 (|PlacesCategory| *5 *2)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|Field|)) (|ofType| *7 (|List| (|Symbol|))) (|ofCategory| *8 (|DirectProductCategory| (|#| *7) (|NonNegativeInteger|))) (|ofCategory| *2 (|LocalPowerSeriesCategory| *6)) (|isDomain| *1 (|ParametrizationPackage| *6 *7 *3 *8 *9 *2 *4)) (|ofCategory| *3 (|PolynomialCategory| *6 *8 (|OrderedVariableList| *7))) (|ofCategory| *9 (|ProjectiveSpaceCategory| *6)) (|ofCategory| *4 (|PlacesCategory| *6 *2))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| *3))) (|ofCategory| *3 (|Join| (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|) (|AlgebraicallyClosedFunctionSpace| *5))) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Union| (|:| |f1| (|OrderedCompletion| *3)) (|:| |f2| (|List| (|OrderedCompletion| *3))) (|:| |fail| "failed") (|:| |pole| "potentialPole"))) (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *5 *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| *3))) (|isDomain| *5 (|String|)) (|ofCategory| *3 (|Join| (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|) (|AlgebraicallyClosedFunctionSpace| *6))) (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Union| (|:| |f1| (|OrderedCompletion| *3)) (|:| |f2| (|List| (|OrderedCompletion| *3))) (|:| |fail| "failed") (|:| |pole| "potentialPole"))) (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *6 *3)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| (|Expression| *5)))) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *5))) (|:| |f2| (|List| (|OrderedCompletion| (|Expression| *5)))) (|:| |fail| "failed") (|:| |pole| "potentialPole"))) (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *5)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *6))) (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| (|Expression| *6)))) (|isDomain| *5 (|String|)) (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *6))) (|:| |f2| (|List| (|OrderedCompletion| (|Expression| *6)))) (|:| |fail| "failed") (|:| |pole| "potentialPole"))) (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| (|Fraction| (|Polynomial| *5))))) (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *5))) (|:| |f2| (|List| (|OrderedCompletion| (|Expression| *5)))) (|:| |fail| "failed") (|:| |pole| "potentialPole"))) (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *5)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| (|Fraction| (|Polynomial| *6))))) (|isDomain| *5 (|String|)) (|isDomain| *3 (|Fraction| (|Polynomial| *6))) (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *6))) (|:| |f2| (|List| (|OrderedCompletion| (|Expression| *6)))) (|:| |fail| "failed") (|:| |pole| "potentialPole"))) (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Union| *3 (|List| *3))) (|isDomain| *1 (|FunctionSpaceIntegration| *5 *3)) (|ofCategory| *3 (|Join| (|TranscendentalFunctionCategory|) (|PrimitiveFunctionCategory|) (|AlgebraicallyClosedFunctionSpace| *5))))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *2 *3 *4 *5 *5 *6) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|Segment| (|OrderedCompletion| (|Float|)))) (|isDomain| *5 (|Float|)) (|isDomain| *6 (|RoutinesTable|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalIntegrationPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|NumericalIntegrationProblem|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalIntegrationPackage|)))) ((*1 *2 *3 *4 *5 *5) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|Segment| (|OrderedCompletion| (|Float|)))) (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalIntegrationPackage|)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|Segment| (|OrderedCompletion| (|Float|)))) (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalIntegrationPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|Segment| (|OrderedCompletion| (|Float|)))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalIntegrationPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|List| (|Segment| (|OrderedCompletion| (|Float|))))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalIntegrationPackage|)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|List| (|Segment| (|OrderedCompletion| (|Float|))))) (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalIntegrationPackage|)))) ((*1 *2 *3 *4 *5 *5) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|List| (|Segment| (|OrderedCompletion| (|Float|))))) (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalIntegrationPackage|)))) ((*1 *2 *3 *4 *5 *5 *6) (AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|List| (|Segment| (|OrderedCompletion| (|Float|))))) (|isDomain| *5 (|Float|)) (|isDomain| *6 (|RoutinesTable|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalIntegrationPackage|)))) ((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| (|Float|)))) (|isDomain| *5 (|String|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalIntegrationPackage|)))) ((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *3 (|Expression| (|Float|))) (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| (|Float|)))) (|isDomain| *5 (|Symbol|)) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|AnnaNumericalIntegrationPackage|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|IntegrationResult| (|Fraction| *5))) (|isDomain| *1 (|RationalIntegration| *4 *5)) (|isDomain| *3 (|Fraction| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|CharacteristicZero|)) (|ofCategory| *5 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Union| (|Expression| *5) (|List| (|Expression| *5)))) (|isDomain| *1 (|IntegrationResultRFToFunction| *5)))) ((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Polynomial| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2 *3) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|)) (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *2 *4)) (|ofCategory| *4 (|PolynomialCategory| *3 (|IndexedExponents| *2) *2)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| (QUOTE |x|))) (|isDomain| *1 (|UnivariateFormalPowerSeries| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (OR (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3)) (|ofCategory| *3 (|Ring|)) (AND (|ofCategory| *3 (|AlgebraicallyClosedFunctionSpace| (|Integer|))) (|ofCategory| *3 (|PrimitiveFunctionCategory|)) (|ofCategory| *3 (|TranscendentalFunctionCategory|)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))))) (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3)) (|ofCategory| *3 (|Ring|)) (AND (|has| *3 (SIGNATURE |variables| ((|List| *2) *3))) (|has| *3 (SIGNATURE |integrate| (*3 *3 *2))) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))))))) ((*1 *1 *1) (AND (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *1) (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))))) ((*1 *1 *1 *2) (OR (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *3)) (|ofCategory| *3 (|Ring|)) (AND (|ofCategory| *3 (|AlgebraicallyClosedFunctionSpace| (|Integer|))) (|ofCategory| *3 (|PrimitiveFunctionCategory|)) (|ofCategory| *3 (|TranscendentalFunctionCategory|)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))))) (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *3)) (|ofCategory| *3 (|Ring|)) (AND (|has| *3 (SIGNATURE |variables| ((|List| *2) *3))) (|has| *3 (SIGNATURE |integrate| (*3 *3 *2))) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))))))) ((*1 *1 *1) (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *1 *2) (OR (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3)) (|ofCategory| *3 (|Ring|)) (AND (|ofCategory| *3 (|AlgebraicallyClosedFunctionSpace| (|Integer|))) (|ofCategory| *3 (|PrimitiveFunctionCategory|)) (|ofCategory| *3 (|TranscendentalFunctionCategory|)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))))) (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3)) (|ofCategory| *3 (|Ring|)) (AND (|has| *3 (SIGNATURE |variables| ((|List| *2) *3))) (|has| *3 (SIGNATURE |integrate| (*3 *3 *2))) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))))))) ((*1 *1 *1) (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *3 *4)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Tree| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|isDomain| *1 (|PackageForPoly| *4 *2 *5 *6)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *4 *5))))) 
(((*1 *2) (AND (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)))) ((*1 *2) (AND (|ofCategory| *3 (|Join| (|EuclideanDomain|) (CATEGORY |domain| (SIGNATURE |squareFree| ((|Factored| $) $))))) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *2 (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3) (|:| |basisInv| (|Matrix| *3)))) (|isDomain| *1 (|FunctionFieldIntegralBasis| *3 *4 *5)) (|ofCategory| *5 (|FramedAlgebra| *3 *4)))) ((*1 *2) (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))) (|isDomain| *2 (|Record| (|:| |basis| (|Matrix| (|Integer|))) (|:| |basisDen| (|Integer|)) (|:| |basisInv| (|Matrix| (|Integer|))))) (|isDomain| *1 (|NumberFieldIntegralBasis| *3 *4)) (|ofCategory| *4 (|FramedAlgebra| (|Integer|) *3)))) ((*1 *2) (AND (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Record| (|:| |basis| (|Matrix| *4)) (|:| |basisDen| *4) (|:| |basisInv| (|Matrix| *4)))) (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *3 *4 *5 *6)) (|ofCategory| *6 (|MonogenicAlgebra| *4 *5)))) ((*1 *2) (AND (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Record| (|:| |basis| (|Matrix| *4)) (|:| |basisDen| *4) (|:| |basisInv| (|Matrix| *4)))) (|isDomain| *1 (|WildFunctionFieldIntegralBasis| *3 *4 *5 *6)) (|ofCategory| *6 (|FramedAlgebra| *4 *5))))) 
(((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| (|Fraction| (|Polynomial| *6)))) (|isDomain| *3 (|Fraction| (|Polynomial| *6))) (|ofCategory| *6 (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|)) (|CharacteristicZero|))) (|isDomain| *2 (|Record| (|:| |mainpart| *3) (|:| |limitedlogs| (|List| (|Record| (|:| |coeff| *3) (|:| |logand| *3)))))) (|isDomain| *1 (|RationalFunctionIntegration| *6))))) 
(((*1 *1 *1 *2) (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *3 *3 *4) (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|List| (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))) (|isDomain| *1 (|NonLinearSolvePackage| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Polynomial| *4))) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))) (|isDomain| *1 (|NonLinearSolvePackage| *4)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *5 (|Mapping| (|Record| (|:| |particular| (|Union| *6 "failed")) (|:| |basis| (|List| *6))) *7 *6)) (|ofCategory| *6 (|Field|)) (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6)) (|isDomain| *2 (|Record| (|:| |particular| (|Union| (|Vector| *6) "failed")) (|:| |basis| (|List| (|Vector| *6))))) (|isDomain| *1 (|SystemODESolver| *6 *7)) (|isDomain| *4 (|Vector| *6))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |flg| (|Union| "nil" "sqfr" "irred" "prime")) (|:| |fctr| *3) (|:| |xpnt| (|Integer|))))) (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|)))) ((*1 *2 *3 *4 *4 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *3)) (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *3))) (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *3 *5 *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary")) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary")) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *2 *3 *4) (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *7))) (|isDomain| *3 (|SparseUnivariatePolynomial| *7)) (|ofCategory| *7 (|PolynomialCategory| *5 *6 *4)) (|ofCategory| *5 (|PolynomialFactorizationExplicit|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|PolynomialFactorizationByRecursion| *5 *6 *4 *7))))) 
(((*1 *2 *3 *1) (|partial| AND (|ofCategory| *1 (|AssociationListAggregate| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Record| (|:| |key| *3) (|:| |entry| *4)))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|LazyStreamAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|BasicStochasticDifferential|))) (|isDomain| *1 (|StochasticDifferential| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2) (AND (|isDomain| *2 (|Stack| (|String|))) (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|))) (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|DoubleFloat|))))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|DifferentialExtension| *4)) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|DifferentialExtension| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|DifferentialRing|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *1 *1) (|ofCategory| *1 (|DifferentialRing|))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|))) (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)))) ((*1 *1 *1) (AND (|ofCategory| *2 (|Join| (|Field|) (|CharacteristicZero|))) (|isDomain| *1 (|FullPartialFractionExpansion| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)))) ((*1 *1) (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| (|NonNegativeInteger|))) (|ofCategory| *1 (|PartialDifferentialRing| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|PartialDifferentialRing| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|PartialDifferentialRing| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|PartialDifferentialRing| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FourierComponent| *3)) (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *2 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|PseudoRemainderSequence| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *2 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DesingTree| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Record| (|:| |llcmres| *1) (|:| |coeff1| *1) (|:| |coeff2| *1))) (|ofCategory| *1 (|LeftOreRing|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |discriminant| *4))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|CancellationAbelianMonoid|))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |resultant| *4))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4))) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|List| (|Polynomial| *4))) (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *1 (|PolyGroebner| *4))))) 
(((*1 *1) (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|not| (|has| *1 (ATTRIBUTE |arbitraryPrecision|))) (|not| (|has| *1 (ATTRIBUTE |arbitraryExponent|))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteSetAggregate| *2)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|OrderedMultisetAggregate| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedSet|))) ((*1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *3 (|String|)) (|ofCategory| *1 (|FileCategory| *2 *4)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|FileCategory| *2 *3)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Mapping| (|Union| (|Record| (|:| |ratpart| *4) (|:| |coeff| *4)) "failed") *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *1 (|TranscendentalIntegration| *4 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerRoots| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *3 (|Stream| *2)) (|ofCategory| *2 (|EuclideanDomain|)) (|isDomain| *1 (|ContinuedFraction| *2))))) 
(((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *4 (|Palette|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|PointCategory| *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Point| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|ThreeSpaceCategory| *3)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *3 *3 *3 *3) (AND (|isDomain| *2 (|Point| (|DoubleFloat|))) (|isDomain| *1 (|TubePlotTools|)) (|isDomain| *3 (|DoubleFloat|))))) 
(((*1 *2 *2 *3) (|partial| AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|AlgebraPackage| *4 *3)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|OrderedVariableList| *5))) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Record| (|:| |dpolys| (|List| (|DistributedMultivariatePolynomial| *5 *6))) (|:| |coords| (|List| (|Integer|))))) (|isDomain| *1 (|GroebnerSolve| *5 *6 *7)) (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *5 *6))) (|ofCategory| *7 (|GcdDomain|))))) 
(((*1 *1 *1) (|isDomain| *1 (|RoutinesTable|)))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|Record| (|:| |eqzro| (|List| *7)) (|:| |neqzro| (|List| *7)) (|:| |wcond| (|List| (|Polynomial| *4))) (|:| |bsoln| (|Record| (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *4)))) (|:| |basis| (|List| (|Vector| (|Fraction| (|Polynomial| *4)))))))))) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4))) (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *2 (|Fraction| (|Factored| (|Polynomial| *4)))) (|isDomain| *1 (|RationalFunctionFactorizer| *4))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|ofCategory| *1 (|Finite|)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|OrderedSet|)) (|isDomain| *1 (|ModuleMonomial| *2 *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *3)) (|Record| (|:| |index| *2) (|:| |exponent| *3))))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |scalar| (|Fraction| (|Integer|))) (|:| |coeff| (|SparseUnivariatePolynomial| *3)) (|:| |logand| (|SparseUnivariatePolynomial| *3))))) (|isDomain| *1 (|IntegrationResult| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|isDomain| *4 (|OneDimensionalArray| *6)) (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|OneDimensionalArray| *5)) (|isDomain| *1 (|OneDimensionalArrayFunctions2| *6 *5)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *5 *7 *5)) (|isDomain| *4 (|DirectProduct| *6 *7)) (|ofType| *6 (|NonNegativeInteger|)) (|ofCategory| *7 (|Type|)) (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|DirectProduct| *6 *5)) (|isDomain| *1 (|DirectProductFunctions2| *6 *7 *5)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|FiniteLinearAggregate| *5)) (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *6 *4 *5 *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *6)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|FiniteSetAggregate| *5)) (|isDomain| *1 (|FiniteSetAggregateFunctions2| *6 *4 *5 *2)) (|ofCategory| *4 (|FiniteSetAggregate| *6)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|isDomain| *4 (|List| *6)) (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|ListFunctions2| *6 *5)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|isDomain| *4 (|PrimitiveArray| *6)) (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|PrimitiveArray| *5)) (|isDomain| *1 (|PrimitiveArrayFunctions2| *6 *5)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Mapping| *3 *6 *3)) (|isDomain| *5 (|Stream| *6)) (|ofCategory| *6 (|Type|)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|StreamFunctions2| *6 *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|isDomain| *4 (|Vector| *6)) (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Vector| *5)) (|isDomain| *1 (|VectorFunctions2| *6 *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|List| *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FreeModuleCat| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|MonoidRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |gcd| *3))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Record| (|:| |resultant| *3) (|:| |coef2| (|NewSparseUnivariatePolynomial| *3)))) (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| *2)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|Join| (|EuclideanDomain|) (CATEGORY |domain| (SIGNATURE |squareFree| ((|Factored| $) $))))) (|isDomain| *1 (|IntegralBasisTools| *2 *4 *5)) (|ofCategory| *5 (|FramedAlgebra| *2 *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5)) (|ofCategory| *4 (|DirectProductCategory| *3 *2)) (|ofCategory| *5 (|DirectProductCategory| *3 *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *3) (AND (|ofCategory| *1 (|CachableSet|)) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|ScriptFormulaFormat|)))) ((*1 *2 *1 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2) (AND (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5))) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6)) (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6)))) ((*1 *2) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ArrayStack| *4)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Dequeue| *4)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Heap| *4)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Queue| *4)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|has| $ (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stack| *4))))) 
(((*1 *2 *3 *3 *3) (|partial| AND (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|List| (|Fraction| *5))) (|isDomain| *1 (|TranscendentalRischDESystem| *4 *5)) (|isDomain| *3 (|Fraction| *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ArrayStack| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Heap| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Queue| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SetCategory|)) (|isDomain| *2 (|String|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Stack| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|PolynomialIdeals| (|Fraction| (|Integer|)) (|DirectProduct| *4 (|NonNegativeInteger|)) (|OrderedVariableList| *3) (|DistributedMultivariatePolynomial| *3 (|Fraction| (|Integer|))))) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|IdealDecompositionPackage| *3 *4))))) 
(((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *5 (|Mapping| (|IntegrationResult| *3) *3 (|Symbol|))) (|isDomain| *6 (|Mapping| (|Union| (|Record| (|:| |special| *3) (|:| |integrand| *3)) "failed") *3 (|Symbol|))) (|ofCategory| *3 (|ElementaryFunctionCategory|)) (|ofCategory| *3 (|LiouvillianFunctionCategory|)) (|ofCategory| *3 (|RetractableTo| *4)) (|ofCategory| *3 (|FunctionSpace| *7)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *7 (|ConvertibleTo| (|Pattern| (|Integer|)))) (|ofCategory| *7 (|GcdDomain|)) (|ofCategory| *7 (|PatternMatchable| (|Integer|))) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|IntegrationResult| *3)) (|isDomain| *1 (|IntegrationTools| *7 *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|))) (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|RadicalCategory|) (|TranscendentalFunctionCategory|))) (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *2 *3)) (|ofCategory| *3 (|Join| (|FunctionSpace| (|Complex| *4)) (|RadicalCategory|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *3)) (|ofCategory| *3 (|ConvertibleTo| *2)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *3)) (|ofCategory| *3 (|ConvertibleTo| *2)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4))) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6)) (|isDomain| *1 (|BezoutMatrix| *4 *3 *2 *5 *6)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *2 *7 *8 *9 *10)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *8 (|PlacesCategory| *3 *7)) (|ofCategory| *9 (|DivisorCategory| *8)) (|ofCategory| *10 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|ProjectiveSpaceCategory| *3))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *2 (|DistributedMultivariatePolynomial| (|construct| (QUOTE X) (QUOTE Y)) *3)) (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3 *1) (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *1 (|PermutationGroup| *4))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |minor| (|List| (|PositiveInteger|))) (|:| |eq| *3) (|:| |minors| (|List| (|List| (|PositiveInteger|)))) (|:| |ops| (|List| *3)))) (|isDomain| *1 (|AssociatedEquations| *5 *3)) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *3 (|List| (|Palette|))) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SegmentCategory| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Kernel| (|AlgebraicNumber|)))) (|isDomain| *1 (|AlgebraicNumber|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Kernel| (|AlgebraicNumber|))) (|isDomain| *1 (|AlgebraicNumber|)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|AlgebraicNumber|))) (|isDomain| *3 (|List| (|Kernel| (|AlgebraicNumber|)))) (|isDomain| *1 (|AlgebraicNumber|)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|AlgebraicNumber|))) (|isDomain| *3 (|Kernel| (|AlgebraicNumber|))) (|isDomain| *1 (|AlgebraicNumber|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ComplexCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *3) (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2))))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteRankAlgebra| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *1) (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|QuotientFieldCategory| *3)) (|isDomain| *1 (|FractionalIdeal| *3 *2 *4 *5)) (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *5 (|Join| (|FramedAlgebra| *2 *4) (|RetractableTo| *2))))) ((*1 *2 *1) (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2)) (|ofCategory| *2 (|QuotientFieldCategory| *3)) (|isDomain| *1 (|FramedModule| *3 *2 *4 *5 *6)) (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *5 (|FramedAlgebra| *2 *4)) (|ofType| *6 (|Vector| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *2 (|Join| (|FloatingPointSystem|) (|RetractableTo| *5) (|Field|) (|TranscendentalFunctionCategory|) (|ElementaryFunctionCategory|))) (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *2)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Kernel| (|InnerAlgebraicNumber|)))) (|isDomain| *1 (|InnerAlgebraicNumber|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Kernel| (|InnerAlgebraicNumber|))) (|isDomain| *1 (|InnerAlgebraicNumber|)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|InnerAlgebraicNumber|))) (|isDomain| *3 (|List| (|Kernel| (|InnerAlgebraicNumber|)))) (|isDomain| *1 (|InnerAlgebraicNumber|)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|InnerAlgebraicNumber|))) (|isDomain| *3 (|Kernel| (|InnerAlgebraicNumber|))) (|isDomain| *1 (|InnerAlgebraicNumber|)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|MonogenicAlgebra| *4 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|NormInMonogenicAlgebra| *4 *2 *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|OctonionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QuaternionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *1 *1 *2 *1) (AND (|ofCategory| *1 (|BinaryTreeCategory| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|FiniteFieldCategory|)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|List| (|Record| (|:| |basis| (|Matrix| *6)) (|:| |basisDen| *6) (|:| |basisInv| (|Matrix| *6))))) (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *5 *6 *7)) (|isDomain| *3 (|Record| (|:| |basis| (|Matrix| *6)) (|:| |basisDen| *6) (|:| |basisInv| (|Matrix| *6)))) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|RealClosedField|)) (|isDomain| *2 (|List| (|SimpleCell| *5 *6))) (|isDomain| *1 (|SimpleCell| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|RealClosedField|)) (|isDomain| *2 (|List| (|SimpleCell| *5 *3))) (|isDomain| *1 (|SimpleCell| *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4)) (|isDomain| *1 (|UTSodetools| *4 *3 *5 *2)) (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *7 (|List| *7))) (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|Mapping| (|Complex| (|DoubleFloat|)) (|Complex| (|DoubleFloat|)))) (|isDomain| *4 (|Segment| (|DoubleFloat|))) (|isDomain| *2 (|ThreeDimensionalViewport|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TabulatedComputationPackage| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |coef2| *3) (|:| |subResultant| *3))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|LinesOpPack| *3))))) 
(((*1 *2 *3 *4) (|partial| AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Matrix| *5)) (|isDomain| *1 (|PrecomputedAssociatedEquations| *5 *3)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|SubSpace| 3 *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|ThreeSpaceCategory| *3)))) ((*1 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|HTMLFormat|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|MathMLFormat|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileCategory| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3 *1) (|partial| AND (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|PatternMatchResult| *4 *2))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |xinit| (|DoubleFloat|)) (|:| |xend| (|DoubleFloat|)) (|:| |fn| (|Vector| (|Expression| (|DoubleFloat|)))) (|:| |yinit| (|List| (|DoubleFloat|))) (|:| |intvals| (|List| (|DoubleFloat|))) (|:| |g| (|Expression| (|DoubleFloat|))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|d02AgentsPackage|))))) 
(((*1 *2 *3 *2 *4) (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|DistributedMultivariatePolynomial| *5 *6))) (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|DistributedMultivariatePolynomial| *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *1 (|LinGroebnerPackage| *5 *6))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ArrayStack| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Heap| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Queue| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stack| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|FileCategory| *2 *3)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *1) (|isDomain| *1 (|Library|)))) 
(((*1 *2) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|isDomain| *1 (|IncrementingMaps| *3)) (|ofCategory| *3 (|Join| (|Monoid|) (|AbelianSemiGroup|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Union| "skip" "MonteCarlo" "deterministic")) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Union| "skip" "MonteCarlo" "deterministic")) (|isDomain| *1 (|GuessOption|)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| (|Record| (|:| |factor| (|SparseUnivariatePolynomial| *6)) (|:| |exponent| (|Integer|))))) (|ofCategory| *6 (|EuclideanDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5)) (|isDomain| *1 (|PolToPol| *4 *5)) (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Polynomial| (|Float|))) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofCategory| *5 (|RetractableTo| (|Float|))) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|)))) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofCategory| *5 (|RetractableTo| (|Float|))) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|Float|))) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofCategory| *5 (|RetractableTo| (|Float|))) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofCategory| *5 (|RetractableTo| (|Integer|))) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|)))) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofCategory| *5 (|RetractableTo| (|Integer|))) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofCategory| *5 (|RetractableTo| (|Integer|))) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| *2)) (|ofType| *4 (|List| *2)) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| *5)) (|ofCategory| *5 (|FortranMachineTypeCategory|)) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *1 *2) (AND (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Integer|))))) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Float|))))) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Integer|)))) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Float|)))) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|)))) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Matrix| (|Expression| (|Float|)))) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|)))) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|)))) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Polynomial| (|Float|))) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|Integer|))) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|Float|))) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Integer|))))) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Float|))))) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|Polynomial| (|Integer|)))) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|Polynomial| (|Float|)))) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|Expression| (|Integer|)))) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|Expression| (|Float|)))) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|MyUnivariatePolynomial| *3 *4))) (|isDomain| *1 (|MyExpression| *3 *4)) (|ofType| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|Ring|) (|OrderedSet|) (|IntegralDomain|))))) ((*1 *2 *1) (AND (|isDomain| *2 (|Union| (|:| |nia| (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|:| |mdnia| (|Record| (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|List| (|Segment| (|OrderedCompletion| (|DoubleFloat|))))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))))) (|isDomain| *1 (|NumericalIntegrationProblem|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|UnivariateFormalPowerSeries| *3)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|isDomain| *1 (|NottinghamGroup| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Record| (|:| |xinit| (|DoubleFloat|)) (|:| |xend| (|DoubleFloat|)) (|:| |fn| (|Vector| (|Expression| (|DoubleFloat|)))) (|:| |yinit| (|List| (|DoubleFloat|))) (|:| |intvals| (|List| (|DoubleFloat|))) (|:| |g| (|Expression| (|DoubleFloat|))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *1 (|NumericalODEProblem|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Union| (|:| |noa| (|Record| (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |init| (|List| (|DoubleFloat|))) (|:| |lb| (|List| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |cf| (|List| (|Expression| (|DoubleFloat|)))) (|:| |ub| (|List| (|OrderedCompletion| (|DoubleFloat|)))))) (|:| |lsa| (|Record| (|:| |lfn| (|List| (|Expression| (|DoubleFloat|)))) (|:| |init| (|List| (|DoubleFloat|))))))) (|isDomain| *1 (|NumericalOptimizationProblem|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Record| (|:| |pde| (|List| (|Expression| (|DoubleFloat|)))) (|:| |constraints| (|List| (|Record| (|:| |start| (|DoubleFloat|)) (|:| |finish| (|DoubleFloat|)) (|:| |grid| (|NonNegativeInteger|)) (|:| |boundaryType| (|Integer|)) (|:| |dStart| (|Matrix| (|DoubleFloat|))) (|:| |dFinish| (|Matrix| (|DoubleFloat|)))))) (|:| |f| (|List| (|List| (|Expression| (|DoubleFloat|))))) (|:| |st| (|String|)) (|:| |tol| (|DoubleFloat|)))) (|isDomain| *1 (|NumericalPDEProblem|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RetractableTo| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2) (OR (AND (|isDomain| *2 (|Polynomial| *3)) (AND (|not| (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))) (|not| (|ofCategory| *3 (|Algebra| (|Integer|)))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|))) (AND (|isDomain| *2 (|Polynomial| *3)) (AND (|not| (|ofCategory| *3 (|IntegerNumberSystem|))) (|not| (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))) (|ofCategory| *3 (|Algebra| (|Integer|))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|))) (AND (|isDomain| *2 (|Polynomial| *3)) (AND (|not| (|ofCategory| *3 (|QuotientFieldCategory| (|Integer|)))) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|))))) ((*1 *1 *2) (OR (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (AND (|not| (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))) (|ofCategory| *3 (|Algebra| (|Integer|))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|))) (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|))))) ((*1 *1 *2) (AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|)))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|BasicOperator|)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|AlgebraicFunction| *3 *4)) (|ofCategory| *4 (|FunctionSpace| *3)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|BasicOperator|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|BasicOperator|)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|CombinatorialFunction| *3 *4)) (|ofCategory| *4 (|FunctionSpace| *3)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|BasicOperator|)) (|isDomain| *1 (|CommonOperators|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|BasicOperator|)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *4)) (|ofCategory| *4 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *1 (|ExpressionSpace&| *3)) (|ofCategory| *3 (|ExpressionSpace|)))) ((*1 *2 *2) (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|BasicOperator|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|BasicOperator|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|FunctionSpace&| *3 *4)) (|ofCategory| *3 (|FunctionSpace| *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|BasicOperator|)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *4)) (|ofCategory| *4 (|FunctionSpace| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *1 (|Kernel| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|BasicOperator|)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|LiouvillianFunction| *3 *4)) (|ofCategory| *4 (|Join| (|FunctionSpace| *3) (|RadicalCategory|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *4 (|Boolean|)) (|isDomain| *5 (|Set| (|NonNegativeInteger|))) (|isDomain| *6 (|NonNegativeInteger|)) (|isDomain| *2 (|Record| (|:| |contp| (|Integer|)) (|:| |factors| (|List| (|Record| (|:| |irr| *3) (|:| |pow| (|Integer|))))))) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|OctonionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QuaternionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *2) (AND (|ofCategory| *1 (|FileCategory| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *1 (|QuasiAlgebraicSet| *4 *5 *6 *3))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|Comparable|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|)))) ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *3 *4 *5 *5 *6) (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *4 (|Union| (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)) "undefined")) (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *2 *2 *3 *3 *4 *2 *5) (|partial| AND (|isDomain| *3 (|Kernel| *2)) (|isDomain| *4 (|Mapping| (|Union| *2 "failed") *2 *2 (|Symbol|))) (|isDomain| *5 (|SparseUnivariatePolynomial| *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|GenusZeroIntegration| *6 *2 *7)) (|ofCategory| *7 (|SetCategory|)))) ((*1 *2 *2 *2 *3 *3 *4 *3 *2 *5) (|partial| AND (|isDomain| *3 (|Kernel| *2)) (|isDomain| *4 (|Mapping| (|Union| *2 "failed") *2 *2 (|Symbol|))) (|isDomain| *5 (|Fraction| (|SparseUnivariatePolynomial| *2))) (|ofCategory| *2 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|GenusZeroIntegration| *6 *2 *7)) (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|Join| (|FloatingPointSystem|) (|RetractableTo| *4) (|Field|) (|TranscendentalFunctionCategory|) (|ElementaryFunctionCategory|))) (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |mat| (|Matrix| *5)) (|:| |vec| (|Vector| (|List| (|PositiveInteger|)))))) (|isDomain| *1 (|AssociatedEquations| *5 *3)) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *3 *4) (|partial| AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|ConvertibleTo| (|Pattern| (|Integer|)))) (|ofCategory| *5 (|PatternMatchable| (|Integer|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|RetractableTo| (|Integer|)) (|GcdDomain|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |special| *3) (|:| |integrand| *3))) (|isDomain| *1 (|PatternMatchIntegration| *5 *3)) (|ofCategory| *3 (|LiouvillianFunctionCategory|)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5)))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|AntiSymm| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|List| (|Symbol|))))) ((*1 *1 *1) (AND (|isDomain| *1 (|DeRhamComplex| *2 *3)) (|ofCategory| *2 (|Join| (|Ring|) (|OrderedSet|))) (|ofType| *3 (|List| (|Symbol|)))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3 *3 *3 *4 *4) (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|EuclideanDomain|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RomanNumeral|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RomanNumeral|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Record| (|:| |low| (|List| *3)) (|:| |high| (|List| *3)))) (|isDomain| *1 (|UserDefinedPartialOrdering| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Mapping| (|Void|) (|SExpression|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|AxiomServer|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4)))) (|ofCategory| *4 (|RealClosedField|)) (|isDomain| *2 (|List| (|Polynomial| *4))) (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|)))) ((*1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *3) (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|PrimitiveRatRicDE| *4 *2 *3 *5)) (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2)) (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| (|Fraction| *2)))))) 
(((*1 *1) (AND (|ofCategory| *1 (|FiniteSetAggregate| *2)) (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *3) (AND (|ofCategory| *1 (|IntervalCategory| *3)) (|ofCategory| *3 (|Join| (|FloatingPointSystem|) (|TranscendentalFunctionCategory|))) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Mapping| (|List| *4) *4)) (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|StreamTensor| *4))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3)) (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *5 *5 *2) (|partial| AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|Polynomial| *6)) (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|OrderedCompletion| *7)) (|ofCategory| *6 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|ofCategory| *7 (|Join| (|TranscendentalFunctionCategory|) (|AlgebraicallyClosedFunctionSpace| *6))) (|isDomain| *1 (|DefiniteIntegrationTools| *6 *7)))) ((*1 *2 *3 *4 *4 *2) (|partial| AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|SparseUnivariatePolynomial| *6)) (|isDomain| *4 (|OrderedCompletion| *6)) (|ofCategory| *6 (|Join| (|TranscendentalFunctionCategory|) (|AlgebraicallyClosedFunctionSpace| *5))) (|ofCategory| *5 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|DefiniteIntegrationTools| *5 *6))))) 
(((*1 *2 *1 *2) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) *2)) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *6 *2)) (|ofType| *6 *2) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|PackageForPoly| *4 *3 *5 *6)) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *4 *5))))) 
(((*1 *2 *3 *4 *3) (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *4 (|PrimitiveArray| (|Complex| (|DoubleFloat|)))) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|BlasLevelOne|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Expression| (|DoubleFloat|))) (|isDomain| *2 (|Expression| (|Fraction| (|Integer|)))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|)))) (|isDomain| *1 (|PermutationGroup| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|List| *2)) (|isDomain| *1 (|BasicOperatorFunctions1| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *4 (|List| *4))) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|BasicOperatorFunctions1| *4)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|BasicOperatorFunctions1| *4)))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|Mapping| *4 (|List| *4))) (|isDomain| *1 (|BasicOperatorFunctions1| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|LeftModule| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *3 *4)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|Operator| *3))))) 
(((*1 *1) (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2)) (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *3 *3 *3) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Union| (|:| |continuous| "Continuous at the end points") (|:| |lowerSingular| "There is a singularity at the lower end point") (|:| |upperSingular| "There is a singularity at the upper end point") (|:| |bothSingular| "There are singularities at both end points") (|:| |notEvaluated| "End point continuity not yet evaluated"))) (|isDomain| *1 (|d01AgentsPackage|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|PolynomialCategory| *5 *8 (|OrderedVariableList| *6))) (|ofCategory| *8 (|DirectProductCategory| (|#| *6) *4)) (|ofCategory| *9 (|ProjectiveSpaceCategory| *5)) (|ofCategory| *10 (|LocalPowerSeriesCategory| *5)) (|ofCategory| *11 (|PlacesCategory| *5 *10)) (|ofCategory| *3 (|DivisorCategory| *11)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *5 *6 *7 *8 *9 *10 *11 *3 *14)) (|ofCategory| *14 (|BlowUpMethodCategory|)) (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *5 *6 *7 *8 *9 *10 *11 *3 *12 *13 *14)) (|ofCategory| *13 (|DesingTreeCategory| *12)))) ((*1 *2 *3 *4 *5 *2) (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|PolynomialCategory| *6 *8 (|OrderedVariableList| *7))) (|ofCategory| *8 (|DirectProductCategory| (|#| *7) *4)) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *6 (|Field|)) (|ofType| *7 (|List| (|Symbol|))) (|ofCategory| *10 (|LocalPowerSeriesCategory| *6)) (|ofCategory| *11 (|PlacesCategory| *6 *10)) (|isDomain| *1 (|InterpolateFormsPackage| *6 *7 *5 *8 *9 *10 *11 *3)) (|ofCategory| *9 (|ProjectiveSpaceCategory| *6)) (|ofCategory| *3 (|DivisorCategory| *11)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Divisor| (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *5))) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|FiniteFieldCategory|)) (|isDomain| *2 (|List| (|DistributedMultivariatePolynomial| *6 *5))) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *5 *6 *7)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Divisor| (|Places| *5))) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| (|DistributedMultivariatePolynomial| *6 *5))) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *5 *6 *7)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|BlowUpMethodCategory|))))) 
(((*1 *2) (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4)) (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))) ((*1 *2) (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|))) (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4)) (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|PositiveInteger|)))) ((*1 *2) (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *6 *3)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|DivisorCategory| *10)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *11 *13)) (|ofCategory| *13 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|DesingTreePackage| *4 *5 *6 *7 *8 *9 *10 *11 *12 *3 *13)) (|ofCategory| *3 (|DesingTreeCategory| *12))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FlexibleArray| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|IndexedFlexibleArray| *3 *4)) (|ofCategory| *3 (|Type|)) (|ofType| *4 (|Integer|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|TangentExpansions| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|))) (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Complex| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|DoubleFloat|))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Complex| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Mapping| (|Float|))) (|isDomain| *1 (|RandomFloatDistributions|)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|isDomain| *2 (|Record| (|:| |height| (|Integer|)) (|:| |base| (|Integer|)) (|:| |quotient| (|Integer|)) (|:| |reste| (|Integer|)) (|:| |type| (|Union| "left" "center" "right" "vertical" "horizontal")))) (|isDomain| *1 (|NewtonPolygon| *4 *3 *5 *6)) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *4 *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|FiniteAbelianMonoidRing| *4 *6)) (|ofCategory| *6 (|DirectProductCategory| *7 (|NonNegativeInteger|))) (|ofType| *7 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Record| (|:| |height| (|Integer|)) (|:| |base| (|Integer|)) (|:| |quotient| (|Integer|)) (|:| |reste| (|Integer|)) (|:| |type| (|Union| "left" "center" "right" "vertical" "horizontal")))) (|isDomain| *1 (|NewtonPolygon| *4 *5 *6 *7))))) 
(((*1 *2 *1) (AND (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|Aggregate|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ArrayStack| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Heap| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Queue| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *7)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1) (AND (|has| $ (ATTRIBUTE |finiteAggregate|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Stack| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|XPolynomialRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4)))) (|isDomain| *1 (|SplittingTree| *3 *4)) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *2 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|DifferentialVariableCategory| *4))))) 
(((*1 *2) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|PackageForPoly| *3 *4 *5 *6)) (|ofCategory| *4 (|FiniteAbelianMonoidRing| *3 *5))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *2 (|Record| (|:| |part1| *3) (|:| |part2| *4))) (|isDomain| *1 (|MakeRecord| *3 *4)) (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Mapping| *3)) (|isDomain| *1 (|MappingPackage1| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *2)) (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *2 (|FiniteLinearAggregate| *4)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *6 *7 *2)) (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|DirectProductCategory| *5 *6)) (|ofCategory| *2 (|DirectProductCategory| *4 *6))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *6)) (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |sinh| (|Stream| *4)) (|:| |cosh| (|Stream| *4)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *4)) (|isDomain| *3 (|Stream| *4))))) 
(((*1 *2 *3) (|partial| AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|ofCategory| *5 (|FunctionSpace| *4)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))) (|isDomain| *1 (|FunctionSpaceUnivariatePolynomialFactor| *4 *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|OctonionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|PendantTree| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *1 (|PendantTree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4 *3 *5) (AND (|isDomain| *4 (|Kernel| *3)) (|isDomain| *5 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|IntegrationResult| *3)) (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7)) (|ofCategory| *7 (|SetCategory|)))) ((*1 *2 *3 *4 *4 *4 *3 *5) (AND (|isDomain| *4 (|Kernel| *3)) (|isDomain| *5 (|Fraction| (|SparseUnivariatePolynomial| *3))) (|ofCategory| *3 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|IntegrationResult| *3)) (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7)) (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|isDomain| *3 (|Symbol|)) (|ofCategory| *1 (|AlgebraicallyClosedField|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|AlgebraicallyClosedField|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Polynomial| *1)) (|ofCategory| *1 (|AlgebraicallyClosedField|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))))) ((*1 *1 *1) (AND (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *2)) (|ofCategory| *2 (|Join| (|OrderedSet|) (|IntegralDomain|))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|FunctionSpace| *5)) (|isDomain| *1 (|AlgebraicFunction| *5 *2)) (|ofCategory| *5 (|Join| (|OrderedSet|) (|IntegralDomain|))))) ((*1 *1 *2 *3) (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *1 (|RealClosedField|)))) ((*1 *1 *2 *3 *4) (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|OutputForm|)) (|ofCategory| *1 (|RealClosedField|)))) ((*1 *1 *2 *3) (|partial| AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|))) (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TabulatedComputationPackage| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Vector| *5))) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Vector| *5)) (|isDomain| *1 (|RepresentationPackage2| *5)) (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Finite|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1) (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|PatternMatchResult| *3 *4)) (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *5 (|ListAggregate| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |xinit| (|DoubleFloat|)) (|:| |xend| (|DoubleFloat|)) (|:| |fn| (|Vector| (|Expression| (|DoubleFloat|)))) (|:| |yinit| (|List| (|DoubleFloat|))) (|:| |intvals| (|List| (|DoubleFloat|))) (|:| |g| (|Expression| (|DoubleFloat|))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|d02AgentsPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|List| (|LiePolynomial| *4 *5))) (|isDomain| *1 (|LieExponentials| *4 *5 *6)) (|ofCategory| *5 (|Join| (|CommutativeRing|) (|Module| (|Fraction| (|Integer|))))) (|ofType| *6 (|PositiveInteger|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|GroebnerPackage| *4 *5 *6 *2)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Automorphism| *6)) (|isDomain| *5 (|Mapping| *6 *6)) (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|Record| (|:| R (|Matrix| *6)) (|:| A (|Matrix| *6)) (|:| |Ainv| (|Matrix| *6)))) (|isDomain| *1 (|PseudoLinearNormalForm| *6)) (|isDomain| *3 (|Matrix| *6))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|PatternMatchResult| *3 *5)) (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *5 (|ListAggregate| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| *7 *5 *6)) (|isDomain| *1 (|MakeBinaryCompiledFunction| *4 *5 *6 *7)) (|ofCategory| *4 (|ConvertibleTo| (|InputForm|))) (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|))))) 
(((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|DirectProductCategory| *5 (|NonNegativeInteger|))) (|ofType| *5 (|NonNegativeInteger|)) (|isDomain| *1 (|PackageForPoly| *3 *2 *4 *5)) (|ofCategory| *2 (|FiniteAbelianMonoidRing| *3 *4))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *2 *1) (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *5 (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|))) (|ofType| *6 (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *5)) (|Record| (|:| |index| *2) (|:| |exponent| *5)))) (|ofCategory| *2 (|OrderedSet|)) (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *2 *5 *6 *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 (|OrderedVariableList| *3)))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Polynomial| (|Complex| *4))) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Polynomial| (|Complex| *5))) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4))) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *4)))) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *5)))) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *4 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5)))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Expression| (|Complex| *4))) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *4 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Expression| (|Complex| *5))) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|))) (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *9 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *10 (|PlacesCategory| *4 *9)) (|ofCategory| *11 (|DivisorCategory| *10)) (|ofCategory| *12 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *8 *9 *10 *11 *14)) (|ofCategory| *14 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *4 *5 *6 *7 *8 *9 *10 *11 *12 *13 *14)) (|ofCategory| *13 (|DesingTreeCategory| *12)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *4 *5 *6)) (|ofCategory| (|PseudoAlgebraicClosureOfFiniteField| *4) (|Finite|)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *4 *5 *6)) (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|Collection| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|InfiniteTuple| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *1 *3) (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *3 *2)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *3)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Tuple| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *1 *2 *2) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (|RetractableTo| (|Fraction| *2)))) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|BoundIntegerRoots| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3))) (|isDomain| *1 (|CoordinateSystems| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|)))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ArrayStack| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|BasicType|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Heap| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Queue| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stack| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|InfiniteTuple| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *3)) (|isDomain| *1 (|TangentExpansions| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Stream| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|Kernel| *2)) (|ofCategory| *2 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4))) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))))) 
(((*1 *2 *3 *4 *5 *6) (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *6 (|List| (|Kernel| *3))) (|isDomain| *5 (|Kernel| *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *7))) (|ofCategory| *7 (|Join| (|GcdDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeff| *3))) (|isDomain| *1 (|ElementaryIntegration| *7 *3))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|InfiniteTuple| *3)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|SquareMatrix| *3 *4)) (|ofType| *3 (|NonNegativeInteger|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|IntegralDomain|) (|CharacteristicZero|))) (|isDomain| *1 (|InfiniteProductCharacteristicZero| *3 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|Field|) (|Finite|) (|ConvertibleTo| (|Integer|)))) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|MonogenicAlgebra| *3 *4)) (|isDomain| *1 (|InfiniteProductFiniteField| *3 *4 *5 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|Field|) (|Finite|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *1 (|InfiniteProductPrimeField| *3 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Join| (|IntegralDomain|) (|CharacteristicZero|))) (|isDomain| *1 (|StreamInfiniteProduct| *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Record| (|:| |points| (|NonNegativeInteger|)) (|:| |curves| (|NonNegativeInteger|)) (|:| |polygons| (|NonNegativeInteger|)) (|:| |constructs| (|NonNegativeInteger|))))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *1 *1 *1) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|BinaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *6 (|Join| (|IntegralDomain|) (|OrderedSet|))) (|isDomain| *2 (|List| (|Expression| *6))) (|isDomain| *1 (|DegreeReductionPackage| *5 *6)) (|isDomain| *3 (|Expression| *6)) (|ofCategory| *5 (|Ring|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|IntegrationResult| *5)) (|ofCategory| *5 (|Join| (|AlgebraicallyClosedFunctionSpace| *4) (|TranscendentalFunctionCategory|))) (|ofCategory| *4 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|IntegrationResultToFunction| *4 *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|IntegrationResult| (|Fraction| (|Polynomial| *4)))) (|ofCategory| *4 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|List| (|Expression| *4))) (|isDomain| *1 (|IntegrationResultRFToFunction| *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SegmentExpansionCategory| *3 *2)) (|ofCategory| *3 (|OrderedRing|)) (|ofCategory| *2 (|StreamAggregate| *3)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|SegmentExpansionCategory| *4 *2)) (|ofCategory| *4 (|OrderedRing|)) (|ofCategory| *2 (|StreamAggregate| *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|))))) ((*1 *2 *1) (AND (|isDomain| *2 (|XDistributedPolynomial| (|Symbol|) *3)) (|isDomain| *1 (|XPolynomial| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4)) (|isDomain| *1 (|XRecursivePolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4)))) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|Logic|))) ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4)))) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|DivisorCategory| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Result|)) (|isDomain| *1 (|ExpertSystemToolsPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Result|))) (|isDomain| *2 (|Result|)) (|isDomain| *1 (|ExpertSystemToolsPackage|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|RoutinesTable|))) ((*1 *2 *3) (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4)) (|isDomain| *1 (|StreamFunctions1| *4)) (|ofCategory| *4 (|Type|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Float|)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *3 (|Field|)))) ((*1 *1 *1 *2) (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *2) (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|NonNegativeInteger|))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 *3)))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ComplexCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|TranscendentalFunctionCategory|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|FourierComponent| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Kernel| *3)) (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|isDomain| *1 (|IncrementingMaps| *3)) (|ofCategory| *3 (|Join| (|Monoid|) (|AbelianSemiGroup|)))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|Logic|))) ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Vector| (|List| (|Integer|)))) (|isDomain| *1 (|HallBasis|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|InfiniteTuple| *3)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Stream| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Mapping| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Stream| *3))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|AffineSpaceCategory| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|AffineSpaceCategory| *3)) (|ofCategory| *3 (|Field|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|ComplexCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|Group|))) ((*1 *1 *1) (AND (|ofCategory| *1 (|OctonionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *1 *1) (|ofCategory| *1 (|PseudoAlgebraicClosureOfPerfectFieldCategory|))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|PartitionsAndPermutations|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|ProjectiveSpaceCategory| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *3 (|Field|)))) ((*1 *1 *1) (|isDomain| *1 (|Partition|))) ((*1 *1 *1) (AND (|ofCategory| *1 (|QuaternionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|AffineSpaceCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|List| *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *1) (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2)) (|ofCategory| *2 (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *2 (|List| (|Record| (|:| |factors| (|List| *3)) (|:| |error| *5)))) (|isDomain| *1 (|ComplexRootFindingPackage| *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *5))))) ((*1 *2 *3 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *2 (|List| (|Record| (|:| |factors| (|List| *3)) (|:| |error| *4)))) (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|PartialFraction| *2)) (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| *14)) (|ofCategory| *14 (|DesingTreeCategory| *13)) (|ofCategory| *13 (|InfinitlyClosePointCategory| *5 *6 *7 *8 *9 *10 *11 *12 *15)) (|ofCategory| *15 (|BlowUpMethodCategory|)) (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|ofCategory| *7 (|PolynomialCategory| *5 *8 (|OrderedVariableList| *6))) (|ofCategory| *8 (|DirectProductCategory| (|#| *6) *3)) (|ofCategory| *9 (|ProjectiveSpaceCategory| *5)) (|ofCategory| *10 (|LocalPowerSeriesCategory| *5)) (|ofCategory| *11 (|PlacesCategory| *5 *10)) (|ofCategory| *12 (|DivisorCategory| *11)) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DesingTreePackage| *5 *6 *7 *8 *9 *10 *11 *12 *13 *14 *15))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 *3)))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Vector| *4)) (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *1 (|AlgebraPackage| *3 *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4)))) ((*1 *2) (AND (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3)))) ((*1 *2) (AND (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FramedAlgebra| *3 *4)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *4 (|QuotientFieldCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Vector| *6)) (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6)) (|ofCategory| *6 (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4))))) ((*1 *2 *1) (AND (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *4 (|QuotientFieldCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Vector| *6)) (|isDomain| *1 (|FramedModule| *3 *4 *5 *6 *7)) (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofType| *7 *2))) ((*1 *2) (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| (|Vector| *4))) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *2 (|AffinePlane| *3)) (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|EuclideanDomain|))) ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|AxiomServer|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Database| (|IndexCard|))) (|isDomain| *1 (|OperationsQuery|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|PlaneAlgebraicCurvePlot|)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Mapping| (|Factored| *4) *4)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *4)) (|isDomain| *1 (|FactoredFunctionUtilities| *4)))) ((*1 *1 *1) (|isDomain| *1 (|Plot3D|))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|)))) ((*1 *1 *1) (|isDomain| *1 (|Plot|))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|)))) ((*1 *2 *3 *2 *4) (AND (|isDomain| *2 (|Record| (|:| |left| (|Fraction| (|Integer|))) (|:| |right| (|Fraction| (|Integer|))))) (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *1 (|RealZeroPackage| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *2 *2) (|partial| AND (|isDomain| *2 (|Record| (|:| |left| (|Fraction| (|Integer|))) (|:| |right| (|Fraction| (|Integer|))))) (|isDomain| *1 (|RealZeroPackage| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))))) ((*1 *2 *3 *2 *4) (AND (|isDomain| *2 (|Record| (|:| |left| (|Fraction| (|Integer|))) (|:| |right| (|Fraction| (|Integer|))))) (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *1 (|RealZeroPackageQ| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3 *2 *2) (|partial| AND (|isDomain| *2 (|Record| (|:| |left| (|Fraction| (|Integer|))) (|:| |right| (|Fraction| (|Integer|))))) (|isDomain| *1 (|RealZeroPackageQ| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|)))))) ((*1 *1 *1) (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|))) (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|DirectProductCategory| *5 (|NonNegativeInteger|))) (|isDomain| *1 (|PackageForPoly| *4 *3 *2 *5)) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *4 *2)) (|ofType| *5 (|NonNegativeInteger|))))) 
(((*1 *1) (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2)) (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|List| (|RewriteRule| *4 *5 *2))) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Join| (|Ring|) (|PatternMatchable| *4) (|OrderedSet|) (|ConvertibleTo| (|Pattern| *4)))) (|ofCategory| *2 (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4) (|ConvertibleTo| (|Pattern| *4)))) (|isDomain| *1 (|ApplyRules| *4 *5 *2)))) ((*1 *2 *3 *2 *4) (AND (|isDomain| *3 (|List| (|RewriteRule| *5 *6 *2))) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Join| (|Ring|) (|PatternMatchable| *5) (|OrderedSet|) (|ConvertibleTo| (|Pattern| *5)))) (|ofCategory| *2 (|Join| (|FunctionSpace| *6) (|PatternMatchable| *5) (|ConvertibleTo| (|Pattern| *5)))) (|isDomain| *1 (|ApplyRules| *5 *6 *2))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Record| (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |init| (|List| (|DoubleFloat|))) (|:| |lb| (|List| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |cf| (|List| (|Expression| (|DoubleFloat|)))) (|:| |ub| (|List| (|OrderedCompletion| (|DoubleFloat|)))))) (|isDomain| *1 (|e04AgentsPackage|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|Complex| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|)))) ((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3)))) ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|EuclideanDomain|))) ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|IntegerPrimesPackage| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2)) (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *1 (|FourierSeries| *3 *2)) (|ofCategory| *3 (|Join| (|CommutativeRing|) (|Algebra| (|Fraction| (|Integer|))))) (|ofCategory| *2 (|Join| (|OrderedSet|) (|AbelianGroup|)))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *2 *3 *4 *5 *5) (AND (|isDomain| *4 (|Boolean|)) (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|Field|)) (|ofCategory| *6 (|Finite|)) (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|List| (|List| (|Matrix| *6)))) (|isDomain| *1 (|RepresentationPackage2| *6)) (|isDomain| *3 (|List| (|Matrix| *6))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|List| (|List| (|Matrix| *4)))) (|isDomain| *1 (|RepresentationPackage2| *4)) (|isDomain| *3 (|List| (|Matrix| *4))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Finite|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|List| (|List| (|Matrix| *5)))) (|isDomain| *1 (|RepresentationPackage2| *5)) (|isDomain| *3 (|List| (|Matrix| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Finite|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|List| (|List| (|Matrix| *5)))) (|isDomain| *1 (|RepresentationPackage2| *5)) (|isDomain| *3 (|List| (|Matrix| *5)))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|))) (|isDomain| *1 (|ExpressionTubePlot|)) (|isDomain| *3 (|DoubleFloat|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|d01AgentsPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|ExpertSystemContinuityPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|FreeAbelianMonoidCategory| *4 *2)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *2 (|CancellationAbelianMonoid|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *2 *3) (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5)) (|ofCategory| *4 (|UniqueFactorizationDomain|)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3))) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Any|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputPackage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|))) (|isDomain| *1 (|HeuGcd| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|NAGLinkSupportPackage|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *6 (|Field|)) (|isDomain| *4 (|TaylorSeries| *6)) (|isDomain| *2 (|Mapping| (|Stream| *4) (|Stream| *4))) (|isDomain| *1 (|WeierstrassPreparation| *6)) (|isDomain| *5 (|Stream| *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|StreamAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *1 (|SetAggregate| *3)))) ((*1 *1) (AND (|ofCategory| *1 (|SetAggregate| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|isDomain| *1 (|CombinatorialFunction| *4 *2)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|))) ((*1 *1 *1 *1) (|isDomain| *1 (|DoubleFloat|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Mapping| (|Boolean|) (|BasicOperator|) (|BasicOperator|))) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *6 *6)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *4 (|List| *6)) (|isDomain| *2 (|Record| (|:| |fs| (|Boolean|)) (|:| |sd| *4) (|:| |td| (|List| *4)))) (|isDomain| *1 (|TableauxBumpers| *6)) (|isDomain| *5 (|List| *4))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|SubSpace| 3 (|DoubleFloat|))) (|isDomain| *4 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Export3D|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Polynomial| *5)) (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Complex| (|DoubleFloat|)))) (|isDomain| *1 (|ComplexDoubleFloatVector|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Vector| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| *5 (|List| *5))) (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4)) (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *2 (|Mapping| (|Stream| *4) (|List| (|Stream| *4)))) (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|CyclicStreamTools| *4 *3)) (|ofCategory| *3 (|LazyStreamAggregate| *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|)) (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|PolynomialIdeals| *3 *4 *5 *6))) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)))) ((*1 *1 *1 *1) (AND (|ofCategory| *2 (|Field|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|PolynomialIdeals| *2 *3 *4 *5)) (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)))) ((*1 *2 *3 *2) (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7)) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *1) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|SetAggregate| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4)))) (|ofCategory| *4 (|RealClosedField|)) (|isDomain| *2 (|List| (|Polynomial| *4))) (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| (|Mapping| *4 (|List| *4)))) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|BasicOperatorFunctions1| *4)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|BasicOperatorFunctions1| *4)))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|List| (|Mapping| *4 (|List| *4)))) (|isDomain| *1 (|BasicOperatorFunctions1| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3)))) ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Permutation| *3))) (|isDomain| *1 (|PermutationGroup| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3)))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *2) (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2))))) ((*1 *2 *3) (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|))) (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|DivisorCategory| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SegmentCategory| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3)))) ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|DifferentialExtension| *4)) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|DifferentialExtension| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|DifferentialRing|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *1 *1) (|ofCategory| *1 (|DifferentialRing|))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|DifferentialVariableCategory| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|))) (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)))) ((*1 *1 *1) (AND (|ofCategory| *2 (|Join| (|Field|) (|CharacteristicZero|))) (|isDomain| *1 (|FullPartialFractionExpansion| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *2 *1 *3) (AND (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|PartialDifferentialRing| *3)) (|isDomain| *1 (|IntegrationResult| *2)) (|isDomain| *3 (|Symbol|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|Mapping| *2 *2)) (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| (|NonNegativeInteger|))) (|ofCategory| *1 (|PartialDifferentialRing| *4)) (|ofCategory| *4 (|SetCategory|)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|PartialDifferentialRing| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|PartialDifferentialRing| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|PartialDifferentialRing| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|U32VectorPolynomialOperations|)))) ((*1 *2 *2 *3 *4) (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Integer|)) (|isDomain| *1 (|U32VectorPolynomialOperations|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| (QUOTE |x|))) (|isDomain| *1 (|UnivariateFormalPowerSeries| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *3 *4)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3)))) ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|List| *6))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))) 
(((*1 *2 *1) (|partial| AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *1) (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3)))) ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *1 *1 *2) (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Partition|)) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|RewriteRule| *3 *4 *5))) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Join| (|Ring|) (|PatternMatchable| *3) (|OrderedSet|) (|ConvertibleTo| (|Pattern| *3)))) (|ofCategory| *5 (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3) (|ConvertibleTo| (|Pattern| *3)))) (|isDomain| *1 (|Ruleset| *3 *4 *5))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2)) (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|SetAggregate| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *1 *2) (AND (|isDomain| *1 (|FourierComponent| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3)))) ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|LinearlyExplicitRingOver| *4)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *4)) (|isDomain| *1 (|LinearDependence| *4 *5))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *1 *2) (AND (|isDomain| *1 (|FourierComponent| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3)))) ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Record| (|:| |xinit| (|DoubleFloat|)) (|:| |xend| (|DoubleFloat|)) (|:| |fn| (|Vector| (|Expression| (|DoubleFloat|)))) (|:| |yinit| (|List| (|DoubleFloat|))) (|:| |intvals| (|List| (|DoubleFloat|))) (|:| |g| (|Expression| (|DoubleFloat|))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Record| (|:| |stiffness| (|Float|)) (|:| |stability| (|Float|)) (|:| |expense| (|Float|)) (|:| |accuracy| (|Float|)) (|:| |intermediateResults| (|Float|)))) (|isDomain| *1 (|ODEIntensityFunctionsTable|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|List| (|Equation| (|Polynomial| *6)))) (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *7)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *7 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|DifferentialVariableCategory| *4)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| *4))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|DictionaryOperations| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|DictionaryOperations| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *1 (|ExtensibleLinearAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *3 *1) (|partial| AND (|ofCategory| *1 (|KeyedDictionary| *3 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2 *1 *3) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *4)) (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|Multiset| *4)))) ((*1 *1 *2 *1 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Multiset| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|SplittingNode| *3 *4)) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|LiouvillianFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|Finite|)) (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *2 *2 *1) (|partial| AND (|isDomain| *2 (|BasicStochasticDifferential|)) (|isDomain| *1 (|StochasticDifferential| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UserDefinedPartialOrdering| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *2 *3) (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Join| (|Ring|) (|PatternMatchable| *4) (|OrderedSet|) (|ConvertibleTo| (|Pattern| *4)))) (|isDomain| *1 (|RewriteRule| *4 *5 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4) (|ConvertibleTo| (|Pattern| *4)))))) ((*1 *1 *2 *2) (AND (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Join| (|Ring|) (|PatternMatchable| *3) (|OrderedSet|) (|ConvertibleTo| (|Pattern| *3)))) (|isDomain| *1 (|RewriteRule| *3 *4 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3) (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Commutator|))) ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Commutator|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|FiniteLinearAggregate| *5)) (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|MatrixManipulation| *5 *6 *7 *3)) (|ofCategory| *3 (|MatrixCategory| *5 *6 *7)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|PositiveInteger|))) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|FiniteLinearAggregate| *5)) (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|MatrixManipulation| *5 *6 *7 *3)) (|ofCategory| *3 (|MatrixCategory| *5 *6 *7)))) ((*1 *2 *1 *3) (AND (|isDomain| *2 (|Record| (|:| |Left| (|SparseEchelonMatrix| *3 *4)) (|:| |Right| (|SparseEchelonMatrix| *3 *4)))) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *3 *4 *5)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|)))) ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|BlowUpMethodCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|LazyStreamAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|LiouvillianFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *1) (|partial| AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Point| *4))) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Asp12| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Asp29| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Asp33| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FortranProgramCategory|)) (|isDomain| *2 (|Void|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|FileName|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|OutputForm|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SpecialOutputPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SpecialOutputPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|LiouvillianFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ExpertSystemContinuityPackage|))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3) (AND (|has| *6 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3)) (|ofCategory| *3 (|MatrixCategory| *4 *5 *6)))) ((*1 *2 *3) (AND (|has| *9 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|ofCategory| *7 (|QuotientFieldCategory| *4)) (|ofCategory| *8 (|FiniteLinearAggregate| *7)) (|ofCategory| *9 (|FiniteLinearAggregate| *7)) (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9 *10)) (|ofCategory| *3 (|MatrixCategory| *4 *5 *6)) (|ofCategory| *10 (|MatrixCategory| *7 *8 *9)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *5)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3)) (|ofCategory| *3 (|MatrixCategory| *4 *5 *6)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|List| *7))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|DeRhamComplex| *3 *4)) (|ofCategory| *3 (|Join| (|Ring|) (|OrderedSet|))) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *1) (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2)) (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|)))) ((*1 *2 *1) (|partial| AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *2)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|ofCategory| *2 (|FunctionFieldCategory| *3 *4 *5)))) ((*1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5)) (|ofType| *3 *2) (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|)))) ((*1 *1) (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *1 (|MonogenicAlgebra| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3)) (|isDomain| *2 (|Integer|)))) ((*1 *1 *1) (|ofCategory| *1 (|RadicalCategory|))) ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|RealClosedField|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|ofCategory| *1 (|RealClosedField|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *1 *1) (|ofCategory| *1 (|RealClosedField|)))) 
(((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *1 *2 *2 *2) (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|AttributeButtons|)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|AttributeButtons|))))) 
(((*1 *2) (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))))) ((*1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *1) (|isDomain| *1 (|Pi|))) ((*1 *1) (|ofCategory| *1 (|TranscendentalFunctionCategory|)))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Queue| *3))))) 
(((*1 *1 *2 *3) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)))) ((*1 *1 *2) (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5)) (|ofCategory| *4 (|DirectProductCategory| *3 *2)) (|ofCategory| *5 (|DirectProductCategory| *3 *2))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *2 (|Record| (|:| |k| (|Integer|)) (|:| |c| *4))) (|isDomain| *1 (|NeitherSparseOrDensePowerSeries| *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|FileName|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranOutputStackPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *3)) (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *3 (|FiniteLinearAggregate| *4))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3)) (|isDomain| *1 (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5)) (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4)) (|ofCategory| *5 (|PartialTranscendentalFunctions| *4)))) ((*1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|))) ((*1 *1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|LiePolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Join| (|CommutativeRing|) (|Module| (|Fraction| (|Integer|))))) (|isDomain| *1 (|LieExponentials| *3 *4 *5)) (|ofType| *5 (|PositiveInteger|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *1 (|StreamTranscendentalFunctions| *3)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|))))) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|XExponentialPackage| *4 *5 *2)) (|ofCategory| *2 (|XPolynomialsCat| *5 *4)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|XPBWPolynomial| *3 *4)) (|ofCategory| *4 (|Module| (|Fraction| (|Integer|)))) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |key| (|Symbol|)) (|:| |entry| (|FortranType|))))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|MonadWithUnit|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|Monoid|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5)) (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LinearSystemMatrixPackage1| *5)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Join| (|FiniteLinearAggregate| *5) (CATEGORY |package| (ATTRIBUTE |shallowlyMutable|)))) (|ofCategory| *4 (|Join| (|FiniteLinearAggregate| *5) (CATEGORY |package| (ATTRIBUTE |shallowlyMutable|)))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3)) (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))) 
(((*1 *1 *1) (|isDomain| *1 (|Boolean|))) ((*1 *1 *1) (|ofCategory| *1 (|BitAggregate|))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|DivisionRing|)) (|isDomain| *2 (|Integer|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|Group|)) (|isDomain| *2 (|Integer|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|Monoid|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|StochasticDifferential| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|SemiGroup|)) (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|List| (|Matrix| (|Integer|)))) (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|)))) ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|LazyStreamAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *5)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|VectorCategory| *3)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Record| (|:| |endPointContinuity| (|Union| (|:| |continuous| "Continuous at the end points") (|:| |lowerSingular| "There is a singularity at the lower end point") (|:| |upperSingular| "There is a singularity at the upper end point") (|:| |bothSingular| "There are singularities at both end points") (|:| |notEvaluated| "End point continuity not yet evaluated"))) (|:| |singularitiesStream| (|Union| (|:| |str| (|Stream| (|DoubleFloat|))) (|:| |notEvaluated| "Internal singularities not yet evaluated"))) (|:| |range| (|Union| (|:| |finite| "The range is finite") (|:| |lowerInfinite| "The bottom of range is infinite") (|:| |upperInfinite| "The top of range is infinite") (|:| |bothInfinite| "Both top and bottom points are infinite") (|:| |notEvaluated| "Range not yet evaluated"))))) (|isDomain| *1 (|IntegrationFunctionsTable|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Tree| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PlacesCategory| *3 *4)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|LocalPowerSeriesCategory| *3)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))) 
(((*1 *1) (|isDomain| *1 (|Character|))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|List| (|Record| (|:| |center| *5) (|:| |equation| *5)))) (|isDomain| *1 (|PrimitiveRatDE| *4 *5 *3 *6)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5)) (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| (|Fraction| *5))))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *4 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|List| (|Record| (|:| |center| *4) (|:| |equation| *4)))) (|isDomain| *1 (|PrimitiveRatDE| *5 *4 *3 *6)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4)) (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| (|Fraction| *4))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|List| (|Record| (|:| |center| *5) (|:| |equation| *5)))) (|isDomain| *1 (|PrimitiveRatDE| *4 *5 *6 *3)) (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| (|Fraction| *5))))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *4 (|UnivariatePolynomialCategory| *5)) (|isDomain| *2 (|List| (|Record| (|:| |center| *4) (|:| |equation| *4)))) (|isDomain| *1 (|PrimitiveRatDE| *5 *4 *6 *3)) (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *4)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| (|Fraction| *4)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *2 (|List| (|Segment| (|DoubleFloat|)))) (|isDomain| *1 (|PlotTools|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|LiouvillianFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *2 *4 *5 *6)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5) (AND (|ofCategory| *6 (|UnivariatePolynomialCategory| *9)) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *9 (|EuclideanDomain|)) (|ofCategory| *10 (|PolynomialCategory| *9 *7 *8)) (|isDomain| *2 (|Record| (|:| |deter| (|List| (|SparseUnivariatePolynomial| *10))) (|:| |dterm| (|List| (|List| (|Record| (|:| |expt| (|NonNegativeInteger|)) (|:| |pcoef| *10))))) (|:| |nfacts| (|List| *6)) (|:| |nlead| (|List| *10)))) (|isDomain| *1 (|NPCoef| *6 *7 *8 *9 *10)) (|isDomain| *3 (|SparseUnivariatePolynomial| *10)) (|isDomain| *4 (|List| *6)) (|isDomain| *5 (|List| *10))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|)))) ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1) (|partial| AND (|isDomain| *1 (|Cell| *2)) (|ofCategory| *2 (|RealClosedField|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|Segment| *3)) (|ofCategory| *3 (|PolynomialCategory| *7 *6 *4)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| (|Integer|)))) (|isDomain| *1 (|InnerPolySum| *6 *4 *7 *3)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| (|Integer|)))) (|isDomain| *1 (|InnerPolySum| *5 *4 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4)))) ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|FunctionSpaceSum| *4 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|CombinatorialOpsCategory|) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|SegmentBinding| *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|CombinatorialOpsCategory|) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *4 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *1 (|FunctionSpaceSum| *4 *2)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Fraction| (|Polynomial| *5))) (|isDomain| *1 (|RationalFunctionSum| *5)) (|isDomain| *3 (|Polynomial| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Union| (|Fraction| (|Polynomial| *5)) (|Expression| *5))) (|isDomain| *1 (|RationalFunctionSum| *5)) (|isDomain| *3 (|Fraction| (|Polynomial| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|SegmentBinding| (|Polynomial| *5))) (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Fraction| *3)) (|isDomain| *1 (|RationalFunctionSum| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|SegmentBinding| (|Fraction| (|Polynomial| *5)))) (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Union| *3 (|Expression| *5))) (|isDomain| *1 (|RationalFunctionSum| *5))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|OctonionCategory| *2)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *2 *2) (AND (|isDomain| *1 (|ParametricSurface| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|ScriptFormulaFormat|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|InnerNumericEigenPackage| *4 *5 *6)) (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Segment| (|Fraction| (|Integer|))))) (|isDomain| *1 (|DrawOption|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Segment| (|Float|)))) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |xinit| (|DoubleFloat|)) (|:| |xend| (|DoubleFloat|)) (|:| |fn| (|Vector| (|Expression| (|DoubleFloat|)))) (|:| |yinit| (|List| (|DoubleFloat|))) (|:| |intvals| (|List| (|DoubleFloat|))) (|:| |g| (|Expression| (|DoubleFloat|))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|d02AgentsPackage|))))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *3 (|Boolean|)) (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *2) (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2)) (|ofCategory| *2 (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4 *3) (|partial| AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|GcdDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeff| *3))) (|isDomain| *1 (|ElementaryIntegration| *5 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UniversalSegment| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *2) (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|List| (|DoubleFloat|))) (|isDomain| *1 (|d01WeightsPackage|))))) 
(((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *4 (|Mapping| *7 *7)) (|isDomain| *5 (|List| (|Fraction| *7))) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6)) (|isDomain| *3 (|Fraction| *7)) (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|Record| (|:| |mainpart| *3) (|:| |limitedlogs| (|List| (|Record| (|:| |coeff| *3) (|:| |logand| *3)))))) (|isDomain| *1 (|TranscendentalIntegration| *6 *7))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphImage|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|FreeModuleCat| *3 *4)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|MonoidRing| *3 *4))) (|isDomain| *1 (|MonoidRing| *3 *4)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| *6 (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PackageForPoly| *4 *3 *5 *6)) (|ofCategory| *3 (|FiniteAbelianMonoidRing| *4 *5)))) ((*1 *2 *1) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *6 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|SuchThat| (|List| (|Polynomial| *4)) (|List| (|Equation| (|Polynomial| *4))))) (|isDomain| *1 (|PolynomialIdeals| *4 *5 *6 *7))))) 
(((*1 *2 *3) (|partial| AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|CharacteristicZero|))) (|isDomain| *2 (|Record| (|:| |left| *3) (|:| |right| *3))) (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4))) (|ofCategory| *4 (|RealClosedField|)) (|isDomain| *2 (|List| (|Polynomial| *4))) (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|AttributeButtons|))))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|ReductionOfOrder| *3 *2)) (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *3)))) ((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Record| (|:| |eq| *3) (|:| |op| (|List| *5)))) (|isDomain| *1 (|ReductionOfOrder| *5 *3)) (|isDomain| *4 (|List| *5)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|DeRhamComplex| *2 *3)) (|ofCategory| *2 (|Join| (|Ring|) (|OrderedSet|))) (|ofType| *3 (|List| (|Symbol|)))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|PolynomialFactorizationExplicit|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7))) (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7)) (|isDomain| *3 (|SparseUnivariatePolynomial| *7)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|PolynomialFactorizationExplicit|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *5))) (|isDomain| *1 (|PolynomialFactorizationByRecursionUnivariate| *4 *5)) (|isDomain| *3 (|SparseUnivariatePolynomial| *5))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|IntervalCategory| *2)) (|ofCategory| *2 (|Join| (|FloatingPointSystem|) (|TranscendentalFunctionCategory|))))) ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedAbelianMonoidSup|)))) 
(((*1 *2) (AND (|isDomain| *2 (|Vector| (|List| (|Record| (|:| |value| (|PrimeField| *3)) (|:| |index| (|SingleInteger|)))))) (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|)))) ((*1 *2) (AND (|isDomain| *2 (|Vector| (|List| (|Record| (|:| |value| *3) (|:| |index| (|SingleInteger|)))))) (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|Union| (|SparseUnivariatePolynomial| *3) *2)))) ((*1 *2) (AND (|isDomain| *2 (|Vector| (|List| (|Record| (|:| |value| *3) (|:| |index| (|SingleInteger|)))))) (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2 *3) (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *7))) (|isDomain| *3 (|SparseUnivariatePolynomial| *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|PolynomialFactorizationExplicit|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7)))) ((*1 *2 *2 *3) (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5))) (|isDomain| *3 (|SparseUnivariatePolynomial| *5)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *4 (|PolynomialFactorizationExplicit|)) (|isDomain| *1 (|PolynomialFactorizationByRecursionUnivariate| *4 *5))))) 
(((*1 *2 *3 *4 *5 *5 *6) (AND (|isDomain| *5 (|Kernel| *4)) (|isDomain| *6 (|Symbol|)) (|ofCategory| *4 (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|))) (|ofCategory| *7 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|)) (|OrderedSet|) (|CharacteristicZero|) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |particular| (|Union| *4 "failed")) (|:| |basis| (|List| *4)))) (|isDomain| *1 (|PureAlgebraicIntegration| *7 *4 *3)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|AlgebraPackage| *3 *4)) (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|Cell| *3)) (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|IntervalCategory| *3)) (|ofCategory| *3 (|Join| (|FloatingPointSystem|) (|TranscendentalFunctionCategory|))) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *1) (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|))) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Equation| (|Polynomial| (|Integer|)))) (|isDomain| *2 (|Record| (|:| |varOrder| (|List| (|Symbol|))) (|:| |inhom| (|Union| (|List| (|Vector| (|NonNegativeInteger|))) "failed")) (|:| |hom| (|List| (|Vector| (|NonNegativeInteger|)))))) (|isDomain| *1 (|DiophantineSolutionPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *1 (|SmithNormalForm| *3 *4 *5 *2)) (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *3 *3 *4) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *5 *4)) (|ofCategory| *5 (|Type|)) (|ofCategory| *4 (|Type|)) (|isDomain| *2 |SortedExponentVector|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SpecialOutputPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *5 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *2 *4 *5 *3)) (|ofCategory| *3 (|MatrixCategory| *2 *4 *5)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|has| *2 (ATTRIBUTE (|commutative| "*"))) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *5 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *2 *4 *5 *3)) (|ofCategory| *3 (|MatrixCategory| *2 *4 *5)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5)) (|ofCategory| *4 (|DirectProductCategory| *3 *2)) (|ofCategory| *5 (|DirectProductCategory| *3 *2)) (|has| *2 (ATTRIBUTE (|commutative| "*"))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|PrimitiveArray| (|ModMonic| *3 *4))) (|isDomain| *1 (|ModMonic| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5 *6)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|StringCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Stream| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *1 *1) (AND (|has| *1 (ATTRIBUTE |shallowlyMutable|)) (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Queue| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *1 *2) (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|CharacterClass|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Character|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Record| (|:| |resultant| *3) (|:| |coef1| (|NewSparseUnivariatePolynomial| *3)) (|:| |coef2| (|NewSparseUnivariatePolynomial| *3)))) (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|)) (|isDomain| *2 (|List| *8))))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|))) ((*1 *1 *1) (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4)) (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|FortranMachineTypeCategory|)))) ((*1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerRetractions| *3)) (|ofCategory| *3 (|RetractableTo| *2)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *2 *5 *6)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|))) (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2)) (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|)))) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|)))) (|isDomain| *1 (|DrawOption|)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6))) (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Vector| *6)) (|isDomain| *1 (|LinGroebnerPackage| *5 *6))))) 
(((*1 *2 *2) (AND (|isDomain| *1 (|MappingPackage1| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *1 *3 *3 *3) (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|AlgebraPackage| *4 *3)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *1 *2 *2 *3) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *1 (|FloatingPointSystem|)))) ((*1 *1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|FloatingPointSystem|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *2 *6)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *3 *4 *4 *4) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8))) (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8)))) ((*1 *2 *3 *4 *4 *4) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))) (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Matrix| (|DoubleFloat|))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *3 *1 *4 *4 *4 *4 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *3))) (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *3)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)))) ((*1 *1 *2 *1) (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *2)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5)))) ((*1 *2 *3 *1 *4 *4 *4 *4 *4) (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *3))) (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *3)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))))) 
(((*1 *1) (|isDomain| *1 (|TheSymbolTable|)))) 
(((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|))) (|isDomain| *2 (|FortranCode|)) (|isDomain| *1 (|FortranCodePackage1|)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|SegmentBinding| (|Polynomial| (|Integer|)))) (|isDomain| *2 (|FortranCode|)) (|isDomain| *1 (|FortranCodePackage1|)))) ((*1 *1 *2 *2 *2) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1 *3) (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|BasicStochasticDifferential|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|StochasticDifferential| *4)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|LinesOpPack| *3))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3)) (|:| |coef2| (|NewSparseUnivariatePolynomial| *3)))) (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |gcd| *1) (|:| |coef2| *1))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4)))) (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7)) (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4)))) (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4)) (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|RetractableTo| (|Integer|))) (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| (|FortranCode|))) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|GaussianFactorizationPackage|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5)) (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|PrimitiveRatDE| *4 *2 *3 *5)) (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2)) (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| (|Fraction| *2))))) ((*1 *2 *3 *4) (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4)) (|isDomain| *1 (|PrimitiveRatDE| *4 *2 *5 *3)) (|ofCategory| *4 (|Join| (|Field|) (|CharacteristicZero|) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *2)) (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| (|Fraction| *2)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *3 *2 *4) (|partial| AND (|isDomain| *4 (|Mapping| (|Union| (|Integer|) "failed") *5)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InnerPolySign| *5 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)))) ((*1 *2 *3 *4 *2 *5) (|partial| AND (|isDomain| *5 (|Mapping| (|Union| (|Integer|) "failed") *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InnerPolySign| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3 *4 *5) (|partial| AND (|isDomain| *5 (|Mapping| (|Union| (|Integer|) "failed") *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InnerPolySign| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Mapping| *5 *5 *5)) (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4)) (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|)))) (|isDomain| *2 (|Mapping| (|Stream| *4) (|Stream| *4) (|Stream| *4))) (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5) (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|))) (|isDomain| *4 (|Float|)) (|isDomain| *2 (|Record| (|:| |value| *4) (|:| |error| *4) (|:| |totalpts| (|Integer|)) (|:| |success| (|Boolean|)))) (|isDomain| *1 (|NumericalQuadrature|)) (|isDomain| *5 (|Integer|))))) 
(((*1 *2 *2) (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2) (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|ViewDefaultsPackage|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Segment| *3)) (|isDomain| *1 (|SegmentBinding| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *2 *2) (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2) (AND (|isDomain| *1 (|UniversalSegment| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Fraction| (|Polynomial| *4))) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5)) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| *4)))) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5)) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|Fraction| (|Polynomial| *4)))) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1))) (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3)))) ((*1 *2 *3 *3 *4) (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3))) (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3)) (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *1 *2 *3 *4) (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|RealClosedField|)) (|isDomain| *1 (|SimpleCell| *2 *5)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| (|Record| (|:| C (|Matrix| *5)) (|:| |g| (|Vector| *5))))) (|isDomain| *1 (|PseudoLinearNormalForm| *5)) (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|RealClosure| *3)) (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|))))) ((*1 *2 *3 *1 *2) (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|))) (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)))) ((*1 *2 *3 *1 *2) (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *2 *3)) (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|))) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|FiniteFieldFactorization| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|FiniteFieldFactorizationWithSizeParseBySideEffect| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Point| *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))))) 
(((*1 *2 *3 *1) (AND (|ofCategory| *1 (|KeyedDictionary| *3 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|OnePointCompletion| (|DoubleFloat|))) (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))) 
(((*1 *2 *3 *4 *5 *6 *2 *7 *8) (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *11))) (|isDomain| *3 (|SparseUnivariatePolynomial| *11)) (|isDomain| *4 (|List| *10)) (|isDomain| *5 (|List| *8)) (|isDomain| *6 (|List| (|NonNegativeInteger|))) (|isDomain| *7 (|Vector| (|List| (|SparseUnivariatePolynomial| *8)))) (|ofCategory| *10 (|OrderedSet|)) (|ofCategory| *8 (|EuclideanDomain|)) (|ofCategory| *11 (|PolynomialCategory| *8 *9 *10)) (|ofCategory| *9 (|OrderedAbelianMonoidSup|)) (|isDomain| *1 (|MultivariateLifting| *9 *10 *8 *11))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|)) (|ofCategory| *1 (|Collection| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |exponent| (|NonNegativeInteger|)) (|:| |center| *4) (|:| |num| *4)))) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|))) (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4)))) ((*1 *1 *2 *3 *4) (AND (|isDomain| *2 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|isDomain| *3 (|List| (|Polynomial| (|Integer|)))) (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|FortranType|)))) ((*1 *1 *2 *3 *4) (AND (|isDomain| *2 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|FortranType|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|InfiniteTuple| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|LieAlgebra| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|LiePolynomial| *3 *4)) (|ofCategory| *4 (|CommutativeRing|)))) ((*1 *1 *2 *1) (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|LiePolynomial| *3 *4)) (|ofCategory| *4 (|CommutativeRing|)))) ((*1 *1 *2 *2) (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|LiePolynomial| *3 *4)) (|ofCategory| *4 (|CommutativeRing|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|List| (|List| *3)))) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|ThreeDimensionalMatrix| *3)))) ((*1 *1 *2 *3) (AND (|isDomain| *1 (|ModuleMonomial| *2 *3 *4)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *3)) (|Record| (|:| |index| *2) (|:| |exponent| *3)))))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |key| (|Symbol|)) (|:| |entry| *4)))) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|PatternMatchResult| *3 *4)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *2 (|List| (|SplittingNode| *3 *5))) (|isDomain| *1 (|SplittingNode| *3 *5)) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Record| (|:| |val| *4) (|:| |tower| *5)))) (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *2 (|List| (|SplittingNode| *4 *5))) (|isDomain| *1 (|SplittingNode| *4 *5)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |val| *3) (|:| |tower| *4))) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *1 (|SplittingNode| *3 *4)))) ((*1 *1 *2 *3) (AND (|isDomain| *1 (|SplittingNode| *2 *3)) (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))))) ((*1 *1 *2 *3 *4) (AND (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *2 *3)) (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))))) ((*1 *1 *2 *3 *2 *4) (AND (|isDomain| *4 (|List| *3)) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *1 (|SplittingTree| *2 *3)) (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|))))) ((*1 *1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|SplittingNode| *2 *3))) (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *1 (|SplittingTree| *2 *3)))) ((*1 *1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|SplittingTree| *2 *3))) (|isDomain| *1 (|SplittingTree| *2 *3)) (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))))) ((*1 *1 *2) (AND (|isDomain| *2 (|SplittingNode| *3 *4)) (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|))) (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|))) (|isDomain| *1 (|SplittingTree| *3 *4)))) ((*1 *1 *2 *3) (AND (|isDomain| *1 (|SuchThat| *2 *3)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1) (|ofCategory| *1 (|AbelianMonoid|))) ((*1 *1) (|ofCategory| *1 (|Aggregate|))) ((*1 *1) (AND (|isDomain| *1 (|ArrayStack| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1) (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|)) (|ofType| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|CommutativeRing|)))) ((*1 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1) (AND (|isDomain| *1 (|Heap| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1) (|ofCategory| *1 (|Monoid|))) ((*1 *1) (AND (|isDomain| *1 (|Queue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1) (AND (|isDomain| *1 (|Stack| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1) (|isDomain| *1 (|Symbol|)))) 
(((*1 *2 *2 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|PseudoRemainderSequence| *2 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| (|Point| *3))))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|ThreeSpaceCategory| *3)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *3) (AND (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *2 (|PartialDifferentialRing| *4)) (|isDomain| *1 (|MultiVariableCalculusFunctions| *4 *2 *5 *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *2)) (|ofCategory| *3 (|Join| (|FiniteLinearAggregate| *4) (CATEGORY |package| (ATTRIBUTE |finiteAggregate|))))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|has| *2 (ATTRIBUTE (|commutative| "*"))) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *5 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *2 *4 *5 *3)) (|ofCategory| *3 (|MatrixCategory| *2 *4 *5)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5)) (|ofCategory| *4 (|DirectProductCategory| *3 *2)) (|ofCategory| *5 (|DirectProductCategory| *3 *2)) (|has| *2 (ATTRIBUTE (|commutative| "*"))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *1 *2 *2) (|partial| AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicStochasticDifferential|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3))) (|isDomain| *1 (|CoordinateSystems| *3)) (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|) (|RadicalCategory|)))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |resultantReduit| *4))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *2 *4) (AND (|isDomain| *3 (|Matrix| *2)) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *2 (|Join| (|EuclideanDomain|) (CATEGORY |domain| (SIGNATURE |squareFree| ((|Factored| $) $))))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *2)) (|isDomain| *1 (|IntegralBasisTools| *2 *5 *6)) (|ofCategory| *6 (|FramedAlgebra| *2 *5))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Union| (|:| |Null| "null") (|:| |Assignment| "assignment") (|:| |Conditional| "conditional") (|:| |Return| "return") (|:| |Block| "block") (|:| |Comment| "comment") (|:| |Call| "call") (|:| |For| "for") (|:| |While| "while") (|:| |Repeat| "repeat") (|:| |Goto| "goto") (|:| |Continue| "continue") (|:| |ArrayAssignment| "arrayAssignment") (|:| |Save| "save") (|:| |Stop| "stop") (|:| |Common| "common") (|:| |Print| "print"))) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *2 *2 *3) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *1 (|PolynomialNumberTheoryFunctions|)) (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Polynomial| (|Integer|)))) (|isDomain| *1 (|FortranType|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Matrix| (|DoubleFloat|))) (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|NAGLinkSupportPackage|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Matrix| (|Integer|))) (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|NAGLinkSupportPackage|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *3 (|GcdDomain|)) (|isDomain| *1 (|CylindricalAlgebraicDecompositionUtilities| *3 *4))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|Library|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *2 *3 *4 *5 *6 *7 *8 *9 *10)) (|ofCategory| *4 (|PolynomialCategory| *2 *5 (|OrderedVariableList| *3))) (|ofCategory| *5 (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|))) (|ofCategory| *6 (|ProjectiveSpaceCategory| *2)) (|ofCategory| *7 (|LocalPowerSeriesCategory| *2)) (|ofCategory| *8 (|PlacesCategory| *2 *7)) (|ofCategory| *9 (|DivisorCategory| *8)) (|ofCategory| *10 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *1 (|DrawOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|)))) ((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *4 (|PseudoAlgebraicClosureOfAlgExtOfRationalNumberCategory|)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *4))) (|isDomain| *1 (|FactorisationOverPseudoAlgebraicClosureOfAlgExtOfRationalNumber| *4)) (|isDomain| *3 (|SparseUnivariatePolynomial| *4)))) ((*1 *2 *3 *4) (AND (|ofCategory| *4 (|PseudoAlgebraicClosureOfRationalNumberCategory|)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *4))) (|isDomain| *1 (|FactorisationOverPseudoAlgebraicClosureOfRationalNumber| *4)) (|isDomain| *3 (|SparseUnivariatePolynomial| *4))))) 
(((*1 *2 *1) (|partial| AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|GcdDomain|))) (|isDomain| *2 (|Record| (|:| |%term| (|Record| (|:| |%coef| (|UnivariatePuiseuxSeries| *4 *5 *6)) (|:| |%expon| (|ExponentialOfUnivariatePuiseuxSeries| *4 *5 *6)) (|:| |%expTerms| (|List| (|Record| (|:| |k| (|Fraction| (|Integer|))) (|:| |c| *4)))))) (|:| |%type| (|String|)))) (|isDomain| *1 (|UnivariatePuiseuxSeriesWithExponentialSingularity| *3 *4 *5 *6)) (|ofCategory| *4 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *3))) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *1) (|partial| AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *2 *3) (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|PolynomialCategory| *5 *4 *2)) (|ofCategory| *2 (|OrderedSet|)) (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *2 *5 *6 *3)) (|ofCategory| *3 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE |coerce| ($ *6)) (SIGNATURE |numer| (*6 $)) (SIGNATURE |denom| (*6 $))))))) ((*1 *2 *3) (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4))) (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RationalFunction| *4))))) 
(((*1 *1) (|isDomain| *1 (|RoutinesTable|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *1) (|isDomain| *1 (|OutputForm|))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|))) (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|PAdicIntegerCategory| *4))))) 
(((*1 *1 *1 *1) (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *2 *1 *1) (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3)) (|ofCategory| *1 (|ExtensibleLinearAggregate| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|Heap| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2)) (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|DisplayPackage|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|OrderedFreeMonoid| *3)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|OrderedMonoid|)) (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|PatternFunctions1| *4 *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |convert| ((|Symbol|) $))))) (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |sup| (|Polynomial| *6)) (|:| |inf| (|Polynomial| *6)))) (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3)) (|ofCategory| *3 (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *4 *5))))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TabulatedComputationPackage| *4 *5)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|PositiveInteger|))) (|isDomain| *2 (|PermutationGroup| (|Integer|))) (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|FactoringUtilities| *4 *5 *2 *6)) (|ofCategory| *6 (|PolynomialCategory| *2 *4 *5))))) 
(((*1 *2 *3) (AND (|ofCategory| *1 (|PrincipalIdealDomain|)) (|isDomain| *2 (|Record| (|:| |coef| (|List| *1)) (|:| |generator| *1))) (|isDomain| *3 (|List| *1))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *5 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FunctionFieldCategory&| *4 *3 *5 *6)) (|ofCategory| *4 (|FunctionFieldCategory| *3 *5 *6)))) ((*1 *2 *3 *3) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|Complex| (|Float|)))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|Float|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|MachineComplex|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|MachineInteger|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|MachineFloat|))) (|isDomain| *1 (|FortranCode|)))) ((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Record| (|:| |left| (|Fraction| (|Integer|))) (|:| |right| (|Fraction| (|Integer|)))))) (|isDomain| *2 (|List| (|DoubleFloat|))) (|isDomain| *1 (|ExpertSystemToolsPackage|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|LieExponentials| *2 *3 *4)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Join| (|CommutativeRing|) (|Module| (|Fraction| (|Integer|))))) (|ofType| *4 (|PositiveInteger|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|Magma| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|OrderedFreeMonoid| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *1) (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3)))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|IntegralDomain|) (|CharacteristicZero|))) (|isDomain| *1 (|InfiniteProductCharacteristicZero| *3 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|Field|) (|Finite|) (|ConvertibleTo| (|Integer|)))) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|MonogenicAlgebra| *3 *4)) (|isDomain| *1 (|InfiniteProductFiniteField| *3 *4 *5 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5)))) ((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|Field|) (|Finite|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *1 (|InfiniteProductPrimeField| *3 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Join| (|IntegralDomain|) (|CharacteristicZero|))) (|isDomain| *1 (|StreamInfiniteProduct| *3))))) 
(((*1 *2) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|RegularTriangularSetGcdPackage| *3 *4 *5 *6 *7)) (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6)))) ((*1 *2) (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SquareFreeRegularTriangularSetGcdPackage| *3 *4 *5 *6 *7)) (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ListMultiDictionary| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Matrix| (|PrimeField| *3))) (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4)) (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|)))) ((*1 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|Union| (|SparseUnivariatePolynomial| *3) (|Vector| (|List| (|Record| (|:| |value| *3) (|:| |index| (|SingleInteger|))))))))) ((*1 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4)) (|ofCategory| *3 (|FiniteFieldCategory|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *6)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *6 (|Join| (|FloatingPointSystem|) (|RetractableTo| *5) (|Field|) (|TranscendentalFunctionCategory|) (|ElementaryFunctionCategory|))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|ofCategory| *5 (|Join| (|FloatingPointSystem|) (|RetractableTo| *4) (|Field|) (|TranscendentalFunctionCategory|) (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *2 *2) (AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|NonCommutativeOperatorDivision| *2 *3)) (|ofCategory| *2 (|MonogenicLinearOperator| *3)))) ((*1 *1 *1 *1) (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FlexibleArray| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IndexedFlexibleArray| *3 *4)) (|ofCategory| *3 (|Type|)) (|ofType| *4 *2)))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| (|OrderedVariableList| *5))) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|List| (|List| (|DistributedMultivariatePolynomial| *5 *6)))) (|isDomain| *1 (|GroebnerSolve| *5 *6 *7)) (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *5 *6))) (|ofCategory| *7 (|GcdDomain|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Plot|)) (|isDomain| *2 (|Record| (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|))))) (|:| |xValues| (|Segment| (|DoubleFloat|))) (|:| |yValues| (|Segment| (|DoubleFloat|))))) (|isDomain| *1 (|TwoDimensionalPlotClipping|)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|Plot|)) (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *2 (|Record| (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|))))) (|:| |xValues| (|Segment| (|DoubleFloat|))) (|:| |yValues| (|Segment| (|DoubleFloat|))))) (|isDomain| *1 (|TwoDimensionalPlotClipping|))))) 
(((*1 *2 *3 *4 *5 *5 *6) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *6 (|Mapping| (|Void|) (|Vector| *5) (|Vector| *5) (|Float|))) (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|)))) ((*1 *2 *3 *4 *5 *5 *6 *3 *3 *3 *3) (AND (|isDomain| *4 (|Integer|)) (|isDomain| *6 (|Mapping| (|Void|) (|Vector| *5) (|Vector| *5) (|Float|))) (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|AffineSpaceCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|AffineSpaceCategory| *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ComplexCategory| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|ofCategory| *3 (|IntegralDomain|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|OctonionCategory| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|ProjectiveSpaceCategory| *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QuaternionCategory| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RationalRetractions| *3)) (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|ComplexCategory| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Fraction| (|Integer|))))) ((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|ofCategory| *3 (|IntegralDomain|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Fraction| (|Integer|))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|OctonionCategory| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Fraction| (|Integer|))))) ((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|OnePointCompletion| *3)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|OrderedCompletion| *3)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QuaternionCategory| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Fraction| (|Integer|))))) ((*1 *2 *3) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|RationalRetractions| *3)) (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *1) (AND (|ofCategory| *3 (|DifferentialRing|)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|DifferentialVariableCategory| *4)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Mapping| *1 (|NonNegativeInteger|))) (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *5 (|DifferentialVariableCategory| *3)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Mapping| *1 (|NonNegativeInteger|))) (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6)))) ((*1 *1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|DifferentialVariableCategory| *2)) (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3 *1) (AND (|has| *1 (ATTRIBUTE |finiteAggregate|)) (|ofCategory| *1 (|IndexedAggregate| *4 *3)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|Field|)) (|ofType| *7 (|List| (|Symbol|))) (|ofCategory| *8 (|DirectProductCategory| (|#| *7) (|NonNegativeInteger|))) (|ofCategory| *9 (|LocalPowerSeriesCategory| *6)) (|isDomain| *2 (|List| *9)) (|isDomain| *1 (|LocalParametrizationOfSimplePointPackage| *6 *7 *4 *8 *3 *9 *10)) (|ofCategory| *4 (|PolynomialCategory| *6 *8 (|OrderedVariableList| *7))) (|ofCategory| *3 (|ProjectiveSpaceCategory| *6)) (|ofCategory| *10 (|PlacesCategory| *6 *9))))) 
(((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Point| *4)) (|ofCategory| *1 (|ThreeSpaceCategory| *4)) (|ofCategory| *4 (|Ring|)))) ((*1 *2 *1 *3 *4) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|GcdDomain|) (|OrderedSet|) (|CharacteristicZero|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|IntegrationResult| *3)) (|isDomain| *1 (|ElementaryIntegration| *5 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5)))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *1)) (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *2)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|SparseUnivariatePolynomial| *4)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|List| (|Expression| (|DoubleFloat|)))) (|isDomain| *1 (|e04AgentsPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|AttributeButtons|)))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|AttributeButtons|))))) 
(((*1 *1 *1) (|isDomain| *1 (|InputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|))) ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|))) ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|DivisorCategory| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|DistributedMultivariatePolynomial| *3 *4)) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Integer|))) (|ofType| *3 (|List| (|Symbol|))) (|isDomain| *1 (|GeneralDistributedMultivariatePolynomial| *3 *4 *5)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|))))) ((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|HomogeneousDistributedMultivariatePolynomial| *3 *4)) (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Polynomial| *4))) (|ofCategory| *4 (|RealClosedField|)) (|isDomain| *2 (|List| (|Cell| *4))) (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|RealClosedField|)) (|isDomain| *2 (|List| (|Cell| *5))) (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicStochasticDifferential|)))) ((*1 *2 *3) (AND (|ofCategory| *5 (|Join| (|ConvertibleTo| *2) (|CommutativeRing|))) (|isDomain| *2 (|Pattern| *4)) (|isDomain| *1 (|ComplexPattern| *4 *5 *3)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *3 (|ComplexCategory| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Segment| (|OrderedCompletion| (|Float|))))) (|isDomain| *2 (|List| (|Segment| (|OrderedCompletion| (|DoubleFloat|))))) (|isDomain| *1 (|ExpertSystemToolsPackage|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Float|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|ScriptFormulaFormat|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *1 (|FramedAlgebra| *3 *4)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FramedAlgebra| *3 *4)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|isDomain| *2 (|Vector| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Factored| *1)) (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|GeneralPolynomialSet| *3 *4 *5 *6)))) ((*1 *1 *2) (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|InputForm|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ConvertibleTo| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *1 (|MonogenicAlgebra| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|PointCategory| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RomanNumeral|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)))) ((*1 *1 *2) (OR (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (AND (|not| (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))) (|ofCategory| *3 (|Algebra| (|Integer|))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|))) (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|))))) ((*1 *1 *2) (AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|)))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *5 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8))) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|RegularSetDecompositionPackage| *4 *5 *6 *7 *8)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SingletonAsOrderedSet|)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *2)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *2 *6)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *2 *5 *6)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|SExpressionCategory| *3 *2 *4 *5 *6)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5 *6)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6 *7)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *7 (|SetCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8))) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *8 (|SquareFreeRegularTriangularSetCategory| *4 *5 *6 *7)) (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|SquareFreeRegularSetDecompositionPackage| *4 *5 *6 *7 *8)))) ((*1 *1 *2 *3 *2) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|TexFormat|)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|TexFormat|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|NewSparseMultivariatePolynomial| *4 (|OrderedVariableList| *5))) (|ofCategory| *4 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|ofType| *5 (|List| (|Symbol|))) (|isDomain| *2 (|NewSparseMultivariatePolynomial| *4 (|OrderedVariableList| *6))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6)) (|ofType| *6 (|List| (|Symbol|))))) ((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|Polynomial| (|RealClosure| (|Fraction| *4)))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|))))) ((*1 *2 *3) (AND (|isDomain| *3 (|NewSparseMultivariatePolynomial| *4 (|OrderedVariableList| *6))) (|ofCategory| *4 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|ofType| *6 (|List| (|Symbol|))) (|isDomain| *2 (|Polynomial| (|RealClosure| (|Fraction| *4)))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))))) ((*1 *2 *3) (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|isDomain| *2 (|SparseUnivariatePolynomial| (|RealClosure| (|Fraction| *4)))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|))))) ((*1 *2 *3) (AND (|isDomain| *3 (|SquareFreeRegularTriangularSet| *4 (|IndexedExponents| (|OrderedVariableList| *6)) (|OrderedVariableList| *6) (|NewSparseMultivariatePolynomial| *4 (|OrderedVariableList| *6)))) (|ofCategory| *4 (|Join| (|OrderedRing|) (|EuclideanDomain|) (|CharacteristicZero|) (|RealConstant|))) (|ofType| *6 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|NewSparseMultivariatePolynomial| *4 (|OrderedVariableList| *6)))) (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|)))))) 
(((*1 *2 *3) (AND (|ofCategory| *1 (|PolynomialFactorizationExplicit|)) (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1))) (|isDomain| *3 (|SparseUnivariatePolynomial| *1))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|UnivariatePolynomial| *5 *4)) (|isDomain| *1 (|SparseUnivariateTaylorSeries| *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|UnivariatePolynomial| (QUOTE |x|) *4)) (|isDomain| *1 (|UnivariateFormalPowerSeries| *4)) (|ofCategory| *4 (|Ring|)))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|UnivariatePolynomial| *5 *4)) (|isDomain| *1 (|UnivariateTaylorSeries| *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4))) ((*1 *2 *1 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|UnivariatePolynomial| *5 *4)) (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *4 *5)) (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Symbol|))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *3 *3 *3) (|partial| AND (|ofCategory| *4 (|Join| (|CharacteristicZero|) (|AlgebraicallyClosedField|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|ofCategory| *5 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *5))) (|isDomain| *1 (|Kovacic| *4 *5)) (|isDomain| *3 (|Fraction| *5)))) ((*1 *2 *3 *3 *3 *4) (|partial| AND (|isDomain| *4 (|Mapping| (|Factored| *6) *6)) (|ofCategory| *6 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Join| (|CharacteristicZero|) (|AlgebraicallyClosedField|) (|RetractableTo| (|Integer|)) (|RetractableTo| (|Fraction| (|Integer|))))) (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *6))) (|isDomain| *1 (|Kovacic| *5 *6)) (|isDomain| *3 (|Fraction| *6))))) 
(((*1 *1) (|isDomain| *1 (|DoubleFloat|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Factored| *5)) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |exponent| (|NonNegativeInteger|)) (|:| |coef| *5) (|:| |radicand| (|List| *5)))) (|isDomain| *1 (|FactoredFunctions| *5)) (|isDomain| *4 (|NonNegativeInteger|)))) ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|RadicalCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|BalancedPAdicRational| *4)) (|ofType| *4 *3) (|isDomain| *3 (|Integer|)))) ((*1 *2 *1 *2) (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *1 *3) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|PAdicRational| *4)) (|ofType| *4 *3) (|isDomain| *3 (|Integer|)))) ((*1 *2 *1 *3) (AND (|ofType| *4 *3) (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|PAdicRationalConstructor| *4 *5)) (|isDomain| *3 (|Integer|)) (|ofCategory| *5 (|PAdicIntegerCategory| *4)))) ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|Fraction| (|Integer|))))) ((*1 *2 *3 *1 *2) (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *2 *3)) (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|))) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2)))) ((*1 *2 *1 *3) (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3)) (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|has| *2 (SIGNATURE ** (*2 *2 *3))) (|has| *2 (SIGNATURE |coerce| (*2 (|Symbol|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|)) (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6)) (|isDomain| *2 (|Record| (|:| |exponent| (|NonNegativeInteger|)) (|:| |coef| *9) (|:| |radicand| *9))) (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *8 *9)) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *9 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE |numer| (*8 $)) (SIGNATURE |denom| (*8 $)) (SIGNATURE |coerce| ($ *8)))))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Record| (|:| |polnum| (|NewSparseUnivariatePolynomial| *3)) (|:| |polden| *3) (|:| |power| (|NonNegativeInteger|)))) (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1 *1) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Record| (|:| |polnum| *1) (|:| |polden| *1) (|:| |power| (|NonNegativeInteger|)))) (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3 *4) (AND (|isDomain| *2 (|Vector| *5)) (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|SingleInteger|)) (|ofCategory| *5 (|FiniteFieldCategory|)) (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *5))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4)))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| *4))) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Record| (|:| |zeros| (|List| *4)) (|:| |extDegree| (|Integer|)))) (|isDomain| *1 (|RootsFindingPackage| *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|QuotientFieldCategory| *2)) (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|IntegerNumberSystem|)))) ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *1 *2 *2 *2 *2 *2 *3 *4) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|Boolean|)) (|isDomain| *4 (|Union| "left" "center" "right" "vertical" "horizontal")) (|ofCategory| *1 (|BlowUpMethodCategory|))))) 
(((*1 *2) (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *2 (|Union| "prime" "polynomial" "normal" "cyclic"))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *3 (|PlacesCategory| *4 *8)) (|ofCategory| *9 (|DivisorCategory| *3)) (|ofCategory| *10 (|InfinitlyClosePointCategory| *4 *5 *6 *7 *2 *8 *3 *9 *12)) (|ofCategory| *12 (|BlowUpMethodCategory|)) (|ofCategory| *2 (|ProjectiveSpaceCategory| *4)) (|isDomain| *1 (|GeneralPackageForAlgebraicFunctionField| *4 *5 *6 *7 *2 *8 *3 *9 *10 *11 *12)) (|ofCategory| *11 (|DesingTreeCategory| *10)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Field|)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *7 (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|))) (|ofCategory| *8 (|LocalPowerSeriesCategory| *4)) (|ofCategory| *2 (|ProjectiveSpaceCategory| *4)) (|isDomain| *1 (|LocalParametrizationOfSimplePointPackage| *4 *5 *6 *7 *2 *8 *3)) (|ofCategory| *6 (|PolynomialCategory| *4 *7 (|OrderedVariableList| *5))) (|ofCategory| *3 (|PlacesCategory| *4 *8)))) ((*1 *2 *3) (AND (|isDomain| *3 (|PlacesOverPseudoAlgebraicClosureOfFiniteField| *4)) (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|ProjectivePlaneOverPseudoAlgebraicClosureOfFiniteField| *4)) (|isDomain| *1 (|PackageForAlgebraicFunctionFieldOverFiniteField| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Places| *4)) (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|ProjectivePlane| *4)) (|isDomain| *1 (|PackageForAlgebraicFunctionField| *4 *5 *6)) (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|BlowUpMethodCategory|))))) 
(((*1 *1 *1) (|isDomain| *1 (|RoutinesTable|)))) 
(((*1 *2) (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5)) (|ofCategory| *3 (|UniqueFactorizationDomain|)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3)) (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4))) (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|ElementaryFunction| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1))) (|ofCategory| *1 (|EuclideanDomain|)))) ((*1 *2 *1 *1) (|partial| AND (|isDomain| *2 (|Record| (|:| |lm| (|FreeMonoid| *3)) (|:| |rm| (|FreeMonoid| *3)))) (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Record| (|:| |quotient| (|NonNegativeInteger|)) (|:| |remainder| (|NonNegativeInteger|)))) (|isDomain| *1 (|NonNegativeInteger|)))) ((*1 *2 *1 *1) (|partial| AND (|isDomain| *2 (|Record| (|:| |lm| (|Union| (|OrderedFreeMonoid| *3) "failed")) (|:| |rm| (|Union| (|OrderedFreeMonoid| *3) "failed")))) (|isDomain| *1 (|OrderedFreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *3 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3))) (|isDomain| *1 (|PseudoRemainderSequence| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1) (|partial| AND (|isDomain| *2 (|RightOpenIntervalRootCharacterization| (|RealClosure| *3) (|SparseUnivariatePolynomial| (|RealClosure| *3)))) (|isDomain| *1 (|RealClosure| *3)) (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))) 
(((*1 *2 *2) (AND (|ofCategory| *3 (|Join| (|OrderedSet|) (|GcdDomain|))) (|isDomain| *1 (|TranscendentalManipulations| *3 *2)) (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *2 (|Pattern| *4)) (|isDomain| *3 (|Mapping| (|Boolean|) *5)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|)) (|isDomain| *1 (|PatternFunctions1| *4 *5)))) ((*1 *2 *2 *3) (AND (|isDomain| *2 (|Pattern| *4)) (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *5))) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|)) (|isDomain| *1 (|PatternFunctions1| *4 *5)))) ((*1 *2 *2 *3 *4) (AND (|isDomain| *2 (|Pattern| *5)) (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|Mapping| (|Boolean|) (|List| *6))) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|)) (|isDomain| *1 (|PatternFunctions1| *5 *6)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5)) (|ofCategory| *5 (|Type|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|FunctionSpaceAttachPredicates| *4 *2 *5)) (|ofCategory| *2 (|FunctionSpace| *4)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *5))) (|ofCategory| *5 (|Type|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|FunctionSpaceAttachPredicates| *4 *2 *5)) (|ofCategory| *2 (|FunctionSpace| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Mapping| (|Boolean|) *5)) (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *1 (|AttachPredicates| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|Mapping| (|Boolean|) *5))) (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *1 (|AttachPredicates| *5)))) ((*1 *1 *1 *2 *3) (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|Mapping| (|Boolean|) (|List| *6))) (|ofCategory| *6 (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4) (|ConvertibleTo| (|Pattern| *4)))) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Join| (|Ring|) (|PatternMatchable| *4) (|OrderedSet|) (|ConvertibleTo| (|Pattern| *4)))) (|isDomain| *1 (|RewriteRule| *4 *5 *6))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|))) ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|))) ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|FunctionSpace| *2)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|MyExpression| *2 *3)) (|ofType| *2 (|Symbol|)) (|ofCategory| *3 (|Join| (|Ring|) (|OrderedSet|) (|IntegralDomain|))))) ((*1 *1 *1) (AND (|ofCategory| *1 (|QuotientFieldCategory| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Dequeue| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *1) (AND (|isDomain| *1 (|Queue| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|ScriptFormulaFormat|))))) 
(((*1 *2 *3) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|)) (|isDomain| *2 (|Segment| (|DoubleFloat|))))) ((*1 *2 *1) (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|)) (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Tableau| (|List| *4))) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *4))) (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Kernel| *2))) (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *2 (|Join| (|FunctionSpace| (|Complex| *5)) (|RadicalCategory|) (|TranscendentalFunctionCategory|))) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|OrderedSet|))) (|isDomain| *1 (|InnerTrigonometricManipulations| *5 *6 *2)) (|ofCategory| *6 (|Join| (|FunctionSpace| *5) (|RadicalCategory|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5)) (|ofCategory| *5 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4))))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *4))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Fraction| (|Integer|))) (|ofCategory| *5 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Equation| *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))) (|ofCategory| *5 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|Fraction| (|Integer|))) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6))) (|ofCategory| *6 (|Join| (|GcdDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Mapping| *6 (|Integer|))) (|isDomain| *4 (|Equation| *6)) (|ofCategory| *6 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *5))) (|ofCategory| *5 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GenerateUnivariatePowerSeries| *5 *6)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6))) (|ofCategory| *6 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *3)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Mapping| *7 (|Integer|))) (|isDomain| *4 (|Equation| *7)) (|isDomain| *5 (|UniversalSegment| (|Integer|))) (|ofCategory| *7 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *6))) (|ofCategory| *6 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3)) (|isDomain| *6 (|UniversalSegment| (|Integer|))) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *7))) (|ofCategory| *7 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *3 (|Mapping| *8 (|Fraction| (|Integer|)))) (|isDomain| *4 (|Equation| *8)) (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|)))) (|isDomain| *6 (|Fraction| (|Integer|))) (|ofCategory| *8 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *7))) (|ofCategory| *7 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *8)))) ((*1 *2 *3 *4 *5 *6 *7) (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3)) (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|)))) (|isDomain| *7 (|Fraction| (|Integer|))) (|ofCategory| *3 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *8))) (|ofCategory| *8 (|Join| (|IntegralDomain|) (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)))) (|isDomain| *2 (|Any|)) (|isDomain| *1 (|GenerateUnivariatePowerSeries| *8 *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3)))) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|InnerTaylorSeries| *3)))) ((*1 *1 *2 *3 *1) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *3 (|Field|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3)))) ((*1 *1 *2 *3) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Fraction| (|Integer|))) (|:| |c| *4)))) (|ofCategory| *4 (|Ring|)) (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *4)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|NonNegativeInteger|)) (|:| |c| *3)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|))) ((*1 *1 *1) (|isDomain| *1 (|Character|))) ((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Mapping| (|Stream| (|Polynomial| *4)) (|Stream| (|Polynomial| *4)))) (|isDomain| *1 (|WeierstrassPreparation| *4)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *2 *2 *2) (AND (|ofCategory| *2 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| *10)) (|isDomain| *1 (|LazardSetSolvingPackage| *5 *6 *7 *8 *9 *10)) (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8)) (|ofCategory| *10 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|NewSparseMultivariatePolynomial| *5 (|OrderedVariableList| *6)))) (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|)) (|ofType| *6 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|RegularChain| *5 *6))) (|isDomain| *1 (|LexTriangularPackage| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|NewSparseMultivariatePolynomial| *5 (|OrderedVariableList| *6)))) (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|)) (|ofType| *6 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 (|IndexedExponents| (|OrderedVariableList| *6)) (|OrderedVariableList| *6) (|NewSparseMultivariatePolynomial| *5 (|OrderedVariableList| *6))))) (|isDomain| *1 (|LexTriangularPackage| *5 *6)))) ((*1 *2 *3 *4 *4 *4 *4) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8))) (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8))) (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|List| (|NewSparseMultivariatePolynomial| *5 (|OrderedVariableList| *6)))) (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|)) (|ofType| *6 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|RegularChain| *5 *6))) (|isDomain| *1 (|RegularChain| *5 *6)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RegularTriangularSetCategory| *5 *6 *7 *8)))) ((*1 *2 *3 *4 *4 *4 *4) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))) (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))) ((*1 *2 *3 *4 *4) (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|)) (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))) (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6)) (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|AlgebraPackage| *4 *3)) (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|BinaryFile|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|CachableSet|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *3 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3 *1) (AND (|ofCategory| *1 (|FiniteLinearAggregate| *3)) (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *3 *1) (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4)) (|ofCategory| *1 (|FiniteLinearAggregate| *4)) (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Integer|)))) ((*1 *2 *3 *1 *2) (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|CharacterClass|)))) ((*1 *2 *1 *1 *2) (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|)) (|isDomain| *2 (|Symbol|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *7 *3)) (|ofType| *7 *3) (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|PackageForPoly| *4 *5 *6 *7)) (|ofCategory| *5 (|FiniteAbelianMonoidRing| *4 *6))))) 
(((*1 *2 *2) (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2)) (|ofCategory| *2 (|TranscendentalFunctionCategory|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| (|Expression| (|DoubleFloat|)))) (|isDomain| *2 (|Record| (|:| |stiffnessFactor| (|Float|)) (|:| |stabilityFactor| (|Float|)))) (|isDomain| *1 (|d02AgentsPackage|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|AlgebraicNumber|)) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| *4) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessFinite| *4)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3)) (|ofCategory| (|Integer|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Integer|))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|)) (|ofType| *9 (|Mapping| *6 *4)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Field|)) (|ofType| *10 (|Mapping| *7 *5)) (|ofCategory| *8 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *9 (|Mapping| *5 *8)) (|isDomain| *2 (|List| (|Record| (|:| |function| *7) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9 *10)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *8) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|)))) (|List| *4) (|List| (|GuessOption|)))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| *3) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| *3) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))) (|ofType| *9 (|Mapping| *6 *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3)) (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Polynomial| (|Integer|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|))))) (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *5 (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *5 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)) (|ofType| *4 *3)))) 
(((*1 *2 *1) (|partial| AND (|isDomain| *2 (|Record| (|:| |op| (|BasicOperator|)) (|:| |arg| (|List| (|Pattern| *3))))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1 *3) (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|List| (|Pattern| *4))) (|isDomain| *1 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4)) (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2))) ((*1 *1 *1) (AND (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *2 *3)) (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5)) (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|FunctionSpaceReduce| *4 *3)) (|ofCategory| *3 (|FunctionSpace| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *5)) (|ofCategory| *5 (|Join| (|OrderedSet|) (|IntegralDomain|) (|RetractableTo| (|Integer|)))) (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|)))) (|isDomain| *1 (|FunctionSpaceReduce| *5 *3))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2)) (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|)))) ((*1 *2 *3 *4 *1) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *1 *2 *3 *4) (AND (|isDomain| *2 (|Mapping| (|SparseMultivariateTaylorSeries| *4 *3 *5))) (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|SparseMultivariateTaylorSeries| *4 *3 *5)) (|ofCategory| *5 (|PolynomialCategory| *4 (|IndexedExponents| *3) *3)))) ((*1 *1 *2 *3 *4) (AND (|isDomain| *2 (|Mapping| (|TaylorSeries| *4))) (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *4)) (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|)))) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5)) (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *5 (|FiniteLinearAggregate| *3)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|DirectProductCategory| *4 *5)) (|ofCategory| *7 (|DirectProductCategory| *3 *5)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Ring|)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *5)) (|isDomain| *1 (|UTSodetools| *5 *2 *6 *3)) (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *2)) (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *3 *3) (AND (|ofCategory| *4 (|Join| (|GcdDomain|) (|CharacteristicZero|))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|BalancedFactorisation| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *5)) (|ofCategory| *5 (|Join| (|GcdDomain|) (|CharacteristicZero|))) (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|BalancedFactorisation| *5 *3))))) 
(((*1 *2 *2 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|RepresentationPackage1| *3)))) ((*1 *2 *2 *2) (AND (|isDomain| *2 (|List| (|Matrix| *3))) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|RepresentationPackage1| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|RepresentationPackage1| *3)))) ((*1 *2 *2) (AND (|isDomain| *2 (|List| (|Matrix| *3))) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|RepresentationPackage1| *3))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Mapping| *7 *7)) (|isDomain| *5 (|Mapping| (|Union| (|Record| (|:| |ratpart| *6) (|:| |coeff| *6)) "failed") *6)) (|ofCategory| *6 (|Field|)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6)) (|isDomain| *2 (|Record| (|:| |answer| (|IntegrationResult| (|Fraction| *7))) (|:| |a0| *6))) (|isDomain| *1 (|TranscendentalIntegration| *6 *7)) (|isDomain| *3 (|Fraction| *7))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| *8)) (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|Record| (|:| |eqzro| (|List| *8)) (|:| |neqzro| (|List| *8)) (|:| |wcond| (|List| (|Polynomial| *5))) (|:| |bsoln| (|Record| (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *5)))) (|:| |basis| (|List| (|Vector| (|Fraction| (|Polynomial| *5)))))))))) (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8)) (|isDomain| *4 (|List| *8)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|Record| (|:| |eqzro| (|List| *8)) (|:| |neqzro| (|List| *8)) (|:| |wcond| (|List| (|Polynomial| *5))) (|:| |bsoln| (|Record| (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *5)))) (|:| |basis| (|List| (|Vector| (|Fraction| (|Polynomial| *5)))))))))) (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Matrix| *7)) (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5)) (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|Record| (|:| |eqzro| (|List| *7)) (|:| |neqzro| (|List| *7)) (|:| |wcond| (|List| (|Polynomial| *4))) (|:| |bsoln| (|Record| (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *4)))) (|:| |basis| (|List| (|Vector| (|Fraction| (|Polynomial| *4)))))))))) (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *5 (|PositiveInteger|)) (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7)) (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *8 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|Record| (|:| |eqzro| (|List| *9)) (|:| |neqzro| (|List| *9)) (|:| |wcond| (|List| (|Polynomial| *6))) (|:| |bsoln| (|Record| (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *6)))) (|:| |basis| (|List| (|Vector| (|Fraction| (|Polynomial| *6)))))))))) (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9)) (|isDomain| *4 (|List| *9)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|PositiveInteger|)) (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7)) (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *8 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|Record| (|:| |eqzro| (|List| *9)) (|:| |neqzro| (|List| *9)) (|:| |wcond| (|List| (|Polynomial| *6))) (|:| |bsoln| (|Record| (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *6)))) (|:| |basis| (|List| (|Vector| (|Fraction| (|Polynomial| *6)))))))))) (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| (|Record| (|:| |eqzro| (|List| *8)) (|:| |neqzro| (|List| *8)) (|:| |wcond| (|List| (|Polynomial| *5))) (|:| |bsoln| (|Record| (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *5)))) (|:| |basis| (|List| (|Vector| (|Fraction| (|Polynomial| *5)))))))))) (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| *9)) (|isDomain| *5 (|String|)) (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7)) (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *8 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|String|)) (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7)) (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *8 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|String|)) (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *3 (|Matrix| *10)) (|isDomain| *4 (|List| *10)) (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *6 (|String|)) (|ofCategory| *10 (|PolynomialCategory| *7 *9 *8)) (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *8 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *9 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ParametricLinearEquations| *7 *8 *9 *10)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *3 (|Matrix| *10)) (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *6 (|String|)) (|ofCategory| *10 (|PolynomialCategory| *7 *9 *8)) (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *8 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *9 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ParametricLinearEquations| *7 *8 *9 *10)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *5 (|String|)) (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7)) (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|))) (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|)))) (|ofCategory| *8 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *7 (|GcdDomain|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|)) (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6)) (|isDomain| *2 (|Record| (|:| |exponent| (|NonNegativeInteger|)) (|:| |coef| *3) (|:| |radicand| *3))) (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *8 *3)) (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *3 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE |numer| (*8 $)) (SIGNATURE |denom| (*8 $)) (SIGNATURE |coerce| ($ *8)))))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *6)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *1 (|ListToMap| *5 *6)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *2)))) ((*1 *2 *3 *4 *5) (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| *5)) (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Mapping| *5 *6)) (|isDomain| *1 (|ListToMap| *6 *5)))) ((*1 *2 *3 *4 *5 *2) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *2)))) ((*1 *2 *3 *4 *2) (AND (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *6)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *6)))) ((*1 *2 *3 *4 *5 *6) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2)) (|isDomain| *6 (|Mapping| *2 *5)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *2)))) ((*1 *2 *1 *1 *3) (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *3 (|Character|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5)))) (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|))) (|isDomain| *2 (|SuchThat| (|List| (|Expression| *5)) (|List| (|Equation| (|Expression| *5))))) (|isDomain| *1 (|RadicalSolvePackage| *5)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5))) (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|OrderedSet|) (|CharacteristicZero|))) (|isDomain| *2 (|SuchThat| (|List| (|Expression| *5)) (|List| (|Equation| (|Expression| *5))))) (|isDomain| *1 (|RadicalSolvePackage| *5))))) 
(((*1 *2 *2) (|partial| AND (|isDomain| *2 (|Expression| (|DoubleFloat|))) (|isDomain| *1 (|ExpertSystemToolsPackage|)))) ((*1 *2 *1) (|partial| AND (|isDomain| *2 (|Record| (|:| |num| (|Pattern| *3)) (|:| |den| (|Pattern| *3)))) (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4)) (|ofCategory| *3 (|FiniteLinearAggregate| *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3 *4 *5) (AND (|isDomain| *4 (|Mapping| *7 *7)) (|isDomain| *5 (|Mapping| (|Union| (|List| *6) "failed") (|Integer|) *6 *6)) (|ofCategory| *6 (|Field|)) (|ofCategory| *7 (|UnivariatePolynomialCategory| *6)) (|isDomain| *2 (|Record| (|:| |answer| (|IntegrationResult| (|Fraction| *7))) (|:| |a0| *6))) (|isDomain| *1 (|TranscendentalIntegration| *6 *7)) (|isDomain| *3 (|Fraction| *7))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|AlgebraicNumber|))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|AlgebraicNumber|)) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessAlgebraicNumber|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessFinite| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| *4) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessFinite| *4)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *4 (|Join| (|FiniteFieldCategory|) (|ConvertibleTo| (|Integer|)))))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|)))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3)) (|ofCategory| (|Integer|) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Integer|))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessInteger|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|)) (|ofType| *9 (|Mapping| *6 *4)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Field|)) (|ofType| *10 (|Mapping| *7 *5)) (|ofCategory| *8 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *9 (|Mapping| *5 *8)) (|isDomain| *2 (|List| (|Record| (|:| |function| *7) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9 *10)) (|ofCategory| *6 (|GcdDomain|)) (|ofCategory| *7 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *8) (|RetractableTo| (|Symbol|)) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| (|Symbol|)) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *7 (|Join| (|OrderedSet|) (|IntegralDomain|))) (|ofType| *8 (|Mapping| *4 *7)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| *6) (|:| |order| (|NonNegativeInteger|)))) (|List| *4) (|List| (|GuessOption|)))) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8 *9)) (|ofCategory| *4 (|RetractableTo| *3)) (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *6 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|) (|RetractableTo| *7) (|RetractableTo| *3) (|RetractableTo| (|Integer|)) (|CombinatorialOpsCategory|) (|PartialDifferentialRing| *3) (CATEGORY |domain| (SIGNATURE * ($ $ $)) (SIGNATURE / ($ $ $)) (SIGNATURE ** ($ $ $)) (SIGNATURE |numerator| ($ $)) (SIGNATURE |denominator| ($ $)) (SIGNATURE |ground?| ((|Boolean|) $))))) (|ofType| *9 (|Mapping| *6 *4)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|isDomain| *2 (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3)) (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3)) (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|Expression| (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|Polynomial| (|Integer|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessPolynomial|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|))))) (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)))) ((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| (|Fraction| (|MyUnivariatePolynomial| *5 (|Integer|))))) (|isDomain| *4 (|List| (|GuessOption|))) (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|List| (|Record| (|:| |function| (|MyExpression| *5 (|Integer|))) (|:| |order| (|NonNegativeInteger|))))) (|isDomain| *1 (|GuessUnivariatePolynomial| *5)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| (|List| (|Record| (|:| |function| (|MyExpression| *4 (|Integer|))) (|:| |order| (|NonNegativeInteger|)))) (|List| (|Fraction| (|MyUnivariatePolynomial| *4 (|Integer|)))) (|List| (|GuessOption|)))) (|isDomain| *1 (|GuessUnivariatePolynomial| *4)) (|ofType| *4 *3)))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Record| (|:| |xinit| (|DoubleFloat|)) (|:| |xend| (|DoubleFloat|)) (|:| |fn| (|Vector| (|Expression| (|DoubleFloat|)))) (|:| |yinit| (|List| (|DoubleFloat|))) (|:| |intvals| (|List| (|DoubleFloat|))) (|:| |g| (|Expression| (|DoubleFloat|))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *2 (|Float|)) (|isDomain| *1 (|d02AgentsPackage|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *1 (|AffineSpaceCategory| *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|AffineSpaceCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|List| *3)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|Algebra| *2)) (|ofCategory| *2 (|CommutativeRing|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|)) (|ofType| *6 (|Vector| (|Matrix| *3))) (|isDomain| *1 (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))))) ((*1 *1 *2) (AND (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Kernel| (|AlgebraicNumber|)))) (|isDomain| *1 (|AlgebraicNumber|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|FortranExpression| (|construct| (QUOTE JINT) (QUOTE X) (QUOTE ELAM)) (|construct|) (|MachineFloat|)))) (|isDomain| *1 (|Asp10| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|FortranExpression| (|construct|) (|construct| (QUOTE XC)) (|MachineFloat|)))) (|isDomain| *1 (|Asp19| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|FortranExpression| (|construct| (QUOTE X)) (|construct|) (|MachineFloat|))) (|isDomain| *1 (|Asp1| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Matrix| (|FortranExpression| (|construct|) (|construct| (QUOTE X) (QUOTE HESS)) (|MachineFloat|)))) (|isDomain| *1 (|Asp20| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|FortranExpression| (|construct|) (|construct| (QUOTE XC)) (|MachineFloat|))) (|isDomain| *1 (|Asp24| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|FortranExpression| (|construct| (QUOTE X)) (|construct| (QUOTE Y)) (|MachineFloat|)))) (|isDomain| *1 (|Asp31| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|FortranExpression| (|construct|) (|construct| (QUOTE X)) (|MachineFloat|)))) (|isDomain| *1 (|Asp35| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|FortranExpression| (|construct| (QUOTE X) (QUOTE EPS)) (|construct| (QUOTE Y)) (|MachineFloat|)))) (|isDomain| *1 (|Asp41| *3 *4 *5)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|FortranExpression| (|construct| (QUOTE EPS)) (|construct| (QUOTE YA) (QUOTE YB)) (|MachineFloat|)))) (|isDomain| *1 (|Asp42| *3 *4 *5)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|FortranExpression| (|construct|) (|construct| (QUOTE X)) (|MachineFloat|))) (|isDomain| *1 (|Asp49| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|FortranExpression| (|construct|) (|construct| (QUOTE X)) (|MachineFloat|))) (|isDomain| *1 (|Asp4| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|FortranExpression| (|construct|) (|construct| (QUOTE XC)) (|MachineFloat|)))) (|isDomain| *1 (|Asp50| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|FortranExpression| (|construct|) (|construct| (QUOTE X)) (|MachineFloat|)))) (|isDomain| *1 (|Asp55| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|FortranExpression| (|construct|) (|construct| (QUOTE X)) (|MachineFloat|)))) (|isDomain| *1 (|Asp6| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|FortranExpression| (|construct| (QUOTE X) (QUOTE Y)) (|construct|) (|MachineFloat|)))) (|isDomain| *1 (|Asp73| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Matrix| (|FortranExpression| (|construct| (QUOTE X) (QUOTE Y)) (|construct|) (|MachineFloat|)))) (|isDomain| *1 (|Asp74| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Matrix| (|FortranExpression| (|construct| (QUOTE X)) (|construct|) (|MachineFloat|)))) (|isDomain| *1 (|Asp77| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|FortranExpression| (|construct| (QUOTE X)) (|construct|) (|MachineFloat|)))) (|isDomain| *1 (|Asp78| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|FortranExpression| (|construct| (QUOTE X)) (|construct| (QUOTE Y)) (|MachineFloat|)))) (|isDomain| *1 (|Asp7| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Matrix| (|FortranExpression| (|construct| (QUOTE XL) (QUOTE XR) (QUOTE ELAM)) (|construct|) (|MachineFloat|)))) (|isDomain| *1 (|Asp80| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|FortranExpression| (|construct| (QUOTE X)) (|construct| (QUOTE Y)) (|MachineFloat|))) (|isDomain| *1 (|Asp9| *3)) (|ofType| *3 (|Symbol|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|ArrayStack| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|RadixExpansion| 2)) (|isDomain| *1 (|BinaryExpansion|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|BinaryExpansion|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Integer|))) (|ofCategory| *1 (|BlowUpMethodCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|CartesianTensor| *3 *4 *5))) (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|)) (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|CommutativeRing|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|CommutativeRing|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|)) (|ofType| *4 (|NonNegativeInteger|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|SquareMatrix| *4 *5)) (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|CommutativeRing|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|DirectProduct| *4 *5)) (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|CommutativeRing|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Vector| (|Matrix| *4))) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Vector| (|Matrix| (|Fraction| (|Polynomial| *4))))) (|isDomain| *1 (|CoerceVectorMatrixPackage| *4)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |elt| ((|String|) $ (|Symbol|))) (SIGNATURE |display| ((|Void|) $)) (SIGNATURE |fullDisplay| ((|Void|) $))))) (|isDomain| *1 (|Database| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|RadixExpansion| 10)) (|isDomain| *1 (|DecimalExpansion|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|DecimalExpansion|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|DirichletRing| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|DirichletRing| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Mapping| *3 (|PositiveInteger|))) (|isDomain| *1 (|DirichletRing| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Mapping| *3 (|PositiveInteger|))) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|DirichletRing| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|DataList| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|DataList| *3)))) ((*1 *2 *3) (AND (|isDomain| *3 (|SegmentBinding| (|Expression| *4))) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|) (|ConvertibleTo| (|Float|)))) (|isDomain| *2 (|SegmentBinding| (|Float|))) (|isDomain| *1 (|DrawNumericHack| *4)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|ExtAlgBasis|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)) (|isDomain| *1 (|EuclideanModularRing| *3 *2 *4 *5 *6 *7)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *4)) (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4)) (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *4)))) ((*1 *1 *2) (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *4 *5 *6)) (|ofCategory| *4 (|Join| (|AlgebraicallyClosedField|) (|TranscendentalFunctionCategory|) (|FunctionSpace| *3))) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4) (|ofCategory| *3 (|Join| (|OrderedSet|) (|RetractableTo| (|Integer|)) (|LinearlyExplicitRingOver| (|Integer|)) (|GcdDomain|))) (|isDomain| *1 (|ExponentialExpansion| *3 *4 *5 *6)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|FortranCode|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Expression| *5)) (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|FortranMachineTypeCategory|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)) (|isDomain| *1 (|FiniteFieldHomomorphisms| *3 *4 *2)) (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4)) (|isDomain| *1 (|FiniteFieldHomomorphisms| *2 *4 *3)) (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|XRecursivePolynomial| *3 *4)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|XDistributedPolynomial| *3 *4)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |localSymbols| (|SymbolTable|)) (|:| |code| (|List| (|FortranCode|))))) (|ofCategory| *1 (|FortranMatrixCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|FortranCode|)) (|ofCategory| *1 (|FortranMatrixCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|FortranCode|))) (|ofCategory| *1 (|FortranMatrixCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Matrix| (|MachineFloat|))) (|ofCategory| *1 (|FortranMatrixCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |localSymbols| (|SymbolTable|)) (|:| |code| (|List| (|FortranCode|))))) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|FortranCode|)) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|FortranCode|))) (|ofCategory| *1 (|FortranMatrixFunctionCategory|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|ScriptFormulaFormat|)) (|isDomain| *1 (|ScriptFormulaFormat1| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|ScriptFormulaFormat|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |localSymbols| (|SymbolTable|)) (|:| |code| (|List| (|FortranCode|))))) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|FortranCode|)) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|FortranCode|))) (|ofCategory| *1 (|FortranFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Equation| (|Expression| (|Complex| (|Float|))))) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Equation| (|Expression| (|Float|)))) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Equation| (|Expression| (|Integer|)))) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|Complex| (|Float|)))) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|Float|))) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineComplex|)))) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineFloat|)))) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineInteger|)))) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|MachineComplex|))) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|MachineFloat|))) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Expression| (|MachineInteger|))) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |localSymbols| (|SymbolTable|)) (|:| |code| (|List| (|FortranCode|))))) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|FortranCode|))) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|FortranCode|)) (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|)) (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|FourierComponent| *4)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|AbelianGroup|))) (|isDomain| *1 (|FourierSeries| *3 *4)) (|ofCategory| *3 (|Join| (|CommutativeRing|) (|Algebra| (|Fraction| (|Integer|))))))) ((*1 *1 *2) (AND (|isDomain| *1 (|FourierSeries| *2 *3)) (|ofCategory| *2 (|Join| (|CommutativeRing|) (|Algebra| (|Fraction| (|Integer|))))) (|ofCategory| *3 (|Join| (|OrderedSet|) (|AbelianGroup|))))) ((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Fraction| *3)))) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *1 (|FunctionSpace| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Polynomial| (|Fraction| *3))) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *1 (|FunctionSpace| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *1 (|FunctionSpace| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *1 (|FunctionSpace| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|FortranScalarType|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranScalarType|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranScalarType|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranScalarType|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|FortranScalarType|)) (|isDomain| *1 (|FortranType|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|FortranType|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |localSymbols| (|SymbolTable|)) (|:| |code| (|List| (|FortranCode|))))) (|ofCategory| *1 (|FortranVectorCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|FortranCode|)) (|ofCategory| *1 (|FortranVectorCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|FortranCode|))) (|ofCategory| *1 (|FortranVectorCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|MachineFloat|))) (|ofCategory| *1 (|FortranVectorCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |localSymbols| (|SymbolTable|)) (|:| |code| (|List| (|FortranCode|))))) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|FortranCode|)) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|FortranCode|))) (|ofCategory| *1 (|FortranVectorFunctionCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| *3)))) (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *6 (|Vector| (|Matrix| *3))) (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)) (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|))))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|))))) (|isDomain| *1 (|GraphImage|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|GraphImage|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3) (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Heap| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|RadixExpansion| 16)) (|isDomain| *1 (|HexadecimalExpansion|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|HexadecimalExpansion|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|HTMLFormat|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Kernel| (|InnerAlgebraicNumber|)))) (|isDomain| *1 (|InnerAlgebraicNumber|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|IndexCard|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *6)) (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|PolynomialIdeals| *3 *4 *5 *6)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *1 (|AssociatedJordanAlgebra| *3 *2)) (|ofCategory| *2 (|NonAssociativeAlgebra| *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|CoercibleTo| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|LeftAlgebra| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|XPBWPolynomial| *3 *4)) (|isDomain| *1 (|LieExponentials| *3 *4 *5)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Join| (|CommutativeRing|) (|Module| (|Fraction| (|Integer|))))) (|ofType| *5 (|PositiveInteger|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4)) (|isDomain| *1 (|LieExponentials| *3 *4 *5)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Join| (|CommutativeRing|) (|Module| (|Fraction| (|Integer|))))) (|ofType| *5 (|PositiveInteger|)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *1 (|AssociatedLieAlgebra| *3 *2)) (|ofCategory| *2 (|NonAssociativeAlgebra| *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3)))))) ((*1 *1 *2) (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3)))) (|ofCategory| *3 (|Field|)) (|ofCategory| *1 (|LocalPowerSeriesCategory| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Magma| *3)) (|isDomain| *1 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OrderedFreeMonoid| *3)) (|isDomain| *1 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|PrimitiveArray| (|PrimitiveArray| (|PrimitiveArray| *3)))) (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|PrimitiveArray| (|PrimitiveArray| (|PrimitiveArray| *3)))) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|ThreeDimensionalMatrix| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OrderedFreeMonoid| *3)) (|isDomain| *1 (|Magma| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Mapping| *3)) (|isDomain| *1 (|MappingPackage1| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|MatrixCategory| *3 *4 *2)) (|ofCategory| *4 (|FiniteLinearAggregate| *3)) (|ofCategory| *2 (|FiniteLinearAggregate| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|MachineComplex|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Complex| (|MachineInteger|))) (|isDomain| *1 (|MachineComplex|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Complex| (|MachineFloat|))) (|isDomain| *1 (|MachineComplex|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Complex| (|Integer|))) (|isDomain| *1 (|MachineComplex|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|MachineComplex|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|MachineInteger|)) (|isDomain| *1 (|MachineFloat|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|MachineFloat|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *2 (|Expression| (|MachineInteger|))) (|isDomain| *1 (|MachineInteger|)))) ((*1 *1 *2) (AND (|isDomain| *1 (|MakeCachableSet| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|)) (|isDomain| *1 (|MathMLFormat|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3)) (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3)) (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Record| (|:| |index| *3) (|:| |exponent| *4))) (|isDomain| *1 (|ModuleMonomial| *3 *4 *5)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|SetCategory|)) (|ofType| *5 (|Mapping| (|Boolean|) *2 *2)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |index| *3) (|:| |exponent| *4))) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|ModuleMonomial| *3 *4 *5)) (|ofType| *5 (|Mapping| (|Boolean|) *2 *2)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3)) (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3)) (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Record| (|:| |coef| *3) (|:| |monom| *4)))) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|)) (|isDomain| *1 (|MonoidRing| *3 *4)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| (|MyUnivariatePolynomial| *3 *4))) (|ofType| *3 (|Symbol|)) (|ofCategory| *4 (|Join| (|Ring|) (|OrderedSet|) (|IntegralDomain|))) (|isDomain| *1 (|MyExpression| *3 *4)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|MyUnivariatePolynomial| *3 *4)) (|ofType| *3 (|Symbol|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Variable| *3)) (|ofType| *3 (|Symbol|)) (|isDomain| *1 (|MyUnivariatePolynomial| *3 *4)) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *2) (AND (|isDomain| *1 (|MyUnivariatePolynomial| *3 *2)) (|ofType| *3 (|Symbol|)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|NonAssociativeRing|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Union| (|:| |nia| (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|:| |mdnia| (|Record| (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|List| (|Segment| (|OrderedCompletion| (|DoubleFloat|))))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))))) (|isDomain| *1 (|NumericalIntegrationProblem|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|List| (|Segment| (|OrderedCompletion| (|DoubleFloat|))))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *1 (|NumericalIntegrationProblem|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |var| (|Symbol|)) (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |range| (|Segment| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *1 (|NumericalIntegrationProblem|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|NumericalIntegrationProblem|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|NoneFunctions1| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |xinit| (|DoubleFloat|)) (|:| |xend| (|DoubleFloat|)) (|:| |fn| (|Vector| (|Expression| (|DoubleFloat|)))) (|:| |yinit| (|List| (|DoubleFloat|))) (|:| |intvals| (|List| (|DoubleFloat|))) (|:| |g| (|Expression| (|DoubleFloat|))) (|:| |abserr| (|DoubleFloat|)) (|:| |relerr| (|DoubleFloat|)))) (|isDomain| *1 (|NumericalODEProblem|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|NumericalODEProblem|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|PartialDifferentialRing| *3)) (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4)) (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 *3))) ((*1 *1 *2) (AND (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 *3) (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4)) (|ofCategory| *2 (|PartialDifferentialRing| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathErrorKind|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Union| (|:| |noa| (|Record| (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |init| (|List| (|DoubleFloat|))) (|:| |lb| (|List| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |cf| (|List| (|Expression| (|DoubleFloat|)))) (|:| |ub| (|List| (|OrderedCompletion| (|DoubleFloat|)))))) (|:| |lsa| (|Record| (|:| |lfn| (|List| (|Expression| (|DoubleFloat|)))) (|:| |init| (|List| (|DoubleFloat|))))))) (|isDomain| *1 (|NumericalOptimizationProblem|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |lfn| (|List| (|Expression| (|DoubleFloat|)))) (|:| |init| (|List| (|DoubleFloat|))))) (|isDomain| *1 (|NumericalOptimizationProblem|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |fn| (|Expression| (|DoubleFloat|))) (|:| |init| (|List| (|DoubleFloat|))) (|:| |lb| (|List| (|OrderedCompletion| (|DoubleFloat|)))) (|:| |cf| (|List| (|Expression| (|DoubleFloat|)))) (|:| |ub| (|List| (|OrderedCompletion| (|DoubleFloat|)))))) (|isDomain| *1 (|NumericalOptimizationProblem|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|NumericalOptimizationProblem|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Variable| *3)) (|ofType| *3 (|Symbol|)) (|isDomain| *1 (|UnivariateSkewPolynomial| *3 *4 *5 *6)) (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Automorphism| *4)) (|ofType| *6 (|Mapping| *4 *4)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrdSetInts|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|OrdinaryWeightedPolynomials| *3 *4 *5 *6)) (|ofType| *4 (|List| (|Symbol|))) (|ofType| *5 (|List| (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Polynomial| *3)) (|isDomain| *1 (|OrdinaryWeightedPolynomials| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|))) (|ofType| *5 (|List| (|NonNegativeInteger|))) (|ofType| *6 (|NonNegativeInteger|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Polynomial| (|AlgebraicNumber|))) (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *1 (|PolynomialAN2Expression|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|AlgebraicNumber|)))) (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *1 (|PolynomialAN2Expression|)))) ((*1 *1 *2) (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2)) (|ofCategory| *2 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OrderedFreeMonoid| *3)) (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Record| (|:| |pde| (|List| (|Expression| (|DoubleFloat|)))) (|:| |constraints| (|List| (|Record| (|:| |start| (|DoubleFloat|)) (|:| |finish| (|DoubleFloat|)) (|:| |grid| (|NonNegativeInteger|)) (|:| |boundaryType| (|Integer|)) (|:| |dStart| (|Matrix| (|DoubleFloat|))) (|:| |dFinish| (|Matrix| (|DoubleFloat|)))))) (|:| |f| (|List| (|List| (|Expression| (|DoubleFloat|))))) (|:| |st| (|String|)) (|:| |tol| (|DoubleFloat|)))) (|isDomain| *1 (|NumericalPDEProblem|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|NumericalPDEProblem|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Tree| *3)) (|isDomain| *1 (|PendantTree| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|Permutation| *3))) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|PermutationGroup| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Permutation| *3))) (|isDomain| *1 (|PermutationGroup| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Fraction| (|Factored| *3))) (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *1 (|PartialFraction| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| *3)) (|isDomain| *1 (|PartialFraction| *3)) (|ofCategory| *3 (|EuclideanDomain|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Pi|)) (|isDomain| *2 (|Expression| *4)) (|isDomain| *1 (|PiCoercions| *4)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Field|)) (|ofCategory| *1 (|ProjectiveSpaceCategory| *3)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|List| *3)))) ((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|Partition|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Queue| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ResolveLatticeCompletion| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|Exit|)) (|isDomain| *1 (|ResolveLatticeCompletion| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6)) (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5)) (|ofType| *6 (|List| *2)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|RetractableTo| *2)) (|ofCategory| *2 (|Type|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3))) (|isDomain| *1 (|RationalFunction| *3)) (|ofCategory| *3 (|IntegralDomain|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|Ring|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *1 (|RectangularMatrix| *3 *4 *5)) (|ofType| *3 (|NonNegativeInteger|)) (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Ring|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *2)) (|ofCategory| *2 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|)) (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *2 *4)) (|ofCategory| *4 (|PolynomialCategory| *3 (|IndexedExponents| *2) *2)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|OutputForm|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|SquareMatrix| *3 *4)) (|ofType| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Character|)) (|ofCategory| *1 (|StringAggregate|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Stack| *3)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Stream| *3)))) ((*1 *2 *3) (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|StreamTaylorSeriesOperations| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *2) (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *3)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3) (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Switch|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Symbol|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Table| (|Symbol|) (|FortranType|))) (|isDomain| *1 (|SymbolTable|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Tableau| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3) (AND (|isDomain| *2 (|TexFormat|)) (|isDomain| *1 (|TexFormat1| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|TexFormat|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|TaylorSeries| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|PrimitiveArray| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Tuple| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Variable| (QUOTE |x|))) (|isDomain| *1 (|UnivariateFormalPowerSeries| *3)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|UnivariatePolynomial| (QUOTE |x|) *3)) (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|UnivariateFormalPowerSeries| *3)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2)) (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *2) (AND (|isDomain| *2 (|Segment| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|UniversalSegment| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Variable| *3)) (|ofType| *3 (|Symbol|)) (|isDomain| *1 (|UnivariatePolynomial| *3 *4)) (|ofCategory| *4 (|Ring|)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2)) (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5)) (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3))) ((*1 *1 *2) (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *3)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3) (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5)))) ((*1 *1 *2) (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *3 *4)) (|ofCategory| *3 (|Ring|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *3)) (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|isDomain| *1 (|UnivariateTaylorSeriesCZero| *3 *4)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Variable| *3)) (|ofType| *3 *2))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|GraphImage|)) (|isDomain| *2 (|TwoDimensionalViewport|)) (|isDomain| *1 (|ViewportPackage|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Void|)))) ((*1 *1 *2) (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *4)) (|isDomain| *1 (|WeightedPolynomials| *3 *4 *5 *2 *6 *7 *8)) (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4)) (|ofType| *7 (|List| (|NonNegativeInteger|))) (|ofType| *8 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4)) (|isDomain| *1 (|WeightedPolynomials| *3 *4 *5 *2 *6 *7 *8)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *4)) (|ofType| *7 (|List| (|NonNegativeInteger|))) (|ofType| *8 (|NonNegativeInteger|)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|XAlgebra| *2)) (|ofCategory| *2 (|Ring|)))) ((*1 *1 *2) (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3)) (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4)) (|isDomain| *1 (|XPBWPolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4)) (|isDomain| *1 (|XPBWPolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|LiePolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *1 (|XPBWPolynomial| *3 *4)))) ((*1 *1 *2) (AND (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedMonoid|))))) 
(((*1 *2 *2 *3) (AND (|isDomain| *3 (|List| (|PositiveInteger|))) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6)))) ((*1 *2 *2 *3) (AND (|isDomain| *3 (|Segment| (|PositiveInteger|))) (|ofCategory| *4 (|Field|)) (|ofCategory| *5 (|FiniteLinearAggregate| *4)) (|ofCategory| *6 (|FiniteLinearAggregate| *4)) (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6)) (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5)) (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4)) (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *1) (|partial| AND (|ofCategory| *1 (|ComplexCategory| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Fraction| (|Integer|))))) ((*1 *2 *1) (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|ofCategory| *3 (|IntegralDomain|)))) ((*1 *2 *1) (|partial| AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Fraction| (|Integer|))))) ((*1 *2 *1) (|partial| AND (|ofCategory| *1 (|OctonionCategory| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Fraction| (|Integer|))))) ((*1 *2 *1) (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|OnePointCompletion| *3)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|OrderedCompletion| *3)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (|partial| AND (|ofCategory| *1 (|QuaternionCategory| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Fraction| (|Integer|))))) ((*1 *2 *3) (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|RationalRetractions| *3)) (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|LinearlyExplicitRingOver| *5)) (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *5)) (|isDomain| *1 (|LinearDependence| *5 *4)))) ((*1 *2 *3 *4) (|partial| AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|LinearlyExplicitRingOver| *5)) (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Vector| (|Fraction| *5))) (|isDomain| *1 (|LinearDependence| *5 *4))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|Record| (|:| |sub| (|List| (|OutputForm|))) (|:| |sup| (|List| (|OutputForm|))) (|:| |presup| (|List| (|OutputForm|))) (|:| |presub| (|List| (|OutputForm|))) (|:| |args| (|List| (|OutputForm|))))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|InfinitlyClosePointCategory| *3 *4 *5 *6 *7 *8 *9 *10 *11)) (|ofCategory| *3 (|Field|)) (|ofCategory| *5 (|PolynomialCategory| *3 *6 (|OrderedVariableList| *4))) (|ofCategory| *6 (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|))) (|ofCategory| *7 (|ProjectiveSpaceCategory| *3)) (|ofCategory| *8 (|LocalPowerSeriesCategory| *3)) (|ofCategory| *9 (|PlacesCategory| *3 *8)) (|ofCategory| *10 (|DivisorCategory| *9)) (|ofCategory| *11 (|BlowUpMethodCategory|)) (|isDomain| *2 (|AffinePlane| *3))))) 
(((*1 *2 *3 *4 *4 *4) (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *3 (|List| *2)) (|isDomain| *4 (|Mapping| (|Boolean|) *2 *2)) (|isDomain| *1 (|UserDefinedPartialOrdering| *2)) (|ofCategory| *2 (|SetCategory|)))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|OrderedSet|)) (|isDomain| *1 (|UserDefinedPartialOrdering| *2))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *6 (|IntegralDomain|)) (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4)) (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2)) (|isDomain| *3 (|Fraction| (|Polynomial| *6))) (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *4 (|Join| (|OrderedSet|) (CATEGORY |domain| (SIGNATURE |convert| ((|Symbol|) $)))))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Dequeue| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *3) (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|Join| (|FloatingPointSystem|) (|RetractableTo| *4) (|Field|) (|TranscendentalFunctionCategory|) (|ElementaryFunctionCategory|))) (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|))) ((*1 *2 *1) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|Magma| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OrderedFreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3)) (|ofCategory| *3 (|OrderedSet|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|QueueAggregate| *3)) (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Queue| *3)) (|ofCategory| *3 (|SetCategory|)))) ((*1 *2 *1) (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Tuple| *3)) (|ofCategory| *3 (|Type|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|RadicalCategory|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|RootsFindingPackage| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Partition|)) (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Expression| *3)) (|ofCategory| *3 (|Join| (|Ring|) (|OrderedSet|))) (|isDomain| *1 (|DeRhamComplex| *3 *4)) (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *1) (|isDomain| *1 (|Character|))) ((*1 *2 *3) (AND (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|DrawOptionFunctions0|)))) ((*1 *1 *2) (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|))) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|IntervalCategory| *2)) (|ofCategory| *2 (|Join| (|FloatingPointSystem|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Expression| *3)) (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3 *4 *2 *3 *2 *3) (AND (|isDomain| *2 (|PrimitiveArray| (|DoubleFloat|))) (|isDomain| *3 (|SingleInteger|)) (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *1 (|BlasLevelOne|))))) 
(((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|)))) ((*1 *2 *1 *3 *3) (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|List| (|List| (|StochasticDifferential| *4)))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|StochasticDifferential| *4)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))))) ((*1 *2 *3 *3) (AND (|isDomain| *3 (|List| (|StochasticDifferential| *4))) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|StochasticDifferential| *4)) (|ofCategory| *4 (|Join| (|OrderedSet|) (|IntegralDomain|))))) ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|StochasticDifferential| *3)) (|ofCategory| *3 (|Join| (|OrderedSet|) (|IntegralDomain|)))))) 
(((*1 *2 *3 *4) (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| (|Stream| *4))) (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *4 *5)) (|isDomain| *3 (|Stream| *4)) (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|List| (|Tree| *3))) (|isDomain| *1 (|Tree| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|IndexedAggregate| *2 *3)) (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|IntervalCategory| *3)) (|ofCategory| *3 (|Join| (|FloatingPointSystem|) (|TranscendentalFunctionCategory|))) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *1) (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Boolean|)))) ((*1 *2 *3 *1) (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3)) (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|))) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 *3))) ((*1 *1 *2 *3 *1) (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 *3))) ((*1 *1 *1 *1) (AND (|isDomain| *1 (|ThreeDimensionalMatrix| *2)) (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4)))) ((*1 *2 *3 *3) (AND (|ofCategory| *3 (|Join| (|Field|) (CATEGORY |domain| (SIGNATURE ** ($ $ (|Fraction| (|Integer|))))))) (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3)) (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *3) (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *3 *3) (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5)) (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *3) (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *2 *2 *2) (|partial| AND (|ofCategory| *3 (|Join| (|IntegralDomain|) (|CharacteristicZero|))) (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *3 *2)) (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2) (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4)) (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4)))) ((*1 *2) (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3)) (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5 *6)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *3 *4) (AND (|isDomain| *4 (|List| *3)) (|ofCategory| *3 (|PolynomialCategory| *5 *7 (|OrderedVariableList| *6))) (|ofCategory| *7 (|DirectProductCategory| (|#| *6) (|NonNegativeInteger|))) (|ofCategory| *5 (|Field|)) (|ofType| *6 (|List| (|Symbol|))) (|isDomain| *2 (|List| *8)) (|isDomain| *1 (|ProjectiveAlgebraicSetPackage| *5 *6 *3 *7 *8)) (|ofCategory| *8 (|ProjectiveSpaceCategory| *5))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|)) (|isDomain| *2 (|List| (|NonNegativeInteger|))) (|isDomain| *1 (|NPCoef| *3 *4 *5 *6 *7)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *6)) (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3 *1) (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void"))) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *1) (|isDomain| *1 (|Void|)))) 
(((*1 *1 *1) (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5 *6)) (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *3) (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|List| (|Record| (|:| |deg| (|NonNegativeInteger|)) (|:| |prod| *3)))) (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3)) (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
((|separateDegrees| . 1577253) (|car| . 1577004) (|void| . 1576966) (|returnTypeOf| . 1576799) (|listexp| . 1576466) (|singularPointsWithRestriction| . 1576059) (|cdr| . 1575810) (|noncommutativeJordanAlgebra?| . 1575470) (|leftFactorIfCan| . 1575245) (|extension| . 1575157) (|phiCoord| . 1575043) (|pureLex| . 1574836) (|perspective| . 1574714) (|linear| . 1574196) (|plus| . 1573757) (|positive?| . 1573280) (|maxIndex| . 1573119) (|cyclicEntries| . 1572998) (|sncndn| . 1572754) (|uncorrelated?| . 1572164) (|resize| . 1571901) (|daxpy| . 1571714) (|simplifyPower| . 1571557) (|inf| . 1571407) (|alphanumeric| . 1571359) (|space| . 1571072) (|totalDifferential| . 1570891) (|cyclePartition| . 1570770) (|foundZeroes| . 1570652) (|length| . 1569132) (|pushuconst| . 1568761) (|largest| . 1568414) (|mulbyscalar| . 1568250) (|localPointV| . 1567708) (|scripts| . 1567352) (|solveLinear| . 1566828) (|rationalIfCan| . 1565428) (|iipolygamma| . 1565226) (|roughSubIdeal?| . 1564915) (|rows| . 1564337) (|coerce| . 1523820) (|intermediateResultsIF| . 1523413) (|guessExpRat| . 1516360) (|tanintegrate| . 1515961) (|pfaffian| . 1515734) (|isQuotient| . 1515435) (|contractSolve| . 1514779) (|match| . 1513437) (|froot| . 1512882) (|psolve| . 1506214) (|primintegrate| . 1505795) (|tensorProduct| . 1505280) (|balancedFactorisation| . 1504809) (UTS2UP . 1504496) (|nrows| . 1503843) (|fintegrate| . 1503279) (|returnType!| . 1502736) (|cAcosh| . 1502576) (|bringDown| . 1502037) (|ncols| . 1501384) (|revert| . 1500891) (|OMgetEndAtp| . 1500809) (|isOp| . 1500449) (|guessADE| . 1493396) (|stiffnessAndStabilityFactor| . 1493184) (|sechIfCan| . 1493043) (|listAllMono| . 1492761) (|symbNameV| . 1492227) (|position| . 1491345) (|weakBiRank| . 1491153) (|zeroSetSplit| . 1487455) (|aQuadratic| . 1487218) (|crest| . 1486997) (|rightAlternative?| . 1486657) (|upperCase| . 1486515) (|series| . 1480647) (|trigs2explogs| . 1480204) (|call| . 1480123) (|numberOfComputedEntries| . 1479990) (|bat| . 1479819) (|yRange| . 1479590) (|noLinearFactor?| . 1479439) (|formula| . 1479341) (|front| . 1479086) (|denominator| . 1478699) (|xor| . 1478551) (|suchThat| . 1476619) (|OMgetError| . 1476537) (|simplifyExp| . 1476322) (|mainCharacterization| . 1476058) (|divide| . 1475099) (|iiatanh| . 1474903) (|integralMatrixAtInfinity| . 1474619) (|selectOptimizationRoutines| . 1474569) (|pointDominateBy| . 1472815) (|representationType| . 1472689) (|createHN| . 1472476) (|ceiling| . 1472276) (|distinguishedCommonRootsOf| . 1472038) (|commutativeEquality| . 1471855) (|dAndcExp| . 1471628) (|lazyResidueClass| . 1471102) (|debug3D| . 1471025) (|qroot| . 1470461) (|complex?| . 1470373) (|sturmSequence| . 1470184) (|approximate| . 1469053) (|nthRoot| . 1468679) (|exp1| . 1468598) (|kovacic| . 1467805) (|argscript| . 1467713) (|univariatePolynomial| . 1466837) (|factorSquareFreePolynomial| . 1466648) (|convert| . 1458074) (|cylindricalDecomposition| . 1457630) (|reorder| . 1456990) (|divOfPole| . 1456893) (|OMUnknownCD?| . 1456805) (|and| . 1456660) (|flatten| . 1456614) (|decrease| . 1456390) (|linearPart| . 1456275) (|minimalPolynomial| . 1455520) (|lfintegrate| . 1455117) (|countable?| . 1455032) (|modifyPointData| . 1454689) (|localParamOfSimplePt| . 1454167) (|entry?| . 1453933) (|makeVariable| . 1453147) (|rational| . 1451827) (|rational?| . 1450017) (|rk4| . 1449440) (|clipParametric| . 1448862) (|iiasin| . 1448666) (|OMgetApp| . 1448584) (|mainContent| . 1448365) (|groebSolve| . 1448000) (|sumOfKthPowerDivisors| . 1447859) (|exponential1| . 1447769) (|roughEqualIdeals?| . 1447458) (|iiacot| . 1447262) (|physicalLength!| . 1447004) (|leftQuotient| . 1446710) (|singleFactorBound| . 1445987) (|second| . 1445889) (|getMultiplicationMatrix| . 1445232) (|duplicates?| . 1445105) (|stopTableInvSet!| . 1444412) (|oddInfiniteProduct| . 1443526) (|genericLeftMinimalPolynomial| . 1443183) (|mirror| . 1442539) (|dflist| . 1442318) (|returns| . 1441682) (|rationalPoint?| . 1441080) (|principalIdeal| . 1440914) (|ran| . 1440657) (|primPartElseUnitCanonical!| . 1440433) (|OMgetEndBVar| . 1440351) (|abelianGroup| . 1440190) (|startStats!| . 1439994) (|OMencodingSGML| . 1439944) (|totalfract| . 1439508) (|addBadValue| . 1439236) (|mindeg| . 1438948) (|say| . 1438724) (|merge!| . 1438253) (|root| . 1438004) (|showTheRoutinesTable| . 1437957) (|mainVariable| . 1437194) (|debug| . 1436910) (|dominantTerm| . 1436236) (|factorSqFree| . 1435651) (|adaptive| . 1435274) (|actualExtensionV| . 1434769) (|fortranLiteral| . 1434659) (|library| . 1434580) (|gcdBasis| . 1434375) (|dimensionsOf| . 1433941) (|laguerre| . 1433780) (|rightScalarTimes!| . 1433639) (|operation| . 1433141) (|matrixGcd| . 1432789) (|semiResultantReduitEuclidean| . 1432520) (|conical| . 1432308) (|introduce!| . 1432198) (|clipPointsDefault| . 1432030) (|minordet| . 1431296) (|laplacian| . 1430971) (|polygon| . 1430451) (|Lazard| . 1430243) (|sample| . 1429514) (|clipSurface| . 1429392) (|construct| . 1425072) (|corrPoly| . 1424512) (|Ei1| . 1424387) (|asinIfCan| . 1424246) (|cCsc| . 1424086) (|infinite?| . 1423838) (|dfRange| . 1423705) (|removeSquaresIfCan| . 1423418) (|key?| . 1423253) (|addPoint2| . 1423103) (|factorUsingYun| . 1422679) (|cAcoth| . 1422519) (|lastNonNull| . 1422392) (|relativeApprox| . 1421832) (|companionBlocks| . 1421591) (|pointToCell| . 1421379) (|monicLeftDivide| . 1420851) (|dmp2rfi| . 1419687) (|segment| . 1419393) (|cLog| . 1419233) (|var1StepsDefault| . 1419043) (|iisqrt2| . 1418850) (|nextNormalPoly| . 1418674) (|romberg| . 1418374) (|stFunc2| . 1418076) (|signAround| . 1417332) (|rightMinimalPolynomial| . 1417128) (|indicialEquation| . 1416375) (|removeRedundantFactorsInContents| . 1416053) (|minRowIndex| . 1415586) (|sumSquares| . 1415450) (|block| . 1415355) (|even?| . 1415014) (|toseSquareFreePart| . 1414622) (|inc| . 1414564) (|fortranComplex| . 1414519) (|prepareSubResAlgo| . 1414115) (|halfExtendedSubResultantGcd2| . 1413563) (|htrigs| . 1413348) (|quotVecSpaceBasis| . 1413223) (|freeOf?| . 1412812) (|OMUnknownSymbol?| . 1412724) (|alphanumeric?| . 1412644) (|zeroMatrix| . 1412117) (|showTheSymbolTable| . 1412069) (|internalAugment| . 1410808) (|comment| . 1410640) (|setMinPoints| . 1410565) (|mat| . 1410372) (|internalZeroSetSplit| . 1409611) (|iicos| . 1409415) (|float| . 1408943) (|doubleRank| . 1408751) (|finite?| . 1408421) (|lighting| . 1408294) (|lepol| . 1408027) (|id| . 1407932) (|coord| . 1407302) (|generalizedInverse| . 1407046) (|fullPartialFraction| . 1406823) (|integer| . 1406446) (|log10| . 1406140) (|localParamV| . 1405605) (|extendedResultant| . 1405313) (|cCot| . 1405153) (|filterUpTo| . 1405022) (|trim| . 1404834) (|csch2sinh| . 1404619) (|dequeue!| . 1404364) (|setrest!| . 1404111) (|string| . 1403661) (|computePowers| . 1403472) (|determinant| . 1402485) (|outputAsTex| . 1402241) (|packExps| . 1402034) (|smith| . 1401786) (|tryFunctionalDecomposition?| . 1401631) (|dioSolve| . 1401311) (|negative?| . 1400834) (|variablesOf| . 1400710) (|pastel| . 1400634) (|basisOfMiddleNucleus| . 1400456) (|palgLODE| . 1399853) (|solveLinearPolynomialEquationByRecursion| . 1399139) (|outlineRender| . 1399017) (|getMultiplicationTable| . 1398239) (|sup| . 1398027) (|factorByRecursion| . 1397331) (|exteriorDifferential| . 1397184) (|skewSFunction| . 1397021) (|ReduceOrder| . 1396604) (|getButtonValue| . 1396489) (|clipBoolean| . 1396355) (|coefficientSet| . 1396123) (|monicDecomposeIfCan| . 1395841) (|relationsIdeal| . 1395442) (|createPrimitivePoly| . 1395240) (|monomials| . 1394446) (|subPolSet?| . 1393697) (|key| . 1393434) (|primlimintfrac| . 1393033) (|exprHasAlgebraicWeight| . 1392704) (|messagePrint| . 1392599) (|nextPrimitivePoly| . 1392423) (|bitTruth| . 1392310) (|hasHi| . 1392193) (|lfextendedint| . 1391755) (|rotatez| . 1391614) (|closeComponent| . 1391414) (|systemSizeIF| . 1391007) (|inverseIntegralMatrixAtInfinity| . 1390723) (|rightCharacteristicPolynomial| . 1390556) (|range| . 1390344) (|lieAdmissible?| . 1390004) (|charpol| . 1389739) (|setFormula!| . 1389638) (|thetaCoord| . 1389524) (|surface| . 1389428) (|imagj| . 1389326) (|deref| . 1389244) (|sum| . 1386567) (|projection| . 1386469) (|sizePascalTriangle| . 1386340) (|Not| . 1386210) (|npcoef| . 1385573) (|symbol| . 1385324) (|Si| . 1385029) (|calcRanges| . 1384864) (|indicialEquations| . 1383071) (|quote| . 1382984) (|one| . 1382772) (|itsALeaf!| . 1382604) (|cyclic?| . 1382374) (|entry| . 1381285) (|zero| . 1380893) (|rst| . 1380799) (|Or| . 1380663) (|listYoungTableaus| . 1380500) (^ . 1379900) (|hasSolution?| . 1379311) (|one?| . 1378896) (|symbolTable| . 1378753) (|exp| . 1376486) (|setColumn!| . 1376250) (|pushFortranOutputStack| . 1376011) (|findTerm| . 1375813) (|scalarMatrix| . 1375381) (|queue| . 1375268) (|pi| . 1374799) (|increase| . 1374575) (|filename| . 1374481) (|seed| . 1374395) (|overbar| . 1374348) (|sqrt| . 1373682) (|generator| . 1372598) (|nullSpace| . 1370891) (|tail| . 1370516) (|popFortranOutputStack| . 1370426) (|chainSubResultants| . 1370232) (|functionIsFracPolynomial?| . 1369914) (|li| . 1369619) (|rightQuotient| . 1369481) (|outputAsFortran| . 1368609) (|pointData| . 1368453) (|useSingleFactorBound| . 1368295) (|taylorIfCan| . 1368109) (|variableName| . 1367899) (|erf| . 1367604) (|frst| . 1367510) (|rspace| . 1367426) (|setAdaptive3D| . 1367349) (|fullDesTree| . 1366901) (|horizSplit| . 1366037) (|mkcomm| . 1365909) (|rule| . 1365247) (|userOrdered?| . 1365116) (|alterQuadVar!| . 1364923) (|linearAssociatedExp| . 1364736) (|dilog| . 1364441) (|remove!| . 1363191) (|differentialVariables| . 1362916) (|makeEq| . 1362599) (|showIntensityFunctions| . 1362024) (|message| . 1361944) (|sin| . 1360474) (|horizJoin| . 1360343) (|linearDependence| . 1360121) (|legendreP| . 1359911) (|excepCoord| . 1359818) (|cos| . 1358348) (|symmetricDifference| . 1358251) (|fractionFreeGauss!| . 1357953) (|ruleset| . 1357597) (|youngGroup| . 1357301) (|collectUnder| . 1357055) (|tan| . 1355677) (|rightExactQuotient| . 1355529) (|arity| . 1355424) (|escape| . 1355381) (|initials| . 1355100) (|hasPredicate?| . 1354985) (|cot| . 1353790) (|lo| . 1353700) (|copies| . 1353585) (|antiAssociative?| . 1353245) (|commutative?| . 1352905) (|removeRoughlyRedundantFactorsInContents| . 1352583) (|differentiate| . 1348227) (|sec| . 1347032) (|incr| . 1346820) (|rootRadius| . 1346434) (|sn| . 1346259) (|genericRightMinimalPolynomial| . 1345916) (|generators| . 1345523) (|csc| . 1344328) (|hi| . 1344238) (|derivative| . 1343679) (|resultantSet| . 1343438) (|intersect| . 1341642) (|ravel| . 1341446) (|asin| . 1340065) (|printHeader| . 1339771) (|denominators| . 1339640) (|computeCycleLength| . 1339463) (|stFuncN| . 1339164) (|vector| . 1338940) (|acos| . 1337559) (|dmpToP| . 1337347) (|writeObj| . 1337194) (|bumprow| . 1336905) (|equality| . 1336770) (|atan| . 1335299) (|iiperm| . 1335101) (|set| . 1334891) (|explicitlyFinite?| . 1334773) (|qqq| . 1334510) (|fortranCompilerName| . 1334422) (|acot| . 1333224) (|gcdcofact| . 1333081) (|outputList| . 1332967) (|diagonals| . 1332845) (|branchPoint?| . 1332304) (|asec| . 1331106) (|nthCoef| . 1330917) (|getlo| . 1330431) (|constantToUnaryFunction| . 1330278) (|meatAxe| . 1329196) (|acsc| . 1327998) (|infRittWu?| . 1326753) (|makeSin| . 1326545) (|iiAiryBi| . 1326371) (|primes| . 1326232) (|sinh| . 1324857) (|deepCopy| . 1324739) (|rem| . 1324580) (|identityMatrix| . 1324412) (|superHeight| . 1324331) (|besselK| . 1323876) (|cosh| . 1322501) (|sortConstraints| . 1322168) (|applyRules| . 1321408) (|leftUnit| . 1321247) (|firstExponent| . 1320992) (|refine| . 1319220) (|tanh| . 1317845) (|getDatabase| . 1317636) (|quo| . 1317477) (|setlocalPoint!| . 1316932) (|basis| . 1315302) (|rightMult| . 1315147) (|genusTreeNeg| . 1314397) (|coth| . 1313205) (|genericLeftTraceForm| . 1312890) (|padicFraction| . 1312791) (|divisorCascade| . 1312209) (|identity| . 1312071) (|iisin| . 1311875) (|pointValue| . 1311628) (|conjugate| . 1310598) (|sech| . 1309406) (|generate| . 1308924) (|/\\| . 1308827) (|incrementBy| . 1308672) (|argument| . 1308316) (|makeTerm| . 1308161) (|shift| . 1307630) (|concat| . 1306521) (|stoseSquareFreePart| . 1306119) (|csch| . 1304927) (|cycleTail| . 1304829) (|\\/| . 1304732) (|associative?| . 1304392) (|prinb| . 1304100) (|makeMulti| . 1303882) (|showClipRegion| . 1303760) (|OMputEndAtp| . 1303678) (|asinh| . 1302483) (|expand| . 1300591) (|setright!| . 1300447) (|crushedSet| . 1300160) (|objects| . 1299882) (|infiniteProduct| . 1298996) (|squareMatrix| . 1298841) (|acosh| . 1297646) (|filterWhile| . 1297392) (|lfextlimint| . 1296882) (|rootNormalize| . 1296522) (|showAllElements| . 1296378) (|tanAn| . 1296198) (|move| . 1295929) (|atanh| . 1294734) (|filterUntil| . 1294480) (~= . 1293655) (|bipolarCylindrical| . 1293446) (|integerBound| . 1293227) (|fractRadix| . 1293101) (|numFunEvals| . 1293029) (|normal01| . 1292939) (|acoth| . 1291744) (|select| . 1290926) (|numberPlacesDegExtDeg| . 1289508) (|complexNumericIfCan| . 1286453) (|unmakeSUP| . 1286300) (|leadingIndex| . 1285827) (|asech| . 1284632) (|subs2ndVar| . 1284374) (|binaryFunction| . 1284098) (|lists| . 1283872) (|OMputEndBVar| . 1283790) (|normalForm| . 1283203) (|subHeight| . 1283122) (|LyndonBasis| . 1282828) (|expenseOfEvaluationIF| . 1282421) (|atoms| . 1282195) (|scanOneDimSubspaces| . 1281943) (|usingTable?| . 1281774) (|rootOf| . 1280278) (|monicModulo| . 1279986) (|palgint0| . 1278971) (|ptree| . 1278789) (|imagE| . 1278687) (|leastAffineMultiple| . 1278521) (|qfactor| . 1278151) (|sinhcosh| . 1277910) (|lowerPolynomial| . 1277581) (|column| . 1277108) (|safety| . 1276874) (|nullary| . 1276748) (|makeRecord| . 1276571) (|listVariable| . 1276291) (|leader| . 1276044) (|internal?| . 1275898) (|result| . 1275654) (|cothIfCan| . 1275513) (|interReduce| . 1275226) (|bivariate?| . 1274939) (|#| . 1273558) (|slope| . 1272612) (|Beta| . 1271965) (|hypergeometric0F1| . 1271746) (|cylindrical| . 1271562) (|tanSum| . 1271443) (|physicalLength| . 1271160) (|blowUpWithExcpDiv| . 1270470) (|headRemainder| . 1270130) (|extensionDegree| . 1269442) (|interpolateForms| . 1267412) (|functionIsContinuousAtEndPoints| . 1266791) (|unit?| . 1266704) (|rightRemainder| . 1266566) (|unrankImproperPartitions0| . 1266417) (|parametric?| . 1266342) (|atanIfCan| . 1266201) (|createNormalElement| . 1266070) (|evaluate| . 1265079) (|upperCase!| . 1265025) (|low| . 1264935) (|drawStyle| . 1264813) (|wordsForStrongGenerators| . 1264660) (|edf2efi| . 1264490) (|izamax| . 1264304) (|degreeOfMinimalForm| . 1264050) (|setsubmult!| . 1263521) (|checkForZero| . 1262630) (|moreAlgebraic?| . 1261937) (|tensorMap| . 1261776) (|contains?| . 1261595) (|universe| . 1261469) (|denomRicDE| . 1261091) (|viewPhiDefault| . 1260911) (|projectionSet| . 1260670) (|axServer| . 1260507) (|getOrder| . 1260328) (|roman| . 1260166) (|genericRightTraceForm| . 1259851) (|euclideanSize| . 1259752) (|truncatedmuladd| . 1259585) (|pile| . 1259492) (|leadingBasisTerm| . 1259230) (|pmComplexintegrate| . 1258651) (|partialDenominators| . 1258520) (|associatedSystem| . 1258203) (|node?| . 1258045) (|infinityNorm| . 1257731) (|palgRDE0| . 1256632) (|meshFun2Var| . 1256218) (|maxPoints| . 1255981) (|smaller?| . 1255895) (|quasiAlgebraicSet| . 1255631) (|setClipValue| . 1255545) (|write!| . 1255411) (|imagK| . 1255208) (|btwFact| . 1254827) (|operator| . 1252909) (|certainlySubVariety?| . 1252591) (|retract| . 1243383) (|pToDmp| . 1243171) (|check| . 1242415) (|increment| . 1242263) (|close!| . 1242091) (|eq?| . 1241436) (|anticoord| . 1241140) (|accuracyIF| . 1240733) (|getMatch| . 1240554) (|reopen!| . 1240393) (|numberOfDivisors| . 1240294) (|parent| . 1240176) (|coerceL| . 1239955) (|bernoulliB| . 1239740) (|setsymbName!| . 1239203) (|create3Space| . 1238989) (|firstUncouplingMatrix| . 1238726) (|reduceRow| . 1238604) (|hconcat| . 1238464) (|lastSubResultantEuclidean| . 1238213) (|clearTable!| . 1238047) (|drawComplexVectorField| . 1237814) (|overlabel| . 1237764) (|autoReduced?| . 1237425) (|OMmakeConn| . 1237330) (UP2UTS . 1237059) (|iiacoth| . 1236863) (|allSimpleCells| . 1236384) (|listConjugateBases| . 1235879) (|node| . 1235773) (|norm| . 1232260) (|unary?| . 1232176) (BY . 1232055) (|putColorInfo| . 1231902) (|associatedEquations| . 1231501) (|cSec| . 1231341) (|wordInGenerators| . 1231159) (|setcurve!| . 1230558) (|pointV| . 1230053) (|bezoutMatrix| . 1229759) (|functionNames| . 1229669) (|numeric| . 1228092) (FG2F . 1227730) (|OMgetAttr| . 1227648) (|intPatternMatch| . 1226974) (|radical| . 1226630) (|latex| . 1225827) (|baseRDEsys| . 1225518) (|any?| . 1224323) (|numberOfComponents| . 1223582) (|initiallyReduced?| . 1222562) (|setEpilogue!| . 1222373) (|setPosition| . 1222250) (|diagonalProduct| . 1221742) (|iidigamma| . 1221568) (|halfExtendedResultant2| . 1221327) (|semiSubResultantGcdEuclidean1| . 1221102) (|coefficients| . 1220259) (|scan| . 1218265) (|logpart| . 1218001) (|curveColorPalette| . 1217867) (|index| . 1217332) (|factorFraction| . 1217115) (|rdregime| . 1216493) (|semiLastSubResultantEuclidean| . 1216259) (|selectMultiDimensionalRoutines| . 1216209) (|genericPosition| . 1215791) (|rightRank| . 1215599) (|nthRootIfCan| . 1215416) (|point| . 1214400) (|reducedContinuedFraction| . 1214266) (|perfectNthPower?| . 1214096) (|primintfldpoly| . 1213827) (|open| . 1213538) (|cAcos| . 1213378) (|min| . 1212889) (|totalGroebner| . 1212717) (|numericIfCan| . 1211349) (|semiResultantEuclidean1| . 1211118) (|jacobiIdentity?| . 1210778) (|mapCoef| . 1210583) (|lazyPseudoRemainder| . 1210478) (|semiDiscriminantEuclidean| . 1210247) (|lcmCoef| . 1210106) (|monic?| . 1209706) (|encode| . 1209589) (|removeZero| . 1209333) (|subResultantGcd| . 1208803) (^= . 1208753) (|sin?| . 1208630) (D . 1207075) (|integerDecode| . 1206984) (|spherical| . 1206800) (|showFortranOutputStack| . 1206698) (|listSD| . 1206512) (|lazyEvaluate| . 1206418) (|assoc| . 1206203) (|bivariateSLPEBR| . 1205806) (|maxDegree| . 1205528) (|factorList| . 1204966) (|solveInField| . 1204029) (|ptFunc| . 1203685) (|extendIfCan| . 1203419) (|limitedIntegrate| . 1202979) (|integralBasis| . 1201247) (|replaceVarByZero| . 1200961) (|cyclicEqual?| . 1200846) (|integrate| . 1187936) (|parametrize| . 1184653) (|getPickedPoints| . 1184537) (|semiIndiceSubResultantEuclidean| . 1184261) (|B1solve| . 1183557) (|rightOne| . 1183437) (|quartic| . 1182910) (|sec2cos| . 1182695) (|mapmult| . 1182561) (|sayLength| . 1182331) (|leftPower| . 1182145) (|exptMod| . 1181767) (|drawCurves| . 1181289) (|mainCoefficients| . 1181074) (|swapColumns!| . 1180851) (|subresultantSequence| . 1180608) (|schwerpunkt| . 1180396) (|LyndonWordsList1| . 1180173) (|trapezoidalo| . 1179873) (|makeSeries| . 1179628) (|selectPolynomials| . 1179211) (|linearAssociatedLog| . 1178833) (|getOp| . 1178446) (|indiceSubResultant| . 1178238) (|horizConcat| . 1177780) (|third| . 1177682) (|multinomial| . 1177535) (|leadingSupport| . 1177389) (|makeFloatFunction| . 1176951) (|graeffe| . 1176758) (|polygon?| . 1176637) (|factorSFBRlcUnit| . 1175910) (|Ei6| . 1175785) (|cPower| . 1175622) (|cAcsc| . 1175462) (|height| . 1174528) (|aromberg| . 1174225) (|pseudoRem| . 1174085) (|cAsin| . 1173925) (|purelyAlgebraicLeadingMonomial?| . 1173639) (|simpsono| . 1173339) (|headReduce| . 1172896) (|zeroSetSplitIntoTriangularSystems| . 1172537) (|ricDsolve| . 1169078) (|tanh2trigh| . 1168863) (RF2UTS . 1168523) (|setlast!| . 1168380) (|viewDeltaYDefault| . 1168200) (|quadTransform| . 1167780) (|foundPlaces| . 1167612) (|first| . 1166644) (|noKaratsuba| . 1166470) (|getDomains| . 1166338) (|untab| . 1166158) (|pToHdmp| . 1165935) (|normal| . 1165801) (|leadingTerm| . 1165623) (|normDeriv2| . 1165298) (|addMatch| . 1165126) (|basisOfCenter| . 1164948) (|orbits| . 1164817) (|separant| . 1164570) (|lhs| . 1164060) (|polCase| . 1163713) (|radicalSolve| . 1161448) (|firstSubsetGray| . 1161311) (|pointPlot| . 1160645) (|mkPrim| . 1160397) (|alphabetic| . 1160349) (|OMconnOutDevice| . 1160253) (|bubbleSort!| . 1159710) (|explimitedint| . 1159155) (|routines| . 1159108) (|selectODEIVPRoutines| . 1159058) (E1 . 1158901) (|empty| . 1157931) (|listLoops| . 1157767) (|hdmpToP| . 1157544) (|leftTrace| . 1157427) (|bsolve| . 1156584) (|multiEuclidean| . 1156483) (|setchart!| . 1155975) (|fractRagits| . 1155850) (|size?| . 1154961) (|cschIfCan| . 1154820) (|iiBesselJ| . 1154618) (|gcdBasisAdd| . 1154410) (|distdfact| . 1154093) (|additive?| . 1153940) (|powerAssociative?| . 1153798) (|right| . 1153217) (|copyDrift| . 1153005) (|minIndex| . 1152844) (|f02aff| . 1152679) (|OMgetInteger| . 1152594) (|iiasech| . 1152398) (|cCosh| . 1152238) (|symbolIfCan| . 1152116) (|f02aef| . 1151942) (|left| . 1151361) (|tube| . 1150957) (|mr| . 1150653) (|imagJ| . 1150450) (|yCoord| . 1150336) (|polarCoordinates| . 1150088) (|outputGeneral| . 1149909) (|f02adf| . 1149738) (|findOrderOfDivisor| . 1147940) (|resultantnaif| . 1147774) (|sincos| . 1147535) (|setValue!| . 1147356) (|root?| . 1147210) (|exprHasLogarithmicWeights| . 1146904) (|nthExponent| . 1146782) (|tan2trig| . 1146567) (|getEq| . 1146214) (|stronglyReduce| . 1145958) (|OMreadFile| . 1145849) (|pointColorDefault| . 1145675) (|f02abf| . 1145507) (|binaryTree| . 1145324) (|ellipticCylindrical| . 1145115) (|leaves| . 1144994) (|factorAndSplit| . 1144835) (|binomial| . 1144261) (|palgLODE0| . 1142998) (|setAdaptive| . 1142923) (|f02aaf| . 1142758) (|functionIsOscillatory| . 1142455) (|iicosh| . 1142259) (|integralMatrix| . 1141975) (|outputFloating| . 1141796) (|taylor| . 1137945) (|janko2| . 1137682) (|measure| . 1132772) (|failed?| . 1132403) (|firstNumer| . 1132304) (|normalDeriv| . 1131994) (|tablePow| . 1131720) (|groebnerIdeal| . 1131464) (|laurent| . 1128317) (|idealSimplify| . 1128084) (|vertConcat| . 1127626) (|OMread| . 1127509) (|lllip| . 1127350) (|parabolicCylindrical| . 1127166) (|rotatex| . 1127025) (|shanksDiscLogAlgorithm| . 1126795) (|randnum| . 1126623) (|puiseux| . 1123447) (|fullOut| . 1122317) (|delta| . 1122131) (|viewZoomDefault| . 1121951) (|expandPower| . 1121736) (|errorKind| . 1121642) (|basisOfRightNucleus| . 1121464) (|cn| . 1121289) (|addMatchRestricted| . 1121114) (|regularRepresentation| . 1120708) (|bat1| . 1120531) (|supDimElseRittWu?| . 1119838) (|subresultantVector| . 1119638) (|diagonalMatrix| . 1118365) (|copyslice| . 1118201) (|zeta| . 1118118) (|indices| . 1117962) (|generalInfiniteProduct| . 1116958) (|polynomial| . 1116161) (|create| . 1114556) (|degree| . 1109753) (|quatern| . 1109640) (|setClosed| . 1109505) (|goppaCode| . 1108205) (|extractBottom!| . 1108030) (|mul| . 1107894) (|eulerE| . 1107679) (|mapSolve| . 1107295) (|minimize| . 1107014) (|pdf2df| . 1106868) (|maxRowIndex| . 1106401) (|GospersMethod| . 1105927) (|setLabelValue| . 1105839) (|iCompose| . 1105731) (|expint| . 1105350) (|splitNodeOf!| . 1104842) (|singRicDE| . 1103749) (GF2FG . 1103356) (|intChoose| . 1102763) (|squareFreeFactors| . 1102444) (|imaginary| . 1102346) (|ZetaFunction| . 1099436) (|divOfZero| . 1099339) (|swap| . 1099039) (|irreducible?| . 1098430) (|safetyMargin| . 1098088) (|definingEquations| . 1097827) (|ldf2lst| . 1097404) (|exprHasWeightCosWXorSinWX| . 1097034) (|lastNonNul| . 1096907) (|placesAbove| . 1095559) (|mathieu23| . 1095296) (|fTable| . 1094177) (|reducedDiscriminant| . 1093892) (|enqueue!| . 1093628) (|composites| . 1093507) (|stiffnessAndStabilityOfODEIF| . 1093031) (|exponentialOrder| . 1092808) (|exprToUPS| . 1091929) (|idealiser| . 1091309) (|lambda| . 1091218) (|mindegTerm| . 1091020) (|OMputObject| . 1090938) (|toroidal| . 1090729) (|read!| . 1090598) (|minGbasis| . 1090331) (|extract!| . 1089829) (|xn| . 1089622) (|subNode?| . 1089366) (|taylorRep| . 1089190) (|axesColorDefault| . 1089016) (|resetAttributeButtons| . 1088935) (|sumOfSquares| . 1088819) (|semiSubResultantGcdEuclidean2| . 1088594) (|cos2sec| . 1088379) (|extractProperty| . 1088215) (|pointInIdeal?| . 1087837) (|leviCivitaSymbol| . 1087672) (|supp| . 1087547) (|palgextint| . 1087063) (|cAcsch| . 1086903) (|sin2csc| . 1086688) (|sortedPurge!| . 1086489) (|totalLex| . 1086282) (|basicSet| . 1085427) (|iomode| . 1085269) (|useNagFunctions| . 1084847) (|writable?| . 1084758) (|fresnelC| . 1084370) (|addPoint| . 1083775) (|HenselLift| . 1083470) (|duplicates| . 1083283) (|sign| . 1080865) (|affineSingularPoints| . 1079505) (|rk4a| . 1079212) (|halfExtendedSubResultantGcd1| . 1078660) (|rewriteIdealWithQuasiMonicGenerators| . 1078284) (|orbit| . 1077140) (|lazyPrem| . 1076760) (|generateIrredPoly| . 1076562) (|completeEval| . 1076171) (|finiteSeries2LinSysWOVectorise| . 1075921) (|Vectorise| . 1075753) (|univariatePolynomialsGcds| . 1075087) (|mathieu24| . 1074824) (|setGcdMode| . 1074637) (|pr2dmp| . 1074286) (|trueEqual| . 1074192) (|factorsOfDegree| . 1073933) (|HermiteIntegrate| . 1073176) (|stoseLastSubResultant| . 1072771) (|weighted| . 1072561) (|primitivePart| . 1071394) (** . 1065550) (|multiple?| . 1065435) (|factorCantorZassenhaus| . 1064935) (|karatsuba| . 1064716) (|iiacosh| . 1064520) (|elRow2!| . 1064222) (|exQuo| . 1063255) (|copy!| . 1063117) (|createMultiplicationTable| . 1062863) (|monicDivide| . 1062440) (|tryFunctionalDecomposition| . 1062282) (|affineAlgSet| . 1061371) (|genus| . 1058909) (|newLine| . 1058828) (|principal?| . 1058520) (|createIrreduciblePoly| . 1058318) (|logIfCan| . 1058177) (|univariatePolynomials| . 1057806) (|copyInto!| . 1057634) (|Hausdorff| . 1057369) (|previous| . 1057273) (|quasiRegular| . 1057026) (|dequeue| . 1056629) (|maxShift| . 1056351) (|finiteSeries2LinSys| . 1056101) (|e01sbf| . 1055842) (|irreducibleFactors| . 1055476) (|adjunctionDivisor| . 1053620) (|listOfTerms| . 1052971) (|updatF| . 1052598) (|obj| . 1052527) (|SturmHabichtSequence| . 1052284) (|complexElementary| . 1051011) (|homogenize| . 1049206) (|viewSizeDefault| . 1048998) (|meshPar2Var| . 1047967) (|ScanRoman| . 1047848) (|rquo| . 1046940) (|partialQuotients| . 1046809) (|setlocalParam!| . 1046271) (|splitSquarefree| . 1045991) (|plenaryPower| . 1045845) (|subResultantGcdEuclidean| . 1045603) (|antisymmetricTensors| . 1045183) (|interpolateFormsForFact| . 1043173) (|OMgetObject| . 1043091) (|allPairsAmong| . 1042545) (|polar| . 1042361) (|torsion?| . 1041516) (|tValues| . 1041417) (|getMeasure| . 1041305) (|modifyPoint| . 1040707) (|diffHP| . 1027483) (|shallowExpand| . 1027272) (|weights| . 1026682) (|copyQuadVar| . 1026470) (|ratDsolve| . 1024663) (|stoseInvertibleSetreg| . 1024301) (|hermiteH| . 1024146) (|makeCell| . 1023825) (|origin| . 1023733) (|elliptic| . 1022973) (|startTableInvSet!| . 1022208) (|complement| . 1022079) (|lookup| . 1021811) (|ef2edf| . 1021656) (|rootKerSimp| . 1021020) (|e02bcf| . 1020815) (|diagonal?| . 1020361) (|OMgetType| . 1020277) (|coordinates| . 1018151) (|basisOfLeftNucloid| . 1017962) (|limitedint| . 1017542) (|bezoutDiscriminant| . 1017208) (|delete!| . 1016928) (|backOldPos| . 1016566) (|e02bbf| . 1016364) (|unvectorise| . 1015759) (|OMParseError?| . 1015671) (|ref| . 1015589) (|setnext!| . 1015448) (|setRealSteps| . 1015366) (|iiacsc| . 1015170) (|palgextint0| . 1014085) (|color| . 1013898) (|e02baf| . 1013722) (|logical?| . 1013634) (|dictionary| . 1013408) (|packageCall| . 1013259) (|rules| . 1012903) (|critMTonD1| . 1012540) (|harmonic| . 1012400) (|OMreadStr| . 1012291) (|symmetricProduct| . 1011923) (|e02akf| . 1011712) (|laurentRep| . 1011535) (|sdf2lst| . 1011106) (|traceMatrix| . 1010482) (|pattern| . 1010165) (|constantIfCan| . 1009994) (|lexGroebner| . 1009822) (|points| . 1009663) (|e02ajf| . 1009446) (|approxSqrt| . 1009346) (|red| . 1009307) (|dcabs1| . 1009176) (|submod| . 1009112) (|e04ycf| . 1008896) (|cache| . 1008780) (|purge!| . 1008581) (|setFoundZeroes| . 1008460) (|evenlambert| . 1007967) (|lcm| . 1007652) (|logGamma| . 1007439) (|sPol| . 1007085) (|e04ucf| . 1006541) (|OMputEndObject| . 1006459) (|medialSet| . 1005793) (|multiServ| . 1005682) (|maxint| . 1005502) (|applyTransform| . 1005195) (|curveColor| . 1005038) (|maximumExponent| . 1004878) (|commutator| . 1004775) (|e04naf| . 1004366) (|dzasum| . 1004176) (|iicsch| . 1003980) (|flush| . 1003824) (|e04mbf| . 1003591) (|coth2trigh| . 1003376) (|vectorcombination| . 1003203) (|aColumn| . 1002923) (|validExponential| . 1002514) (|saturate| . 1002024) (|e04jaf| . 1001759) (|center| . 1001218) (|standardBasisOfCyclicSubmodule| . 1000983) (|primitiveRowEchelon| . 1000653) (|roughBase?| . 1000345) (|yellow| . 1000306) (|lSpaceBasis| . 1000006) (|LyndonCoordinates| . 999712) (|e04gcf| . 999453) (|quadratic| . 998932) (|pivots| . 998721) (|predicates| . 998601) (|continuedFraction| . 997672) (|previousTower| . 997589) (|e04fdf| . 997330) (|uniform| . 996896) (|coth2tanh| . 996681) (|pivot| . 996461) (|acscIfCan| . 996320) (|enterInCache| . 996046) (|cCoth| . 995886) (|zeroVector| . 995719) (|sizeMultiplication| . 994810) (|e04dgf| . 994467) (|viewport3D| . 994409) (|fixedPoints| . 994262) (|systemCommand| . 994149) (|rightUnit| . 993988) (|fi2df| . 993848) (|inverse| . 992119) (|outputFixed| . 991940) (|primlimitedint| . 991399) (|f01ref| . 991172) (|odd?| . 990831) (|makeCrit| . 990372) (|iicot| . 990176) (|outputMeasure| . 990056) (|f01rdf| . 989820) (|int| . 989170) (|divideExponents| . 989015) (|incrementKthElement| . 988861) (|critB| . 988585) (|var2Steps| . 988357) (|power!| . 988171) (|primeFactor| . 988049) (|setScreenResolution| . 987974) (|f01rcf| . 987783) (|connect| . 987624) (|genericLeftTrace| . 987312) (|f01qef| . 987097) (|BumInSepFFE| . 986734) (|printingInfo?| . 986565) (|fractionPart| . 985951) (|laguerreL| . 985641) (|polyRicDE| . 984662) (|multiplyCoefficients| . 984214) (|desingTreeAtPoint| . 983550) (|binary| . 983360) (|f01qdf| . 983136) (|conjug| . 982856) (|legendre| . 982583) (|rubiksGroup| . 982470) (|dimensionOfIrreducibleRepresentation| . 982332) (|cap| . 982165) (|divisor| . 980667) (|internalSubPolSet?| . 979918) (|f01qcf| . 979739) (|removeRedundantFactors| . 978249) (|mainVariable?| . 977975) (|factor1| . 977495) (|discriminant| . 976118) (|child?| . 975960) (|tracePowMod| . 975747) (|viewThetaDefault| . 975567) (|f01mcf| . 975349) (|decomposeFunc| . 975134) (|lfunc| . 975051) (|search| . 974904) (|frobenius| . 974724) (|f01maf| . 974419) (|init| . 974188) (|listRepresentation| . 974015) (|getBadValues| . 973895) (|realSolve| . 971794) (|quotient| . 971335) (|ldf2vmf| . 971183) (|f01bsf| . 970881) (|multiplyExponents| . 970403) (|base| . 969960) (|coleman| . 969800) (|repack1| . 969574) (|datalist| . 969459) (|subst| . 969014) (|df2fi| . 968874) (|trailingCoefficient| . 968717) (|f01brf| . 968381) (|unitNormalize| . 968290) (|imagI| . 968087) (|transcendent?| . 967969) (|fill!| . 967594) (|solve| . 950776) (|multiplicity| . 949819) (|order| . 945194) (|exprToGenUPS| . 944315) (|chartCoord| . 944222) (|wrregime| . 943569) (|stepBlowUp| . 942812) (|nodes| . 942691) (|permutationRepresentation| . 941922) (|idealiserMatrix| . 941612) (|selectIntegrationRoutines| . 941562) (|readIfCan!| . 941289) (|graphState| . 941036) (|nthFlag| . 940859) (|gcdPolynomial| . 940311) (|rowEch| . 940169) (|overlap| . 939731) (|moebius| . 939632) (|factorOfDegree| . 938211) (|nullary?| . 938127) (|closedCurve| . 937607) (|removeSuperfluousQuasiComponents| . 936920) (|paren| . 936647) (|possiblyNewVariety?| . 936292) (|tubePointsDefault| . 936102) (|mask| . 936044) (|sh| . 935680) (|whatInfinity| . 935549) (|zerosOf| . 934471) (|leastMonomial| . 934284) (|invmod| . 934223) (|rootPower| . 933666) (|endSubProgram| . 933585) (|computeInt| . 933162) (|setMinPoints3D| . 933085) (|commaSeparate| . 932873) (|slex| . 932714) (|dnrm2| . 932536) (|convertIfCan| . 932429) (|extractIfCan| . 932275) (|createThreeSpace| . 932170) (|LowTriBddDenomInv| . 931909) (|fortranDouble| . 931864) (|genericRightDiscriminant| . 931555) (|removeCoshSq| . 931340) (|rationalPower| . 931122) (|resultantEuclideannaif| . 930874) (|mapExponents| . 930404) (|leftTrim| . 930216) (|explogs2trigs| . 929823) (|gbasis| . 929522) (|octon| . 929273) (|numberOfMonomials| . 928778) (|nilFactor| . 928656) (|sparsityIF| . 928513) (|desingTreeWoFullParam| . 927233) (|perfectSqrt| . 927123) (|children| . 926843) (|numerators| . 926712) (|highCommonTerms| . 926508) (|chartV| . 926003) (|extendedEuclidean| . 925724) (|value| . 925300) (|tan2cot| . 925085) (|bitCoef| . 925000) (|OMconnInDevice| . 924904) (|fixedDivisor| . 924743) (|ShiftC| . 924497) (|poisson| . 924355) (|palglimint| . 923784) (|setCondition!| . 923605) (|OMopenFile| . 923478) (|removeRedundantFactorsInPols| . 923156) (|replaceKthElement| . 922999) (|rationalApproximation| . 922466) (|properties| . 922354) (|OMcloseConn| . 922268) (|singular?| . 921727) (|FormatArabic| . 921608) (|normalise| . 921492) (|print| . 921306) (|cross| . 921001) (|triangulate| . 920324) (|innerEigenvectors| . 919873) (|vconcat| . 919733) (|cyclotomicFactorization| . 919563) (|directSum| . 919195) (|goodnessOfFit| . 918857) (|dim| . 918781) (|numberOfVariables| . 917926) (|palglimint0| . 916667) (|maxrank| . 916099) (|distribute| . 915991) (|atanhIfCan| . 915850) (|exactQuotient!| . 915399) (|primPartElseUnitCanonical| . 915175) (|mainVariables| . 914904) (|OMputEndBind| . 914822) (|LiePolyIfCan| . 914449) (|dom| . 914371) (|eigenvectors| . 913984) (|OMputError| . 913902) (|integralDerivationMatrix| . 913556) (|definingInequation| . 913323) (|viewPosDefault| . 913109) (|linearlyDependent?| . 912899) (|script| . 912535) (|distFact| . 911893) (|groebnerFactorize| . 910446) (|palgRDE| . 909952) (|primextintfrac| . 909625) (|changeBase| . 909298) (|lagrange| . 908805) (|mapDown!| . 908514) (LE . 908296) (|ramifMult| . 908203) (|cyclic| . 908052) (|createPrimitiveNormalPoly| . 907850) (|rarrow| . 907800) (|radicalEigenvalues| . 907619) (|removeRoughlyRedundantFactorsInPols| . 907011) (|fglmIfCan| . 906594) (|const| . 906428) (|nand| . 906330) (|nextNormalPrimitivePoly| . 906154) (|declare| . 906036) (|structuralConstants| . 904820) (|every?| . 903625) (|exponential| . 903262) (|MPtoMPT| . 903013) (|df2ef| . 902873) (|mainKernel| . 902773) (|bright| . 902490) (|reseed| . 902376) (|newton| . 902196) (|retractable?| . 901385) (|expintegrate| . 900952) (|OMputEndAttr| . 900870) (|complexExpand| . 900222) (|reindex| . 900014) (|quoted?| . 899899) (|tanQ| . 899528) (|orderIfNegative| . 899390) (|chiSquare| . 899246) (|rowEchelon| . 897338) (|coordinate| . 896942) (|nary?| . 896858) (|iiAiryAi| . 896684) (|pushdterm| . 896282) (|output| . 895760) (|assign| . 891298) (|argumentList!| . 890887) (|ode1| . 890659) (|fortran| . 890447) (|reverseLex| . 890240) (|nonLinearPart| . 890125) (|modulus| . 888975) (|numberOfNormalPoly| . 888823) (|cSech| . 888663) (|lazyVariations| . 888367) (|controlPanel| . 888128) (|direction| . 887988) (|generalizedContinuumHypothesisAssumed?| . 887906) (|createZechTable| . 887695) (|univcase| . 887416) (|prod| . 887272) (|localIntegralBasis| . 885813) (|meshPar1Var| . 885483) (|fullDisplay| . 884876) (|generalizedContinuumHypothesisAssumed| . 884791) (|ScanArabic| . 884672) (|argumentListOf| . 884549) (|monomRDE| . 884148) (|seriesSolve| . 880078) (|constant?| . 879663) (|asecIfCan| . 879522) (|basisOfCentroid| . 879333) (|region| . 879174) (|measure2Result| . 878728) (|infieldIntegrate| . 878469) (|rewriteIdealWithRemainder| . 878158) (|polygamma| . 877625) (|cosSinInfo| . 877491) (|affinePoint| . 877368) (|lazy?| . 877246) (|rootOfIrreduciblePoly| . 876834) (|normalElement| . 876522) (|powers| . 876387) (|shiftRight| . 876242) (|limitPlus| . 875402) (|exponents| . 875311) (Y . 874874) (|unitCanonical| . 874821) (|matrixConcat3D| . 874686) (|OMsupportsSymbol?| . 874570) (|setFieldInfo| . 874328) (|ode2| . 874094) (|extractSplittingLeaf| . 873908) (|fortranCarriageReturn| . 873828) (|reduced?| . 873037) (|diag| . 872834) (|hessian| . 872479) (|var2StepsDefault| . 872289) (|subs1stVar| . 872031) (|maxrow| . 871737) (|polyRing2UPUP| . 871299) (|comparison| . 871164) (|bits| . 870812) (|infieldint| . 870558) (|acosIfCan| . 870417) (|countRealRootsMultiple| . 870173) (|degOneCoef| . 869879) (|rationalPlaces| . 868628) (|reducedForm| . 868527) (|iitanh| . 868331) (|jordanAdmissible?| . 867991) (|viewWriteAvailable| . 867896) (|mulmod| . 867832) (|linGenPos| . 867488) (|inverseIntegralMatrix| . 867204) (|reciprocalPolynomial| . 867011) (|nlde| . 866784) (|drawComplex| . 866520) (|getGraph| . 866385) (|sqfree| . 866068) (|minimumExponent| . 865908) (|invertible?| . 865290) (|fortranCharacter| . 865245) (|purelyTranscendental?| . 864959) (|positiveRemainder| . 864898) (|expintfldpoly| . 864574) (|fresnelS| . 864186) (|float?| . 863909) (|outputArgs| . 863537) (|cAsinh| . 863377) (|alternatingGroup| . 863075) (|zero?| . 862359) (|firstDenom| . 862228) (|interpolate| . 860939) (|coHeight| . 860618) (|OMencodingBinary| . 860568) (|socf2socdf| . 860375) (|zeroDimPrime?| . 860003) (|initializeGroupForWordProblem| . 859730) (|bernoulli| . 859419) (|limit| . 857202) (|numberOfPlacesOfDegree| . 855793) (|OMputString| . 855681) (|knownInfBasis| . 855374) (|subset?| . 855249) (|irreducibleFactor| . 855127) (|iiGamma| . 854953) (|rowEchWoZeroLines| . 854838) (|screenResolution3D| . 854764) (|viewWriteDefault| . 854574) (|basisOfLeftAnnihilator| . 854393) (|eigenMatrix| . 854200) (|mkAnswer| . 853855) (|perfectSquare?| . 853727) (|besselI| . 853272) (|adaptive3D?| . 853198) (|initParLocLeaves| . 852508) (|stop| . 852463) (|OMopenString| . 852339) (|checkRur| . 851894) (|lineColorDefault| . 851720) (|OMgetString| . 851636) (|basisOfLeftNucleus| . 851458) (|uncouplingMatrices| . 851214) (|basisOfRightNucloid| . 851025) (|maxTower| . 850908) (|reduceLineOverLine| . 850789) (|mesh?| . 850668) (|compdegd| . 850282) (|alphabetic?| . 850202) (|degreePartition| . 849698) (|mapMatrixIfCan| . 849296) (|newSubProgram| . 849187) (|squareFreeLexTriangular| . 848726) (|monicCompleteDecompose| . 848486) (|empty?| . 847390) (|setprevious!| . 847249) (GE . 847031) (|symmetricTensors| . 846697) (|droot| . 846472) (|realElementary| . 845791) (|consnewpol| . 845291) (|gramschmidt| . 845166) (|predicate| . 844965) (|axes| . 844530) (|iter| . 844343) (|dznrm2| . 844153) (|splitLinear| . 844047) (|pomopo!| . 843894) (|OMputBVar| . 843812) (|outputSpacing| . 843700) (|cyclicSubmodule| . 843454) (|interpret| . 843259) (|algint| . 842876) (|flagFactor| . 842696) (|cExp| . 842536) (|readLine!| . 842458) (|RittWuCompare| . 842230) (|assert| . 841811) (|delay| . 841562) (|intensity| . 841441) (|monicRightFactorIfCan| . 841177) (|normalDenom| . 840955) (|sequences| . 840649) (|rightDivide| . 840139) (|vectoraddmul| . 839969) (|dimension| . 838487) (|stopTableGcd!| . 837794) (|tex| . 837706) (|mapdiv| . 837544) (|lyndonIfCan| . 837404) (|lazyIntegrate| . 837173) (|box| . 836990) (|compose| . 836705) (|distance| . 836581) (|chvar| . 836193) (|constantOpIfCan| . 836013) (|polynomialZeros| . 835745) (|f2st| . 835625) (|log2| . 835502) (|removeConjugate| . 834927) (|algebraicSort| . 834240) (|En| . 834052) (|recur| . 833693) (|sylvesterMatrix| . 833399) (|xRange| . 833170) (|nthExpon| . 832550) (|pow| . 832150) (|presub| . 832100) (|stopMusserTrials| . 831774) (|eq| . 831494) (|printCode| . 831415) (|coefOfFirstNonZeroTerm| . 831315) (|commonDenominator| . 830456) (|lazyIrreducibleFactors| . 830090) (|partialFraction| . 829447) (|credPol| . 829177) (|headReduced?| . 828157) (|basisOfCommutingElements| . 827979) (|PDESolve| . 827422) (|plotPolar| . 826793) (|subCase?| . 825964) (|aLinear| . 825730) (|deleteRoutine!| . 825644) (|cyclicCopy| . 825560) (|factorials| . 825037) (|rightNorm| . 824920) (|critM| . 824650) (|makeViewport3D| . 824294) (|removeSuperfluousCases| . 823509) (|excpDivV| . 823004) (|quoByVar| . 822899) (|localUnquote| . 822551) (|extend| . 820312) (|isList| . 820175) (|quotedOperators| . 819829) (|makeViewport2D| . 819634) (|rewriteIdealWithHeadRemainder| . 819323) (|level| . 819166) (|separate| . 818480) (|leftCharacteristicPolynomial| . 818313) (|squareFree| . 815800) (|useEisensteinCriterion| . 815642) (|build| . 815163) (|countRealRoots| . 814951) (|innerSolve| . 814632) (|ramifiedAtInfinity?| . 814363) (|OMputFloat| . 814246) (|shiftHP| . 801022) (|definingField| . 800831) (|coerceS| . 800610) (|lazyPseudoDivide| . 799703) (|separateFactors| . 799152) (|externalList| . 799062) (|extendedint| . 798716) (|finiteSeries2Vector| . 798496) (|generic?| . 798381) (|tanhIfCan| . 798240) (|groebgen| . 797908) (|delete| . 797648) (|jacobian| . 797082) (|rowEchelonLocal| . 796934) (|fullInfClsPt| . 796486) (|redmat| . 796108) (|cyclicGroup| . 795806) (|OMgetBVar| . 795724) (|evalRec| . 795283) (|gethi| . 794797) (|rightDiscriminant| . 794381) (|expandLog| . 794166) (|evenInfiniteProduct| . 793280) (|badValues| . 793094) (|repeating?| . 792922) (|suppOfZero| . 792797) (|drawToScale| . 792629) (|leftAlternative?| . 792289) (|inconsistent?| . 791531) (|useSingleFactorBound?| . 791376) (|convergents| . 791232) (|edf2ef| . 791077) (|linearDependenceOverZ| . 790870) (|updatD| . 790504) (|tab| . 790342) (|dn| . 790167) (|newtonPolygon| . 789765) (|rroot| . 789242) (|semiDegreeSubResultantEuclidean| . 788966) (|cotIfCan| . 788825) (|copyIto| . 788689) (|maxMixedDegree| . 788455) (= . 787304) (|substring?| . 787182) (|resultantReduitEuclidean| . 786896) (|possiblyInfinite?| . 786778) (|digamma| . 786335) (|translate| . 785312) (|rotatey| . 785171) (|cSin| . 785011) (|table| . 784683) (|packModulus| . 784417) (|factorUsingMusser| . 783993) (|square?| . 783539) (|gcdprim| . 783396) (|removeSinhSq| . 783181) (< . 782673) (|evalIfCan| . 778586) (|deriv| . 778455) (|balancedBinaryTree| . 778315) (|extractPoint| . 778168) (|tubeRadiusDefault| . 777960) (> . 777827) (|cCos| . 777667) (|d03faf| . 777328) (|row| . 776616) (|green| . 776577) (|semicolonSeparate| . 776484) (|inspect| . 775982) (<= . 775600) (|musserTrials| . 775274) (|d03eef| . 774897) (|rewriteSetByReducingWithParticularGenerators| . 774475) (|restorePrecision| . 774389) (|prepareDecompose| . 773362) (|ramified?| . 772821) (>= . 772688) (|next| . 772592) (|integralLastSubResultant| . 772197) (|d03edf| . 771959) (|mdeg| . 771733) (|quotientByP| . 771671) (|graphStates| . 771222) (|computeCycleEntry| . 771081) (|minPoly| . 770623) (|factorGroebnerBasis| . 769901) (|principalSubResultantSet| . 769666) (|findCoef| . 769535) (|deleteProperty!| . 769449) (|functionName| . 769239) (|suffix?| . 769148) (|sinIfCan| . 769007) (|basisOfInterpolateFormsForFact| . 768446) (|pointColorPalette| . 768312) (|endOfFile?| . 768233) (+ . 765538) (|displayAsGF| . 765405) (|charthRoot| . 765153) (|fullOutput| . 762378) (|makeResult| . 762104) (- . 759284) (|OMputEndApp| . 759202) (|dark| . 759126) (|represents| . 757997) (|moduloP| . 757901) (/ . 753808) (|char| . 753652) (|innerint| . 753012) (|light| . 752936) (|minrank| . 752368) (|stablePol| . 752217) (|patternMatch| . 748092) (|sqfrFactor| . 747970) (|yCoordinates| . 747658) (|completeSmith| . 747323) (|splitDenominator| . 745732) (|hasTopPredicate?| . 745617) (|specialTrigs| . 745331) (|aspFilename| . 745240) (|true| . 745199) (|internalLastSubResultant| . 744273) (|zCoord| . 744159) (|integerIfCan| . 744018) (|brillhartTrials| . 743700) (|allDegrees| . 743488) (|linear?| . 742930) (|point?| . 742809) (|cAsech| . 742649) (|prologue| . 742466) (|Somos| . 742194) (|nextsousResultant2| . 742022) (|minPoints| . 741785) (|positiveSolve| . 740297) (|fortranDoubleComplex| . 740252) (|primitiveElement| . 738312) (|localize| . 737723) (|clikeUniv| . 737505) (|distinguishedRootsOf| . 737109) (|unitsColorDefault| . 736935) (|genusTree| . 736217) (|coerceP| . 736011) (|primaryDecomp| . 735459) (|algebraicCoefficients?| . 735173) (|linkToFortran| . 734326) (|linSolve| . 733875) (|ODESolve| . 733438) (|recip| . 731454) (|tomodpa| . 731262) (|generalInterpolation| . 729295) (|selectNonFiniteRoutines| . 729245) (|c05nbf| . 728962) (|prefix?| . 728871) (|llprop| . 728714) (|equation| . 727979) (|OMputVariable| . 727867) (|outputAsScript| . 727623) (|rewriteSetWithReduction| . 727250) (|whileLoop| . 727166) (|iiBesselI| . 726964) (|c05adf| . 726726) (|map| . 701318) (|internalSubQuasiComponent?| . 700605) (|isTimes| . 699671) (|mkIntegral| . 699362) (|subtractIfCan| . 699285) (|choosemon| . 699020) (|c06gsf| . 698845) (|pop!| . 698503) (|generalTwoFactor| . 698228) (|parabolic| . 698044) (|movedPoints| . 697806) (|c06gqf| . 697631) (|sort!| . 697276) (|showTheFTable| . 697217) (|binarySearchTree| . 697094) (|invertibleSet| . 696808) (|c06gcf| . 696636) (|complexIntegrate| . 695917) (|halfExtendedResultant1| . 695676) (|c06gbf| . 695504) (|acothIfCan| . 695363) (|SturmHabichtCoefficients| . 695148) (|setMaxPoints3D| . 695071) (|LazardQuotient2| . 694799) (|c06fuf| . 694585) (|typeList| . 694343) (|errorInfo| . 694251) (|supRittWu?| . 694033) (|generalSqFr| . 693758) (|leadingIdeal| . 693530) (|SturmHabicht| . 693315) (|c06frf| . 693104) (|sylvesterSequence| . 692912) (|mpsode| . 692610) (|biringToPolyRing| . 692212) (|reduceLODE| . 691799) (|c06fqf| . 691591) (|qPot| . 691412) (|merge| . 690461) (|extractTop!| . 690286) (|checkOptions| . 690156) (|c06fpf| . 689948) (|projectivePoint| . 689207) (|maxDerivative| . 688929) (|eval| . 677941) (|basisOfInterpolateForms| . 677380) (|mainSquareFreePart| . 677161) (|c06ekf| . 676983) (|UnVectorise| . 676815) (|bivariatePolynomials| . 676444) (|inHallBasis?| . 676327) (|c06ecf| . 676152) (|acsch| . 674957) (|stoseInvertibleSetsqfreg| . 674595) (|lquo| . 673687) (|particularSolution| . 672675) (|compBound| . 672453) (|Aleph| . 672357) (|fortranLinkerArgs| . 672269) (|c06ebf| . 672097) (|computeBasis| . 671884) (|OMputEndError| . 671802) (|hasoln| . 671355) (|linearMatrix| . 671155) (|triangularSystems| . 670907) (|c06eaf| . 670735) (|rectangularMatrix| . 670535) (|makeCos| . 670327) (|algebraicOf| . 670039) (|solveid| . 669804) (|expressIdealMember| . 669698) (|s17def| . 669459) (|cyclicParents| . 669338) (|unexpand| . 669022) (|middle| . 668829) (|ord| . 668749) (|topFortranOutputStack| . 668657) (|s17dcf| . 668418) (|sech2cosh| . 668203) (|setPredicates| . 668080) (|iifact| . 667910) (|BasicMethod| . 667763) (|leftScalarTimes!| . 667622) (|s17akf| . 667463) (|printTypes| . 667278) (|divideIfCan| . 667022) (|tower| . 666923) (|alternating| . 666772) (|atrapezoidal| . 666469) (|s17ajf| . 666310) (|explicitEntries?| . 666188) (|showAll?| . 666050) (|modularGcdPrimitive| . 665788) (|doublyTransitive?| . 665634) (|condition| . 665458) (|getRef| . 665289) (|s17ahf| . 665130) (|genericLeftDiscriminant| . 664821) (|setSingularPoints| . 663572) (|hash| . 662492) (|superscript| . 662400) (|biRank| . 662208) (|characteristicPolynomial| . 660263) (|s17agf| . 660104) (|critMonD1| . 659738) (|vark| . 659504) (|cAsec| . 659344) (|iiexp| . 659148) (|numberOfImproperPartitions| . 659039) (|s17aff| . 658880) (|nthr| . 658348) (|cycleLength| . 658211) (|triangular?| . 657903) (|eigenvector| . 657586) (|clearTheFTable| . 657496) (|s17aef| . 657337) (|dmpToHdmp| . 657088) (|epilogue| . 656905) (|permanent| . 656685) (|mightHaveRoots| . 656461) (|discriminantSet| . 656220) (|wreath| . 656094) (|rdHack1| . 655861) (|s17adf| . 655702) (|unrankImproperPartitions1| . 655553) (|close| . 655278) (|optimize| . 654042) (|iiBeta| . 653840) (|drotg| . 653693) (|notelem| . 653527) (|lex| . 653396) (|s17acf| . 653237) (|split!| . 653066) (|lift| . 651165) (|numberOfCycles| . 651035) (|dscal| . 650854) (|shellSort| . 650596) (|s15aef| . 650437) (|reduce| . 643852) (|printInfo!| . 643653) (|permutation| . 643296) (|solveLinearPolynomialEquation| . 642308) (|processTemplate| . 642134) (|s15adf| . 641975) (|satisfy?| . 641368) (|henselFact| . 640795) (|repeating| . 640688) (|s14baf| . 640523) (|leftRemainder| . 640229) (|inR?| . 640114) (|invertibleElseSplit?| . 639806) (|antisymmetric?| . 639352) (|display| . 638080) (|iidprod| . 637882) (|s14abf| . 637723) (|ShiftAction| . 637499) (|effective?| . 637374) (|wholeRadix| . 637251) (|partialNumerators| . 637120) (|s14aaf| . 636961) (|deepestTail| . 636774) (|exists?| . 636685) (|rootSimp| . 636128) (|constantOperator| . 635958) (|s13adf| . 635799) (|testModulus| . 635588) (|trivialIdeal?| . 635317) (|bitLength| . 635235) (|dihedral| . 635084) (|s13acf| . 634925) (|setCurve| . 633722) (|adaptive?| . 633650) (|enumerate| . 633381) (|genericRightTrace| . 633069) (|s13aaf| . 632910) (|lfinfieldint| . 632538) (|OMputInteger| . 632425) (|eyeDistance| . 632304) (|Zero| . 632003) (|affineRationalPoints| . 631112) (|insert!| . 628142) (LT . 627924) (|s01eaf| . 627753) (|oddintegers| . 627585) (|lowerCase| . 627443) (|semiResultantEuclideannaif| . 627212) (|generalCoefficient| . 626814) (|generalPosition| . 626421) (|s21bdf| . 626253) (|midpoint| . 625984) (|OMgetEndError| . 625902) (|rischDEsys| . 625207) (|cyclotomicDecomposition| . 625041) (|s21bcf| . 624876) (|createGenericMatrix| . 624697) (|desingTree| . 622728) (|setelt!| . 622388) (|pointSizeDefault| . 622198) (|isMult| . 621977) (|blue| . 621938) (|s21bbf| . 621773) (|midpoints| . 621486) (|mapGen| . 620858) (|setLegalFortranSourceExtensions| . 620765) (|stack| . 620652) (|complexEigenvalues| . 620420) (|numberOfHues| . 620339) (|s21baf| . 620177) (|expPot| . 619989) (|realEigenvalues| . 619784) (|iicoth| . 619588) (|extractIndex| . 619431) (|bfEntry| . 619190) (|s20adf| . 619031) (|normal?| . 618505) (|cycleEntry| . 618407) (|truncatedmultiplication| . 618268) (|Gamma| . 617544) (|e02agf| . 617270) (|element| . 616987) (|symbol?| . 616598) (|perfectNthRoot| . 616266) (|option?| . 616115) (|match?| . 615991) (|s20acf| . 615832) (|ParCond| . 615324) (|characteristicSet| . 614658) (|minset| . 614304) (|pointLists| . 614191) (|d01aqf| . 613944) (|laplace| . 613558) (|prevPrime| . 613450) (|leftLcm| . 613156) (|LiePoly| . 612986) (|s19adf| . 612827) (|numberOfPrimitivePoly| . 612675) (|leftRankPolynomial| . 611908) (|constantCoefficientRicDE| . 611414) (|or| . 611269) (|listAllMonoExp| . 610958) (|d01apf| . 610705) (|position!| . 610615) (|sbt| . 610512) (|adjoint| . 609477) (|randomR| . 608754) (|s19acf| . 608595) (|modTree| . 608470) (|coerceImages| . 608351) (|mapUp!| . 608069) (|zoom| . 607540) (|d01anf| . 607290) (|variationOfParameters| . 607063) (|chebyshevU| . 606750) (|zeroDim?| . 606210) (|alterDrift!| . 606020) (|d01amf| . 605776) (|replaceDiffs| . 605353) (|compiledFunction| . 604829) (|removeSinSq| . 604614) (|d01alf| . 604321) (|sinhIfCan| . 604180) (|variableOf| . 604002) (|showArrayValues| . 603925) (|s19abf| . 603766) (|hue| . 603506) (|lexico| . 603150) (|integralCoordinates| . 602838) (|insert| . 602593) (|d01akf| . 602349) (|guessRec| . 595296) (|checkExtraValues| . 595084) (|associator| . 595022) (|s19aaf| . 594863) (|listOfMonoms| . 594645) (|approximants| . 594501) (|samplePoint| . 594237) (|d01ajf| . 593993) (|evalADE| . 593552) (|setleaves!| . 593423) (|OMgetEndAttr| . 593341) (|s18def| . 593102) (|squareFreePrim| . 592826) (|plot| . 590943) (|rename!| . 590849) (|OMencodingUnknown| . 590799) (|s18dcf| . 590560) (|blockConcat| . 590282) (|numberOfIrreduciblePoly| . 590130) (|subspace| . 589666) (|getExplanations| . 589544) (|s18aff| . 589385) (|leastPower| . 589066) (|more?| . 588010) (|diff| . 587598) (|hexDigit?| . 587518) (|iiacos| . 587322) (|s18aef| . 587163) (|trapezoidal| . 586863) (|module| . 586202) (|cubic| . 585678) (|external?| . 585596) (|s18adf| . 585437) (|transcendenceDegree| . 585116) (|integral?| . 584300) (|lintgcd| . 584129) (|polyPart| . 583938) (|reshape| . 583209) (|factorsOfCyclicGroupSize| . 583056) (|s18acf| . 582897) (|guess| . 571398) (|matrixDimensions| . 571246) (|round| . 571191) (|inverseLaplace| . 570760) (|f04qaf| . 570443) (|charClass| . 570266) (|stoseInvertibleSet| . 569904) (|fortranLiteralLine| . 569794) (|screenResolution| . 569557) (|f04mcf| . 569316) (|singularAtInfinity?| . 569047) (|separe| . 568862) (|reducedSystem| . 568465) (|idamax| . 568325) (GT . 568107) (|f04mbf| . 567687) (|fortranReal| . 567642) (|paraboloidal| . 567458) (|iprint| . 567343) (|radicalRoots| . 566779) (|f04maf| . 566529) (|selectOrPolynomials| . 566103) (|appendPoint| . 565980) (|totolex| . 565698) (|cTanh| . 565538) (|label| . 565488) (|f04jgf| . 565263) (|totalDegree| . 564550) (|algintegrate| . 564054) (|zeroDimensional?| . 563601) (|createLowComplexityNormalBasis| . 563317) (|f04faf| . 563130) (|quadratic?| . 562996) (|opeval| . 562718) (|quasiComponent| . 562387) (|extDegree| . 562262) (|double?| . 562174) (|f04axf| . 561942) (|heap| . 561831) (|se2rfi| . 561422) (|lazyPremWithDefault| . 560844) (|deepestInitial| . 560657) (|f04atf| . 560470) (|cAtanh| . 560310) (|infLex?| . 560005) (~ . 559914) (|bottom!| . 559739) (|affineAlgSetLocal| . 559222) (|f04asf| . 559038) (|cycles| . 558900) (|stoseInvertible?sqfreg| . 558489) (|cCsch| . 558329) (|nonSingularModel| . 557621) (|homogeneous| . 557349) (|univariateSolve| . 555108) (|style| . 554898) (|normalizedAssociate| . 554584) (|coefficient| . 551561) (SEGMENT . 551291) (|f04arf| . 551107) (|basisOfRightAnnihilator| . 550926) (|OMputSymbol| . 550811) (|lazyPquo| . 550431) (|monomial2series| . 550221) (|number?| . 550067) (|max| . 549500) (|presuper| . 549450) (|OMputBind| . 549368) (|f04adf| . 549163) (|badNum| . 548637) (|wholePart| . 548213) (|tableau| . 548089) (|linearlyDependentOverZ?| . 547903) (|negAndPosEdge| . 547609) (|graphs| . 547332) (|brillhartIrreducible?| . 547030) (|collect| . 546690) (|declare!| . 545931) (|mvar| . 545504) (|degreeSubResultantEuclidean| . 545211) (|lifting| . 544630) (|pdf2ef| . 544475) (|multMonom| . 543996) (|dswap| . 543784) (|digit?| . 543704) (|inBetweenExcpDiv| . 543042) (|null| . 542937) (|OMgetVariable| . 542853) (|stoseInvertible?| . 542083) (|continue| . 541995) (F2FG . 541633) (|linearAssociatedOrder| . 541449) (|lprop| . 541301) (|initial| . 541054) (|factorSquareFree| . 539090) (|option| . 538607) (|gcdcofactprim| . 538464) (|expextendedint| . 537958) (|multiset| . 537675) (|expt| . 537489) (|stronglyReduced?| . 536927) (|new| . 535637) (|maxdeg| . 535346) (|Frobenius| . 534757) (|rightExtendedGcd| . 534537) (|mainDefiningPolynomial| . 534417) (|f07fef| . 534222) (|Nul| . 534129) (|setErrorBound| . 533936) (|makeprod| . 533809) (|ideal| . 532907) (|f07fdf| . 532721) (|extract| . 532559) (|And| . 532423) (|insertMatch| . 532251) (|subscript| . 532159) (|completeEchelonBasis| . 531993) (|stripCommentsAndBlanks| . 531906) (|elimZeroCols!| . 531753) (|f07aef| . 531516) (|drift| . 531387) (|realRoots| . 530923) (|normFactors| . 530580) (|discriminantEuclidean| . 530332) (|deleteRow!| . 530148) (|f07adf| . 529989) (|scaleRoots| . 529826) (|curveV| . 529228) (|leftFactor| . 529061) (|child| . 528901) (|consRow!| . 528662) (|dcopy| . 528510) (|setTopPredicate| . 528357) (|real?| . 527608) (|is?| . 526504) (|appendRow!| . 526265) (|s17dlf| . 526023) (|absolutelyIrreducible?| . 525433) (|stirling2| . 525314) (|truncate| . 524956) (|decreasePrecision| . 524784) (|toseLastSubResultant| . 524389) (|allIndices| . 524233) (|s17dhf| . 524029) (|multiple| . 523753) (|rootSplit| . 523348) (|branchIfCan| . 522359) (|tree| . 521695) (|arg1| . 521547) (|sorted?| . 521220) (|s17dgf| . 521016) (|replace| . 520901) (|optional| . 520625) (|UP2ifCan| . 520161) (|e01sff| . 519941) (|arg2| . 519793) (|ScanFloatIgnoreSpacesIfCan| . 519674) (|f02xef| . 519445) (|mapUnivariate| . 518784) (|indicialEquationAtInfinity| . 518144) (NOT . 517889) (|cycleSplit!| . 517749) (|nodeOf?| . 517502) (|f02wef| . 517285) (|OMputApp| . 517203) (|not| . 517020) (|semiResultantEuclidean2| . 516789) (OR . 516571) (|in?| . 515949) (|weierstrass| . 515742) (|f02fjf| . 514955) (|dimensions| . 514602) (|pseudoDivide| . 513873) (AND . 513655) (|mapExpon| . 513161) (|RemainderList| . 512775) (|f02bjf| . 512535) (|prem| . 512155) (|update| . 511992) (|leftRegularRepresentation| . 511672) (|fixedPoint| . 511340) (|varList| . 509965) (|ratPoly| . 509510) (|f02bbf| . 509301) (|applyQuote| . 508647) (|multiEuclideanTree| . 508522) (|product| . 507429) (|geometric| . 507287) (|eisensteinIrreducible?| . 507129) (|putGraph| . 506966) (|f02axf| . 506789) (|normalizeIfCan| . 506399) (|monomialIntPoly| . 506141) (|setFoundPlacesToEmpty| . 505973) (|leftRank| . 505781) (LODO2FUN . 505467) (|printInfo| . 502562) (|f02awf| . 502391) (|getShiftRec| . 501901) (|explicitlyEmpty?| . 501779) (|specialise| . 501522) (|OMlistSymbols| . 501401) (|neglist| . 501268) (|f02akf| . 501091) (|writeLine!| . 500935) (|vspace| . 500854) (|omError| . 500721) (|qsetelt!| . 500309) (|reducedQPowers| . 500074) (|top| . 499732) (|f02ajf| . 499561) (|parse| . 499482) (|prime| . 499343) (|SFunction| . 499183) (|nor| . 499085) (|less?| . 497869) (|f02agf| . 497698) (|OMgetEndObject| . 497616) (|showTypeInOutput| . 497515) (|modularFactor| . 497304) (|readLineIfCan!| . 497216) (|monicRightDivide| . 496688) (|lllp| . 496539) (|guessRat| . 489486) (|stosePrepareSubResAlgo| . 489072) (|null?| . 488795) (|numberOfComposites| . 488663) (|stopTable!| . 487988) (|vectorise| . 487694) (|partition| . 487492) (|gcd| . 485072) (* . 476493) (|numberRatPlacesExtDeg| . 475084) (|quotValuation| . 474991) (|permutations| . 474847) (|constantRight| . 474607) (|oddlambert| . 474114) (|toseInvertibleSet| . 473762) (|tubePlot| . 472471) (|find| . 472330) (|vertSplit| . 471708) (|getVariableOrder| . 471549) (|withPredicates| . 471426) (|components| . 471305) (|kroneckerDelta| . 471140) (|iicsc| . 470944) (|internalInfRittWu?| . 470195) (|augment| . 469004) (|rightFactorIfCan| . 468737) (|basisOfNucleus| . 468559) (|false| . 468518) (|elem?| . 468399) (|moduleSum| . 468013) (|columns| . 467435) (|push!| . 467081) (|clip| . 465739) (|makeGraphImage| . 465137) (|iitan| . 464941) (|scale| . 464459) (|nextSublist| . 464065) (|join| . 463934) (|redPol| . 463664) (|modularGcd| . 463402) (|factorial| . 463054) (|rightTrace| . 462937) (|euclideanNormalForm| . 462655) (|sub| . 462605) (|complexLimit| . 461636) (|toseInvertible?| . 460886) (|algebraicDecompose| . 459938) (|pair?| . 459661) (|canonicalIfCan| . 459514) (|width| . 459211) (|curry| . 459011) (|csc2sin| . 458796) (|aQuartic| . 458553) (|clearFortranOutputStack| . 458451) (|anfactor| . 458030) (|resultantEuclidean| . 457782) (|classNumber| . 456494) (|nextsubResultant2| . 456261) (|setmult!| . 455732) (|fixPredicate| . 455434) (|toScale| . 455222) (|genericLeftNorm| . 454910) (|regime| . 453993) (|outputForm| . 453050) (|squareFreeBasis| . 452845) (|sort| . 452121) (|areEquivalent?| . 451449) (|setref| . 451364) (|integral| . 450379) (|rightPower| . 450193) (|guessBinRat| . 443140) (|solid| . 443041) (|rightRegularRepresentation| . 442721) (|lieAlgebra?| . 442381) (|permutationGroup| . 442241) (|minimalForm| . 441317) (|elliptic?| . 440787) (|bandedHessian| . 440390) (|addiag| . 440218) (|derivationCoordinates| . 439934) (|copyfirst| . 439773) (|singularitiesOf| . 438908) (|stoseInternalLastSubResultant| . 437962) (|stoseIntegralLastSubResultant| . 437557) (|maxPower| . 437285) (|localReal?| . 437061) (|denomLODE| . 436238) (|bandMatrix| . 435676) (|UpTriBddDenomInv| . 435415) (|digits| . 434794) (|acoshIfCan| . 434653) (|rightLcm| . 434515) (|inrootof| . 434296) (|constantLeft| . 434056) (|parts| . 432910) (|trunc| . 432567) (|open?| . 432435) (|numericalOptimization| . 431845) (|att2Result| . 430948) (|fracPart| . 430648) (|testDim| . 430340) (|shufflein| . 430184) (|An| . 430016) (|fixedPointExquo| . 429822) (|intersectionDivisor| . 427756) (|writeDotGraph| . 427611) (|OMwrite| . 426280) (|mainMonomial| . 426093) (|traverse| . 425924) (|index?| . 425765) (|rischDE| . 425033) (|ratDenom| . 423346) (|factors| . 422659) (|topPredicate| . 422492) (|cond| . 422324) (|dihedralGroup| . 422022) (|lflimitedint| . 421497) (|monomRDEsys| . 421046) (|colorDef| . 420922) (|setexcpDiv!| . 420414) (|numericalIntegration| . 419789) (|bracket| . 419652) (|OMencodingXML| . 419602) (|type| . 419463) (|OMconnectTCP| . 419307) (|nextItem| . 419247) (|infix| . 419101) (|numerator| . 418724) (|objectOf| . 418647) (|reduceByQuasiMonic| . 418391) (|standardDotHeader| . 418307) (|depth| . 417686) (|aCubic| . 417446) (|summation| . 416835) (|remainder| . 416476) (|figureUnits| . 416322) (|comp| . 416066) (|stoseInvertible?reg| . 415655) (|groebner?| . 415399) (|simplifyLog| . 415184) (|PollardSmallFactor| . 415059) (|count| . 412594) (|lambert| . 412101) (|varselect| . 411895) (|pack!| . 411759) (|scripted?| . 411682) (|karatsubaOnce| . 411508) (|homogeneous?| . 411190) (|symmetricSquare| . 411045) (|Is| . 409828) (|setImagSteps| . 409746) (|dot| . 409235) (|leftExtendedGcd| . 409015) (|palgintegrate| . 408519) (|generalLambert| . 407890) (|preprocess| . 407035) (|rightZero| . 406919) (|expenseOfEvaluation| . 406569) (|leftGcd| . 406275) (|implies| . 406228) (|branchPointAtInfinity?| . 405959) (|hMonic| . 405720) (|OMReadError?| . 405632) (|cycleElt| . 405484) (|sampleDotGraph| . 405400) (|OMgetEndBind| . 405318) (|operators| . 405215) (|getZechTable| . 404594) (|torsionIfCan| . 403617) (|setMaxPoints| . 403542) (|getCurve| . 403438) (|algebraicVariables| . 403157) (|exactQuotient| . 402706) (|property| . 402585) (|reduction| . 402035) (|OMsend| . 401880) (|nextLatticePermutation| . 401731) (|invmultisect| . 401102) (|getSmgl| . 400995) (|bag| . 400325) (|schema| . 400111) (|chiSquare1| . 399979) (|dotview| . 399873) (|setOrder| . 399555) (|prefixRagits| . 399432) (|units| . 398805) (|shrinkable| . 398544) (|repSq| . 398354) (|resetNew| . 398283) (|bumptab1| . 398112) (|exquo| . 396612) (|polyRDE| . 396149) (|coshIfCan| . 396008) (|linearPolynomials| . 395637) (|resultantReduit| . 395439) (|div| . 395389) (|showRegion| . 395267) (|simpson| . 394967) (|postfix| . 394917) (|subQuasiComponent?| . 393478) (|symmetric?| . 393024) (|code| . 391781) (|Musser| . 391570) (|resultant| . 390687) (|extractClosed| . 390541) (|genericRightNorm| . 390229) (|maxColIndex| . 389762) (|completeHensel| . 389528) (|failed| . 389221) (|graphCurves| . 388621) (|mainMonomials| . 388406) (|mathieu22| . 388143) (|binomThmExpt| . 387916) (|maxLevel| . 387638) (|resetVariableOrder| . 387546) (|patternMatchTimes| . 387076) (|defineProperty| . 386858) (|myDegree| . 386443) (|dot2eps| . 386340) (|divisors| . 386204) (|viewpoint| . 384279) (|hadamard| . 384116) (|transcendentalDecompose| . 382201) (|curryRight| . 381958) (|elRow1!| . 381663) (|unaryFunction| . 381421) (|checkPrecision| . 381332) (|clearCache| . 381219) (|rootsOf| . 380408) (|normalized?| . 379388) (|nthFactor| . 378541) (|curve?| . 378420) (|OMgetAtp| . 378338) (|selectSumOfSquaresRoutines| . 378288) (|cAcot| . 378128) (|diophantineSystem| . 377783) (|cosIfCan| . 377642) (|nthFractionalTerm| . 377512) (|plus!| . 377371) (|isPower| . 376523) (|pseudoRemainder| . 376417) (|sts2stst| . 376190) (|unitNormal| . 376046) (|f2df| . 375921) (|rank| . 373442) (|over| . 373392) (|zaxpy| . 373181) (|prinshINFO| . 372917) (|splitConstant| . 372514) (|integralBasisAtInfinity| . 372243) (|contract| . 371461) (|curryLeft| . 371218) (|changeNameToObjf| . 371102) (|oneDimensionalArray| . 370851) (|setVariableOrder| . 370589) (|primextendedint| . 370097) (|unit| . 369763) (|factorPolynomial| . 369306) (|symmetricPower| . 368860) (|numFunEvals3D| . 368786) (|zRange| . 368670) (|inGroundField?| . 368552) (|shiftRoots| . 368389) (|unravel| . 368193) (|showTheIFTable| . 368133) (|elements| . 367949) (|complexForm| . 367264) (|selectsecond| . 367140) (|allRootsOf| . 366098) (|conditions| . 365894) (|setButtonValue| . 365664) (|evalat| . 365525) (|identification| . 365264) (|pushdown| . 364160) (|randomLC| . 363807) (|rangePascalTriangle| . 363549) (|po| . 363393) (|FormatRoman| . 363274) (|factorset| . 362929) (|setsubMatrix!| . 362703) (|remainder!| . 362542) (|machineFraction| . 362447) (|DiffC| . 362201) (|pdct| . 362121) (|critBonD| . 361755) (|palginfieldint| . 361290) (|monomial?| . 360374) (|summary| . 360282) (|guessHolo| . 355947) (|quadraticForm| . 355784) (|morphism| . 355418) (|qinterval| . 355265) (|guessPade| . 350930) (|show| . 350771) (|cycleRagits| . 350648) (|getCode| . 350562) (|setProperties| . 350447) (|roughBasicSet| . 350050) (|resetBadValues| . 349963) (|radPoly| . 349621) (|OMsetEncoding| . 349499) (|compactFraction| . 349400) (|startPolynomial| . 349131) (|singularPoints| . 347518) (|e02aef| . 347319) (|goodPoint| . 347079) (|qelt| . 346472) (|colorFunction| . 346091) (|hex| . 345987) (|leftMinimalPolynomial| . 345783) (|df2mf| . 345651) (|flexible?| . 345311) (|c02agf| . 345108) (|realEigenvectors| . 344810) (|hasDimension?| . 344488) (|constant| . 343522) (|indiceSubResultantEuclidean| . 343229) (|ode| . 342964) (|rangeIsFinite| . 342405) (|zeroSquareMatrix| . 342238) (|cscIfCan| . 342097) (|bit?| . 342002) (|flexibleArray| . 341741) (|eulerPhi| . 341642) (|c02aff| . 341439) (|icamax| . 341293) (|e02adf| . 341117) (|terms| . 340501) (|minimumDegree| . 339609) (|initiallyReduce| . 339166) (|setScreenResolution3D| . 339089) (|factorSquareFreeByRecursion| . 338393) (|hexDigit| . 338345) (|minus!| . 338069) (|c05pbf| . 337782) (|closed?| . 337557) (|hermite| . 337151) (|rhs| . 336641) (|shuffle| . 336485) (|arrayStack| . 336367) (|showAttributes| . 335268) (|Yun| . 335057) (|ddot| . 334873) (|createNormalPoly| . 334671) (|solve1| . 334405) (|mathieu12| . 334142) (|newtonPolySlope| . 333690) (|mix| . 333368) (|enterPointData| . 333195) (|subMultV| . 332669) (|floor| . 332469) (|wordInStrongGenerators| . 332287) (|credits| . 332195) (|compile| . 332074) (|numberOfOperations| . 331786) (|leadingExponent| . 331313) (|jacobi| . 331211) (|exprex| . 330990) (|rightRecip| . 330767) (|tanNa| . 330645) (|polyRingToBlUpRing| . 330247) (|e01sef| . 330027) (|gcdPrimitive| . 329223) (|rk4qc| . 328437) (|maxPoints3D| . 328363) (|retractToGrn| . 328195) (|statusIto| . 328038) (|getAncestors| . 327906) (|oblateSpheroidal| . 327697) (|makeUnit| . 327548) (|coerceListOfPairs| . 327420) (|e01saf| . 327244) (|setEmpty!| . 327068) (|cosh2sech| . 326853) (|iipow| . 326655) (|leftZero| . 326539) (|vedf2vef| . 326362) (|graphImage| . 326318) (|makeop| . 326012) (|e01daf| . 325833) (|infix?| . 325752) (|tRange| . 325571) (|fillPascalTriangle| . 325456) (|prindINFO| . 325059) (|normalizedDivide| . 324509) (|innerSolve1| . 323978) (|e01bhf| . 323764) (|lp| . 323633) (|triangSolve| . 322551) (|mapBivariate| . 322188) (|e01bgf| . 322006) (|viewDeltaXDefault| . 321826) (|euler| . 321556) (|wholeRagits| . 321433) (|stFunc1| . 321152) (|trigs| . 320544) (|random| . 319291) (|extendedIntegrate| . 318910) (|getStream| . 318732) (|laurentIfCan| . 318545) (|LazardQuotient| . 318276) (|squareTop| . 318087) (|e01bff| . 317905) (|ParCondList| . 317304) (|iiacsch| . 317108) (|entries| . 315836) (|e01bef| . 315663) (|algebraicSet| . 315259) (|makeYoungTableau| . 315102) (|closedCurve?| . 314981) (|imagi| . 314879) (|setProperty| . 314765) (|multiplicative?| . 314612) (|eigenvalues| . 314356) (|discreteLog| . 314133) (|transpose| . 313281) (|map!| . 312066) (|last| . 311478) (|e01baf| . 311299) (|reduceBasisAtInfinity| . 311025) (|intcompBasis| . 310763) (|OMgetEndApp| . 310681) (|e02zaf| . 310496) (|expandTrigProducts| . 310095) (|karatsubaDivide| . 309882) (|lazyPseudoQuotient| . 309777) (|One| . 309332) (|iiasec| . 309136) (|complementaryBasis| . 308862) (|reverse!| . 308403) (|super| . 308353) (|e02gaf| . 308145) (|subTriSet?| . 307452) (|solveRetract| . 307120) (|top!| . 306945) (|nextSubsetGray| . 306805) (|strongGenerators| . 306665) (|symFunc| . 306359) (|e02dff| . 306168) (|polyred| . 305952) (|parametersOf| . 305862) (|domainOf| . 305785) (|recolor| . 305520) (|approxNthRoot| . 305378) (|quickSort| . 305120) (|e02def| . 304938) (|radicalEigenvector| . 304700) (|decompose| . 301840) (|central?| . 301659) (|Ei4| . 301534) (|generalizedEigenvector| . 300766) (|isPlus| . 299825) (|rightUnits| . 299198) (|startTableGcd!| . 298433) (|e02ddf| . 298168) (|minPol| . 297508) (|e02dcf| . 297201) (|evaluateInverse| . 296923) (|lastSubResultantElseSplit| . 296621) (|localParam| . 296450) (|subResultantChain| . 296195) (|hitherPlane| . 296074) (|moebiusMu| . 295975) (|mergeDifference| . 295855) (|chebyshevT| . 295542) (|tab1| . 295365) (|e02daf| . 295094) (|getGoodPrime| . 294823) (|high| . 294733) (|Ci| . 294438) (|lyndon?| . 294280) (|e02bef| . 293988) (|supersub| . 293892) (|rationalFunction| . 293450) (|radicalEigenvectors| . 293152) (|nextPartition| . 292816) (|var1Steps| . 292588) (|printStatement| . 292494) (|swapRows!| . 292271) (|squareFreePolynomial| . 291814) (|e02bdf| . 291647) (|airyAi| . 291204) (|reset| . 290321) (|atom?| . 290044) (|linearBezier| . 289891) (|clipWithRanges| . 289597) (|initializeParamOfPlaces| . 288185) (|rootBound| . 287843) (|bumptab| . 287623) (|outerProduct| . 287474) (|cSinh| . 287314) (|write| . 286669) (|minusInfinity| . 286480) (|save| . 286435) (|jordanAlgebra?| . 286095) (|unparse| . 286016) (|OMsupportsCD?| . 285903) (|sturmVariationsOf| . 285641) (|taylorQuoByVar| . 285536) (|ddFact| . 285302) (|plusInfinity| . 285113) (|bfKeys| . 285023) (|chineseRemainder| . 284104) (|removeDuplicates!| . 283876) (|removeZeroes| . 282577) (|numberOfValuesNeeded| . 282151) (|magnitude| . 281997) (|iisqrt3| . 281804) (|setchildren!| . 281638) (|leftNorm| . 281521) (|wronskianMatrix| . 281060) (|padecf| . 280755) (|addPointLast| . 280560) (|d| . 280393) (|bezoutResultant| . 280056) (|unprotectedRemoveRedundantFactors| . 279766) (|doubleComplex?| . 279678) (|associatorDependence| . 279279) (|mapUnivariateIfCan| . 278918) (|coercePreimagesImages| . 278790) (|integralRepresents| . 278513) (|integralAtInfinity?| . 278241) (|setPrologue!| . 278052) (|readable?| . 277963) (|rCoord| . 277849) (|realZeros| . 275578) (|makeSketch| . 275377) (|hclf| . 275188) (|isExpt| . 273562) (|pascalTriangle| . 273399) (|inRadical?| . 273140) (|selectAndPolynomials| . 272714) (|complexNumeric| . 269027) (|status| . 268555) (|localAbs| . 267492) (|newReduc| . 267272) (|pol| . 267074) (|cAtan| . 266914) (|numberOfChildren| . 266757) (|completeHermite| . 266446) (|kernels| . 266347) (|guessPRec| . 259294) (|hcrf| . 259105) (|cRationalPower| . 258923) (|viewDefaults| . 258839) (|pquo| . 258459) (|member?| . 256990) (|univariate| . 254043) (|leftOne| . 253923) (|euclideanGroebner| . 253029) (|secIfCan| . 252888) (|lexTriangular| . 252583) (|d01gbf| . 252285) (|fmecg| . 251220) (|slash| . 251170) (|factor| . 239341) (|combineFeatureCompatibility| . 239133) (|increasePrecision| . 238961) (|dec| . 238903) (|typeLists| . 238693) (|quasiRegular?| . 238390) (|zag| . 238340) (|d01gaf| . 238169) (|complexRoots| . 237651) (|imag| . 236911) (|aRow| . 236631) (|d01fcf| . 236336) (|setStatus!| . 236129) (|options| . 235708) (|multisect| . 235079) (|solveLinearlyOverQ| . 234856) (|asinhIfCan| . 234715) (|binaryTournament| . 234592) (|directProduct| . 234463) (|e| . 234277) (|safeFloor| . 234114) (|cTan| . 233954) (|swap!| . 233753) (|twist| . 233510) (|nullity| . 232334) (|d01bbf| . 232168) (|destruct| . 231683) (|rootPoly| . 231282) (|d01asf| . 231035) (|simplify| . 230355) (|setRow!| . 229609) (|mainValue| . 229489) (|rightFactorCandidate| . 229293) (|replaceVarByOne| . 229007) (|monomial| . 226110) (|someBasis| . 225966) (|shade| . 225777) (|groebner| . 224026) (|monomialIntegrate| . 223672) (|tanIfCan| . 223531) (|columnSpace| . 223276) (|isamax| . 223142) (|multivariate| . 221473) (|solid?| . 221377) (|iilog| . 221181) (|bandedJacobian| . 220781) (|pmintegrate| . 219650) (|rightTrim| . 219462) (|d02raf| . 219026) (|listBranches| . 218765) (|isobaric?| . 218490) (|forLoop| . 218209) (|guessHP| . 210742) (|curve| . 210033) (|d02kef| . 209193) (|boundOfCauchy| . 208998) (|shiftInfoRec| . 208428) (|iiatan| . 208232) (|fprindINFO| . 207832) (|purelyAlgebraic?| . 207266) (|nextColeman| . 207106) (|d02gbf| . 206700) (|lBasis| . 204356) (|initTable!| . 204190) (|inv| . 202984) (|apply| . 202241) (|ocf2ocdf| . 202072) (|mantissa| . 201900) (|leftExactQuotient| . 201586) (|d02gaf| . 201264) (|airyBi| . 200821) (|fortranTypeOf| . 200705) (|ground?| . 200119) (|createLowComplexityTable| . 199869) (|generic| . 198183) (|OMgetBind| . 198101) (|ksec| . 197862) (|d02ejf| . 197284) (|prefix| . 197188) (|ground| . 196953) (|brace| . 196609) (|digit| . 196561) (|elementary| . 196410) (|leftTraceMatrix| . 195904) (|internalIntegrate| . 195180) (|transform| . 194916) (|d02cjf| . 194424) (|leadingMonomial| . 193332) (|cons| . 193173) (|subscriptedVariables| . 193067) (|select!| . 192735) (|safeCeiling| . 192572) (|d02bhf| . 192187) (|acschIfCan| . 192046) (|head| . 191606) (|leadingCoefficient| . 189582) (|copy| . 188486) (|virtualDegree| . 188208) (|d02bbf| . 187818) (|asimpson| . 187515) (|minColIndex| . 187048) (|acotIfCan| . 186907) (|isAbsolutelyIrreducible?| . 186499) (|primitiveMonomials| . 186293) (|e02ahf| . 186079) (|updateStatus!| . 185903) (|besselY| . 185448) (|patternVariable| . 185297) (|overset?| . 184884) (|diagonal| . 184680) (|reductum| . 182645) (|listOfLists| . 182052) (|unitVector| . 181325) (|transCoord| . 181232) (|translateToOrigin| . 180104) (|ridHack1| . 179998) (|double| . 179812) (|integer?| . 179313) (|iroot| . 179077) (|abs| . 178147) (|primeFrobenius| . 177972) (|iibinom| . 177774) (|selectFiniteRoutines| . 177724) (|mergeFactors| . 177581) (|subsInVar| . 177292) (|remove| . 176326) (|list| . 175912) (|createNormalPrimitivePoly| . 175710) (|gnuDraw| . 174851) (|expIfCan| . 174710) (|cfirst| . 174489) (|LPolynomial| . 171609) (F2EXPRR . 171419) (|tanh2coth| . 171204) (|collectQuasiMonic| . 170951) (|elt| . 161731) (|blowUp| . 161039) (|cyclotomic| . 160567) (|trace| . 159750) (|KrullNumber| . 158895) (|normalize| . 157796) (|nil| . 157722) (|setelt| . 155320) (|rationalPoints| . 153005) (|alternative?| . 152665) (|difference| . 152474) (|rootProduct| . 151917) (|newTypeLists| . 151831) (|recoverAfterFail| . 151704) (|drot| . 151480) (|divideIfCan!| . 151136) (|ipow| . 150938) (|lowerCase!| . 150884) (|weight| . 149980) (|members| . 148948) (|removeDuplicates| . 148788) (|insertBottom!| . 148607) (|sumOfDivisors| . 148508) (|hyperelliptic| . 147954) (|conditionsForIdempotents| . 146730) (|blankSeparate| . 146637) (|rest| . 145861) (|changeThreshhold| . 145746) (|power| . 145584) (|kmax| . 145378) (|padicallyExpand| . 145226) (|quadraticBezier| . 145070) (|reverse| . 144668) (|removeConstantTerm| . 144464) (|internalDecompose| . 141489) (|heapSort| . 141231) (|OMgetFloat| . 141142) (|createMultiplicationMatrix| . 140908) (|setDifference| . 140794) (F . 140647) (|setDegree!| . 140440) (|showScalarValues| . 140363) (|rowEchWoZeroLinesWOVectorise| . 140248) (|rombergo| . 139948) (|fibonacci| . 139849) (|setIntersection| . 139735) (|upDateBranches| . 138452) (|selectfirst| . 138328) (|divergence| . 138003) (|optional?| . 137888) (|pade| . 136973) (|union| . 136377) (|tubePoints| . 136149) (|constDsolve| . 135621) (|numberOfFactors| . 135244) (|mulbybinomial| . 134922) (|scalarTypeOf| . 134788) (|setUnion| . 134674) (|iiabs| . 134500) (|finiteBound| . 134315) (|Ei5| . 134190) (|times!| . 134049) (|prinpolINFO| . 133757) (|size| . 131818) (|radicalOfLeftTraceForm| . 131640) (|hdmpToDmp| . 131391) (|LagrangeInterpolation| . 131196) (|normInvertible?| . 130805) (|list?| . 130528) (|changeVar| . 129750) (|substitute| . 129645) (|log| . 127311) (|setAttributeButtonStep| . 127226) (|reduceRowOnList| . 127073) (|redPo| . 126744) (|raisePolynomial| . 126415) (|quasiMonicPolynomials| . 126044) (|prime?| . 125308) (|input| . 125056) (|variable| . 124365) (|setleft!| . 124221) (|doubleDisc| . 123986) (|complexZeros| . 123285) (|antiCommutative?| . 122945) (|inverseColeman| . 122785) (|element?| . 122526) (|test| . 122482) (|cartesian| . 122298) (|removeCosSq| . 122083) (|pleskenSplit| . 121599) (|rk4f| . 121312) (|currentSubProgram| . 121231) (|uniform01| . 121141) (|simpleBounds?| . 120998) (|setPoly| . 120860) (|finiteBasis| . 120560) (|algSplitSimple| . 120188) (|fffg| . 119747) (|nsqfree| . 119222) (|real| . 118282) (|rightRankPolynomial| . 117515) (|setTower!| . 117401) (|leftDivide| . 116667) (|setpoint!| . 116159) (|rename| . 116065) (|minPoints3D| . 115991) (|complex| . 115887) (|upperCase?| . 115807) (|ranges| . 115360) (|sizeLess?| . 115269) (|iExquo| . 115120) (|setvalue!| . 114982) (|optpair| . 114845) (|prolateSpheroidal| . 114636) (|subNodeOf?| . 114340) (|antiCommutator| . 114281) (|OMclose| . 114199) (|complete| . 113627) (|pole?| . 113308) (|ratpart| . 113217) (|exponent| . 112433) (|setTex!| . 112342) (|mainPrimitivePart| . 112123) (|lastSubResultant| . 111268) (|name| . 110625) (|qnew| . 110023) (|numer| . 108760) (|DiffAction| . 108536) (|redpps| . 108038) (|rur| . 106418) (|Ei| . 106001) (|mathieu11| . 105738) (|subSet| . 105589) (|denom| . 104346) (|nextIrreduciblePoly| . 104170) (|leftUnits| . 103543) (|complexNormalize| . 102270) (|lifting1| . 101567) (|OMbindTCP| . 101441) (|content| . 100742) (|kernel| . 100225) (|pointColor| . 100068) (|append| . 99988) (|partitions| . 99553) (|addmod| . 99489) (|OMputAtp| . 99407) (|shallowCopy| . 99289) (|back| . 99034) (|draw| . 91004) (|divisorAtDesingTree| . 90339) (|iisinh| . 90143) (|function| . 89434) (|exprToXXP| . 88874) (|symbolTableOf| . 88755) (|OMunhandledSymbol| . 88642) (|cot2tan| . 88427) (|makeObject| . 83956) (|tableForDiscreteLogarithm| . 83795) (|nonQsign| . 83672) (|printStats!| . 83506) (|critT| . 83124) (|changeWeightLevel| . 82503) (|extendedgcd| . 82328) (|coef| . 81728) (|decimal| . 81628) (|pointToPlace| . 81167) (|characteristicSerie| . 80393) (|identitySquareMatrix| . 80226) (|numberOfFractionalTerms| . 80099) (|OMgetSymbol| . 79969) (|createPrimitiveElement| . 79914) (|monom| . 79463) (|doubleResultant| . 79147) (|Ei3| . 79022) (|genusNeg| . 77173) (|relerror| . 77094) (|infinity| . 76903) (|radicalSimplify| . 76565) (|constantKernel| . 76404) (|character?| . 76316) (|doubleFloatFormat| . 76235) (|besselJ| . 75780) (|symmetricRemainder| . 75719) (|optAttributes| . 75215) (|shiftLeft| . 75070) (|interpretString| . 74959) (|composite| . 74506) (|iiBesselK| . 74304) (|twoFactor| . 73998) (|degreeSubResultant| . 73790) (|string?| . 73513) (|collectUpper| . 73267) (|placesOfDegree| . 71024) (|leadingCoefficientRicDE| . 70561) (|iisech| . 70365) (|multV| . 69839) (|component| . 69321) (|concat!| . 68700) (|SturmHabichtMultiple| . 68453) (|cycle| . 68324) (|removeRoughlyRedundantFactorsInPol| . 68034) (|precision| . 67623) (|iiasinh| . 67427) (|roughUnitIdeal?| . 67119) (|removeFirstZeroes| . 67019) (|repeatUntilLoop| . 66935) (|makingStats?| . 66766) (|birth| . 66648) (|leftDiscriminant| . 66232) (|lowerCase?| . 66152) (|iidsum| . 65954) (|bipolar| . 65745) (|seriesToOutputForm| . 65392) (|belong?| . 63684) (|goto| . 63596) (|fullParamInit| . 62906) (|qShiftAction| . 62679) (|leaf?| . 62247) (|displayKind| . 62166) (|OMreceive| . 62039) (|cot2trig| . 61824) (|loopPoints| . 61607) (|variables| . 59391) (|rischNormalize| . 58930) (|pseudoQuotient| . 58787) (|removeIrreducibleRedundantFactors| . 58418) (|setParam!| . 58219) (|powmod| . 58155) (|primitive?| . 57872) (|times| . 57624) (|generalizedEigenvectors| . 57273) (|baseRDE| . 56943) (|ffactor| . 56636) (|selectPDERoutines| . 56586) (|subMatrix| . 55776) (|clearTheIFTable| . 55685) (|expr| . 55436) (|rightTraceMatrix| . 54930) (|primitivePart!| . 54711) (|useEisensteinCriterion?| . 54556) (|keys| . 53705) (|integers| . 53537) (|leftRecip| . 53314) (|has?| . 53200) (|indexName| . 52990) (|critpOrder| . 52605) (|ScanFloatIgnoreSpaces| . 52496) (|setOfMinN| . 52312) (|makeFR| . 51803) (|df2st| . 51434) (|zeroDimPrimary?| . 51062) (|LyndonWordsList| . 50863) (|coefChoose| . 50556) (|asechIfCan| . 50415) (|edf2fi| . 50260) (|directory| . 50172) (|powerSum| . 50021) (|iFTable| . 49426) (|insertionSort!| . 48883) (|orthonormalBasis| . 48691) (|probablyZeroDim?| . 48376) (|complexSolve| . 47283) (|title| . 46837) (|palgint| . 46388) (|powern| . 46180) (|squareFreePart| . 45345) (|rotate!| . 45090) (|rowEchLocal| . 44945) (|copyBSD| . 44821) (|deepExpand| . 44610) (|extendedSubResultantGcd| . 43990) (|createRandomElement| . 43823) (|imagk| . 43721) (|op| . 43565) (|trace2PowMod| . 43352) (|bombieriNorm| . 42688) (|radix| . 42535) (|clearTheSymbolTable| . 42350) (|quasiMonic?| . 42135) (EQ . 41917) (|t| . 41773) (|zeroOf| . 41102) (|iflist2Result| . 40834) (|fortranLogical| . 40789) (|csubst| . 40461) (|newElement| . 39880) (|any| . 39774) (|Ei2| . 39649) (|iisec| . 39453) (|iiBesselY| . 39251) (|lazyGintegrate| . 39001) (|qShiftC| . 38752) (|suppOfPole| . 38627) (|associates?| . 38537) (|OMlistCDs| . 38446) (|makeSUP| . 38293) (|OMputAttr| . 38211) (|cubicBezier| . 38052) (|edf2df| . 37906) (|nextPrimitiveNormalPoly| . 37730) (|linears| . 37568) (|changeName| . 37449) (|stirling1| . 37330) (|common| . 37210) (|irreducibleRepresentation| . 36681) (|mainForm| . 36580) (|invertIfCan| . 36272) (|solveLinearPolynomialEquationByFractions| . 36015) (|iteratedInitials| . 35800) (|symmetricGroup| . 35498) (|algebraic?| . 35099) (|guessAlg| . 30764) (|posExpnPart| . 30664) (|rotate| . 30417) (|univariate?| . 30130) (|pushucoef| . 29713) (|characteristic| . 28027) (|lyndon| . 27897) (|conjugates| . 27781) (|divide!| . 27617) (|nextPrime| . 27509) (|clearDenominator| . 26620) (|cup| . 26494) (|ignore?| . 26137) (|internalIntegrate0| . 25728) (|theCurve| . 24534) (|pushup| . 23430) (|normalizeAtInfinity| . 23156) (|cardinality| . 23017) (|fortranInteger| . 22972) (|interval| . 22484) (|xCoord| . 22370) (|conditionP| . 22049) (|reportInstantiations| . 21926) (|dasum| . 21748) (|complexEigenvectors| . 21411) (|sinh2csch| . 21196) (|viewport2D| . 21140) (|insertTop!| . 20959) (|leftMult| . 20804) (|mesh| . 19516) (|gradient| . 19161) (|maxSubst| . 18889) (|matrix| . 17872) (|subResultantsChain| . 17668) (|split| . 15595) (|definingPolynomial| . 14351) (|elColumn2!| . 14053) (|quadraticNorm| . 13739) (|rightGcd| . 13601) (|retractIfCan| . 5905) (|gderiv| . 5728) (|setfirst!| . 5585) (|infClsPt?| . 5492) (|beauzamyBound| . 5150) (|algDsolve| . 4615) (|Lazard2| . 4404) (|problemPoints| . 3902) (|OMserve| . 3776) (|hspace| . 3695) (|blockSplit| . 2325) (|insertRoot!| . 2227) (|changeMeasure| . 2112) (|startTable!| . 1365) (|mainVariableOf| . 1250) (|error| . 772) (|tubeRadius| . 564) (|findCycle| . 313) (|setStatus| . 30)) 