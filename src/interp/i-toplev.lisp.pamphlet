\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/interp i-toplev.lisp}
\author{The Axiom Team}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\begin{verbatim}
This file contains the top-most code for receiving parser output,
calling the analysis routines and printing the result output. It
also contains several flavors of routines that start the interpreter
from LISP.
\end{verbatim}
<<*>>=

(IN-PACKAGE "BOOT" )

;-- When $ProcessInteractiveValue is true, we don't want the value printed
;-- or recorded.
;SETANDFILEQ($ProcessInteractiveValue, NIL)

(SETANDFILEQ |$ProcessInteractiveValue| NIL) 

;SETANDFILEQ($HTCompanionWindowID, NIL)

(SETANDFILEQ |$HTCompanionWindowID| NIL) 

;--% Starting the interpreter from LISP
;spadpo() ==
;  -- starts the interpreter but only displays parsed input
;  $PrintOnly: local:= true
;  spad()

(DEFUN |spadpo| ()
  (PROG (|$PrintOnly|)
    (DECLARE (SPECIAL |$PrintOnly|))
    (RETURN (PROGN (SPADLET |$PrintOnly| 'T) (|spad|)))))

;start(:l) ==
;  -- The function  start  begins the interpreter process, reading in
;  -- the profile and printing start-up messages.
;  $PrintCompilerMessageIfTrue: local := nil
;  $inLispVM : local := nil
;  if $displayStartMsgs then sayKeyedMsg("S2IZ0053",['"interpreter"])
;  initializeTimedNames($interpreterTimedNames,$interpreterTimedClasses)
;  statisticsInitialization()
;  $InteractiveFrame := makeInitialModemapFrame()
;  initializeSystemCommands()
;  initializeInterpreterFrameRing()
;  SETQ(ERROROUTSTREAM,
;    DEFIOSTREAM('((DEVICE . CONSOLE)(MODE . OUTPUT)),80,0))
;  setOutputAlgebra "%initialize%"
;  loadExposureGroupData()
;  if $displayStartMsgs then sayKeyedMsg("S2IZ0053",['"database"])
;  mkLowerCaseConTable()
;  if not $ruleSetsInitialized then initializeRuleSets()
;  if $displayStartMsgs then sayKeyedMsg("S2IZ0053",['"constructors"])
;  makeConstructorsAutoLoad()
;  GCMSG(NIL)
;  SETQ($IOindex,1)
;  if $displayStartMsgs then sayKeyedMsg("S2IZ0053",['"history"])
;  initHist()
;  if functionp 'addtopath then addtopath CONCAT($SPADROOT,'"bin")
;  SETQ($CURRENT_-DIRECTORY,_*DEFAULT_-PATHNAME_-DEFAULTS_*)
;  if null(l) then
;    if $displayStartMsgs then
;      sayKeyedMsg("S2IZ0053",[namestring ['_.axiom,'input]])
;    readSpadProfileIfThere()
;  if $displayStartMsgs then spadStartUpMsgs()
;  if $OLDLINE then
;    SAY fillerSpaces($LINELENGTH,'"=")
;    sayKeyedMsg("S2IZ0050",[namestring ['axiom,'input]])
;    if $OLDLINE ^= 'END__UNIT
;      then
;        centerAndHighlight($OLDLINE,$LINELENGTH,'" ")
;        sayKeyedMsg("S2IZ0051",NIL)
;      else sayKeyedMsg("S2IZ0052",NIL)
;    SAY fillerSpaces($LINELENGTH,'"=")
;    TERPRI()
;    $OLDLINE := NIL
;  $superHash := MAKE_-HASHTABLE('UEQUAL)
;  if null l then runspad()
;  'EndOfSpad

(DEFUN |start| (&REST G166080 &AUX |l|)
  (DSETQ |l| G166080)
  (PROG (|$PrintCompilerMessageIfTrue| |$inLispVM|)
    (DECLARE (SPECIAL |$PrintCompilerMessageIfTrue| |$inLispVM| |$superHash|
                      $OLDLINE $LINELENGTH |$displayStartMsgs|
                      $CURRENT-DIRECTORY *DEFAULT-PATHNAME-DEFAULTS*
                      $SPADROOT |$IOindex| |$ruleSetsInitialized|
                      |$InteractiveFrame| |$interpreterTimedClasses|
                      |$interpreterTimedNames|))
    (RETURN
      (PROGN
        (SPADLET |$PrintCompilerMessageIfTrue| NIL)
        (SPADLET |$inLispVM| NIL)
        (COND
          (|$displayStartMsgs|
              (|sayKeyedMsg| 'S2IZ0053
                  (CONS (MAKESTRING "interpreter") NIL))))
        (|initializeTimedNames| |$interpreterTimedNames|
            |$interpreterTimedClasses|)
        (|statisticsInitialization|)
        (SPADLET |$InteractiveFrame| (|makeInitialModemapFrame|))
        (|initializeSystemCommands|)
        (|initializeInterpreterFrameRing|)
        (SETQ ERROROUTSTREAM
              (DEFIOSTREAM '((DEVICE . CONSOLE) (MODE . OUTPUT)) 80 0))
        (|setOutputAlgebra| '|%initialize%|)
        (COND
          (|$displayStartMsgs|
              (|sayKeyedMsg| 'S2IZ0053
                  (CONS (MAKESTRING "database") NIL))))
        (|mkLowerCaseConTable|)
        (COND ((NULL |$ruleSetsInitialized|) (|initializeRuleSets|)))
        (COND
          (|$displayStartMsgs|
              (|sayKeyedMsg| 'S2IZ0053
                  (CONS (MAKESTRING "constructors") NIL))))
        (|makeConstructorsAutoLoad|)
        (GCMSG NIL)
        (SETQ |$IOindex| 1)
        (COND
          (|$displayStartMsgs|
              (|sayKeyedMsg| 'S2IZ0053
                  (CONS (MAKESTRING "history") NIL))))
        (|initHist|)
        (COND
          ((|functionp| '|addtopath|)
           (|addtopath| (CONCAT $SPADROOT (MAKESTRING "bin")))))
        (SETQ $CURRENT-DIRECTORY *DEFAULT-PATHNAME-DEFAULTS*)
        (COND
          ((NULL |l|)
           (COND
             (|$displayStartMsgs|
                 (|sayKeyedMsg| 'S2IZ0053
                     (CONS (|namestring|
                               (CONS (INTERN ".axiom" "BOOT")
                                     (CONS '|input| NIL)))
                           NIL))))
           (|readSpadProfileIfThere|)))
        (COND (|$displayStartMsgs| (|spadStartUpMsgs|)))
        (COND
          ($OLDLINE (SAY (|fillerSpaces| $LINELENGTH (MAKESTRING "=")))
              (|sayKeyedMsg| 'S2IZ0050
                  (CONS (|namestring|
                            (CONS '|axiom| (CONS '|input| NIL)))
                        NIL))
              (COND
                ((NEQUAL $OLDLINE 'END_UNIT)
                 (|centerAndHighlight| $OLDLINE $LINELENGTH
                     (MAKESTRING " "))
                 (|sayKeyedMsg| 'S2IZ0051 NIL))
                ('T (|sayKeyedMsg| 'S2IZ0052 NIL)))
              (SAY (|fillerSpaces| $LINELENGTH (MAKESTRING "=")))
              (TERPRI) (SPADLET $OLDLINE NIL)))
        (SPADLET |$superHash| (MAKE-HASHTABLE 'UEQUAL))
        (COND ((NULL |l|) (|runspad|)))
        '|EndOfSpad|))))


;typeTimePrin x ==
;  $highlightDelta: local:= 0
;  maprinSpecial(x,0,79)

(DEFUN |typeTimePrin| (|x|)
  (PROG (|$highlightDelta|)
    (DECLARE (SPECIAL |$highlightDelta|))
    (RETURN
      (PROGN (SPADLET |$highlightDelta| 0) (|maprinSpecial| |x| 0 79)))))

@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
