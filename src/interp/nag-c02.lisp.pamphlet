\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/interp nag-c02.lisp}
\author{The Axiom Team}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\begin{chunk}{*}

(IN-PACKAGE "BOOT" )

;c02aff() ==
;  htInitPage('"C02AFF - All Zeros of a Complex Polynomial",nil)
;  htMakePage '(
;    (domainConditions
;       (isDomain PI (PositiveInteger)))
;    (text . "\windowlink{Manual Page}{manpageXXc02aff} for this routine ")
;    (text . "\newline ")
;    (text . "\lispwindowlink{Browser operation page}{(|oPageFrom| '|c02aff| '|NagPolynomialRootsPackage|)} for this routine")
;    (text . "\newline \horizontalline ")
;    (text . "Finds all the roots of the complex polynomial equation ")
;    (text . "\htbitmap{c02aff}, using a variant of Laguerre's method. ")
;    (text . "\blankline ")
;    (text . "\newline \menuitemstyle{} ")
;    (text . "\tab{2} Enter the degree {\em n} of the polynomial:")
;    (text . "\newline\tab{2} ")
;    (bcStrings (5 5 n PI))
;    (text . "\blankline")
;    (text . "\newline")
;    (text . "\newline \menuitemstyle{} \tab{2} Scale value:")
;    (radioButtons scale
;        ("" "  True" true)
;        ("" "  False" false))
;    (text . "\blankline ")
;    (text . "\newline \menuitemstyle{} \tab{2} Ifail value:")
;    (radioButtons ifail
;        ("" " -1, Print error messages" minusOne)
;        ("" "  1, Suppress error messages" one)))
;  htMakeDoneButton('"Continue", 'c02affSolve)
;  htShowPage()

(DEFUN |c02aff| ()
  (PROGN
    (|htInitPage|
        "C02AFF - All Zeros of a Complex Polynomial" NIL)
    (|htMakePage|
        '((|domainConditions| (|isDomain| PI (|PositiveInteger|)))
          (|text|
           . "\\windowlink{Manual Page}{manpageXXc02aff} for this routine ")
          (|text| . "\\newline ")
          (|text|
           . "\\lispwindowlink{Browser operation page}{(|oPageFrom| '|c02aff| '|NagPolynomialRootsPackage|)} for this routine")
          (|text| . "\\newline \\horizontalline ")
          (|text|
           . "Finds all the roots of the complex polynomial equation ")
          (|text|
           . "\\htbitmap{c02aff}, using a variant of Laguerre's method. ")
          (|text| . "\\blankline ")
          (|text| . "\\newline \\menuitemstyle{} ")
          (|text|
           . "\\tab{2} Enter the degree {\\em n} of the polynomial:")
          (|text| . "\\newline\\tab{2} ") (|bcStrings| (5 5 |n| PI))
          (|text| . "\\blankline") (|text| . "\\newline")
          (|text|
           . "\\newline \\menuitemstyle{} \\tab{2} Scale value:")
          (|radioButtons| |scale| ("" "  True" |true|)
              ("" "  False" |false|))
          (|text| . "\\blankline ")
          (|text|
           . "\\newline \\menuitemstyle{} \\tab{2} Ifail value:")
          (|radioButtons| |ifail|
              ("" " -1, Print error messages" |minusOne|)
              ("" "  1, Suppress error messages" |one|))))
    (|htMakeDoneButton| "Continue" '|c02affSolve|)
    (|htShowPage|)))

;c02affSolve htPage ==
;  n :=
;    $bcParseOnly => PARSE_-INTEGER htpLabelInputString(htPage, 'n)
;    objValUnwrap htpLabelSpadValue(htPage, 'n)
;  logical := htpButtonValue(htPage,'scale)
;  scale :=
;    logical = 'true => '"true"
;    '"false"
;  error := htpButtonValue(htPage,'ifail)
;  ifail :=
;    error = 'one => '1
;    '-1
;  n = '5 => c02affDefaultSolve(htPage,scale,ifail)
;  labelList :=
;    "append"/[f(i,n) for i in 1..(n+1)] where f(i,n) ==
;      prefix := ('"\newline z**")
;      prefix := STRCONC(prefix,princ-to-string (n-i+1),'"\space{1}")
;      post   := ('"\tab{30} ")
;      post   := STRCONC(post,'"\space{1}")
;      rnam := INTERN STRCONC ('"r",princ-to-string i)
;      inam := INTERN STRCONC ('"i",princ-to-string i)
;      [['text,:prefix],['bcStrings,[10, 0.0, rnam, 'P]],
;       ['text,:post],['bcStrings,[10, 0.0, inam, 'P]]]
;  equationPart := [
;     '(domainConditions
;        (isDomain P (Polynomial $EmptyMode))
;         (isDomain S (String))
;          (isDomain PI (PositiveInteger))),
;            :labelList]
;  page := htInitPage("C02AFF - All Zeros of a Complex Polynomial", htpPropertyList htPage)
;  htSay '"\menuitemstyle{} \tab{2} Enter the coefficients of the polynomial: "
;  htSay '"\blankline "
;  htSay '"Real parts \tab{30} Imaginary parts "
;  htSay '"\newline "
;  htMakePage equationPart
;  htMakeDoneButton('"Continue",'c02affGen)
;  htpSetProperty(page,'n,n)
;  htpSetProperty(page,'scale,scale)
;  htpSetProperty(page,'ifail,ifail)
;  htpSetProperty(page,'inputArea, htpInputAreaAlist htPage)
;  htShowPage()

(DEFUN |c02affSolve,f| (|i| |n|)
  (PROG (|prefix| |post| |rnam| |inam|)
    (RETURN
      (SEQ (setq |prefix| "\\newline z**")
           (setq |prefix|
                    (STRCONC |prefix|
                             (princ-to-string
                                 (+ (- |n| |i|) 1))
                             "\\space{1}"))
           (setq |post| "\\tab{30} ")
           (setq |post| (STRCONC |post| "\\space{1}"))
           (setq |rnam|
                    (INTERN (STRCONC "r"
                                     (princ-to-string |i|))))
           (setq |inam|
                    (INTERN (STRCONC "i"
                                     (princ-to-string |i|))))
           (EXIT (CONS (CONS '|text| |prefix|)
                       (CONS (CONS '|bcStrings|
                                   (CONS
                                    (CONS 10
                                     (CONS 0.0
                                      (CONS |rnam| (CONS 'P NIL))))
                                    NIL))
                             (CONS (CONS '|text| |post|)
                                   (CONS
                                    (CONS '|bcStrings|
                                     (CONS
                                      (CONS 10
                                       (CONS 0.0
                                        (CONS |inam| (CONS 'P NIL))))
                                      NIL))
                                    NIL)))))))))

(DEFUN |c02affSolve| (|htPage|)
  (PROG (|n| |logical| |scale| |error| |ifail| |labelList|
             |equationPart| |page|)
  (declare (special |$EmptyMode| |$bcParseOnly|))
    (RETURN
      (SEQ (PROGN
             (setq |n|
                      (COND
                        (|$bcParseOnly|
                            (PARSE-INTEGER
                                (|htpLabelInputString| |htPage| '|n|)))
                        ('T
                         (|objValUnwrap|
                             (|htpLabelSpadValue| |htPage| '|n|)))))
             (setq |logical| (|htpButtonValue| |htPage| '|scale|))
             (setq |scale|
                      (COND
                        ((BOOT-EQUAL |logical| '|true|)
                         "true")
                        ('T "false")))
             (setq |error| (|htpButtonValue| |htPage| '|ifail|))
             (setq |ifail|
                      (COND ((BOOT-EQUAL |error| '|one|) '1) ('T '-1)))
             (COND
               ((BOOT-EQUAL |n| '5)
                (|c02affDefaultSolve| |htPage| |scale| |ifail|))
               ('T
                (setq |labelList|
                         (PROG (G166076)
                           (setq G166076 NIL)
                           (RETURN
                             (DO ((G166081 (+ |n| 1))
                                  (|i| 1 (QSADD1 |i|)))
                                 ((QSGREATERP |i| G166081) G166076)
                               (SEQ (EXIT
                                     (SETQ G166076
                                      (APPEND G166076
                                       (|c02affSolve,f| |i| |n|)))))))))
                (setq |equationPart|
                         (CONS '(|domainConditions|
                                    (|isDomain| P
                                     (|Polynomial| |$EmptyMode|))
                                    (|isDomain| S (|String|))
                                    (|isDomain| PI (|PositiveInteger|)))
                               |labelList|))
                (setq |page|
                         (|htInitPage|
                             '|C02AFF - All Zeros of a Complex Polynomial|
                             (|htpPropertyList| |htPage|)))
                (|htSay|      "\\menuitemstyle{} \\tab{2} Enter the coefficients of the polynomial: ")
                (|htSay| "\\blankline ")
                (|htSay|                              "Real parts \\tab{30} Imaginary parts ")
                (|htSay| "\\newline ")
                (|htMakePage| |equationPart|)
                (|htMakeDoneButton| "Continue"
                    '|c02affGen|)
                (|htpSetProperty| |page| '|n| |n|)
                (|htpSetProperty| |page| '|scale| |scale|)
                (|htpSetProperty| |page| '|ifail| |ifail|)
                (|htpSetProperty| |page| '|inputArea|
                    (|htpInputAreaAlist| |htPage|))
                (|htShowPage|))))))))

;c02affDefaultSolve (htPage, scale, ifail) ==
;  n := '5
;  page := htInitPage('"C02AFF - All Zeros of a Complex Polynomial",nil)
;  htMakePage '(
;    (domainConditions
;       (isDomain F (Float)))
;    (text . "\newline \menuitemstyle{} \tab{2} ")
;    (text . "Enter the coefficients of the polynomial: ")
;    (text . "\blankline ")
;    (text . "Real parts \tab{30} Imaginary parts ")
;    (text . "\newline z**5 \space{1} ")
;    (bcStrings (10 "5.0" r1 F))
;    (text . "\tab{30} ")
;    (text . "\space{1} ")
;    (bcStrings (10 "6.0" i1 F))
;    (text . "\newline ")
;    (text . "z**4 \space{1} ")
;    (bcStrings (10 "30.0" r2 F))
;    (text . "\tab{30} ")
;    (text . "\space{1} ")
;    (bcStrings (10 "20.0" i2 F))
;    (text . "\newline ")
;    (text . "z**3 \space{1} ")
;    (bcStrings (10 "-0.2" r3 F))
;    (text . "\tab{30} ")
;    (text . "\space{1} ")
;    (bcStrings (10 "-6.0" i3 F))
;    (text . "\newline ")
;    (text . "z**2 \space{1} ")
;    (bcStrings (10 "50.0" r4 F))
;    (text . "\tab{30} ")
;    (text . "\space{1} ")
;    (bcStrings (10 "100000.0" i4 F))
;    (text . "\newline ")
;    (text . "z**1 \space{1} ")
;    (bcStrings (10 "-2.0" r5 F))
;    (text . "\tab{30} ")
;    (text . "\space{1} ")
;    (bcStrings (10 "40.0" i5 F))
;    (text . "\newline ")
;    (text . "z**0 \space{1} ")
;    (bcStrings (10 "10.0" r6 F))
;    (text . "\tab{30} ")
;    (text . "\space{1} ")
;    (bcStrings (10 "1.0" i6 F))
;    (text . "\newline ")
;    (text . "\blankline"))
;  htMakeDoneButton('"Continue",'c02affGen)
;  htpSetProperty(page,'n,n)
;  htpSetProperty(page,'scale,scale)
;  htpSetProperty(page,'ifail,ifail)
;  htpSetProperty(page,'inputArea, htpInputAreaAlist htPage)
;  htShowPage()

(DEFUN |c02affDefaultSolve| (|htPage| |scale| |ifail|)
  (PROG (|n| |page|)
    (RETURN
      (PROGN
        (setq |n| '5)
        (setq |page|
                 (|htInitPage|
                                              "C02AFF - All Zeros of a Complex Polynomial"
                     NIL))
        (|htMakePage|
            '((|domainConditions| (|isDomain| F (|Float|)))
              (|text| . "\\newline \\menuitemstyle{} \\tab{2} ")
              (|text| . "Enter the coefficients of the polynomial: ")
              (|text| . "\\blankline ")
              (|text| . "Real parts \\tab{30} Imaginary parts ")
              (|text| . "\\newline z**5 \\space{1} ")
              (|bcStrings| (10 "5.0" |r1| F)) (|text| . "\\tab{30} ")
              (|text| . "\\space{1} ") (|bcStrings| (10 "6.0" |i1| F))
              (|text| . "\\newline ") (|text| . "z**4 \\space{1} ")
              (|bcStrings| (10 "30.0" |r2| F)) (|text| . "\\tab{30} ")
              (|text| . "\\space{1} ") (|bcStrings| (10 "20.0" |i2| F))
              (|text| . "\\newline ") (|text| . "z**3 \\space{1} ")
              (|bcStrings| (10 "-0.2" |r3| F)) (|text| . "\\tab{30} ")
              (|text| . "\\space{1} ") (|bcStrings| (10 "-6.0" |i3| F))
              (|text| . "\\newline ") (|text| . "z**2 \\space{1} ")
              (|bcStrings| (10 "50.0" |r4| F)) (|text| . "\\tab{30} ")
              (|text| . "\\space{1} ")
              (|bcStrings| (10 "100000.0" |i4| F))
              (|text| . "\\newline ") (|text| . "z**1 \\space{1} ")
              (|bcStrings| (10 "-2.0" |r5| F)) (|text| . "\\tab{30} ")
              (|text| . "\\space{1} ") (|bcStrings| (10 "40.0" |i5| F))
              (|text| . "\\newline ") (|text| . "z**0 \\space{1} ")
              (|bcStrings| (10 "10.0" |r6| F)) (|text| . "\\tab{30} ")
              (|text| . "\\space{1} ") (|bcStrings| (10 "1.0" |i6| F))
              (|text| . "\\newline ") (|text| . "\\blankline")))
        (|htMakeDoneButton| "Continue" '|c02affGen|)
        (|htpSetProperty| |page| '|n| |n|)
        (|htpSetProperty| |page| '|scale| |scale|)
        (|htpSetProperty| |page| '|ifail| |ifail|)
        (|htpSetProperty| |page| '|inputArea|
            (|htpInputAreaAlist| |htPage|))
        (|htShowPage|)))))

;c02affGen htPage ==
;  n := htpProperty(htPage,'n)
;  scale := htpProperty(htPage,'scale)
;  ifail := htpProperty(htPage,'ifail)
;  alist := htpInputAreaAlist htPage
;  y := alist
;  while y repeat
;    right := STRCONC((first y).1," ")
;    y := rest y
;    left := STRCONC((first y).1," ")
;    y := rest y
;    reallist := [left,:reallist]
;    imaglist := [right,:imaglist]
;  realstring := bcwords2liststring reallist
;  imagstring := bcwords2liststring imaglist
;  linkGen STRCONC ('"c02aff([",realstring,",",imagstring,"],",princ-to-string n,",",scale,",",princ-to-string ifail,")")

(DEFUN |c02affGen| (|htPage|)
  (PROG (|n| |scale| |ifail| |alist| |right| |left| |y| |reallist|
             |imaglist| |realstring| |imagstring|)
    (RETURN
      (SEQ (PROGN
             (setq |n| (|htpProperty| |htPage| '|n|))
             (setq |scale| (|htpProperty| |htPage| '|scale|))
             (setq |ifail| (|htpProperty| |htPage| '|ifail|))
             (setq |alist| (|htpInputAreaAlist| |htPage|))
             (setq |y| |alist|)
             (DO () ((NULL |y|) NIL)
               (SEQ (EXIT (PROGN
                            (setq |right|
                                     (STRCONC (ELT (CAR |y|) 1) '| |))
                            (setq |y| (CDR |y|))
                            (setq |left|
                                     (STRCONC (ELT (CAR |y|) 1) '| |))
                            (setq |y| (CDR |y|))
                            (setq |reallist|
                                     (CONS |left| |reallist|))
                            (setq |imaglist|
                                     (CONS |right| |imaglist|))))))
             (setq |realstring| (|bcwords2liststring| |reallist|))
             (setq |imagstring| (|bcwords2liststring| |imaglist|))
             (|linkGen|
                 (STRCONC "c02aff([" |realstring| '|,|
                          |imagstring| '|],| (princ-to-string |n|) '|,|
                          |scale| '|,| (princ-to-string |ifail|) '|)|)))))))

;c02agf() ==
;  htInitPage('"C02AGF - All Zeros of a Real Polynomial",nil)
;  htMakePage '(
;    (domainConditions
;       (isDomain PI (PositiveInteger)))
;    (text . "\windowlink{Manual Page}{manpageXXc02agf} for this routine ")
;    (text . "\newline ")
;    (text . "\lispwindowlink{Browser operation page}{(|oPageFrom| '|c02agf| '|NagPolynomialRootsPackage|)} for this routine")
;    (text . "\newline \horizontalline ")
;    (text . "Finds all the roots of the real polynomial equation ")
;    (text . "\htbitmap{c02aff}, using a variant of Laguerre's method. ")
;    (text . "\blankline ")
;    (text . "\newline \menuitemstyle{} ")
;    (text . "\tab{2} Enter the degree {\em n} of the polynomial:")
;    (text . "\newline\tab{2} ")
;    (bcStrings (5 5 n PI))
;    (text . "\blankline")
;    (text . "\newline")
;    (text . "\newline \menuitemstyle{} \tab{2} Scale value:")
;    (radioButtons scale
;        ("" "  True" true)
;        ("" "  False" false))
;    (text . "\blankline ")
;    (text . "\newline \menuitemstyle{} \tab{2} Ifail value:")
;    (radioButtons ifail
;        ("" " -1, Print error messages" minusOne)
;        ("" "  1, Suppress error messages" one)))
;  htMakeDoneButton('"Continue", 'c02agfSolve)
;  htShowPage()

(DEFUN |c02agf| ()
  (PROGN
    (|htInitPage|
        "C02AGF - All Zeros of a Real Polynomial" NIL)
    (|htMakePage|
        '((|domainConditions| (|isDomain| PI (|PositiveInteger|)))
          (|text|
           . "\\windowlink{Manual Page}{manpageXXc02agf} for this routine ")
          (|text| . "\\newline ")
          (|text|
           . "\\lispwindowlink{Browser operation page}{(|oPageFrom| '|c02agf| '|NagPolynomialRootsPackage|)} for this routine")
          (|text| . "\\newline \\horizontalline ")
          (|text|
           . "Finds all the roots of the real polynomial equation ")
          (|text|
           . "\\htbitmap{c02aff}, using a variant of Laguerre's method. ")
          (|text| . "\\blankline ")
          (|text| . "\\newline \\menuitemstyle{} ")
          (|text|
           . "\\tab{2} Enter the degree {\\em n} of the polynomial:")
          (|text| . "\\newline\\tab{2} ") (|bcStrings| (5 5 |n| PI))
          (|text| . "\\blankline") (|text| . "\\newline")
          (|text|
           . "\\newline \\menuitemstyle{} \\tab{2} Scale value:")
          (|radioButtons| |scale| ("" "  True" |true|)
              ("" "  False" |false|))
          (|text| . "\\blankline ")
          (|text|
           . "\\newline \\menuitemstyle{} \\tab{2} Ifail value:")
          (|radioButtons| |ifail|
              ("" " -1, Print error messages" |minusOne|)
              ("" "  1, Suppress error messages" |one|))))
    (|htMakeDoneButton| "Continue" '|c02agfSolve|)
    (|htShowPage|)))

;c02agfSolve htPage ==
;  n :=
;    $bcParseOnly => PARSE_-INTEGER htpLabelInputString(htPage, 'n)
;    objValUnwrap htpLabelSpadValue(htPage, 'n)
;  logical := htpButtonValue(htPage,'scale)
;  scale :=
;    logical = 'true => '"true"
;    '"false"
;  error := htpButtonValue(htPage,'ifail)
;  ifail :=
;    error = 'one => '1
;    '-1
;  n = '5 => c02agfDefaultSolve(htPage,scale,ifail)
;  labelList :=
;    "append"/[f(i,n) for i in 1..(n+1)] where f(i,n) ==
;      prefix := ('"\newline z**")
;      prefix := STRCONC(prefix,princ-to-string (n-i+1),'"\space{1}")
;      rnam := INTERN STRCONC ('"r",princ-to-string i)
;      [['text,:prefix],['bcStrings,[10, 0.0, rnam, 'P]]]
;  equationPart := [
;     '(domainConditions
;        (isDomain P (Polynomial $EmptyMode))
;         (isDomain S (String))
;          (isDomain PI (PositiveInteger))),
;            :labelList]
;  page := htInitPage("C02AGF - All Zeros of a Real Polynomial", htpPropertyList htPage)
;  htSay '"\menuitemstyle{} \tab{2} "
;  htSay '"Enter the coefficients of the polynomial: "
;  htSay '"\newline "
;  htMakePage equationPart
;  htMakeDoneButton('"Continue",'c02agfGen)
;  htpSetProperty(page,'n,n)
;  htpSetProperty(page,'scale,scale)
;  htpSetProperty(page,'ifail,ifail)
;  htpSetProperty(page,'inputArea, htpInputAreaAlist htPage)
;  htShowPage()

(DEFUN |c02agfSolve,f| (|i| |n|)
  (PROG (|prefix| |rnam|)
    (RETURN
      (SEQ (setq |prefix| "\\newline z**")
           (setq |prefix|
                    (STRCONC |prefix|
                             (princ-to-string
                                 (+ (- |n| |i|) 1))
                             "\\space{1}"))
           (setq |rnam|
                    (INTERN (STRCONC "r"
                                     (princ-to-string |i|))))
           (EXIT (CONS (CONS '|text| |prefix|)
                       (CONS (CONS '|bcStrings|
                                   (CONS
                                    (CONS 10
                                     (CONS 0.0
                                      (CONS |rnam| (CONS 'P NIL))))
                                    NIL))
                             NIL)))))))

(DEFUN |c02agfSolve| (|htPage|)
  (PROG (|n| |logical| |scale| |error| |ifail| |labelList|
             |equationPart| |page|)
  (declare (special |$EmptyMode| |$bcParseOnly|))
    (RETURN
      (SEQ (PROGN
             (setq |n|
                      (COND
                        (|$bcParseOnly|
                            (PARSE-INTEGER
                                (|htpLabelInputString| |htPage| '|n|)))
                        ('T
                         (|objValUnwrap|
                             (|htpLabelSpadValue| |htPage| '|n|)))))
             (setq |logical| (|htpButtonValue| |htPage| '|scale|))
             (setq |scale|
                      (COND
                        ((BOOT-EQUAL |logical| '|true|)
                         "true")
                        ('T "false")))
             (setq |error| (|htpButtonValue| |htPage| '|ifail|))
             (setq |ifail|
                      (COND ((BOOT-EQUAL |error| '|one|) '1) ('T '-1)))
             (COND
               ((BOOT-EQUAL |n| '5)
                (|c02agfDefaultSolve| |htPage| |scale| |ifail|))
               ('T
                (setq |labelList|
                         (PROG (G166149)
                           (setq G166149 NIL)
                           (RETURN
                             (DO ((G166154 (+ |n| 1))
                                  (|i| 1 (QSADD1 |i|)))
                                 ((QSGREATERP |i| G166154) G166149)
                               (SEQ (EXIT
                                     (SETQ G166149
                                      (APPEND G166149
                                       (|c02agfSolve,f| |i| |n|)))))))))
                (setq |equationPart|
                         (CONS '(|domainConditions|
                                    (|isDomain| P
                                     (|Polynomial| |$EmptyMode|))
                                    (|isDomain| S (|String|))
                                    (|isDomain| PI (|PositiveInteger|)))
                               |labelList|))
                (setq |page|
                         (|htInitPage|
                             '|C02AGF - All Zeros of a Real Polynomial|
                             (|htpPropertyList| |htPage|)))
                (|htSay| "\\menuitemstyle{} \\tab{2} ")
                (|htSay|                              "Enter the coefficients of the polynomial: ")
                (|htSay| "\\newline ")
                (|htMakePage| |equationPart|)
                (|htMakeDoneButton| "Continue"
                    '|c02agfGen|)
                (|htpSetProperty| |page| '|n| |n|)
                (|htpSetProperty| |page| '|scale| |scale|)
                (|htpSetProperty| |page| '|ifail| |ifail|)
                (|htpSetProperty| |page| '|inputArea|
                    (|htpInputAreaAlist| |htPage|))
                (|htShowPage|))))))))

;c02agfDefaultSolve (htPage, scale, ifail) ==
;  n := '5
;  page := htInitPage('"C02AGF - All Zeros of a Real Polynomial",nil)
;  htMakePage '(
;    (domainConditions
;       (isDomain F (Float)))
;    (text . "\newline \menuitemstyle{} \tab{2} ")
;    (text . "Enter the coefficients of the polynomial: ")
;    (text . "\newline ")
;    (text . "z**5 \space{1} ")
;    (bcStrings (10 "1.0" r1 F))
;    (text . "\newline ")
;    (text . "z**4 \space{1} ")
;    (bcStrings (10 "2.0" r2 F))
;    (text . "\newline ")
;    (text . "z**3 \space{1} ")
;    (bcStrings (10 "3.0" r3 F))
;    (text . "\newline ")
;    (text . "z**2 \space{1} ")
;    (bcStrings (10 "4.0" r4 F))
;    (text . "\newline ")
;    (text . "z**1 \space{1} ")
;    (bcStrings (10 "5.0" r5 F))
;    (text . "\newline ")
;    (text . "z**0 \space{1} ")
;    (bcStrings (10 "6.0" r6 F))
;    (text . "\newline ")
;    (text . "\blankline"))
;  htMakeDoneButton('"Continue",'c02agfGen)
;  htpSetProperty(page,'n,n)
;  htpSetProperty(page,'scale,scale)
;  htpSetProperty(page,'ifail,ifail)
;  htpSetProperty(page,'inputArea, htpInputAreaAlist htPage)
;  htShowPage()

(DEFUN |c02agfDefaultSolve| (|htPage| |scale| |ifail|)
  (PROG (|n| |page|)
    (RETURN
      (PROGN
        (setq |n| '5)
        (setq |page|
                 (|htInitPage|
                                              "C02AGF - All Zeros of a Real Polynomial"
                     NIL))
        (|htMakePage|
            '((|domainConditions| (|isDomain| F (|Float|)))
              (|text| . "\\newline \\menuitemstyle{} \\tab{2} ")
              (|text| . "Enter the coefficients of the polynomial: ")
              (|text| . "\\newline ") (|text| . "z**5 \\space{1} ")
              (|bcStrings| (10 "1.0" |r1| F)) (|text| . "\\newline ")
              (|text| . "z**4 \\space{1} ")
              (|bcStrings| (10 "2.0" |r2| F)) (|text| . "\\newline ")
              (|text| . "z**3 \\space{1} ")
              (|bcStrings| (10 "3.0" |r3| F)) (|text| . "\\newline ")
              (|text| . "z**2 \\space{1} ")
              (|bcStrings| (10 "4.0" |r4| F)) (|text| . "\\newline ")
              (|text| . "z**1 \\space{1} ")
              (|bcStrings| (10 "5.0" |r5| F)) (|text| . "\\newline ")
              (|text| . "z**0 \\space{1} ")
              (|bcStrings| (10 "6.0" |r6| F)) (|text| . "\\newline ")
              (|text| . "\\blankline")))
        (|htMakeDoneButton| "Continue" '|c02agfGen|)
        (|htpSetProperty| |page| '|n| |n|)
        (|htpSetProperty| |page| '|scale| |scale|)
        (|htpSetProperty| |page| '|ifail| |ifail|)
        (|htpSetProperty| |page| '|inputArea|
            (|htpInputAreaAlist| |htPage|))
        (|htShowPage|)))))

;c02agfGen htPage ==
;  n := htpProperty(htPage,'n)
;  scale := htpProperty(htPage,'scale)
;  ifail := htpProperty(htPage,'ifail)
;  alist := htpInputAreaAlist htPage
;  y := alist
;  while y repeat
;    left := STRCONC((first y).1," ")
;    y := rest y
;    reallist := [left,:reallist]
;  realstring := bcwords2liststring reallist
;  linkGen STRCONC ('"c02agf([",realstring,"],",princ-to-string n,",",scale,",",princ-to-string ifail,")")

(DEFUN |c02agfGen| (|htPage|)
  (PROG (|n| |scale| |ifail| |alist| |left| |y| |reallist|
             |realstring|)
    (RETURN
      (SEQ (PROGN
             (setq |n| (|htpProperty| |htPage| '|n|))
             (setq |scale| (|htpProperty| |htPage| '|scale|))
             (setq |ifail| (|htpProperty| |htPage| '|ifail|))
             (setq |alist| (|htpInputAreaAlist| |htPage|))
             (setq |y| |alist|)
             (DO () ((NULL |y|) NIL)
               (SEQ (EXIT (PROGN
                            (setq |left|
                                     (STRCONC (ELT (CAR |y|) 1) '| |))
                            (setq |y| (CDR |y|))
                            (setq |reallist|
                                     (CONS |left| |reallist|))))))
             (setq |realstring| (|bcwords2liststring| |reallist|))
             (|linkGen|
                 (STRCONC "c02agf([" |realstring| '|],|
                          (princ-to-string |n|) '|,| |scale| '|,|
                          (princ-to-string |ifail|) '|)|)))))))

\end{chunk}
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
