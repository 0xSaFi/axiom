\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/interp cformat.lisp}
\author{The Axiom Team}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
<<*>>=

(IN-PACKAGE "BOOT")

;--% Formatting functions for various compiler data objects.
;--  These are used as [%origin o, %id n] for %1f %2f... style arguments
;--  in a keyed message.
;--  SMW, SG June 88
 
;%id a     == [IDENTITY, a]

(DEFUN |%id| (|a|) (PROG NIL (RETURN (LIST IDENTITY |a|))))

;-- Union(FileName,"strings","console")
;%origin x ==
;    [function porigin, x]

(DEFUN |%origin| (|x|)
 (PROG NIL (RETURN (LIST (FUNCTION |porigin|) |x|))))

;porigin x ==
;    (STRINGP x => x; pfname x)

(DEFUN |porigin| (|x|)
 (PROG () 
  (RETURN
   (COND
    ((STRINGP |x|) |x|)
    ((QUOTE T) (|pfname| |x|))))))

 
;%fname x ==
;    [function pfname, x]

(DEFUN |%fname| (|x|) (PROG NIL (RETURN (LIST (FUNCTION |pfname|) |x|))))

;pfname x ==
;    PathnameString x
 
(DEFUN |pfname| (|x|) (PROG NIL (RETURN (|PathnameString| |x|))))

;%pos p == [function ppos, p]

(DEFUN |%pos| (|p|) (PROG NIL (RETURN (LIST (FUNCTION |ppos|) |p|))))

;ppos p ==
;    pfNoPosition? p => ['"no position"]
;    pfImmediate? p  => ['"console"]
;    cpos := pfCharPosn p
;    lpos := pfLinePosn p
;    org  := porigin pfFileName p
;    [org,'" ",'"line",'" ",lpos]

(DEFUN |ppos| (|p|)
 (PROG (|org| |lpos| |cpos|)
  (RETURN
   (COND
    ((|pfNoPosition?| |p|) (LIST "no position"))
    ((|pfImmediate?| |p|) (LIST "console"))
    ((QUOTE T)
     (PROGN
      (SETQ |cpos| (|pfCharPosn| |p|))
      (SETQ |lpos| (|pfLinePosn| |p|))
      (SETQ |org| (|porigin| (|pfFileName| |p|)))
      (LIST |org| " " "line" " " |lpos|)))))))
 
;%key keyStuff == [function pkey, keyStuff]

(DEFUN |%key| (|keyStuff|)
 (PROG NIL (RETURN (LIST (FUNCTION |pkey|) |keyStuff|))))

;--keyStuff ::= keynumber | [ one or more keySeqs ]
;--keySeq   ::= keynumber optargList optdbn
;--optARgL  ::= [ 0 or more arguments ] | nothing at all
;--optDbn   ::= ['dbN , databaseName ] | nothing at all
;----------- (override in format.boot.pamphlet)
;pkey keyStuff ==
;    if not PAIRP keyStuff then keyStuff := [keyStuff]
;    allMsgs := []
;    while not null keyStuff repeat
;        dbN := NIL
;        argL := NIL
;        key := first keyStuff
;        keyStuff := IFCDR keyStuff
;        next := IFCAR keyStuff
;        while PAIRP next repeat
;            if CAR next = 'dbN then dbN := CADR next
;            else argL := next
;            keyStuff  := IFCDR keyStuff
;            next      := IFCAR keyStuff
;        oneMsg  := returnStLFromKey(key,argL,dbN)
;        allMsgs := NCONC (oneMsg,allMsgs)
;    allMsgs
 
(DEFUN |pkey| (|keyStuff|)
 (PROG (|oneMsg| |next| |key| |argL| |dbN| |allMsgs|)
  (RETURN
   (PROGN
    (COND ((NULL (CONSP |keyStuff|)) (SETQ |keyStuff| (LIST |keyStuff|))))
    (SETQ |allMsgs| NIL)
    ((LAMBDA () 
      (LOOP
       (COND
        ((NULL |keyStuff|) (RETURN NIL))
        (#0=(QUOTE T)
         (PROGN
          (SETQ |dbN| NIL)
          (SETQ |argL| NIL)
          (SETQ |key| (CAR |keyStuff|))
          (SETQ |keyStuff| (IFCDR |keyStuff|))
          (SETQ |next| (IFCAR |keyStuff|))
          ((LAMBDA () 
           (LOOP
            (COND
             ((NOT (CONSP |next|)) (RETURN NIL))
             (#0#
              (PROGN
               (COND
                ((EQ (CAR |next|) (QUOTE |dbN|)) (SETQ |dbN| (CADR |next|)))
                ((QUOTE T) (SETQ |argL| |next|)))
               (SETQ |keyStuff| (IFCDR |keyStuff|))
               (SETQ |next| (IFCAR |keyStuff|))))))))
          (SETQ |oneMsg| (|returnStLFromKey| |key| |argL| |dbN|))
          (SETQ |allMsgs| (NCONC |oneMsg| |allMsgs|))))))))
    |allMsgs|))))
 
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
