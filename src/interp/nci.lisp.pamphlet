\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/interp nci.lisp}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
<<*>>=

(in-package "BOOT")

;; Interpreter interface to new compiler

(defun |ncParseAndInterpretString| (s)
  (|processInteractive|
    (|packageTran| (|parseFromString| s))
    NIL ))

(defun |ncParseFromString| (s)
  (|zeroOneTran| (|packageTran|
    (catch 'SPAD_READER (|parseFromString| s)))))

(defun |ncINTERPFILE| (file echo)
  (let ((|$EchoLines| echo) (|$ReadingFile| t))
    (declare (special |$EchoLines| |$ReadingFile|))
    (|SpadInterpretFile| file)) )

(defun |ncGetFunction| (op dom sig)
  (|applyInPackage| #'|getNCfunction|
   (list (|rePackageTran| op "boot")
	 (|rePackageTran| dom "boot")
	 (|rePackageTran| sig "boot"))
   "boot"))

(defun |ncSetCurrentLine| (c)
  (|setCurrentLine| c))

(defun |applyInPackage| (fun args package)
  (let ((*package* (find-package (string package))))
    (declare (special *package*))
    (apply fun args)))

(defun |clearMacroTable| ()
  (declare (special |$pfMacros|))
  (setq |$pfMacros| NIL))

(defun |getParserMacros| ()
  (declare (special |$pfMacros|))
    |$pfMacros|)

(defun |displayParserMacro| (m)
  (let ((m (assq m |$pfMacros|)))
  (declare (special |$pfMacros|))
    (cond ((null m) nil)
	  (t (|pfPrintSrcLines| (CADDR m))))))


@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
