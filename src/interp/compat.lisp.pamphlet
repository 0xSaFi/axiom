\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/interp compat.lisp}
\author{The Axiom Team}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
<<*>>=
(IN-PACKAGE "BOOT" )

;-- some functions that may need to be changed on different lisp
;-- systems.
;
;-- tests if x is an identifier beginning with #
;
;isSharpVar x ==
;  IDENTP x and SCHAR(SYMBOL_-NAME x,0) = char "#"

(DEFUN |isSharpVar| (|x|)
 (AND (IDENTP |x|)
      (BOOT-EQUAL (SCHAR (SYMBOL-NAME |x|) 0) (|char| (QUOTE |#|))))) 
;
;isSharpVarWithNum x ==
;  null isSharpVar x => nil
;  (n := QCSIZE(p := PNAME x)) < 2 => nil
;  ok := true
;  c := 0
;  for i in 1..(n-1) while ok repeat
;    d := ELT(p,i)
;    ok := DIGITP d => c := 10*c + DIG2FIX d
;  if ok then c else nil

(DEFUN |isSharpVarWithNum| (|x|)
 (PROG (|p| |n| |d| |ok| |c|)
  (RETURN
   (SEQ
    (COND
     ((NULL (|isSharpVar| |x|)) NIL)
     ((> 2 (SPADLET |n| (QCSIZE (SPADLET |p| (PNAME |x|))))) NIL)
     ((QUOTE T)
      (SPADLET |ok| (QUOTE T))
      (SPADLET |c| 0)
      (DO ((#0=#:G166068 (SPADDIFFERENCE |n| 1)) (|i| 1 (QSADD1 |i|)))
          ((OR (QSGREATERP |i| #0#) (NULL |ok|)) NIL)
       (SEQ
        (EXIT
         (PROGN
          (SPADLET |d| (ELT |p| |i|))
          (COND
           ((SPADLET |ok| (DIGITP |d|))
            (SPADLET |c| (PLUS (TIMES 10 |c|) (DIG2FIX |d|)))))))))
      (COND
       (|ok| |c|)
       ((QUOTE T) NIL)))))))) 
;
;-- RREAD which takes erroval to return if key is missing
;rread(key,rstream,errorval) ==
;  if IDENTP key then key := PNAME key
;  RREAD(key,rstream,errorval)

(DEFUN |rread| (|key| |rstream| |errorval|)
 (PROGN
  (COND ((IDENTP |key|) (SPADLET |key| (PNAME |key|))))
  (RREAD |key| |rstream| |errorval|))) 

;rwrite(key,val,stream) ==
;  if IDENTP key then key := PNAME key
;  RWRITE(key,val,stream)

(DEFUN |rwrite| (|key| |val| |stream|)
 (PROGN
  (COND ((IDENTP |key|) (SPADLET |key| (PNAME |key|))))
  (RWRITE |key| |val| |stream|))) 

;-- issuing commands to the operating system
;
;system() ==
;  -- VM version of system command
;  string := getSystemCommandLine()
;  if string = '"" then string := '"sh"
;  sayMessage ["   Return Code = ", OBEY string]
;  terminateSystemCommand()

(DEFUN |system| NIL
 (PROG (|string|)
  (RETURN
   (PROGN
    (SPADLET |string| (|getSystemCommandLine|))
    (COND
     ((BOOT-EQUAL |string| (MAKESTRING ""))
      (SPADLET |string| (MAKESTRING "sh"))))
    (|sayMessage|
     (CONS (QUOTE |   Return Code = |) (CONS (OBEY |string|) NIL)))
    (|terminateSystemCommand|))))) 

;editFile file ==
;  MEMQ(INTERN('"WIN32",FIND_-PACKAGE("KEYWORD")),_*FEATURES_*) =>
;    OBEY STRCONC('"notepad ", namestring pathname file)
;  OBEY STRCONC('"$AXIOM/lib/SPADEDIT ",namestring pathname file)

(DEFUN |editFile| (|file|)
 (COND
  ((MEMQ (INTERN "WIN32" (FIND-PACKAGE (QUOTE KEYWORD))) *FEATURES*)
   (OBEY (STRCONC "notepad " (|namestring| (|pathname| |file|)))))
  ((QUOTE T)
   (OBEY
    (STRCONC "$AXIOM/lib/SPADEDIT " (|namestring| (|pathname| |file|))))))) 

;makeBigFloat(mantissa,expon) ==
;  [$BFtag,mantissa,:expon]

(DEFUN |makeBigFloat| (|mantissa| |expon|)
 (CONS |$BFtag| (CONS |mantissa| |expon|))) 

;READLINE(:s) ==
;  s => read_-line(first s)
;  read_-line(_*STANDARD_-INPUT_*)

(DEFUN READLINE (&REST #0=#:G166110 &AUX |s|)
 (DSETQ |s| #0#)
 (COND 
  (|s| (|read-line| (CAR |s|)))
  ((QUOTE T) (|read-line| *STANDARD-INPUT*)))) 

@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
