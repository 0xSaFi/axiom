<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:m="http://www.w3.org/1998/Math/MathML">
 <head>
  <meta http-equiv="Content-Type" content="text/html" charset="us-ascii"/>
  <title>Axiom Documentation</title>
  <style>

   html {
     background-color: #FFFF66;
   }

   body { 
     margin: 0px;
     padding: 0px;
   }

   div.command { 
     color:red;
   }

   div.center {
     color:blue;
   }

   div.reset {
     visibility:hidden;
   }

   div.mathml { 
     color:blue;
   }

   input.subbut {
     background-color:#FFFF66;
     border: 0;
     color:green;
     font-family: "Courier New", Courier, monospace;
   }

   input.noresult {
     background-color:#FFFF66;
     border: 0;
     color:black;
     font-family: "Courier New", Courier, monospace;
   }

   span.cmd { 
     color:green;
     font-family: "Courier New", Courier, monospace;
   }

   pre {
     font-family: "Courier New", Courier, monospace;
   }
  </style>
 </head>
 <body>
  <div align="center"><img align="middle" src="doctitle.png"/></div>
  <hr/>
<center>
 <h2>RCM3720 Cryptography, Network and Computer Security</h2>
 <h3>Laboratory Class 10: The Data Encryption Standard</h3>
</center>
<hr/>

The object of this lab will be to build up the necessary functions and
tools to implement simplified DES (sDES).  All operations will be done on
binary lists.  Since the definitions of the sDES functions require lists to be
indexed starting at 0, but in Axiom lists are indexed starting at 1, many of
the operations will have extra ones added at some stage.

<ul> 
 <li> Save the file <tt>des.input</tt> to a directory in which you
      have write access.  Read the file into Axiom, and open up the file
      with a text editor.  
 </li>

 <li> Compare the first command <tt>perm(b)</tt> with the initial
      permutation for sDES defined in page 94 of the notes.  How do the
      indices in the Axiom command relate to the indices of the
      permutation in the notes?  
 </li>
  
 <li> Now using the above procedure as a guide, write a procedure called
      <tt>invperm</tt> to perform the inverse permutation.
 </li>

 <li> Test this procedure: it should invert the permutation you
      obtained from the <tt>perm</tt> procedure.  
 </li>
  
<li> The <tt>subkey</tt> procedure creates two lists: one for the
     first subkey, and one for the second.  Edit the procedure to include
     the second subkey as given on the bottom of page 95.
 </li>
  
 <li> Write a procedure called <tt>expperm</tt> which implements the
      expansion permutation on page 96; use the <tt>perm</tt> and
      <tt>invperm</tt> procedures as guides.
 </li>
  
 <li> Using the <tt>sbox0</tt> procedure as a guide, write a procedure
      to implement S-box 1.
 </li>
  
 <li> The mixing function shown in figure 8.5 in the notes is
      implemented as <tt>mix</tt>.  This procedure has been
      commented.
 </li>
  
 <li> Comment each line of the <tt>feistel</tt> and <tt>sdes</tt>
      procedures in a similar fashion.
 </li>
  
 <li> Test the <tt>sdes</tt> procedure on the example given in the notes.
 </li>
  
 <li> Modify your procedure to implement sDES decryption, using the
      scheme given on page 99.
 </li>

 <li> Test that your decryption procedure works; that it decrypts the
      ciphertext produced by your encryption procedure to the original
      plaintext.
 </li>
</ul>
 </body>
</html>
