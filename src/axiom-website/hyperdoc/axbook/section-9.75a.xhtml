<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >

 <head>
  <title>Section9.75a</title>
  <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
  <script type="text/javascript" src="bookax1.js" />
 </head>

 <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">
 Book Contents
</a>
<a href="section-9.75.xhtml" style="margin-right: 10px;">
 Previous Section 9.75 SquareFreeRegularTriangularSet
</a>
<a href="section-9.76.xhtml" style="margin-right: 10px;">
 Next Section 9.76 Stream
</a>
<a href="book-index.xhtml">
 Book Index
</a>
<div class="section"  id="sec-9.75a">
<h2 class="sectiontitle">9.75a Stack</h2>


<a name="QueueXmpPage" class="label"/>

<p> A <span class="teletype">stack</span> is an aggregate structure
which allows insertion, deletion, and inspection of the "top" element.
Stacks are similar to any pile of paper where you can only add to the
pile, remove the top paper from the file, or read the top paper.</p>

<p>Stacks can be created from a list of elements using the 
<span class="spadfunFrom">stack</span>
<span class="index">Stack</span>
function.</p>

<div id="spadComm9-120a" class="spadComm" >
 <form id="formComm9-120a" action="javascript:makeRequest('9-120a');" >
  <input id="comm9-120a" type="text" class="command" style="width: 19em;" 
  value="a:Stack INT:= stack [1,2,3,4,5]" />
 </form>
 <span id="commSav9-120a" class="commSav" >
  a:Stack INT:= stack [1,2,3,4,5]
 </span>
 <div id="mathAns9-120a" ></div>
</div>

<div class="math">
 <table>
  <tr>
   <td>
    <math xmlns="&mathml;" mathsize="big" display="block">
     <mstyle>
      <mrow>
       <mo>[</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>2</mn>
       <mo>,</mo>
       <mn>3</mn>
       <mo>,</mo>
       <mn>4</mn>
       <mo>,</mo>
       <mn>5</mn>
       <mo>]</mo>
      </mrow>
     </mstyle>
    </math>
   </td>
  </tr>
 </table>
</div>

<div class="returnType">
 Type: Stack Integer
</div>

<p>
 An empty stack can be created using the  
 <span class="spadfunFrom" >empty</span> 
 function. 
</p>

<div id="spadComm9-121a" class="spadComm" >
 <form id="formComm9-121a" action="javascript:makeRequest('9-121a');" >
  <input id="comm9-121a" type="text" class="command" style="width: 19em;" 
  value="a:Stack INT:= empty()" />
 </form>
 <span id="commSav9-121a" class="commSav" >
  a:Stack INT:= empty()
 </span>
 <div id="mathAns9-121a" ></div>
</div>

<div class="math">
 <table>
  <tr>
   <td>
    <math xmlns="&mathml;" mathsize="big" display="block">
     <mstyle>
      <mrow>
       <mo>[</mo>
       <mspace width="0.5 em" />
       <mo>]</mo>
      </mrow>
     </mstyle>
    </math>
   </td>
  </tr>
 </table>
</div>

<div class="returnType">
 Type: Stack Integer
</div>

<p>
 The 
 <span class="spadfunFrom" >empty?</span> 
 function will return 
 <span class="teletype">true</span> 
 if the stack contains no elements.
</p>

<div id="spadComm9-131a" class="spadComm" >
 <form id="formComm9-131a" action="javascript:makeRequest('9-131a');" >
  <input id="comm9-131a" type="text" class="command" style="width: 19em;" 
  value="empty? a" />
 </form>
 <span id="commSav9-131a" class="commSav" >
  empty? a
 </span>
 <div id="mathAns9-131a" ></div>
</div>

<div class="math">
 <table>
  <tr>
   <td>
    <math xmlns="&mathml;" mathsize="big" display="block">
     <mstyle>
      <mrow>
       <mtext mathvariant='monospace' mathsize="big">true</mtext>
      </mrow>
     </mstyle>
    </math>
   </td>
  </tr>
 </table>
</div>

<div class="returnType">
 Type: Boolean
</div>

<p>
Stacks modify their arguments so they use the exclamation mark "!"
as part of the function name.
</p>

<p>
 The 
 <span class="spadfunFrom" >pop!</span>
 function removes the top element of the stack and
 returns it.  The stack is one element smaller. The 
 <span class="spadfunFrom" >extract!</span> function does
 the same thing with a different name.
</p>

<div id="spadComm9-122a" class="spadComm" >
 <form id="formComm9-122a" action="javascript:makeRequest('9-122a');" >
  <input id="comm9-122a" type="text" class="command" style="width: 19em;" 
  value="a:Stack INT:= stack [1,2,3,4,5]" />
 </form>
 <span id="commSav9-122a" class="commSav" >
  a:Stack INT:= stack [1,2,3,4,5]
 </span>
 <div id="mathAns9-122a" ></div>
</div>

<div class="math">
 <table>
  <tr>
   <td>
    <math xmlns="&mathml;" mathsize="big" display="block">
     <mstyle>
      <mrow>
       <mo>[</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>2</mn>
       <mo>,</mo>
       <mn>3</mn>
       <mo>,</mo>
       <mn>4</mn>
       <mo>,</mo>
       <mn>5</mn>
       <mo>]</mo>
      </mrow>
     </mstyle>
    </math>
   </td>
  </tr>
 </table>
</div>

<div class="returnType">
 Type: Stack Integer
</div>

<div id="spadComm9-123a" class="spadComm" >
 <form id="formComm9-123a" action="javascript:makeRequest('9-123a');" >
  <input id="comm9-123a" type="text" class="command" style="width: 19em;" 
  value="pop! a" />
 </form>
 <span id="commSav9-123a" class="commSav" >
  pop! a
 </span>
 <div id="mathAns9-123a" ></div>
</div>

<div class="math">
 <table>
  <tr>
   <td>
    <math xmlns="&mathml;" mathsize="big" display="block">
     <mstyle>
      <mrow>
       <mn>1</mn>
      </mrow>
     </mstyle>
    </math>
   </td>
  </tr>
 </table>
</div>

<div class="returnType">
 Type: PositiveInteger
</div>

<div id="spadComm9-124a" class="spadComm" >
 <form id="formComm9-124a" action="javascript:makeRequest('9-124a');" >
  <input id="comm9-124a" type="text" class="command" style="width: 19em;" 
  value="a" />
 </form>
 <span id="commSav9-124a" class="commSav" >
  a
 </span>
 <div id="mathAns9-124a" ></div>
</div>

<div class="math">
 <table>
  <tr>
   <td>
    <math xmlns="&mathml;" mathsize="big" display="block">
     <mstyle>
      <mrow>
       <mo>[</mo>
       <mn>2</mn>
       <mo>,</mo>
       <mn>3</mn>
       <mo>,</mo>
       <mn>4</mn>
       <mo>,</mo>
       <mn>5</mn>
       <mo>]</mo>
      </mrow>
     </mstyle>
    </math>
   </td>
  </tr>
 </table>
</div>

<div class="returnType">
 Type: Stack Integer
</div>

<p>
 The <span class="spadfunFrom" >push!</span> 
 function adds a new top element to the
 stack and returns the element that was pushed. The stack is one
 element larger.  The 
 <span class="spadfunFrom" >insert!</span> 
 function does the same thing with a different name.
</p>

<div id="spadComm9-125a" class="spadComm" >
 <form id="formComm9-125a" action="javascript:makeRequest('9-125a');" >
  <input id="comm9-125a" type="text" class="command" style="width: 19em;" 
  value="a:Stack INT:= stack [1,2,3,4,5]" />
 </form>
 <span id="commSav9-125a" class="commSav" >
  a:Stack INT:= stack [1,2,3,4,5]
 </span>
 <div id="mathAns9-125a" ></div>
</div>

<div class="math">
 <table>
  <tr>
   <td>
    <math xmlns="&mathml;" mathsize="big" display="block">
     <mstyle>
      <mrow>
       <mo>[</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>2</mn>
       <mo>,</mo>
       <mn>3</mn>
       <mo>,</mo>
       <mn>4</mn>
       <mo>,</mo>
       <mn>5</mn>
       <mo>]</mo>
      </mrow>
     </mstyle>
    </math>
   </td>
  </tr>
 </table>
</div>

<div class="returnType">
 Type: Stack Integer
</div>

<div id="spadComm9-126a" class="spadComm" >
 <form id="formComm9-126a" action="javascript:makeRequest('9-126a');" >
  <input id="comm9-126a" type="text" class="command" style="width: 19em;" 
  value="push!(9,a)" />
 </form>
 <span id="commSav9-126a" class="commSav" >
  push!(9,a)
 </span>
 <div id="mathAns9-126a" ></div>
</div>

<div class="math">
 <table>
  <tr>
   <td>
    <math xmlns="&mathml;" mathsize="big" display="block">
     <mstyle>
      <mrow>
       <mn>9</mn>
      </mrow>
     </mstyle>
    </math>
   </td>
  </tr>
 </table>
</div>

<div class="returnType">
 Type: PositiveInteger
</div>

<div id="spadComm9-127a" class="spadComm" >
 <form id="formComm9-127a" action="javascript:makeRequest('9-127a');" >
  <input id="comm9-127a" type="text" class="command" style="width: 19em;" 
  value="a" />
 </form>
 <span id="commSav9-127a" class="commSav" >
  a
 </span>
 <div id="mathAns9-127a" ></div>
</div>

<div class="math">
 <table>
  <tr>
   <td>
    <math xmlns="&mathml;" mathsize="big" display="block">
     <mstyle>
      <mrow>
       <mo>[</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>2</mn>
       <mo>,</mo>
       <mn>3</mn>
       <mo>,</mo>
       <mn>4</mn>
       <mo>,</mo>
       <mn>5</mn>
       <mo>,</mo>
       <mn>9</mn>
       <mo>]</mo>
      </mrow>
     </mstyle>
    </math>
   </td>
  </tr>
 </table>
</div>

<div class="returnType">
 Type: Stack Integer
</div>

<p>
 To read the top element without changing the stack use the 
 <span class="spadfunFrom" >top</span>
 function.
</p>

<div id="spadComm9-128a" class="spadComm" >
 <form id="formComm9-128a" action="javascript:makeRequest('9-128a');" >
  <input id="comm9-128a" type="text" class="command" style="width: 19em;" 
  value="a:Stack INT:= stack [1,2,3,4,5]" />
 </form>
 <span id="commSav9-128a" class="commSav" >
  a:Stack INT:= stack [1,2,3,4,5]
 </span>
 <div id="mathAns9-128a" ></div>
</div>

<div class="math">
 <table>
  <tr>
   <td>
    <math xmlns="&mathml;" mathsize="big" display="block">
     <mstyle>
      <mrow>
       <mo>[</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>2</mn>
       <mo>,</mo>
       <mn>3</mn>
       <mo>,</mo>
       <mn>4</mn>
       <mo>,</mo>
       <mn>5</mn>
       <mo>]</mo>
      </mrow>
     </mstyle>
    </math>
   </td>
  </tr>
 </table>
</div>

<div class="returnType">
 Type: Stack Integer
</div>

<div id="spadComm9-129a" class="spadComm" >
 <form id="formComm9-129a" action="javascript:makeRequest('9-129a');" >
  <input id="comm9-129a" type="text" class="command" style="width: 19em;" 
  value="top a" />
 </form>
 <span id="commSav9-129a" class="commSav" >
  top a
 </span>
 <div id="mathAns9-129a" ></div>
</div>

<div class="math">
 <table>
  <tr>
   <td>
    <math xmlns="&mathml;" mathsize="big" display="block">
     <mstyle>
      <mrow>
       <mn>1</mn>
      </mrow>
     </mstyle>
    </math>
   </td>
  </tr>
 </table>
</div>

<div class="returnType">
 Type: PositiveInteger
</div>

<div id="spadComm9-130a" class="spadComm" >
 <form id="formComm9-130a" action="javascript:makeRequest('9-130a');" >
  <input id="comm9-130a" type="text" class="command" style="width: 19em;" 
  value="a" />
 </form>
 <span id="commSav9-130a" class="commSav" >
  a
 </span>
 <div id="mathAns9-130a" ></div>
</div>

<div class="math">
 <table>
  <tr>
   <td>
    <math xmlns="&mathml;" mathsize="big" display="block">
     <mstyle>
      <mrow>
       <mo>[</mo>
       <mn>1</mn>
       <mo>,</mo>
       <mn>2</mn>
       <mo>,</mo>
       <mn>3</mn>
       <mo>,</mo>
       <mn>4</mn>
       <mo>,</mo>
       <mn>5</mn>
       <mo>]</mo>
      </mrow>
     </mstyle>
    </math>
   </td>
  </tr>
 </table>
</div>

<div class="returnType">
 Type: Stack Integer
</div>

</div>

<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-9.75.xhtml" style="margin-right: 10px;">
 Previous Section 9.75 SquareFreeRegularTriangularSet
</a>
<a href="section-9.76.xhtml" style="margin-right: 10px;">
 Next Section 9.76 Stream
</a>
<a href="book-index.xhtml">Book Index</a>

 </body>
</html>