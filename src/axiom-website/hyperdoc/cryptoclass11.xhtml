<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:m="http://www.w3.org/1998/Math/MathML">
 <head>
  <meta http-equiv="Content-Type" content="text/html" charset="us-ascii"/>
  <title>Axiom Documentation</title>
  <style>

   html {
     background-color: #FFFF66;
   }

   body { 
     margin: 0px;
     padding: 0px;
   }

   div.command { 
     color:red;
   }

   div.center {
     color:blue;
   }

   div.reset {
     visibility:hidden;
   }

   div.mathml { 
     color:blue;
   }

   input.subbut {
     background-color:#FFFF66;
     border: 0;
     color:green;
     font-family: "Courier New", Courier, monospace;
   }

   input.noresult {
     background-color:#FFFF66;
     border: 0;
     color:black;
     font-family: "Courier New", Courier, monospace;
   }

   span.cmd { 
     color:green;
     font-family: "Courier New", Courier, monospace;
   }

   pre {
     font-family: "Courier New", Courier, monospace;
   }
  </style>
 </head>
 <body>
  <div align="center"><img align="middle" src="doctitle.png"/></div>
  <hr/>
<center>
 <h2>RCM3720 Cryptography, Network and Computer Security</h2>
 <h3>Laboratory Class 11: Finite Fields</h3>
</center>
<hr/>

<ul>
 <li> Enter the following definition of the finite field 
<pre>
           3
   Z [x]/(x +x+1)
    2
</pre>
  <ul>
   <li> <span class="cmd">F:=FFP(PF 2,x^3+x+1) </span></li>
  </ul>
 </li>
 <li> To perform field operations, we need to create a generator of the field:
  a symbol which can be used to generate all elements as polynomials:
  <ul>
   <li> <span class="cmd">x:=generator()$F</span>
    <br/> Now field arithmetic is easy:
   </li>
   <li> (x^2+1)(x+1) in the field:
    <ul>
     <li> <span class="cmd">(x^2+1)*(x+1)</span> </li>
    </ul>
   </li>
   <li> 1/(x^2+x):
    <ul>
     <li> <span class="cmd">1/(x^2+x)</span>
      <br/>Note that Axiom returns its answer in terms of a dummy variable.
     </li>
    </ul>
   </li>
   <li> We can also list tables of powers:
    <ul>
     <li> 
      <span class="cmd">
       for i in 0..7 repeat output (i::String, x^i) 
      </span>
     </li>
    </ul>
   </li>
  </ul>
 </li>
 <li> Before we enter a new field, we need to clear <tt>x</tt> and its
  properties:
  <ul>
   <li> <span class="cmd">)cl pr x </span></li>
  </ul>
  Now for a slightly bigger field: 
<pre>
           4  3
   Z [x]/(x +x +1)
    2
</pre>
  <ul>
   <li> <span class="cmd">F2:=FFP(PF 2,x^4+x^3+1)</span> </li>
  </ul>
  <ul>
   <li> Create a list of powers of <tt>x</tt>. </li>
   <li> Evaluate (x^3+x+1)/(x^3+x^2) in this field. </li>
  </ul>
 </li>
 <li> Enter the Rijndael field, 
<pre>
         8  4  3
 Z [x]/(x +x +x +x+1)
  2
</pre>
 and call it <tt>GR</tt>.
 </li>
 <li> Determine whether <tt>x</tt> is a primitive element in this field:
  <ul>
   <li> <span class="cmd">x:=generator()$GR</span> </li>
   <li> <span class="cmd">primitive?(x)</span> </li>
  </ul>
 </li>
 <li>
  Is <tt>x+1</tt> a primitive element?
 </li>
 <li> Investigate the workings of MixColumn.  First create the matrix:
  <ul>
   <li>
    <span class="cmd">
     M:Matrix GR:=matrix([[x,x+1,1,1],[1,x,x+1,1],[1,1,x,x+1],[x+1,1,1,x]])
    </span>
   </li>
  </ul>
 </li>
 <li>
  Instead of multiplying a matrix <tt>C</tt> by <tt>M</tt>, 
  we shall just look at a single column, created randomly:
  <ul>
   <li>
    <span class="cmd">
     C:Matrix GR:=matrix([[random()$FR] for j in 1..4]) 
    </span>
   </li>
  </ul>
 <li>
 </li>
  These can be multiplied directly in Axiom:
  <ul>
   <li> <span class="cmd">D:=M*C</span> </li>
  </ul>
 </li>
 <li> Remarkably enough, Axiom can operate on matrices over a finite field as
      easily as it can operate on numerical matrices.  For example, given that
<pre>
   D=MC 
</pre>
 </li>
 <li>  it follows that
<pre>
      -1
   C=M  D
</pre>
 </li>
 <li> or that
<pre>
    -1
   M  D-C=0
</pre>
 </li>
 <li> To test this, first create the matrix inverse:
  <ul>
   <li> <span class="cmd">MI:=inverse(M)</span> </li>
  </ul>
 </li>
 <li>
  Now multiply by <tt>D</tt> and subtract <tt>C</tt>.  What does the result
  tell you about the truth of the final equation?
 </li>
 <li> To explore MixColumn a bit more, we shall look at the inverse of
      <tt>M</tt>.  First, here's a small function which converts from
      a polynomial to an integer (treating the coefficients of the
      polynomial as digits of a binary number):
  <ul>
   <li>
    <span class="cmd">
      poly2int(p)==(tmp:=reverse(coordinates(p)),return 
          integer wholeRadix(tmp::LIST INT)$RadixExpansion(2))
    </span>
   </li>
  </ul>
 </li>
 <li> First check the matrix <tt>M</tt>:
  <ul>
   <li> <span class="cmd">map((x +-> poly2int(x)::INT), M)</span></li>
  </ul>
 </li>
 <li>
  Is this what you should have?
 </li>
 <li>
  Now apply the same command but to <tt>MI</tt> instead of to <tt>M</tt>.
  What is the result?
 </li>
</ul>
 </body>
</html>
