\documentclass[dvipdfm]{book}
\newcommand{\VolumeName}{Volume Bibliography: Axiom Literature Citations}
\input{bookheader.tex}
\eject
A bibliography of Axiom references which are used throughout
Axiom. The first section contains literature that mentions Axiom,
initially derived with permission from Nelson Beebe's collection.
The second section contains references from Axiom to the literature.
The third section sorts papers by topic.

\begin{thebibliography}{999}
\section{Axiom Citations in the Literature}

\subsection{A} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[ACM 89]{ACM89} ACM, editor\\
Proceedings of the ACM-SIGSAM 1989 International
Symposium on Symbolic and Algebraic Computation, ISSAC '89 ACM Press, 
New York, NY 10036, USA, 1989, ISBN 0-89791-325-6, LCCN QA76.95.I59 1989

\bibitem[ACM 94]{ACM94} ACM, editor\\
ISSAC '94. Proceedings of the International
Symposium on Symbolic and Algebraic Computation. ACM Press, New York, NY,
10036, USA, 1994, ISBN 0-89791-638-7. LCCN QA76.95.I59 1994

\bibitem[ACS 91]{ACS91} D. Augot; P. Charpin; N. Sendrier\\
``The miniumum distance of some binary codes via the Newton's identities''\\
In Cohen and Charping [CC91], pages 65-73 ISBN 0-387-54303-1 (New York), 
3-540-54303-1 (Berlin). LCCN QA268.E95 1990

\bibitem[Adams 94]{AL94} Adams, William W.; Loustaunau, Philippe\\
``An Introduction to Gr\"obner Bases''\\
American Mathematical Society (1994) ISBN 0-8218-3804-0

\bibitem[Andrews 84]{And84} George E. Andrews\\
``Ramanujan and SCRATCHPAD''\\
In Golden and Hussain [GH84], pages 383-??

\bibitem[Andrews 88]{And88} G. E. Andrews\\
``Application of Scratchpad to problems in special functions 
and combinatorics''\\
In Janssen [Jan88], pages 158-?? ISBN 3-540-18928-9, 
0-387-18928-9 LCCN QA155.7.E4T74 1988

\bibitem[Anon 91]{Ano91} Anonymous editor\\ 
Proceedings 1991 Annual Conference, American Society for
Engineering Education. Challenges of a Changing World. ASEE, Washington, DC
USA 1991 2 vol.

\bibitem[Anon 92]{Ano92} Anonymous\\
Programming environments for high-level scientific problem solving.\\
IFIP TC2/WG 2.5 working conference. IFIP Transactions. A Computer Science 
and Technology, A-2:??, 1992. CODEN ITATEC. ISSN 0926-5473

\bibitem[Anono 95]{Ano95} Anonymous\\
GAMM 94 annual meeting. Zeitschrift fur Angewandte Mathematik und
Physik, 75 (suppl. 2), 1995, CODEN ZAMMAX, ISSN 0044-2267

\subsection{B} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Baclawski 14]{Bac14} Baclawski, Krystian\\
``SPAD language type checker''\\
\verb|github.com/cahirwpz/phd|

\begin{adjustwidth}{2.5em}{0pt}
The project aims to deliver a new type checker for SPAD language.
Several improvements over current type checker are planned.
\begin{itemize}
\item introduce better type inference
\item introduce modern language constructs
\item produce understandable diagnostic messages
\item eliminate well known bugs in the type system
\item find new type errors
\end{itemize}
\end{adjustwidth}

\bibitem[Blair 70]{BGJ70} Blair, Fred W; Griesmer, James H.; 
Jenks, Richard D.\\
``An interactive facility for symbolic mathematics''\\
Proc. International Computing Symposium, Bonn, Germany, 1970 pp394-419

\bibitem[Blair 70a]{BJ70} Blair, Fred W.; Jenks, Richard D.\\
``LPL: LISP programming language''\\
IBM Research Report, RC3062 Sept 1970

\bibitem[Broadbery 95]{BGDW95} Broadbery, P. A.; G{\'o}mez-D{\'\i}az, T.;
Watt, S. M.\\
``On the implementation of dynamic evaluation''\\
In Levelt [Lev95] pages 77-84 ISBN 0-89791-699-9 LCCN QA76.95 I59 1995
ACM order number 505950\\
\verb|pdf.aminer.org/000/449/014/on_the_implementation_of_dynamic_evaluation.pdf|
%\verb|axiom-developer.org/axiom-website/papers/BGDW95.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Dynamic evaluation is a technique for producing multiple results
according to a decision tree which evolves with program execution.
Sometimes it is desired to produce results for all possible branches
in the decision tree, while on other occasions, it may be sufficient
to compute a single result which satisfies certain properties. This
techinique finds use in computer algebra where computing the correct
result depends on recognizing and properly handling special cases of
parameters. In previous work, programs using dynamic evaluation have
explored all branches of decision trees by repeating the computations
prior to decision points.

This paper presents two new implementations of dynamic evaluation
which avoid recomputing intermediate results. The first approach uses
Scheme ``continuations'' to record state for resuming program
execution. The second implementation uses the Unix ``fork'' operation
to form new processes to explore alternative branches in parallel.
\end{adjustwidth}

\bibitem[Boehm 89]{Boe89} Boehm, Hans-J.\\
``Type inference in the presence of type abstraction''\\
ACM SIGPLAN Notices, 24(7) pp192-206 July 1989 CODEN SINODQ ISSN 0362-1340\\
\verb|www.acm.org/pubs/citations/proceedings/pldi/73141/p192-boehm|
%\verb|axiom-developer.org/axiom-website/papers/Boe89.pdf|

\begin{adjustwidth}{2.5em}{0pt}
A number of recent programming language designs incorporate a type
checking system based on the Girard-Reynolds polymorphic
$\lambda$-calculus.  This allows the construction of general purpose,
reusable software without sacrificing compile-time type checking. A
major factor constraining the implementation of these languages is the
difficulty of automatically inferring the lengthy type information
that is otherwise required if full use is made of these
languages. There is no known algorithm to solve any natural and fully
general formulation of the ``type inference'' problem. One very
reasonable formulation of the problem is known to be undecidable.

Here we define a restricted version of the type inference problem and
present an efficient algorithm for its solution. We argue that the
restriction is sufficiently weak to be unobtrusive in practice.
\end{adjustwidth}

\bibitem[Boulton 04]{BHGM04} Boulton, Richard; Hardy, Ruth; 
Gottliebsen, Hanne; Martin, Ursula\\
``Design verification for control engineering''\\
Proc Fourth International Conference on Integrated Formal Methods,
April 2004

\begin{adjustwidth}{2.5em}{0pt}
We introduce control engineering as a new domain of application for
formal methods. We discuss design verification, drawing attention to
the role played by diagrammatic evaluation criteria involving numeric
plots of a design, such as Nichols and Bode plots. We show that
symbolic computation and computational logic can be used to discharge
these criteria and provide symbolic, automated, and very general
alternatives to these standard numeric tests. We illustrate our work
with reference to a standard reference model drawn from military
avionics.
\end{adjustwidth}

\bibitem[Boulanger 91]{Bou91} Boulanger, Jean-Louis\\
``Etude de la compilation de scratchpad 2''\\
Rapport de DEA Universite dl lille 1, Sept 1991

\bibitem[Boulanger 93a]{Bou93a} Boulanger, Jean-Louis\\
``Axiom, language fonctionnel \`a d\'evelopement objet''\\
IT 255, Oct 1993
%\verb|axiom-developer.org/axiom-website/papers/Bou93a.pdf|

\bibitem[Boulanger 93b]{Bou93b} Boulanger, Jean-Louis\\
``AXIOM, A Functional Language with Object Oriented Development''
%\verb|axiom-developer.org/axiom-website/papers/Bou93b.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We present in this paper, a study about the computer algebra system
Axiom, which gives us many very interesting Software engineering
concepts.  This language is a functional language with an Object
Oriented Development.  This feature is very important for modeling the
mathematical world (Hierarchy) and provides a running with
mathematical sense. (All objects are functions). We present many
problems of running and development in Axiom. We can note that Aiom is
the only system of this category.
\end{adjustwidth}

\bibitem[Boulanger 94]{Bou94} Boulanger, J.L.\\
``Object Oriented Method for Axiom''\\
ACM SIGPLAN Notices, 30(2) pp33-41 February 1995 CODEN SINODQ ISSN 0362-1340
%\verb|axiom-developer.org/axiom-website/papers/Bou94.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Axiom is a very powerful computer algebra system which combines two
language paradigms (functional and OOP). Mathematical world is complex
and mathematicians use abstraction to design it. This paper presents
some aspects of the object oriented development in Axiom. The Axiom
programming is based on several new tools for object oriented
development, it uses two levels of class and some operations such that
{\sl coerce}, {\sl retract}, or {\sl convert} which permit the type
evolution. These notions introduce the concept of multi-view.
\end{adjustwidth}

\bibitem[Bronstein 87]{Bro87} Bronstein, Manuel\\
``Integration of Algebraic and Mixed Functions''\\
in [Wit87], p18

\bibitem[Bronstein 89]{Bro89} Bronstein, M.\\
``Simplification of real elementary functions''\\
ACM [ACM89] pages 207-211 ISBN 0-89791-325-6 LCCN QA76.95.I59 1989

\begin{adjustwidth}{2.5em}{0pt}
We describe an algorithm, based on Risch's real structure theorem, that
determines explicitly all the algebraic relations among a given set of
real elementary functions. We also provide examples from its
implementation that illustrate the advantages over the use of complex
logarithms and exponentials.
\end{adjustwidth}

\bibitem[Bronstein 91a]{Bro91a} Bronstein, M.\\
``The Risch differential equation on an algebraic curve''\\
in Watt [Wat91], pp241-246 ISBN 0-89791-437-6 LCCN QA76.95.I59 1991

\bibitem[Bronstein 91b]{Bro91b} Bronstein, M.\\
``The Risch differential equation on an algebraic curve''\\
 In S.Watt, editor, {\sl Proceedings of ISSAC'91},
pages 241-246, ACM Press, 1991.

\bibitem[Bronstein 92]{Bro92} Bronstein, M.\\
``Linear Ordinary Differential Equations: breaking through the order 2 barrier''\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/issac92.ps.gz|
%\verb|axiom-developer.org/axiom-website/papers/Bro92.pdf|

\begin{adjustwidth}{2.5em}{0pt}
A major subproblem for algorithms that either factor ordinary linear
differential equations or compute their closed form solutions is to
find their solutions $y$ which satisfy $y^{'}/y \in \overline{K}(x)$
where $K$ is the constant field for the coefficients of the equation.
While a decision procedure for this subproblem was known in the
$19^{th}$ century, it requires factoring polynomials over
$\overline{K}$ and has not been implemented in full generality. We
present here an efficient algorithm for this subproblem, which has
been implemented in the AXIOM computer algebra system for equations of
arbitrary order over arbitrary fields of characteristic 0. This
algorithm never needs to compute with the individual complex
singularities of the equation, and algebraic numbers are added only
when they appear in the potential solutions.  Implementation of the
complete Singer algorithm for $n=2,3$ based on this building block is
in progress.
\end{adjustwidth}

\bibitem[Bronstein 93]{Bro93} Bronstein, Manuel (ed)\\
ISSAC'93: proceedings of the 1993 International Symposium on Symbolic 
and Algebraic Computation, July 6-8, 1993, Kiev, Ukraine,
ACM Press New York, NY 10036, USA, 1993 ISBN 0-89791-604-2 
LCCN QA76.95 I59 1993 ACM order number 505930

\bibitem[Brunelli 09]{Bru08} Brunelli, J.C.\\
``Streams and Lazy Evaluation Applied to Integrable Models''\\
\verb|arxiv.org/PS_cache/nlin/pdf/0408/0408058v1.pdf|

\bibitem[Bronstein 93]{BS93} Bronstein, Manuel; Salvy, Bruno\\ 
``Full partial fraction decomposition of rational functions''\\
In Bronstein [Bro93] pp157-160 ISBN 0-89791-604-2 LCCN QA76.95 I59 1993\\
\verb|www.acm.org/pubs/citations/proceedings/issac/164081/p157-bronstein|

\bibitem[Bronstein 92a]{Bro92a} Bronstein, Manuel\\
``Integration and Differential Equations in Computer Algebra''
%\verb|axiom-developer.org/axiom-website/papers/Bro92a.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We describe in this paper how the problems of computing indefinite
integrals and solving linear ordinary differential equations in closed
form are now solved by computer algebra systems. After a brief review
of the mathematical history of those problems, we outline the two
major algorithms for them (respectively the Risch and Singer
algorithms) and the recent improvements on those algorithms which has
allowed them to be implemented.
\end{adjustwidth}

\bibitem[Beneke 94]{BS94} Beneke, T.; Schwippert, W.\\
``Double-track into the future: MathCAD will gain new users with Standard 
and Plus versions''\\
Elektronik, 43(15) pp107-110, July 1994, CODEN EKRKAR ISSN 0013-5658

\bibitem[Bronstein 97a]{Bro97a} Bronstein, Manuel; Weil, Jacques-Arthur\\
``On Symmetric Powers of Differential Operators''\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/mb_papers.html|
%\verb|axiom-developer.org/axiom-website/papers/Bro97a.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We present alternative algorithms for computing symmetric powers of
linear ordinary differential operators. Our algorithms are applicable
to operators with coefficients in arbitrary integral domains and
become faster than the traditional methods for symmetric powers of
sufficiently large order, or over sufficiently complicated coefficient
domains. The basic ideas are also applicable to other computations
involving cyclic vector techniques, such as exterior powers of
differential or difference operators.
\end{adjustwidth}

\bibitem[Borwein 00]{Bor00} Borwein, Jonathan\\
``Multimedia tools for communicating mathematics''\\
Springer-Verlag ISBN 3-540-42450-4 p58

\bibitem[Brown 94]{BT94} Brown, R.; Tonks, A.\\
``Calculations with simplicial and cubical groups in AXIOM''\\
Journal of Symbolic Computation 17(2) pp159-179 February 1994
CODEN JSYCEH ISSN 0747-7171

\bibitem[Brown 95]{BD95} Brown, Ronald; Dreckmann, Winfried\\
``Domains of data and domains of terms in AXIOM''
%\verb|axiom-developer.org/axiom-website/papers/DB95.pdf|

\begin{adjustwidth}{2.5em}{0pt}
The main new concept we wish to illustrate in this paper is a
distinction between ``domains of data'' and ``domains of terms'', and
its use in the programming of certain mathematical structures.
Although this distinction is implicit in much of the programming work
that has gone into the construction of Axiom categories and domains,
we believe that a formalisation of this is new, that standards and
conventions are necessary and will be useful in various other
contexts. We shall show how this concept may be used for the coding of
free categories and groupoids on directed graphs.
\end{adjustwidth}

\bibitem[Buchberger 85]{BC85} Buchberger, Bruno; Caviness, Bob F. (eds)\\
EUROCAL '85: European Conference on Computer Algebra, Linz, Austria, 
April 1-3, 1985;
proceedings, volume 204 of Lecture Notes in Computer Science. Springer-Verlag,
Berlin, Germany / Heidelberg, Germany / London, UK / etc., 1985,
ISBN 0-387-15983-5 (vol. 1), 0-387-15984-3 (vol. 2) LLCN QA155.7.E4 E86 1985
Two volumes

\bibitem[Buhl 05]{Buh05} Buhl, Soren L.\\
``Some Reflections on Integrating a Computer Algebra System in R''\\
\verb|www.math.auc.dk/~slb/kurser/software/RCompAlg.pdf|

\bibitem[Burge 91]{Bur91} Burge, W.H.\\
``Scratchpad and the Rogers-Ramanujan identities''\\
In Watt [Wat91], pp189-190 ISBN 0-89791-437-6 LCCN QA76.95.I59 1991

\bibitem[Burge 87]{BW87} Burge, W.; Watt, S.\\
``Infinite structures in SCRATCHPAD II''\\
Technical Report RC 12794 (\#57573) IBM Thomas J. Watson Research Center,
Box 218, Yorktown Heights, NY 10598, USA 1987

\bibitem[Burge 87a]{BWM87} Burge, William H.; Watt, Stephen M.; 
Morrison, Scott C.\\
``Streams and Power Series''\\
in [Wit87], pp9-12

\bibitem[Burge 89]{BW89} Burge, W. H.; Watt, S. M.\\
``Infinite structures in Scratchpad II''\\
in Davenport [Dav89], pp138-148 ISBN 3-540-51517-8 LCCN QA155.7.E4E86 1987

\subsection{C} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Calmet 94]{Cal94} Calmet, J. (ed)\\
Rhine Workshop on Computer Algebra, Proceedings.
Universit{\"a}t Karsruhe, Karlsruhe, Germany 1994

\bibitem[Camion 92]{CCM92} Camion, Paul; Courteau, Bernard; Montpetit, Andre\\ 
``Un probl{\`{e}}me combinatoire dans les graphs de Hamming et sa solution 
en Scratchpad''\\
``A combinatorial problem in Hamming Graphs and its solution in
Scratchpad''\\
Rapports de recherche 1586, Institut National de Recherche en
Informatique et en Automatique, Le Chesnay, France, January 1992, 12pp

\bibitem[Caprotti]{CCR} Caprotti, Olga; Cohen, Arjeh M.; Riem, Manfred\\
``Java Phrasebooks for Computer Algebra and Automated Deduction''\\
\verb|www.sigsam.org/bulletin/articles/132/paper8.pdf|

\bibitem[Capriotti 99]{CC99} Capriotti, O.; Carlisle, D.\\
``OpenMath and MathML: Semantic Mark Up for Mathematics''\\
\verb|www.acm.org/crossroads/xrds6-2/openmath.html|

\bibitem[Capriotti (a)]{CCCS} Capriotti, Olga; Cohen, Arjeh M.; 
Cuypers, Hans;  Sterk, Hans\\
``OpenMath Technology for Interactive Mathematical Documents''\\
\verb|www.win.tue.nl/~hansc/lisbon.pdf|

\bibitem[Carpent]{CCxx} Carpent, Quentin; Conil, Christophe\\
``Utilisation de logiciels libres pour la r\'ealisation de TP MT26'' (2004)
%\verb|axiom-developer.org/axiom-website/papers/CCxx.pdf|

\bibitem[Chudnovsky 85]{Chu85} Chudnovsky, D.V; Chudnovsky, G.V.\\
``Elliptic Curve Calculations in Scratchpad II''\\
Scratchpad II Newsletter 1 (1) (1985)

\bibitem[Chudnovsky 87]{Chu87} Chudnovsky, D.V; Chudnovsky, G.V.\\
``New Analytic Methods of Polynomial Root Finding''\\
in [Wit87], p2

\bibitem[Chudnovsky 89]{Chu89}Chudnovsky, D.V. and Chudnovsky, G.V.\\
``The computation of classical constants''\\
Proc. Natl. Acad. Sci. USA Vol 86 pp8178-8182, Nov 1989

\bibitem[Chudnovsky 86]{CJ86} Chudnovsky, David; Jenks, Richard\\
``Computers in Mathematics''\\
International Conference on Computers and Mathematics July29-Aug1 1986
Marcel Dekker, Inc (1990) ISBN 0-8247-8341-7

\bibitem[Cohen]{CCBS} Cohen, Arjeh; Cuypers, M.;  Barreiro, Hans; 
Reinaldo, Ernesto; Sterk, Hans\\
``Interactive Mathematical Documents on the Web''\\
Springer 9783540002576-c1.pdf

\bibitem[Cohen 91]{CC91} Cohen, G.; Charpin, P.; (ed)\\ 
EUROCODE '90 International Symposium on
Coding Theory and Applications Proceedings. Springer-Verlag, Berlin, Germany
/ Heidelberg, Germany / London, UK / etc., 1991 ISBN 0-387-54303-1 
(New York), 3-540-54303-1 (Berlin), LCCN QA268.E95 1990

\bibitem[Conrad (a)]{CFMPxxa} Conrad, Marc; French, Tim; Maple, Carsten; 
Pott, Sandra\\
``Approaching Inheritance from a Natural Mathematical Perspective and from
a Java Driven Viewpoint: a Comparative Review''
%\verb|axiom-developer.org/axiom-website/papers/CFMPxxa.pdf|

\begin{adjustwidth}{2.5em}{0pt}
It is well-known that few object-oriented programming languages allow
objects to change their nature at run-time. There have been a number
of reasons presented for this, but it appears that there is a real
need for matters to change. In this paper we discuss the need for
object-oriented programming languages to reflect the dynamic nature of
problems, particularly those arising in a mathematical context. It is
from this context that we present a framework that realistically
represents the dynamic and evolving characteristic of problems and
algorithms.
\end{adjustwidth}

\bibitem[Conrad (b)]{CFMPxxb} Conrad, Marc; French, Tim; Maple, Carsten; 
Pott, Sandra\\
``Mathematical Use Cases lead naturally to non-standard Inheritance
Relationships: How to make them accessible in a mainstream language?''
%\verb|axiom-developer.org/axiom-website/papers/CFMPxxb.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Conceptually there is a strong correspondence between Mathematical
Reasoning and Object-Oriented techniques. We investigate how the ideas
of Method Renaming, Dynamic Inheritance and Interclassing can be used
to strengthen this relationship. A discussion is initiated concerning
the feasibility of each of these features.
\end{adjustwidth}

\bibitem[Cuypers]{CHK} Cuypers, Hans; Hendriks, Maxim; Knopper, Jan Willem\\
``Interactive Geometry inside MathDox''\\
\verb|www.win.tue.nl/~hansc/MathDox_and_InterGeo_paper.pdf|

\subsection{D} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Dalmas]{DGW} Dalmas, St\'ephane, Ga\"etano, Marc, and Watt, Stephen\\
``An OpenMath 1.0 Implementation''\\
\verb|citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.116.4401.pdf|

\bibitem[Dalmas 92]{Dal92} Dalmas, S.\\
``A polymorphic functional language applied to symbolic computation''\\
In Wang [Wan92] pp369-375 ISBN 0-89791-489-9 (soft cover) 0-89791-490-2 
(hard cover) LCCN QA76.95.I59 1992

\bibitem[Daly 88]{Dal88} Daly, Timothy\\
``Axiom in an Educational Setting''\\
Axiom course slide deck January 1988

\bibitem[Daly 02]{Dal02} Daly, Timothy\\
``Axiom as open source''\\
SIGSAM Bulletin (ACM Special Interest Group
on Symbolic and Algebraic Manipulation) 36(1) pp28-?? March 2002
CODEN SIGSBZ ISSN 0163-5824

\bibitem[Daly 03]{Dal03} Daly, Timothy\\
``The Axiom Wiki Website''\\
\verb|axiom.axiom-developer.org|

\bibitem[Daly 06]{Dal06} Daly, Timothy\\
``Axiom Volume 1: Tutorial''\\
Lulu, Inc. 860 Aviation Parkway,
Suite 300, Morrisville, NC 27560 USA, 2006 ISBN 141166597X 287pp\\
\verb|www.lulu.com/content/190827|

\bibitem[Daly 09]{Dal09} Daly, Timothy\\
``The Axiom Literate Documentation''\\
\verb|axiom-developer.org/axiom-website/documentation.html|

\bibitem[Daly 13]{Dal13} Daly, Timothy
``Literate Programming in the Large'' 
April 8-9, 2013 Portland Oregon\\
\verb|conf.writethedocs.org|\\
\verb|daly.axiom-developer.org|\\
\verb|www.youtube.com/watch?v=Av0PQDVTP4A|

\bibitem[Davenport 79a]{Dav79a} Davenport, J.H.\\
``What can SCRATCHPAD/370 do?''\\
VM/370 SPAD.SCRIPTS August 24, 1979 SPAD.SCRIPT

\bibitem[Davenport 80]{Dav80} Davenport, J.H.; Jenks, R.D.\\
``MODLISP -- an Introduction''\\
Proc LISP80, 1980, and IBM RC8357 Oct 1980

\bibitem[Davenport 84]{DGJ84} Davenport, J.; Gianni, P.; Jenks, R.;
Miller, V.; Morrison, S.; Rothstein, M.; Sundaresan, C.; Sutor, R.; 
Trager, B.\\
``Scratchpad''\\
Mathematical Sciences Department, IBM Thomas Watson Research Center 1984

\bibitem[Davenport 84a]{Dav84a} Davenport, James H.\\
``A New Algebra System''
%\verb|axiom-developer.org/axiom-website/papers/Dav84a.pdf|

\bibitem[Davenport 85]{Dav85} Davenport, James H.\\
``The LISP/VM Foundation of Scratchpad II''\\
The Scratchpad II Newsletter, Volume 1, Number 1, September 1, 1985
IBM Corporation, Yorktown Heights, NY

\bibitem[Davenport 88]{DST88} Davenport, J.H.; Siret, Y.; Tournier, E.\\
Computer Algebra: Systems and Algorithms for Algebraic Computation. \\
Academic Press, New York, NY, USA, 1988, ISBN 0-12-204232-9\\
\verb|staff.bath.ac.uk/masjhd/masternew.pdf|
%\verb|axiom-developer.org/axiom-website/papers/DST88.pdf|

\bibitem[Davenport 14]{Dav14} Davenport, James H.\\
``Computer Algebra textbook''\\
\verb|staff.bath.ac.uk/masjhd/JHD-CA.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Dav14.pdf|

\bibitem[Davenport 89]{Dav89} Davenport, J.H. (ed)\\
EUROCAL '87 European Conference on Computer Algebra Proceedings 
Springer-Verlag, Berlin, Germany / Heidelberg, Germany / London,
UK / etc., 1989 ISBN 3-540-51517-8 LCCN QA155.7.E4E86 1987

\bibitem[Davenport 90]{DT90} Davenport, J. H.; Trager, B. M.\\
``Scratchpad's view of algebra I: Basic commutative algebra''\\
In Miola [Mio90], pp40-54. ISBN 0-387-52531-9 (New York),
3-540-52531-9 (Berlin). LCCN QA76.9.S88I576 1990 also in AXIOM Technical
Report, ATR/1, NAG Ltd., Oxford, 1992

\bibitem[Davenport 91]{DGT91} Davenport, J. H.;, Gianni, P.; Trager, B. M.\\
``Scratchpad's view of algebra II: A categorical view of factorization''\\
In Watt [Wat91], pp32-38 ISBN 0-89791-437-6 LCCN QA76.95.I59 
also in: AXIOM Technical Report, ATR/2, NAG Ltd., Oxford, 1992

\bibitem[Davenport 92]{DGT92} Davenport, J. H.;, Gianni, P.; Trager, B. M.\\
``Scratchpad's view of algebra II: A categorical view of factorization''\\
Technical Report TR4/92 (ATR/2) (NP2491), Numerical Algorithms Group, Inc., 
Downer's Grove, IL, USA and Oxford, UK, December 1992\\
\verb|www.nag.co.uk/doc/TechRep/axiomtr.html|

\bibitem[Davenport 92a]{Dav92a} Davenport, J. H.\\
``The AXIOM system''\\
AXIOM Technical Report TR5/92 (ATR/3)
(NP2492) Numerical Algorithms Group, Inc., Downer's Grove, IL, USA and
Oxford, UK, December 1992 \\
\verb|www.nag.co.uk/doc/TechRep/axiomtr.html|

\bibitem[Davenport 92b]{Dav92b} Davenport, J. H.\\
``How does one program in the AXIOM system?''\\
AXIOM Technical Report TR6/92 (ATR/4)(NP2493) 
Numerical Algorithms Group, Inc., Downer's
Grove, IL, USA and Oxford, UK December 1992\\
\verb|www.nag.co.uk/doc/TechRep/axiomtr.html|
%\verb|axiom-developer.org/axiom-website/papers/Dav92b.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Axiom is a computer algebra system superficially like many others, but
fundamentally different in its internal construction, and therefore in
the possibilities it offers to its users and programmers. In these
lecture notes, we will explain, by example, the methodology that the
author uses for programming substantial bits of mathematics in Axiom.
\end{adjustwidth}

\bibitem[Davenport 92c]{DT92} Davenport, J. H.; Trager, B. M.\\
``Scratchpad's view of algebra I: Basic commutative algebra''\\
DISCO 90 Capri, Italy April 1990 ISBN 0-387-52531-9 pp40-54\\
Technical Report TR3/92 (ATR/1)(NP2490), Numerical
Algorithms Group, Inc., Downer's Grove, IL, USA and Oxford, UK, 
December 1992. \\
\verb|www.nag.co.uk/doc/TechRep/axiomtr.html|

\bibitem[Davenport 93]{Dav93} Davenport, J. H.\\
``Primality testing revisited''\\
Technical Report TR2/93 (ATR/6)(NP2556) Numerical Algorithms Group, Inc., 
Downer's Grove, IL, USA and Oxford, UK, August 1993\\
\verb|www.nag.co.uk/doc/TechRep/axiomtr.html|

\bibitem[Davenport (a)]{DFxx} Davenport, James; Faure, Christ\'ele\\
``The Unknown in Computer Algebra''
%\verb|axiom-developer.org/axiom-website/papers/DFxx.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Computer algebra systems have to deal with the confusion between
``programming variables'' and ``mathematical symbols''. We claim that
they should also deal with ``unknowns'', i.e. elements whose values
are unknown, but whose type is known. For examples $x^p \ne x$ if $x$
is a symbol, but $x^p = x$ if $x \in GF(p)$. We show how we have
extended Axiom to deal with this concept.
\end{adjustwidth}

\bibitem[Davenport 00]{Dav00} Davenport, James\\
``13th OpenMath Meeting''
James H. Davenport
``A New Algebra System''
May 1984\\
\verb|xml.coverpages.org/openmath13.html|
%\verb|axiom-developer.org/axiom-website/papers/Dav00.pdf|

\bibitem[Davenport 12]{Dav12} Davenport, J.H.\\
``Computer Algebra''\\
\verb|staff.bath.ac.uk/masjhd/JHD-CA.pdf|\\

\bibitem[Davenport (b)]{DSTxx} Davenport, J. H.; Siret; Tournier\\
``Computer Algebra''  \hfill\\
\verb|staff.bath.ac.uk/masjhd/masternew.pdf|

\bibitem[Dewar 94]{Dew94} Dewar, M. C.\\
``Manipulating Fortran Code in AXIOM and the AXIOM-NAG Link''\\
Proceedings of the Workshop on Symbolic and Numeric Computing, ed by Apiola, H.
and Laine, M. and Valkeila, E. pp1-12 University of Helsinki, Finland (1994)

\bibitem[Dewar]{Dew} Dewar, Mike\\
``OpenMath: An Overview''\\
\verb|www.sigsam.org/bulletin/articles/132/paper1.pdf|

\bibitem[Dicrescenzo 89]{DD89} Dicrescenzo, C.; Duval, D.\\
``Algebraic extensions and algebraic closure in Scratchpad II''\\
In Gianni [Gia89], pp440-446 ISBN 3-540-51084-2
LCCN QA76.95.I57 1998 Conference held jointly with AAECC-6

\bibitem[Dingle 94]{Din94} Dingle, Adam; Fateman, Richard\\
``Branch Cuts in Computer Algebra''\\
1994 ISSAC, Oxford (UK), July 1994\\
\verb|www.cs.berkeley.edu/~fateman/papers/ding.ps|
%\verb|axiom-developer.org/axiom-website/papers/Din94.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Many standard functions, such as the logarithms and square root
functions, cannot be defined continuously on the complex
plane. Mistaken assumptions about the properties of these functions
lead computer algebra systems into various conundrums. We discuss how
they can manipulate such functions in a useful fashion.
\end{adjustwidth}

\bibitem[DLMF]{DLMF}.\\
``Digital Library of Mathematical Functions''\\
\verb|dlmf.nist.gov/software/#T1|

\bibitem[Dooley 99]{Doo99} Dooley, Sam editor.\\
ISSAC 99: July 29-31, 1999, Simon Fraser University,
Vancouver, BC, Canada: proceedings of the 1999 International Symposium on
Symbolic and Algebraic Computation. ACM Press, New York, NY 10036, USA, 1999.
ISBN 1-58113-073-2 LCCN QA76.95.I57 1999

\bibitem[Dos Reis 12]{DR12} Dos Reis, Gabriel\\
``A System for Axiomatic Programming''\\
Proc. Conf. on Intelligent Computer Mathematics, Springer (2012)\\
\verb|www.axiomatics.org/~gdr/liz/cicm-2012.pdf|
%\verb|axiom-developer.org/axiom-website/papers/DR12.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We present the design and implementation of a system for axiomatic
programming, and its application to mathematical software
construction. Key novelties include a direct support for user-defined
axioms establishing local equality between types, and overload
resolution based on equational theories and user-defined local
axioms. We illustrate uses of axioms, and their organization into
concepts, in structured generic programming as practiced in
computational mathematical systems.
\end{adjustwidth}

\bibitem[Doye 97]{Doy97} Doye, Nicolas James\\
``Order Sorted Computer Algebra and Coercions''\\
Ph.D. Thesis University of Bath 1997
%\verb|axiom-developer.org/axiom-website/papers/Doy97.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Computer algebra systems are large collections of routines for solving
mathematical problems algorithmically, efficiently and above all,
symbolically. The more advanced and rigorous computer algebra systems
(for example, Axiom) use the concept of strong types based on
order-sorted algebra and category theory to ensure that operations are
only applied to expressions when they ``make sense''.

In cases where Axiom uses notions which are not covered by current
mathematics we shall present new mathematics which will allow us to
prove that all such cases are reducible to cases covered by the
current theory. On the other hand, we shall also point out all the
cases where Axiom deviates undesirably from the mathematical ideal.
Furthermore we shall propose solutions to these deviations.

Strongly typed systems (especially of mathematics) become unusable
unless the system can change the type in a way a user expects. We wish
any change expected by a user to be automated, ``natural'', and
unique. ``Coercions'' are normally viewed as ``natural type changing
maps''. This thesis shall rigorously define the word ``coercion'' in
the context of computer algebra systems.

We shall list some assumptions so that we may prove new results so
that all coercions are unique. This concept is called ``coherence''.

We shall give an algorithm for automatically creating all coercions in
type system which adheres to a set of assumptions. We shall prove that
this is an algorithm and that it always returns a coercion when one
exists. Finally, we present a demonstration implementation of this
automated coerion algorithm in Axiom.
\end{adjustwidth}

\bibitem[Doye 99]{Doy99} Doye, Nicolas J.\\
``Automated coercion for Axiom''\\
In Dooley [Doo99], pp229-235
ISBN 1-58113-073-2 LCCN QA76.95.I57 1999 ACM Press\\
\verb|www.acm.org/pubs/contents/proceedings/issac/309831|

\bibitem[Dominguez 01]{DR01} Dom\'inguez, C\'esar; Rubio, Julio\\
``Modeling Inheritance as Coercion in a Symbolic Computation System''
ISSAC 2001 ACM  1-58113-417-7/01/0007
%\verb|axiom-developer.org/axiom-website/papers/DR01.pdf|

\begin{adjustwidth}{2.5em}{0pt}
In this paper the analysis of the data structures used in a symbolic
computation system, called Kenzo, is undertaken. We deal with the
specification of the inheritance relationship since Kenzo is an
object-oriented system, written in CLOS, the Common Lisp Object
System. We focus on a particular case, namely the relationship between
simplicial sets and chain complexes, showing how the order-sorted
algebraic specifications formalisms can be adapted, through the
``inheritance as coercion'' metaphor, in order to model this Kenzo
fragment.
\end{adjustwidth}

\bibitem[Dunstan 97]{Dun97} Dunstan, Martin; Ursula, Martin; Linton, Steve\\
``Embedded Verification Techniques for Computer Algebra Systems''\\
Grant citation GR/L48256 Nov 1, 1997-Feb 28, 2001\\
\verb|www.cs.st-andrews.ac.uk/research/output/detail?output=ML97.php|

\bibitem[Dunstan 01]{DGKM01} Dunstan, Martin; Gottliebsen, Hanne; 
Kelsey, Tom; Martin, Ursula\\
``Computer Algebra meets Automated Theorem Proving: A Maple-PVS Interface''
TPHOLS 2001, Edinburgh\\
\verb|www.cs-st-andrews.ac.uk/~tom/pub/tphols.ps|\\
\verb|www.cs-st-andrews.ac.uk/~tom/pub/dunstanetal.ps|

\bibitem[Duval 92]{DJ92} Duval D.; Jung, F.\\
``Examples of problem solving using computer algebra''\\
IFIP Transactions. A. Computer Science and Technology, A-2 pp133-141, 143 1992
CODEN ITATEC. ISSN 0926-5473

\bibitem[Duval 94]{Duv94} Duval, Dominique\\
``Symbolic or algebraic computation?''\\
Madrid Spain, NAG conference (private copy of paper)

\bibitem[Duval 95]{Du95} Duval, D.\\
``Evaluation dynamique et cl\^oture alg\'ebrique en Axiom''.\\
Journal of Pure and Applied Algebra, no99, 1995, pp. 267--295.

\subsection{E} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Erocal 10]{ES10} Er\"ocal, Burcin; Stein, William\\
``The Sage Project''\\
\verb|wstein.org/papers/icms/icms_2010.pdf|

\subsection{F} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Fateman 90]{Fat90} Fateman, R. J.\\
``Advances and trends in the design and construction of algebraic 
manipulation systems''\\
In Watanabe and Nagata [WN90], pp60-67 ISBN 0-89791-401-5 LCCN QA76.95.I57 1990

\bibitem[Fateman 05]{Fat05} Fateman, R. J.\\
``An incremental approach to building a mathematical expert out of software''\\
4/19/2005\hfill\\
\verb|www.cs.berkeley.edu/~fateman/papers/axiom.pdf|

\bibitem[Fateman 06]{Fat06} Fateman, R. J.\\
``Building Algebra Systems by Overloading Lisp''\\
\verb|www.cs.berkeley.edu/~fateman/generic/overload-small.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Fat06.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Some of the earliest computer algebra systems (CAS) looked like
overloaded languages of the same era. FORMAC, PL/I FORMAC, Formula
Algol, and others each took advantage of a pre-existing language base
and expanded the notion of a numeric value to include mathematical
expressions. Much more recently, perhaps encouraged by the growth in
popularity of C++, we have seen a renewal of the use of overloading to
implement a CAS.

This paper makes three points. 1. It is easy to do overloading in
Common Lisp, and show how to do it in detail. 2. Overloading per se
provides an easy solution to some simple programming problems. We show
how it can be used for a ``demonstration'' CAS. Other simple and
plausible overloadings interact nicely with this basic system. 3. Not
all goes so smoothly: we can view overloading as a case study and
perhaps an object lesson since it fails to solve a number of
fairly-well articulated and difficult design issues in CAS for which
other approaches are preferable.
\end{adjustwidth}

\bibitem[Faure 00a]{FDN00a} Faure, Christ\'ele; Davenport, James\\
``Parameters in Computer Algebra''

\bibitem[Faure 00b]{FDN00b} Faure, Christ\'ele; Davenport, James; 
Naciri, Hanane\\
``Multi-values Computer Algebra''\\
ISSN 0249-6399 Institut National De Recherche en Informatique et en
Automatique Sept. 2000 No. 4001

\bibitem[Fitch 84]{Fit84} Fitch, J. P. (ed)\\
EUROSAM '84: International Symposium on Symbolic and
Algebraic Computation, Cambridge, England, July 9-11, 1984, volume 174 of
Lecture Notes in Computer Science. Springer-Verlag, Berlin, Germany /
Heildelberg, Germany / London, UK / etc., 1984 ISBN 0-387-13350-X
LCCN QA155.7.E4 I57 1984

\bibitem[Fitch 93]{Fit93} Fitch, J. (ed)\\
Design and Implementation of Symbolic Computation Systems
International Symposium DISCO '92 Proceedings. Springer-Verlag, Berlin, 
Germany / Heildelberg, Germany / London, UK / etc., 1993. ISBN 0-387-57272-4
(New York), 3-540-57272-4 (Berlin). LCCN QA76.9.S88I576 1992

\bibitem[Fogus 11]{Fog11} Fogus, Michael\\
``UnConj''\\
\verb|clojure.com/blog/2011/11/22/unconj.html|

\bibitem[Fortenbacher 90]{For90} Fortenbacher, A.\\
``Efficient type inference and coercion in computer algebra''\\
In Miola [Mio90], pp56-60. ISBN 0-387-52531-9 (New York), 3-540-52531-9
(Berlin). LCCN QA76.9.S88I576 1990

\bibitem[Fouche 90]{Fou90} Fouche, Francois\\
``Une implantation de l'algorithme de Kovacic en Scratchpad''\\
Technical report, Institut de Recherche Math{\'{e}}matique Avanc{\'{e}}e''
Strasbourg, France, 1990 31pp

\bibitem[FSF 14]{FSF14} FSF\\
``Free Software Directory''\\
\verb|directory.fsf.org/wiki/Axiom|

\bibitem[Frisco ]{Fris} Frisco\\
``Objectives and Results''\\
\verb|www.nag.co.uk/projects/frisco/frisco/node3.htm|

\subsection{G} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Gebauer 86]{GM86} Gebauer, R{\"u}diger; M{\"o}ller, H. Michael\\
``Buchberger's algorithm and staggered linear bases''\\
In Bruce W. Char, editor. Proceedings of the 1986
Symposium on Symbolic and Algebraic Computation: SYMSAC '86, July 21-23, 1986
Waterloo, Ontario, pp218-221 ACM Press, New York, NY 10036, USA, 1986.
ISBN 0-89791-199-7 LCCN QA155.7.E4 A281 1986 ACM order number 505860

\bibitem[Gebauer 88]{GM88} Gebauer, R.; M{\"o}ller, H. M.\\
``On an installation of Buchberger's algorithm''\\
Journal of Symbolic Computation, 6(2-3) pp275-286 1988
CODEN JSYCEH ISSN 0747-7171

\bibitem[Geddes 92]{GCL92} Geddes, Keith; Czapor, O.; Stephen R.; 
Labahn, George\\
``Algorithms For Computer Algebra''\\
Kluwer Academic Publishers ISBN 0-7923-9259-0 (Sept 1992)

\bibitem[Gianni 87]{Gia87} Gianni, Patrizia\\
``Primary Decomposition of Ideals''\\
in [Wit87], pp12-13

\bibitem[Gianni 89a]{Gia89} Gianni, P. (Patrizia) (ed)\\ 
Symbolic and Algebraic Computation. 
International Symposium ISSAC '88, Rome, Italy, July 4-8, 1988. Proceedings,
volume 358 of Lecture Notes in Computer Science. Springer-Verlag, Berlin, 
Germany / Heildelberg, Germany / London, UK / etc., 1989. ISBN 3-540-51084-2
LCCN QA76.95.I57 1988 Conference held jointly with AAECC-6

\bibitem[Gianni 89b]{GM89} Gianni, P.; Mora, T.\\
``Algebraic solution of systems of polynomial equations using 
Gr{\"o}bner bases.''\\
In Huguet and Poli [HP89], pp247-257 ISBN 3-540-51082-6 LCCN QA268.A35 1987

\bibitem[Gil 92]{Gil92} Gil, I.\\ 
``Computation of the Jordan canonical form of a square matrix (using
the Axiom programming language)''\\
In Wang [Wan92], pp138-145. 
ISBN 0-89791-489-9 (soft cover), 0-89791-490-2 (hard cover)
LCCN QA76.95.I59 1992

\bibitem[Gomez-Diaz 92]{Gom92} G\'omez-D'iaz, Teresa\\
``Quelques applications de l`\'evaluation dynamique''
Ph.D. Thesis L'Universite De Limoges March 1992

\bibitem[Gomez-Diaz 93]{Gom93} G\'omez-D\'iaz, Teresa\\
``Examples of using Dynamic Constructible Closure''
IMACS Symposium SC-1993

\bibitem[Goodwin 91]{GBL91} Goodwin, B. M.; Buonopane, R. A.; Lee, A.\\
``Using MathCAD in teaching material and energy balance concepts''\\
In Anonymous [Ano91], pp345-349 (vol. 1) 2 vols.

\bibitem[Golden 4]{GH84} Golden, V. Ellen; Hussain, M. A. (eds)\\
Proceedings of the 1984 MACSYMA Users' Conference: 
Schenectady, New York, July 23-25, 1984, General Electric,
Schenectady, NY, USA, 1984

\bibitem[Gonnet 96]{Gon96} Gonnet, Gaston H.\\
``Official verion 1.0 of the Meta Content Dictionary''\\
\verb|www.inf.ethz.ch/personal/gonnet/ContDict/Meta|

\bibitem[Goodloe 93]{GL93} Goodloe, A.; Loustaunau, P.\\
``An abstract data type development of graded rings'' 
In Fitch [Fit93], pp193-202. ISBN 0-387-57272-4 (New York),
3-540-57272-4 (Berlin). LCCN QA76.9.S88I576 1992

\bibitem[Gottliebsen 05]{GKM05} Gottliebsen, Hanne; Kelsey, Tom; 
Martin, Ursula\\
``Hidden verification for computational mathematics''\\
Journal of Symbolic Computation, Vol39, Num 5, 2005

\bibitem[Grabe 98]{Gra98} Gr\"abe, Hans-Gert\\
``About the Polynomial System Solve Facility of Axiom, Macyma, Maple
Mathematica, MuPAD, and Reduce''
%\verb|axiom-developer.org/axiom-website/papers/Gra98.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We report on some experiences with the general purpose Computer
Algebra Systems (CAS) Axiom, Macsyma, Maple, Mathematica, MuPAD, and
Reduce solving systems of polynomial equations and the way they
present their solutions. This snapshot (taken in the spring of 1996)
of the current power of the different systems in a special area
concentrates on both CPU-times and the quality of the output.
\end{adjustwidth}

\bibitem[Grabmeier 91]{GHK91} Grabmeier, J.; Huber, K.; Krieger, U.\\
``Das ComputeralgebraSystem AXIOM bei kryptologischen und 
verkehrstheoretischen Untersuchungen des
Forschunginstituts der Deutschen Bundespost TELEKOM''\\ 
Technischer Report TR 75.91.20, IBM Wissenschaftliches 
Zentrum, Heidelberg, Germany, 1991

\bibitem[Grabmeier 92]{GS92} Grabmeier, J.; Scheerhorn, A.\\
``Finite fields in Axiom''\\
AXIOM Technical Report TR7/92 (ATR/5)(NP2522), 
Numerical Algorithms Group, Inc., Downer's
Grove, IL, USA and Oxford, UK, 1992\\
\verb|www.nag.co.uk/doc/TechRep/axiomtr.html|\\
and Technical Report, IBM Heidelberg Scientific Center, 1992

\bibitem[Grabmeier 03]{GKW03} Grabmeier, Johannes; Kaltofen, Erich; 
Weispfenning, Volker (eds)\\
Computer algebra handbook: foundations, applications, systems.
Springer-Verlag, Berlin, Germany / Heildelberg, Germany / London, UK / etc., 
2003. ISBN 3-540-65466-6 637pp Includes CDROM\\
\verb|www.springer.com/sgw/cda/frontpage/|\\
\verb|0,11855,1-102-22-1477871-0,00.html|

\bibitem[Griesmer 71]{GJ71} Griesmer, J. H.; Jenks, R.D.\\
``SCRATCHPAD/1 -- an interactive facility for symbolic mathematics''\\
In Petrick [Pet71], pp42-58. LCCN QA76.5.S94 1971\\
\verb|delivery.acm.org/10.1145/810000/806266/p42-griesmer.pdf|\\
SYMSAC'71 Proc. second ACM Symposium on Symbolic and Algebraic
Manipulation pp45-48
%\verb|axiom-developer.org/axiom-website/papers/GJ71.pdf|

\begin{adjustwidth}{2.5em}{0pt}
The SCRATCHPAD/1 system is designed to provide an interactive symbolic
computational facility for the mathematician user. The system features
a user language designed to capture the style and succinctness of
mathematical notation, together with a facility for conveniently
introducing new notations into the language. A comprehensive system
library incorporates symbolic capabilities provided by such systems as
SIN, MATHLAB, and REDUCE.
\end{adjustwidth}

\bibitem[Griesmer 72a]{GJ72a} Griesmer, J.; Jenks, R.\\
``Experience with an online symbolic math system SCRATCHPAD''\\
in Online'72 [Onl72] ISBN 0-903796-02-3 LCCN QA76.55.O54 1972 Two volumes

\bibitem[Griesmer 72b]{GJ72b} Griesmer, James H.; Jenks, Richard D.\\
``SCRATCHPAD: A capsule view''\\
ACM SIGPLAN Notices, 7(10) pp93-102, 1972. Proceedings of the symposium
on Two-dimensional man-machine communications. Mark B. Wells and 
James B. Morris (eds.).

\bibitem[Griesmer 75]{GJY75} Griesmer, J.H.; Jenks, R.D.; Yun, D.Y.Y\\
``SCRATCHPAD User's Manual''\\
IBM Research Publication RA70 June 1975

\bibitem[Griesmer 76]{GJY76} Griesmer, J.H.; Jenks, R.D.; Yun, D.Y.Y\\
``A Set of SCRATCHPAD Examples''\\
April 1976 (private copy)

\bibitem[Gruntz 94]{GM94} Gruntz, D.; Monagan, M.\\
``Introduction to Gauss''\\
SIGSAM Bulletin (ACM Special Interest Group on Symbolic and Algebraic 
Manipulation), 28(3) pp3-19 August 1994 CODEN SIGSBZ ISSN 0163-5824

\bibitem[Gruntz 96]{Gru96} Gruntz, Dominik\\
``On Computing Limits in a Symbolic Manipulation System''\\
Thesis, Swiss Federal Institute of Technology Z\"urich 1996
Diss. ETH No. 11432\\
\verb|www.cybertester.com/data/gruntz.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Gru96.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This thesis presents an algorithm for computing (one-sided) limits
within a symbolic manipulation system. Computing limtis is an
important facility, as limits are used both by other functions such as
the definite integrator and to get directly some qualitative
information about a given function.

The algorithm we present is very compact, easy to understand and easy
to implement. It overcomes the cancellation problem other algorithms
suffer from. These goals were achieved using a uniform method, namely
by expanding the whole function into a series in terms of its most
rapidly varying subexpression instead of a recursive bottom up
expansion of the function. In the latter approach exact error terms
have to be kept with each approximation in order to resolve the
cancellation problem, and this may lead to an intermediate expression
swell. Our algorithm avoids this problem and is thus suited to be
implemented in a symbolic manipulation system.
\end{adjustwidth}

\subsection{H} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Hassner 87]{HBW87} Hassner, Martin; Burge,  William H.;
Watt,  Stephen M.\\
``Construction of Algebraic Error Control Codes (ECC) on the Elliptic
Riemann Surface''\\
in [Wit87], pp5-8

\bibitem[Heck 01]{Hec01} Heck, A.\\
``Variables in computer algebra, mathematics and science''\\
The International Journal of Computer Algebra in Mathematics Education
Vol. 8 No. 3 pp195-210 (2001)

\bibitem[Huguet 89]{HP89} Huguet, L.; Poli, A.  (eds).\\
Applied Algebra, Algebraic Algorithms and Error-Correcting Codes. 
5th International Conference AAECC-5 Proceedings.
Springer-Verlag, Berlin, Germany / Heildelberg, Germany / London, UK / etc., 
1989. ISBN 3-540-51082-6. LCCN QA268.A35 1987

\subsection{J} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Jacob 93]{JOS93} Jacob, G.; Oussous, N. E.; Steinberg, S. (eds)\\
Proceedings SC 93
International IMACS Symposium on Symbolic Computation. New Trends and
Developments. LIFL Univ. Lille, Lille France, 1993

\bibitem[Janssen 88]{Jan88} Jan{\ss}en, R. (ed)\\
Trends in Computer Algebra, International Symposium
Bad Neuenahr, May 19-21, 1987, Proceedings, volume 296 of Lecture Notes in
Computer Science. 
Springer-Verlag, Berlin, Germany / Heildelberg, Germany / London, UK / etc., 
1988 ISBN 3-540-18928-9, 0-387-18928-9 LCCN QA155.7.E4T74 1988

\bibitem[Jenks 69]{Jen69} Jenks, R. D.\\
``META/LISP: An interactive translator writing system''\\
Research Report International Business Machines, Inc., Thomas J.
Watson Research Center, Yorktown Heights, NY, USA, 1969 RC2968 July 1970

\bibitem[Jenks 71]{Jen71} Jenks, R. D.\\
``META/PLUS: The syntax extension facility for SCRATCHPAD''\\
Research Report RC 3259, International Business Machines, Inc., Thomas J.
Watson Research Center, Yorktown Heights, NY, USA, 1971

\bibitem[Jenks 74]{Jen74} Jenks, R. D.\\ 
``The SCRATCHPAD language''\\ 
ACM SIGPLAN Notices, 9(4) pp101-111 1974 CODEN SINODQ. ISSN 0362-1340

\bibitem[Jen76]{Jen76} Jenks, Richard D.\\
``A pattern compiler''\\
In Richard D. Jenks, editor,
SYMSAC '76: proceedings of the 1976 ACM Symposium on Symbolic and Algebraic
Computation, August 10-12, 1976, Yorktown Heights, New York, pp60-65,
ACM Press, New York, NY 10036, USA, 1976. LCCN QA155.7.EA .A15 1976
QA9.58.A11 1976

\bibitem[Jenks 79]{Jen79} Jenks, R. D.\\
``MODLISP: An Introduction''\\
Proc EUROSAM 79, pp466-480, 1979 and IBMRC8073 Jan 1980

\bibitem[Jenks 81]{JT81} Jenks, R.D.; Trager, B.M.\\
``A Language for Computational Algebra''\\
Proceedings of SYMSAC81, Symposium on Symbolic and Algebraic Manipulation,
Snowbird, Utah August, 1981

\bibitem[Jenks 81a]{JT81a} Jenks, R.D.; Trager, B.M.\\
``A Language for Computational Algebra''\\
SIGPLAN Notices, New York: Association for Computing Machiner, Nov 1981

\bibitem[Jenks 81b]{JT81b} Jenks, R.D.; Trager, B.M.\\
``A Language for Computational Algebra''\\
IBM Research Report RC8930 IBM Yorktown Heights, NY

\bibitem[Jenks 84a]{Jen84a} Jenks, Richard D.\\
``The new SCRATCHPAD language and system for computer algebra''\\
In Golden and Hussain [GH84], pp409-??

\bibitem[Jenks 84b]{Jen84b} Jenks, Richard D.\\
``A primer: 11 keys to New Scratchpad''\\
In Fitch [Fit84], pp123-147. ISBN 0-387-13350-X LCCN QA155.7.E4 I57 1984

\bibitem[Jenks 86]{JWS86} Jenks, Richard D.; Sutor, Robert S.;
Watt, Stephen M.\\
``Scratchpad II: An Abstract Datatype System for Mathematical Computation''\\
Research Report RC 12327 (\#55257), Iinternational Business Machines, Inc., \\
Thomas J. Watson Research Center, Yorktown Heights, NY, USA, 1986 23pp\\
\verb|www.csd.uwo.ca/~watt/pub/reprints/1987-ima-spadadt.pdf|
%\verb|axiom-developer.org/axiom-website/papers/JWS86.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Scratchpad II is an abstract datatype language and system that is
under development in the Computer Algebra Group, Mathematical Sciences
Department, at the IBM Thomas J. Watson Research Center. Some features
of APL that made computation particularly elegant have been borrowed.
Many different kinds of computational objects and data structures are
provided. Facilities for computation include symbolic integration,
differentiation, factorization, solution of equations and linear
algebra.  Code economy and modularity is achieved by having
polymorphic packages of functions that may create datatypes. The use
of categories makes these facilities as general as possible.
\end{adjustwidth}

\bibitem[Jenks 87]{JWS87} Jenks, Richard D.; Sutor, Robert S.; 
Watt, Stephen M. \\
``Scratchpad II: an Abstract Datatype System for Mathematical Computation'' \\
Proceedings Trends in Computer Algebra, Bad Neuenahr, LNCS 296,
Springer Verlag, (1987)

\bibitem[Jenks 88]{JSW88} Jenks, R. D.;  Sutor, R. S.; Watt, S. M.\\
``Scratchpad II: An abstract datatype system for mathematical computation''\\
In Jan{\ss}en [Jan88],
pp12-?? ISBN 3-540-18928-9, 0-387-18928-9 LCCN QA155.7.E4T74 1988

\bibitem[Jenks 88a]{Jen88a} Jenks, R. D.\\
``A Guide to Programming in BOOT''\\
Computer Algebra Group, Mathematical Sciences Department, IBM Research
Draft September 5, 1988

\bibitem[Jenks 88b]{Jen88b} Jenks, Richard\\
``The Scratchpad II Computer Algebra System Interactive Environment Users 
Guide''\\
 Spring 1988

\bibitem[Jenks 88c]{JWS88} Jenks, R. D.; Sutor, R. S.; Watt, S. M.\\
``Scratchpad II: an abstract datatype system for mathematical computation''\\
In Jan{\ss}en
[Jan88], pp12-37. ISBN 3-540-18928-9, 0-387-18928-9 LCCN QA155.7.E4T74 1988

\bibitem[Jenks 92]{JS92} Jenks, Richard D.; Sutor, Robert S.\\
``AXIOM: The Scientific Computation System''\\
Springer-Verlag, Berlin, Germany / Heildelberg, Germany / London, UK / etc., 
1992 ISBN 0-387-97855-0 (New York), 3-540-97855-0 (Berlin) 742pp
LCCN QA76.95.J46 1992

\bibitem[Jenks 94]{JT94} Jenks, R. D.; Trager, B. M.\\
``How to make AXIOM into a Scratchpad''\\
In ACM [ACM94], pp32-40 ISBN 0-89791-638-7 LCCN QA76.95.I59 1994
%\verb|axiom-developer.org/axiom-website/papers/JT94.pdf|

\bibitem[Joswig 03]{JT03} Joswig, Michael; Takayama, Nobuki\\
``Algebra, geometry, and software systems''\\
Springer-Verlag ISBN 3-540-00256-1 p291

\bibitem[Joyner 06]{J006} Joyner, David\\
``OSCAS - Maxima''\\
SIGSAM Communications in Computer Algebra, 157 2006\\
\verb|sage.math.washington.edu/home/wdj/sigsam/oscas-cca1.pdf|

\bibitem[Joyner 14]{JO14} Joyner, David\\
``Links to some open source mathematical programs''\\
\verb|www.opensourcemath.org/opensource_math.html|

\subsection{K} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Kauers 08]{Kau08} Kauers, Manuel\\
``Integration of Algebraic Functions: A Simple Heuristic for Finding
the Logarithmic Part''\\
ISSAC July 2008 ACM 978-1-59593-904 pp133-140
\verb|www.kauers.de/publications.html|

\bibitem[Keady 94]{KN94} Keady, G.; Nolan, G.\\
``Production of Argument SubPrograms in the AXIOM -- NAG
link: examples involving nonleanr systems''\\
Technical Report TR1/94 
ATR/7 (NP2680), Numerical Algorithms Group, Inc., Downer's Grove, IL, USA and
Oxford, UK, 1994\\
\verb|www.nag.co.uk/doc/TechRep/axiomtr.html|

\bibitem[Kelsey 99]{Kel99} Kelsey, Tom\\
``Formal Methods and Computer Algebra: A Larch Specification of AXIOM 
Categories and Functors''\\
Ph.D. Thesis, University of St Andrews, 1999\\
\verb|www.cs.st-andrews.ac.uk/research/publications/Kel00.php|

\bibitem[Kelsey 00a]{Kel00a} Kelsey, Tom\\
``Formal specification of computer algebra''\\
University of St Andrews, 6th April 2000\\
\verb|www.cs.st-andrews.cs.uk/~tom/pub/fscbs.ps|
%\verb|axiom-developer.org/axiom-website/papers/Kel00a.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We investigate the use of formal methods languages and tools in the
design and development of computer algebra systems (henceforth CAS).
We demonstrate that errors in CAS design can be identified and
corrected by the use of (i) abstract specifications of types and
procedures, (ii) automated proofs of properties of the specifications,
and (iii) interface specifications which assist the verification of
pre- and post conditions of implemented code.
\end{adjustwidth}

\bibitem[Kelsey 00b]{Kel00b} Kelsey, Tom\\
``Formal specification of computer algebra''\\
(slides) University of St Andrews, Sept 21, 2000\\
\verb|www.cs.st-andrews.cs.uk/~tom/pub/fscbstalk.ps|\\

\bibitem[Kendall 99a]{Ken99a} Kendall, W.S.\\
``Itovsn3 in AXIOM: modules, algebras and stochastic differentials''\\
\verb|www2.warwick.ac.uk/fac/sci/statistics/staff/academic-research/|\\
\verb|kendall/personal/ppt/328.ps.gz|

\bibitem[Kendall 99b]{Ken99b} Kendall, W.S.\\
``Symbolic It\^o calculus in AXIOM: an ongoing story\\
\verb|www2.warwick.ac.uk/fac/sci/statistics/staff/academic-research/|\\
\verb|kendall/personal/ppt/327.ps.gz|

\bibitem[Kosleff 91]{Kos91} P.-V. Koseleff\\
``Word games in free Lie algebras: several bases and formulas''\\
Theoretical Computer Science 79(1) pp241-256 Feb. 1991 CODEN TCSCDI
ISSN 0304-3975

\bibitem[Kusche 89]{KKM89} Kusche, K.; Kutzler, B.; Mayr, H.\\
``Implementation of a geometry theorem proving package in SCRATCHPAD II''\\
In Davenport [Dav89] pp246-257 ISBN 3-540-51517-8 LCCN QA155.7.E4E86 1987

\subsection{L} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Lahey 08]{Lah08} Lahey, Tim\\
``Sage Integration Testing''\\
\verb|github.com/tjl/sage_int_testing| Dec. 2008

\bibitem[Lambe 89]{Lam89} Lambe, L. A.\\
``Scratchpad II as a tool for mathematical research''\\
Notices of the AMS, February 1928 pp143-147

\bibitem[Lambe 91]{Lam91} Lambe, L. A.\\
``Resolutions via homological perturbation''\\
Journal of Symbolic Computation 12(1) pp71-87 July 1991 
CODEN JSYCEH ISSN 0747-7171

\bibitem[Lambe 92]{Lam92} Lambe, Larry\\
``Next Generation Computer Algebra Systems AXIOM and the Scratchpad
Concept: Applications to Research in Algebra''\\
$21^{st}$ Nordic Congress of Mathematicians 1992
%\verb|axiom-developer.org/axiom-website/papers/Lam92.pdf|

\begin{adjustwidth}{2.5em}{0pt}
One way in which mathematicians deal with infinite amounts of data is
symbolic representation. A simple example is the quadratic equation
\[x = \frac{-b\pm\sqrt{b^2-4ac}}{2a}\]
a formula which uses symbolic representation to describe the solutions
to an infinite class of equations. Most computer algebra systems can
deal with polynomials with symbolic coefficients, but what if symbolic
exponents are called for (e.g. $1+t^i$)? What if symbolic limits on
summations are also called for, for example
\[1+t+\ldots+t^i=\sum_j{t^j}\]
The ``Scratchpad Concept'' is a theoretical ideal which allows the
implementation of objects at this level of abstraction and beyond in a
mathematically consistent way. The Axiom computer algebra system is an
implementation of a major part of the Scratchpad Concept.  Axiom
(formerly called Scratchpad) is a language with extensible
parameterized types and generic operators which is based on the
notions of domains and categories. By examining some aspects of the
Axiom system, the Scratchpad Concept will be illustrated. It will be
shown how some complex problems in homologicial algebra were solved
through the use of this system.
\end{adjustwidth}

\bibitem[Lambe 93]{Lam93} Lambe, Larry\\
``On Using Axiom to Generate Code''\\
(preprint) 1993

\bibitem[Lambe 93a]{LL93} Lambe, Larry; Luczak, Richard\\
``Object-Oriented Mathematical Programming and Symbolic/Numeric Interface''\\
$3^{rd}$ International Conf. on Expert Systems in Numerical Computing 1993
%\verb|axiom-developer.org/axiom-website/papers/LL93.pdf|

\begin{adjustwidth}{2.5em}{0pt}
The Axiom language is based on the notions of ``categories'',
``domains'', and ``packages''. These concepts are used to build an
interface between symbolic and numeric calculations. In particular, an
interface to the NAG Fortran Library and Axiom's algebra and graphics
facilities is presented. Some examples of numerical calculations in a
symbolic computational environment are also included using the finite
element method. While the examples are elementary, we believe that
they point to very powerful methods for combining numeric and symbolic
computational techniques.
\end{adjustwidth}

\bibitem[Lebedev 08]{Leb08} Lebedev, Yuri\\
``OpenMath Library for Computing on Riemann Surfaces''\\
PhD thesis, Nov 2008 Florida State University\\
\verb|www.math.fsu.edu/~ylebedev/research/HyperbolicGeometry.html|

\bibitem[LeBlanc 91]{LeB91} LeBlanc, S.E.\\
``The use of MathCAD and Theorist in the ChE classroom''\\
In Anonymous [Ano91], pp287-299 (vol. 1) 2 vols.

\bibitem[Lecerf 96]{Le96} Lecerf, Gr\'egoire\\
``Dynamic Evaluation and Real Closure Implementation in Axiom''\\
June 29, 1996 \\
\verb|www.math.uvsq.fr/~lecerf/software/drc/drc.ps|

\bibitem[Lecerf 96a]{Le96a} Lecerf, Gr\'egoire\\
``The Dynamic Real Closure implemented in Axiom''\\
\verb|lecerf.perso.math.cnrs.fr/software/drc/drc.ps|

\bibitem[Levelt 95]{Lev95} Levelt, A. H. M. (ed)\\
ISSAC '95: Proceedings of the 1995 International
Symposium on Symbolic and Algebraic Computation: July 10-12, 1995, Montreal,
Canada ISSAC-PROCEEDINGS-1995. ACM Press, New York, NY 10036, USA, 1995
ISBN 0-89791-699-9 LCCN QA76.95 I59 1995 ACM order number 505950

\bibitem[Li 06]{LM06} Li, Xin;  Maza, Moreno\\
``Efficient Implementation of Polynomial Arithmetic in a Multiple-Level 
Programming Environment''\\
Lecture Notes in
Computer Science Springer Vol 4151/2006 ISBN 978-3-540-38084-9 pp12-23 
Proceedings of International Congress of Mathematical Software ICMS 2006\\
\verb|www.csd.uwo.ca/~moreno//Publications/Li-MorenoMaza-ICMS-06.pdf|

\bibitem[Li 10]{YL10} Li, Yue; Dos Reis, Gabriel\\
``A Quantitative Study of Reductions in Algebraic Libraries''\\
PASCO 2010
\verb|www.axiomatics.org/~gdr/concurrency/quant-pasco10.pdf|

\bibitem[Li 11]{YL11} Li, Yue; Dos Reis, Gabriel\\
``An Automatic Parallelization Framework for Algebraic Computation
Systems''\\
ISSAC 2011
\verb|www.axiomatics.org/~gdr/concurrency/oa-conc-issac11.pdf|
%\verb|axiom-developer.org/axiom-website/papers/YL11.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This paper proposes a non-intrusive automatic parallelization
framework for typeful and property-aware computer algebra systems.
\end{adjustwidth}

\bibitem[Linton 93]{Lin93} Linton, Steve\\
``Vector Enumeration Programs, version 3.04''\\
\verb|www.cs.st-andrews.ac.uk/~sal/nme/nme_toc.html#SEC1|

\bibitem[Liska 97]{LD97} Liska, Richard; Drska, Ladislav; Limpouch, Jiri;
Sinor, Milan; Wester, Michael; Winkler, Franz\\
``Computer Algebra - algorithms, systems and applications''\\
June 2, 1997 \\
\verb|kfe.fjfi.cvut.cz/~liska/ca/all.html|

\bibitem[Lucks 86]{Luc86} Lucks, Michael\\
``A fast implementation of polynomial factorization''\\
In Bruce W. Char, editor, Proceedings of the 1986 Symposium on Symbolic
and Algebraic Computation: SYMSAC '86, July 21-23, 1986, Waterloo, Ontario,
pp228-232 ACM Press, New York, NY 10036, USA, 1986. ISBN 0-89791-199-7
LCCN QA155.7.E4 A281 1986 ACM order number 505860

\bibitem[Lueken 77]{Lue77} Lueken, E.\\ 
``Ueberlegungen zur Implementierung eines Formelmanipulationssystems''\\
Master's thesis, Technischen Universit{\"{a}}t Carolo-Wilhelmina zu
Braunschweig. Braunschweig, Germany, 1977

\bibitem[Lynch 91]{LM91} Lynch, R.; Mavromatis, H. A.\\
``New quantum mechanical perturbation technique
using an 'electronic scratchpad' on an inexpensive computer''\\
American Journal of Pyhsics, 59(3) pp270-273, March 1991. 
CODEN AJPIAS ISSN 0002-9505

\subsection{M} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Mahboubi 05]{Mah05} Mahboubi, Assia\\ 
``Programming and certifying the CAD algorithm inside the coq system''\\
Mathematics, Algorithms, Proofs, volume 05021 of Dagstuhl
Seminar Proceedings, Schloss Dagstuhl (2005)

\bibitem[Mathews 89]{Mat89} Mathews, J.\\ 
``Symbolic computational algebra applied to Picard iteration''\\
Mathematics and computer education, 23(2) pp117-122 Spring 1989 CODEN MCEDDA,
ISSN 0730-8639

\bibitem[McJones 11]{McJ11} McJones, Paul\\
``Software Presentation Group -- Common Lisp family''\\
\verb|www.softwarepreservation.org/projects/LISP/common_lisp_family|

\bibitem[Melachrinoudis 90]{MR90} Melachrinoudis, E.; Rumpf, D. L.\\
``Teaching advantages of transparent computer software -- MathCAD''\\
CoED, 10(1) pp71-76, January-March 1990 CODEN CWLJDP ISSN 0736-8607

\bibitem[Miola 90]{Mio90} Miola, A. (ed)\\
``Design and Implementation of Symbolic Computation Systems''\\
International Symposium DISCO '90, Capri, Italy, April 10-12, 1990, Proceedings
volume 429 of Lecture Notes in Cmputer Science,
Springer-Verlag, Berlin, Germany / Heildelberg, Germany / London, UK / etc., 
1990 ISBN 0-387-52531-9 (New York), 3-540-52531-9 (Berlin) LCCN QA76.9.S88I576
1990

\bibitem[Miola 93]{Mio93} Miola, A. (ed)\\
``Design and Implementation of Symbolic Computation Systems''\\
International Symposium DISCO '93 Gmunden, Austria, September 15-17, 1993:
Proceedings. 
Springer-Verlag, Berlin, Germany / Heildelberg, Germany / London, UK / etc., 
1993 ISBN 3-540-57235-X LCCN QA76.9.S88I576 1993

\bibitem[Missura 94]{Miss94} Missura, Stephan A.; Weber, Andreas\\
``Using Commutativity Properties for Controlling Coercions''\\
\verb|cg.cs.uni-bonn.de/personal-pages/weber/publications/pdf/|
\verb|WeberA/MissuraWeber94a.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Miss94.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This paper investigates some soundness conditions which have to be
fulfilled in systems with coercions and generic operators. A result of
Reynolds on unrestricted generic operators is extended to generic
operators which obey certain constraints. We get natural conditions
for such operators, which are expressed within the theoretic framework
of category theory. However, in the context of computer algebra, there
arise examples of coercions and generic operators which do not fulfil
these conditions. We describe a framework -- relaxing the above
conditions -- that allows distinguishing between cases of ambiguities
which can be resolved in a quite natural sense and those which
cannot. An algorithm is presented that detects such unresolvable
ambiguities in expressions.
\end{adjustwidth}

\bibitem[Monagan 87]{Mon87} Monagan, Michael B.\\
``Support for Data Structures in Scratchpad II''\\
in [Wit87], pp17-18

\bibitem[Monagan 93]{Mon93} Monagan, M. B.\\
``Gauss: a parameterized domain of computation system with
support for signature functions''\\
In Miola [Mio93], pp81-94 ISBN 3-540-57235-X LCCN QA76.9.S88I576 1993

\bibitem[Mora 89]{Mor89}  Mora, T. (ed)\\
Applied Algebra, Algebraic Algorithms and Error-Correcting
Codes, 6th International Conference, AAECC-6, Rome, Italy, July 4-8, 1998,
Proceedings, volume 357 of Lecture Notes in Computer Science
Springer-Verlag, Berlin, Germany / Heildelberg, Germany / London, UK / etc., 
1989 ISBN 3-540-51083-4, LCCN QA268.A35 1988 Conference held jointly with
ISSAC '88

\bibitem[Moses 71]{Mos71} Moses, Joel\\
``Algebraic Simplification: A Guide for the Perplexed''\\
CACM August 1971 Vol 14 No. 8 pp527-537

\subsection{N} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Naylor]{NPxx} Naylor, William;  Padget, Julian\\
``From Untyped to Polymorphically Typed Objects in Mathematical Web 
Services''
%\verb|axiom-developer.org/axiom-website/papers/NPxx.pdf|

\begin{adjustwidth}{2.5em}{0pt}
OpenMath is a widely recognized approach to the semantic markup of
mathematics that is often used for communication between OpenMath
compliant systems. The Aldor language has a sophisticated
category-based type system that was specifically developed for the
purpose of modelling mathematical structures, while the system itself
supports the creation of small-footprint applications suitable for
deployment as web services. In this paper we present our first results
of how one may perform translations from generic OpenMath objects into
values in specific Aldor domains, describing how the Aldor interfae
domain ExpresstionTree is used to achieve this. We outline our Aldor
implementation of an OpenMath translator, and describe an efficient
extention of this to the Parser category. In addition, the Aldor
service creation and invocation mechanism are explained. Thus we are
in a position to develop and deploy mathematical web services whose
descriptions may be directly derived from Aldor's rich type language.
\end{adjustwidth}

\bibitem[Naylor 95]{N95} Naylor, Bill\\
``Symbolic Interface for an advanced hyperbolic PDE solver''\\
\verb|www.sci.csd.uwo.ca/~bill/Papers/symbInterface2.ps|
%\verb|axiom-developer.org/axiom-website/papers/N95.pdf|

\begin{adjustwidth}{2.5em}{0pt}
An Axiom front end is described, which is used to generate
mathematical objects needed by one of the latest NAG routines, to be
included in the Mark 17 version of the NAG Numerical library. This
routine uses powerful techniques to find the solution to Hyperbolic
Partial Differential Equations in conservation form and in one spatial
dimension. These mathematical objects are non-trivial, requiring much
mathematical knowledge on the part of the user, which is otherwise
irrelvant to the physical problem which is to be solved. We discuss
the individual mathematical objects, considering the mathematical
theory which is relevant, and some of the problems which have been
encountered and solved during the FORTRAN generation necessary to
realise the object.  Finally we display some of our results.
\end{adjustwidth}

\bibitem[Naylor 00b]{ND00} Naylor, W.A.; Davenport, J.H.\\
``A Monte-Carlo Extension to a Category-Based Type System''\\
\verb|www.sci.csd.uwo.ca/~bill/Papers/monteCarCat3.ps|
%\verb|axiom-developer.org/axiom-website/papers/ND00.pdf|

\begin{adjustwidth}{2.5em}{0pt}
The normal claim for mathematics is that all calculations are 100\%
accurate and therefore one calculation can rely completely on the
results of sub-calculations, hoever there exist {\sl Monte-Carlo}
algorithms which are often much faster than the equivalent
deterministic ones where the results will have a prescribed
probability (presumably small) of being incorrect. However there has
been little discussion of how such algorithms can be used as building
blocks in Computer Algebra.  In this paper we describe how the
computational category theory which is the basis of the type structure
used in the Axiom computer algebra system may be extended to cover
probabilistic algorithms, which use Monte-Carlo techniques. We follow
this with a specific example which uses Straight Line Program
representation.
\end{adjustwidth}

\bibitem[Norman 75]{Nor75} Norman, A. C.\\
``Computing with formal power series''\\
ACM Transactions on Mathematical Software, 1(4) pp346-356 
Dec. 1975 CODEN ACMSCU ISSN 0098-3500

\bibitem[Norman 75a]{Nor75a} Norman, A.C.\\
``The SCRATCHPAD Power Series Package''\\
IBM T.J. Watson Research RC4998

\subsection{O} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Ollivier 89]{Oll89} Ollivier, F.\\
``Inversibility of rational mappings and structural 
identifiablility in automatics''\\
In ACM [ACM89], pp43-54 ISBN 0-89791-325-6 LCCN QA76.95.I59 1989

\bibitem[Online 72]{Onl72}.\\
Online 72: conference proceedings ... international conference on online
interactive computing, Brunel University, Uxbridge, England, 4-7 September
1972 ISBN 0-903796-02-3 LCCN QA76.55.O54 1972 Two volumes.

\bibitem[OpenMath]{OpenMa}.\\
``OpenMath Technical Overview''\\
\verb|www.openmath.org/overview/technical.html|

\subsection{P} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Page 07]{Pa07} Page, William S.\\
``Axiom - Open Source Computer Algebra System''\\
Poster ISSAC 2007 Proceedings Vol 41 No 3 Sept 2007 p114

\bibitem[Petitot 90]{Pet90} Petitot, Michel\\
``Types r\'ecursifs en scratchpad, application aux polyn\^omes non
commutatifs''\\
LIFL, 1990

\bibitem[Petitot 93]{Pet93} Petitot, M.\\
``Experience with Axiom''\\
In Jacob et al. [JOS93], page 240

\bibitem[Petric 71]{Pet71} Petric, S. R. (ed)\\
Proceedings of the second symposium on Symbolic and
Algebraic Manipulation, March 23-25, 1971, Los Angeles, California, ACM Press,
New York, NY 10036, USA, 1971. LCCN QA76.5.S94 1971

\bibitem[Pinch 93]{Pin93} Pinch, R.G.E.\\
``Some Primality Testing Algorithms''\\
Devlin, Keith (ed.)
Computers and Mathematics November 1993, Vol 40, Number 9 pp1203-1210

\bibitem[Poll (b)]{Polxx} Poll, Erik\\
``The type system of Axiom''
%\verb|axiom-developer.org/axiom-website/papers/Polxx.pdf|

\bibitem[Purtilo 86]{Pur86} Purtilo, J.\\
``Applications of a software interconnection system in mathematical
problem solving environments'' In Bruce W. Char, editor. Proceedings of the
1986 Symposium on Symbolic and Algebraic Computation: SYMSAC '86, July 21-23,
ACM Press, New York, NY 10036, USA, 1986. ISBN 0-89791-199-7 LCCN QA155.7.E4
A281 1986 ACM order number 505860

\subsection{R} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Rainer 14]{Rain14} Joswig, Rainer\\
``2014: 30+ Years Common Lisp the Language''\\
\verb|lispm.de/30ycltl|

\bibitem[Robidoux 93]{Rob93} Robidoux, Nicolas\\
``Does Axiom Solve Systems of O.D.E's Like Mathematica?''\\
July 1993
%\verb|axiom-developer.org/axiom-website/papers/Rob93.pdf|

\begin{adjustwidth}{2.5em}{0pt}
If I were demonstrating Axiom and were asked this question, my reply
would be ``No, but I am not sure that this is a bad thing''. And I
would illustrate this with the following example.

Consider the following system of O.D.E.'s
\[
\begin{array}{rcl}
\frac{dx_1}{dt} & = & \left(1+\frac{cos t}{2+sin t}\right)x_1\\
\frac{dx_2}{dt} & = & x_1 - x_2
\end{array}
\]
This is a very simple system: $x_1$ is actually uncoupled from $x_2$
\end{adjustwidth}

\bibitem[Rioboo 92]{Rio92} Rioboo, R.\\
``Real algebraic closure of an ordered field, implementation in Axiom''\\
In Wang [Wan92], pp206-215 ISBN 0-89791-489-9 (soft cover)
0-89791-490-2 (hard cover) LCCN QA76.95.I59 1992
%\verb|axiom-developer.org/axiom-website/papers/Rio92.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Real algebraic numbers appear in many Computer Algebra problems.  For
instance the determination of a cylindrical algebraic decomposition
for an euclidean space requires computing with real algebraic numbers.
This paper describes an implementation for computations with the real
roots of a polynomial. This process is designed to be recursively
used, so the resulting domain of computation is the set of all real
algebraic numbers. An implementation for the real algebraic closure
has been done in Axiom (previously called Scratchpad).
\end{adjustwidth}

\bibitem[Roesner 95]{Roe95} Roesner, K. G.\\
``Verified solutions for parameters of an exact solution for
non-Newtonian liquids using computer algebra'' Zeitschrift fur Angewandte
Mathematik und Physik, 75 (suppl. 2):S435-S438, 1995 ISSN 0044-2267

\subsection{S} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Sage 14]{Sage14} Stein, William\\
``Sage''\\
\verb|www.sagemath.org/doc/reference/interfaces/sage/interfaces/axiom.html|

\bibitem[Salvy 89]{Sal89} Salvy, B.\\
``Examples of automatic asymptotic expansions''\\
Technical Report 114,
Inst. Nat. Recherche Inf. Autom., Le Chesnay, France, Dec. 1989 18pp

\bibitem[Salvy 91]{Sal91} Salvy, B.\\
``Examples of automatic asymptotic expansions''\\
SIGSAM Bulletin (ACM Special Interest Group on Symbolic and 
Algebraic Manipulation), 25(2) pp4-17
April 1991 CODEN SIGSBZ ISSN 0163-5824

\bibitem[Schu 92]{Sch92} Sch\"u, J.\\
``Implementing des Cartan-Kuranishi-Theorems in AXIOM''\\
Master's diploma thesis (in german), Institut f\"ur Algorithmen und
Kognitive Systeme, Universit\"t Karlsruhe 1992

\bibitem[Schwarz 88]{Sch88} Schwarz, F.\\
``Programming with abstract data types: the symmetry package SPDE
in Scratchpad''\\ 
In Jan{\ss}en [Jan88], pp167-176, ISBN 3-540-18928-9,
0-387-18928-9 LCCN QA155.7.E4T74 1988

\bibitem[Schwarz 89]{Sch89} Schwarz, F.\\
``A factorization algorithm for linear ordinary differential equations''\\
In ACM [ACM89], pp17-25 ISBN 0-89791-325-6 LCCN QA76.95.I59 1989

\bibitem[Schwarz 91]{Sch91} Schwarz, F.\\
``Monomial orderings and Gr{\"o}bner bases''\\
SIGSAM Bulletin (ACM Special Interest Group on Symbolic and Algebraic 
Manipulation) 2591) pp10-23 Jan. 1991 CODEN SIGSBZ ISSN 0163-5824

\bibitem[Seiler 94]{Sei94} Seiler, Werner Markus\\
``Analysis and Application of the Formal Theory of Partial Differential
Equations''\\
PhD thesis, School of Physics and Materials, Lancaster University (1994)\\
\verb|www.mathematik.uni-kassel.de/~seiler/Papers/Diss/diss.ps.gz|
%\verb|axiom-developer.org/axiom-website/papers/Sei94.pdf|

\begin{adjustwidth}{2.5em}{0pt}
An introduction to the formal theory of partial differential equations
is given emphasizing the properties of involutive symbols and
equations.  An algorithm to complete any differential equation to an
involutive one is presented. For an involutive equation possible
values for the number of arbitrary functions in its general solution
are determined. The existence and uniqueness of solutions for analytic
equations is proven.  Applications of these results include an
analysis of symmetry and reduction methods and a study of gauge
systems. It is show that the Dirac algorithm for systems with
constraints is closely related to the completion of the equation of
motion to an involutive equation. Specific examples treated comprise
the Yang-Mills Equations, Einstein Equations, complete and Jacobian
systems, and some special models in two and three dimensions. To
facilitate the involved tedious computations an environment for
geometric approaches to differential equations has been developed in
the computer algebra system Axiom. The appendices contain among others
brief introductions into Carten-K\"ahler Theory and Janet-Riquier Theory.
\end{adjustwidth}

\bibitem[Seiler 94a]{Sei94a} Seiler, W.M.\\
``Completion to involution in AXIOM''\\
in Calmet [Cal94] pp103-104

\bibitem[Sieler 94b]{Sei94b} Seiler, W.M.\\
``Pseudo differential operators and integrable systems in AXIOM''\\
Computer Physics Communications, 79(2) pp329-340 April 1994 CODEN CPHCBZ
ISSN 0010-4655
%\verb|axiom-developer.org/axiom-website/papers/Sei94b.pdf|

\begin{adjustwidth}{2.5em}{0pt}
An implementation of the algebra of pseudo differential operators in
the computer algebra system Axiom is described. In several exmaples
the application of the package to typical computations in the theory
of integrable systems is demonstrated.
\end{adjustwidth}

\bibitem[Seiler 95]{Sei95} Seiler, W.M.\\
``Applying AXIOM to partial differential equations''\\
Internal Report 95-17, Universit\"at Karlsruhe, Fakult\"at f\"ur Informatik
1995
%\verb|axiom-developer.org/axiom-website/papers/Sei95.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We present an Axiom environment called JET for geometric computations
with partial differential equations within the framework of the jet
bundle formalism. This comprises expecially the completion of a given
differential equation to an involutive one according to the
Cartan-Kuranishi Theorem and the setting up of the determining system
for the generators of classical and non-classical Lie
symmetries. Details of the implementations are described and
applications are given. An appendix contains tables of all exported
functions.
\end{adjustwidth}

\bibitem[Seiler 95b]{SC95} Seiler, W.M.; Calmet, J.\\
``JET -- An Axiom Environment for Geometric Computations with Differential
Equations''
%\verb|axiom-developer.org/axiom-website/papers/SC95.pdf|

\begin{adjustwidth}{2.5em}{0pt}
JET is an environment within the computer algebra system Axiom to
perform such computations. The current implementation emphasises the
two key concepts involution and symmetry. It provides some packages
for the completion of a given system of differential equations to an
equivalent involutive one based on the Cartan-Kuranishi theorem and
for setting up the determining equations for classical and
non-classical point symmetries.
\end{adjustwidth}

\bibitem[Seiler 97]{Sei97} Seiler, Werner M.\\
``Computer Algebra and Differential Equations: An Overview''\\
\verb|www.mathematik.uni-kassel.di/~seiler/Papers/Postscript/CADERep.ps.gz|

\begin{adjustwidth}{2.5em}{0pt}
We present an informal overview of a number of approaches to
differential equations which are popular in computer algebra. This
includes symmetry and completion theory, local analysis, differential
ideal and Galois theory, dynamical systems and numerical analysis.  A
large bibliography is provided.
\end{adjustwidth}

\bibitem[Seiler (a)]{Seixx} Seiler, W.M.\\
``DETools: A Library for Differential Equations''\\
\verb|iaks-www.ira.uka.de/iaks-calmet/werner/werner.html|

\bibitem[Shannon 88]{SS88} Shannon, D.; Sweedler, M.\\
``Using Gr{\"o}bner bases to determine algebra
membership, split surjective algebra homomorphisms determine birational
equivalence''\\
Journal of Symbolic Computation 6(2-3) pp267-273 
Oct.-Dec. 1988 CODEN JSYCEH ISSN 0747-7171

\bibitem[Sit 89]{Sit89} Sit, W.Y.\\
``On Goldman's algorithm for solving first-order multinomial
autonomous systems'' In Mora [Mor89], pp386-395 ISBN 3-540-51083-4
LCCN QA268.A35 1998 Conference held jointly with ISSAC '88

\bibitem[Sit 92]{Sit92} Sit, W.Y.\\
``An algorithm for solving parametric linear systems''\\
Journal of Symbolic Computations, 13(4) pp353-394, April 1992 CODEN JSYCEH 
ISSN 0747-7171

\bibitem[Sit 06]{Sit06} Sit, Emil\\
``Tools for Repeatable Research''\\
\verb|www.emilsit.net/blog/archives/tools-for-repeatable-research|

\bibitem[Smedley 92]{Sme92} Smedley, Trevor J.\\
``Using pictorial and object oriented programming for computer algebra''\\
In Hal Berghel et al., editors. Applied computing --
technologicial challenges of the 199s: proceedings of the 1992 ACM/SIGAPP
Symposium on Applied Computing, Kansas City Convention Center, March 1-3, 1992
pp1243-1247. ACM Press, New York, NY 10036, USA, 1992. ISBN 0-89791-502-X
LCCN QA76.76.A65 S95 1992

\bibitem[Smith 07]{SDJ07} Smith, Jacob; Dos Reis, Gabriel; Jarvi, Jaakko\\
``Algorithmic differentiation in Axiom''\\
ACM SIGSAM ISSAC Proceedings 2007 Waterloo, Canada 2007 pp347-354 
ISBN 978-1-59593-743-8
%\verb|axiom-developer.org/axiom-website/papers/SDJ07.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This paper describes the design and implementation of an algorithmic
differentiation framework in the Axiom computer algebra system. Our
implementation works by transformations on Spad programs at the level
of the typed abstract syntax tree.
\end{adjustwidth}

\bibitem[SSC92]{SSC92}.\\
``Algorithmic Methods For Lie Pseudogroups'' 
In N. Ibragimov, M. Torrisi and A. Valenti, editors, Proc. Modern Group
Analysis: Advanced Analytical and Computational Methods in Mathematical
Physics, pp337-344, Acireale (Italy), 1992 Kluwer, Dordrecht 1993\\
\verb|iaks-www.ira.uka.de/iaks-calmet/werner/Papers/Acireale92.ps.gz|

\bibitem[SSV87]{SSV87} Senechaud, P.; Siebert, F.; Villard G.\\
``Scratchpad II: Pr{\'e}sentation d'un nouveau langage de calcul formel''\\
Technical Report 640-M, TIM 3 (IMAG), Grenoble, France, Feb 1987

\bibitem[Steele]{Steele} Steele, Guy L.; Gabriel, Richard P.\\
``The Evolution of Lisp''\\
\verb|www.dreamsongs.com/Files/HOPL2-Uncut.pdf|

\bibitem[Sutor 85]{Sut85} Sutor, R.S.\\
``The Scratchpad II computer algebra language and system''\\
In Buchberger and Caviness [BC85], pp32-33 ISBN 0-387-15983-5 (vol. 1),
0-387-15984-3 (vol. 2) LCCN QA155.7.E4 E86 1985 Two volumes.

\bibitem[Sutor 87a]{SJ87a} Sutor, R. S.; Jenks, R. D.\\
``The type inference and coercion facilities in
the Scratchpad II interpreter'' In Wexelblat [Wex87], pp56-63
ISBN 0-89791-235-7 LCCN QA76.7.S54 v22:7 SIGPLAN Notices, v22 n7 (July 1987)
%\verb|axiom-developer.org/axiom-website/papers/SJ87a.pdf|

\bibitem[Sutor 87b]{Su87} Sutor, Robert S.\\
``The Scratchpad II Computer Algebra System. Using and
Programming the Interpreter''\\
IBM Course presentation slide deck Spring 1987

\bibitem[Sutor 87c]{SJ87c} Sutor, Robert S.; Jenks, Richard\\
``The type inference and coercion facilities
in the Scratchpad II interpreter''\\ 
Research report RC 12595 (\#56575),
IBM Thomas J. Watson Research Center, Yorktown Heights, NY, USA, 1987, 11pp
%\verb|axiom-developer.org/axiom-website/papers/SJ87c.pdf|

\begin{adjustwidth}{2.5em}{0pt}
The Scratchpad II system is an abstract datatype programming language,
a compiler for the language, a library of packages of polymorphic
functions and parameterized abstract datatypes, and an interpreter
that provides sophisticated type inference and coercion facilities.
Although originally designed for the implementation of symbolic
mathematical algorithms, Scratchpad II is a general purpose
programming language. This paper discusses aspects of the
implementation of the intepreter and how it attempts to provide a user
friendly and relatively weakly typed front end for the strongly typed
programming language.
\end{adjustwidth}

\bibitem[Sutor 88]{Su88} Sutor, Robert S.\\
``A guide to programming in the scratchpad 2 interpreter''\\
IBM Manual, March 1988

\subsection{T} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Thompson 00]{Tho00} Thompson, Simon\\
``Logic and dependent types in the Aldor Computer Algebra System''
%\verb|axiom-developer.org/axiom-website/papers/Tho00.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We show how the Aldor type system can represent propositions of
first-order logic, by means of the 'propositions as types'
correspondence. The representation relies on type casts (using
pretend) but can be viewed as a prototype implementation of a modified
type system with {\sl type evaluation} reported elsewhere. The logic
is used to provide an axiomatisation of a number of familiar Aldor
categories as well as a type of vectors.
\end{adjustwidth}

\bibitem[Thompson (a)]{TTxx} Thompson, Simon; Timochouk, Leonid\\
``The Aldor\-\- language''
%\verb|axiom-developer.org/axiom-website/papers/TTxx.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This paper introduces the \verb|Aldor--| language, which is a
functional programming language with dependent types and a powerful,
type-based, overloading mechanism. The language is built on a subset
of Aldor, the 'library compiler' language for the Axiom computer
algebra system. \verb|Aldor--| is designed with the intention of
incorporating logical reasoning into computer algebra computations.

The paper contains a formal account of the semantics and type system
of \verb|Aldor--|; a general discussion of overloading and how the
overloading in \verb|Aldor--| fits into the general scheme; examples
of logic within \verb|Aldor--| and notes on the implementation of the
system.
\end{adjustwidth}

\bibitem[Touratier 98]{Tou98} Touratier, Emmanuel\\
``Etude du typage dans le syst\`eme de calcul scientifique Aldor''\\
Universit\'e de Limoges 1998
%\verb|axiom-developer.org/axiom-website/papers/Tou98.pdf|

\subsection{V} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[van der Hoeven 14]{JvdH14} van der Hoeven, Joris\\
``Computer algebra systems and TeXmacs''\\
\verb|www.texmacs.org/tmweb/plugins/cas.en.html|

\bibitem[van Hoeij 94]{vH94} van Hoeij, M.\\
``An algorithm for computing an integral basis in an algebraic
function field''\\
Journal of Symbolic Computation, 18(4) pp353-363 Oct. 1994
CODEN JSYCEH ISSN 0747-7171

\bibitem[Vasconcelos 99]{Vas99} Vasconcelos, Wolmer\\
``Computational Methods in Commutative Algebra and Algebraic Geometry''\\
Springer, Algorithms and Computation in Mathematics, Vol 2 1999
ISBN 3-540-21311-2

\subsection{W} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Wang 89]{Wan89} Wang, D.\\
``A program for computing the Liapunov functions and Liapunov
constants in Scratchpad II''\\
SIGSAM Bulletin (ACM Special Interest Group
on Symbolic and Algebraic Manipulation), 23(4) pp25-31, Oct. 1989,
CODEN SIGSBZ ISSN 0163-5824

\bibitem[Wang 91]{Wan91} Wang, Dongming\\ 
``Mechanical manipulation for a class of differential systems''\\
Journal of Symbolic Computation, 12(2) pp233-254 Aug. 1991
CODEN JSYCEH ISSN 0747-7171

\bibitem[Wang 92]{Wan92} Wang, Paul S. (ed)\\
International System Symposium on Symbolic and
Algebraic Computation 92 ACM Press, New York, NY 10036, USA, 1992
ISBN 0-89791-489-9 (soft cover), 0-89791-490-2 (hard cover), 
LCCN QA76.95.I59 1992

\bibitem[Watanabe 90]{WN90} Watanabe, Shunro; Nagata, Morio; (ed)\\
ISSAC '90 Proceedings of the
International Symposium on Symbolic and Algebraic Computation ACM Press,
New York, NY, 10036, USA. 1990 ISBN 0-89791-401-5 LCCN QA76.95.I57 1990

\bibitem[Watt 85]{Wat85} Watt, Stephen\\
``Bounded Parallelism in Computer Algebra''\\
PhD Thesis, University of Waterloo\\
\verb|www.csd.uwo.ca/~watt/pub/reprints/1985-smw-phd.pdf|

\bibitem[Watt 86]{Wat86} Watt, S.M.; Della Dora, J.\\
``Algebra Snapshot: Linear Ordinary Differential Operators''\\
Scratchpad II Newsletter: Vol 1 Num 2 (Jan 1986)\\
\verb|www.csd.uwo.ca/~watt/pub/reprints/1986-snews-lodo.pdf|

\bibitem[Watt 87]{Wat87} Watt, Stephen\\
``Domains and Subdomains in Scratchpad II''\\
in [Wit87], pp3-5

\bibitem[Watt 87a]{WB87} Watt, Stephen M.; Burge, William H.\\
``Mapping as First Class Objects''\\
in [Wit87], pp13-17

\bibitem[Watt 89]{Wat89} Watt, S. M.\\ 
``A fixed point method for power series computation''\\
In Gianni [Gia89], pp206-217 ISBN 3-540-51084-2 LCCN QA76.95.I57 
1988 Conference held jointly with AAECC-6

\bibitem[Watt 90]{WJST90} Watt, S.M.; Jenks, R.D.; Sutor, R.S.; Trager B.M.\\
``The Scratchpad II type system: Domains and subdomains''\\
in A.M. Miola, editor Computing Tools
for Scientific Problem Solving, Academic Press, New York, 1990

\bibitem[Watt 91]{Wat91} Watt, Stephen M. (ed)\\
Proceedings of the 1991 International Symposium on
Symbolic and Algebraic Computation, ISSAC'91, July 15-17, 1991, Bonn, Germany,
ACM Press, New York, NY 10036, USA, 1991 ISBN 0-89791-437-6 
LCCN QA76.95.I59 1991

\bibitem[Watt 94a]{Wat94a} Watt, Stephen M.; Dooley, S.S.; Morrison, S.C.;
Steinback, J.M.; Sutor, R.S.\\
``A\# User's Guide''\\
Version 1.0.0 O($\epsilon{}^1$) June 8, 1994

\bibitem[Watt 94b]{Wat94} Watt, Stephen M.; Broadbery, Peter A.; 
Dooley, Samuel S.; Iglio, Pietro\\
``A First Report on the A\# Compiler (including benchmarks)''\\
IBM Research Report RC19529 (85075) May 12, 1994
%\verb|axiom-developer.org/axiom-website/papers/Wat94.pdf|

\bibitem[Watt 94c]{Wat94c} Watt, Stephen M.\\
``A\# Language Reference Version 0.35''\\
IBM Research Division Technical Report RC19530 May 1994

\bibitem[Watt 95]{Wat95} Watt, S.M.; Broadbery, P.A.; Dooley, S.S.; Iglio, P. 
Steinbach, J.M.; Morrison, S.C.; Sutor, R.S.\\
``AXIOM Library Compiler Users Guide''\\
The Numerical Algorithms Group (NAG) Ltd, 1994

\bibitem[Watt 01]{Wat01} Watt, Stephen M.; Broadbery, Peter A.; Iglio, Pietro;
Morrison, Scott C.; Steinbach, Jonathan M.\\
``FOAM: A First Order Abstract Machine Version 0.35''\\
IBM T. J. Watson Research Center (2001)
%\verb|axiom-developer.org/axiom-website/papers/Wat01.pdf|

\bibitem[Weber 92]{Webe92} Weber, Andreas\\
``Type Systems for Computer Algebra''\\
\verb|cg.cs.uni-bonn.de/personal-pages/weber/publications/pdf/WeberA/Weber92a.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Webe92.pdf|

\begin{adjustwidth}{2.5em}{0pt}
An important feature of modern computer algebra systems is the support
of a rich type system with the possibility of type inference. Basic
features of such a type system are polymorphism and coercion between
types. Recently the use of order-sorted rewrite systems was proposed
as a general framework. We will give a quite simple example of a
family of types arising in computer algebra whose coercion relations
cannot be captured by a finite set of first-order rewrite rules.
\end{adjustwidth}

\bibitem[Weber 92b]{Webe92b} Weber, Andreas\\
``Structuring the Type System of a Computer Algebra System''\\
\verb|cg.cs.uni-bonn.de/personal-pages/weber/publications/pdf/WeberA/Weber92a.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Webe92b.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Most existing computer algebra systems are pure symbol manipulating
systems without language support for the occuring types. This is
mainly due to the fact taht the occurring types are much more
complicated than in traditional programming languages. In the last
decade the study of type systems has become an active area of
research. We will give a proposal for a type system showing that
several problems for a type system of a symbolic computation system
can be solved by using results of this research. We will also provide
a variety of examples which will show some of the problems that remain
and that will require further research.
\end{adjustwidth}

\bibitem[Weber 93b]{Webe93b} Weber, Andreas\\
``Type Systems for Computer Algebra''\\
\verb|cg.cs.uni-bonn.de/personal-pages/weber/publications/pdf/WeberA/Weber93b.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Webe93b.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We study type systems for computer algebra systems, which frequently
correspond to the ``pragmatically developed'' typing constructs used
in AXIOM.  A central concept is that of {\sl type classes} which
correspond to AXIOM categories. We will show that types can be
syntactically described as terms of a regular order-sorted signature
if no type parameters are allowed. Using results obtained for the
functional programming language Haskell we will show that the problem
of {\sl type inference} is decidable. This result still holds if
higher-order functions are present and {\sl parametric polymorphism}
is used. These additional typing constructs are useful for further
extensions of existing computer algebra systems: These typing concepts
can be used to implement category theoretic constructs and there are
many well known constructive interactions between category theory and
algebra.  \end{adjustwidth}

\bibitem[Weber 94]{Web94} Weber, Andreas\\
``Algorithms for Type Inference with Coercions''\\
ISSAC 94 ACM 0-89791-638-7/94/0007
%\verb|axiom-developer.org/axiom-website/papers/Web94.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This paper presents algorithms that perform a type inference for a
type system occurring in the context of computer algebra. The type
system permits various classes of coercions between types and the
algorithms are complete for the precisely defined system, which can be
seen as a formal description of an important subset of the type system
supported by the computer algebra program Axiom.

Previously only algorithms for much more restricted cases of coercions
have been described or the frameworks used have been so general that
the corresponding type inference problems were known to be
undecidable.
\end{adjustwidth}

\bibitem[Weber 95]{Webe95} Weber, A.\\
``On coherence in computer algebra''\\
\verb|cg.cs.uni-bonn.de/personal-pages/weber/publications/pdf/WeberA/Weber94e.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Webe95.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Modern computer algebra systems (e.g. AXIOM) support a rich type
system including parameterized data types and the possibility of
implicit coercions between types. In such a type system it will be
frequently the case that there are different ways of building
coercions between types. An important requirement is that all
coercions between two types coincide, a property which is called {\sl
coherence}. We will prove a coherence theorem for a formal type system
having several possibilities of coercions covering many important
examples. Moreover, we will give some informal reasoning why the
formally defined restrictions can be satisfied by an actual system.
\end{adjustwidth}

\bibitem[Weber 96]{Webe96} Weber, Andreas\\
``Computing Radical Expressions for Roots of Unity''\\
\verb|cg.cs.uni-bonn.de/personal-pages/weber/publications/pdf/WeberA/Weber96a.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Webe96.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We present an improvement of an algorithm given by Gauss to compute a
radical expression for a $p$-th root of unity. The time complexity of
the algorithm is $O(p^3m^6log p)$, where $m$ is the largest prime
factor of $p-1$.
\end{adjustwidth}

\bibitem[Weber 99]{Webe99} Weber, Andreas\\
``Solving Cyclotomic Polynomials by Radical Expressions''\\
\verb|cg.cs.uni-bonn.de/personal-pages/weber/publications/pdf/|
\verb|WeberA/WeberKeckeisen99a.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Webe99.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We describe a Maple package that allows the solution of cyclotomic
polynomials by radical expressions. We provide a function that is an
extension of the Maple {\sl solve} command. The major algorithmic
ingredient of the package is an improvement of a method due to Gauss
which gives radical expressions for roots of unity. We will give a
summary for computations up to degree 100, which could be done within
a few hours of cpu time on a standard workstation.
\end{adjustwidth}

\bibitem[Wei-Jiang 12]{WJ12} Wei-Jiang\\
``Top free algebra System''\\
\verb|wei-jiang.com/it/software/top-free-algebra-system-bye-mathematica-bye-maple|

\bibitem[Wester 99]{Wes99} Wester, Michael J.\\
``Computer Algebra Systems''\\
John Wiley and Sons 1999 ISBN 0-471-98353-5

\bibitem[Wexelblat 87]{Wex87} Wexelblat, Richard L. (ed)\\
Proceedings of the SIGPLAN '87 Symposium on
Interpreter and Interpretive Techniques, St. Paul, Minnesota, June 24-26, 1987
ACM Press, New York, NY 10036, USA, 1987 ISBN 0-89791-235-7
LCCN QA76.7.S54 v22:7 SIGPLAN Notices, vol 22, no 7 (July 1987)

\bibitem[Wityak 87]{Wit87} Wityak, Sandra\\
``Scratchpad II Newsletter''\\
Volume 2, Number 1, Nov 1987

\bibitem[WWW1]{WWW1}.\\
Software Preservation Group\\
\verb|www.softwarepresentation.org/projects/LISP/common_lisp_family|

\subsection{Y} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Yap 00]{Yap00} Yap, Chee Keng\\ 
``Fundamental Problems of Algorithmic Algebra''\\
Oxford University Press (2000) ISBN0-19-512516-9

\bibitem[Yapp 07]{Yapp07} Yapp, Clifford; Hebisch, Waldek; Kaminski, Kai\\
``Literate Programming Tools Implemented in ANSI Common Lisp''\\
\verb|brlcad.org/~starseeker/cl-web-v0.8.lisp.pamphlet|

\bibitem[Yun 83]{Yun83} Yun, David Y.Y.\\
``Computer Algebra and Complex Analysis''\\
Computational Aspects of Complex Analysis pp379-393
D. Reidel Publishing Company H. Werner et. al. (eds.)

\subsection{Z} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Zen92]{Zen92} Zenger, Ch.\\
``Gr{\"o}bnerbasen f{\"u}r Differentialformen und ihre
Implementierung in AXIOM''\\ 
Diplomarbeit, Universit{\"a}t Karlsruhe,
Karlsruhe, Germany, 1992

\bibitem[Zip92]{Zip92} Zippel, Richard\\
``Algebraic Computation''\\
(unpublished) Cornell University Ithaca, NY Sept 1992

\bibitem[Zwi92]{Zwi92} Zwillinger, Daniel\\
``Handbook of Integration''\\
Jones and Bartlett, 1992, ISBN 0-86720-293-9

\newpage
\section{Axiom Citations of External Sources}

\subsection{A} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Ablamowicz 98]{Ab98} Ablamowicz, Rafal\\
``Spinor Representations of Clifford Algebras: A Symbolic Approach''\\
Computer Physics Communications
Vol. 115, No. 2-3, December 11, 1998, pages 510-535.

\bibitem[Abramowitz 64]{AS64} Abramowitz, Milton; Stegun, Irene A.\\
``Handbook of Mathematical Functions''\\
(1964) Dover Publications, NY ISBN 0-486-61272-4

\bibitem[Abramowitz 68]{AS68} Abramowitz M; Stegun I A\\
``Handbook of Mathematical Functions''\\
Dover Publications. (1968) 

\bibitem[Altmann 05]{Alt05} Altmann, Simon L.\\
``Rotations, Quaternions, and Double Groups''\\
Dover Publications, Inc. 2005 ISBN 0-486-44518-6

\bibitem[Ames 77]{Ames77} Ames W F\\
``Nonlinear Partial Differential Equations in Engineering''\\
Academic Press (2nd Edition). (1977)

\bibitem[Amos 86]{Amos86} Amos D E\\
``Algorithm 644: A Portable Package for Bessel Functions of a Complex 
Argument and Nonnegative Order''\\
ACM Trans. Math. Softw. 12 265--273. (1986)

\bibitem[Anderson 00]{And00} Anderson, Edward\\
``Discontinuous Plane Rotations and the Symmetric Eigenvalue Problem''\\
LAPACK Working Note 150, University of Tennessee, UT-CS-00-454,
December 4, 2000.

\bibitem[Anthony 82]{ACH82} Anthony G T; Cox M G; Hayes J G\\
``DASL - Data Approximation Subroutine Library''\\
National Physical Laboratory. (1982) 

\bibitem[Aubry 99]{ALM99} P. Aubry; D. Lazard; M. Moreno Maza\\
``On the Theories of Triangular Sets''\\
Journal of Symbolic Computation 1999 Vol 28 pp105-124

\subsection{B} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Bailey 66]{Bai66} Bailey P B\\
``Sturm-Liouville Eigenvalues via a Phase Function''\\
SIAM J. Appl. Math . 14 242--249. (1966)

\bibitem[Baker 96]{BGM96} Baker, George A.; Graves-Morris, Peter\\
``Pade Approximants''\\
Cambridge University Press, March 1996 ISBN 9870521450072

\bibitem[Baker 10]{Ba10} Baker, Martin\\
``3D World Simulation''\\
\verb|www.euclideanspace.com|

\bibitem[Baker 14]{Ba14} Baker, Martin\\
``Axiom Architecture''\\
\verb|www.euclideanspace.com/prog/scratchpad/internals/ccode|

\bibitem[Banks 68]{BK68} Banks D O; Kurowski I\\
``Computation of Eigenvalues of Singular Sturm-Liouville Systems''\\
Math. Computing. 22 304--310. (1968)

\bibitem[Bard 74]{Bard74} Bard Y\\
``Nonlinear Parameter Estimation''\\
Academic Press. 1974

\bibitem[Barrodale 73]{BR73} Barrodale I; Roberts F D K\\
``An Improved Algorithm for Discrete $ll_1$ Linear Approximation''\\
SIAM J. Numer. Anal. 10 839--848. (1973) 

\bibitem[Barrodale 74]{BR74} Barrodale I; Roberts F D K\\
``Solution of an Overdetermined System of Equations in the $ll_1-norm$.''\\
Comm.  ACM. 17, 6 319--320. (1974) 

\bibitem[Beauzamy 92]{Bea92} Beauzamy, Bernard\\
``Products of polynomials and a priori estimates for
coefficients in polynomial decompositions: a sharp result''\\
J. Symbolic Computation (1992) 13, 463-472

\bibitem[Beauzamy 93]{Bea93} Beauzamy, Bernard; Trevisan, Vilmar; 
Wang, Paul S.\\
``Polynomial Factorization: Sharp Bounds, Efficient Algorithms''\\
J. Symbolic Computation (1993) 15, 393-413

\bibitem[Bertrand 95]{Ber95} Bertrand, Laurent\\ 
``Computing a hyperelliptic integral using arithmetic in the jacobian 
of the curve''\\ 
{\sl Applicable Algebra in Engineering, Communication and Computing}, 
6:275-298, 1995

\bibitem[Berzins 87]{BBG87} Berzins M; Brankin R W; Gladwell I.\\
``Design of the Stiff Integrators in the NAG Library''\\
Technical Report. TR14/87 NAG. (1987) 

\bibitem[Berzins 90]{Ber90} Berzins M\\
``Developments in the NAG Library Software for Parabolic Equations''\\
Scientific Software Systems. (ed J C Mason and M G Cox) 
Chapman and Hall. 59--72.  (1990)

\bibitem[Birkhoff 62]{BR62} Birkhoff, G; Rota, G C\\
``Ordinary Differential Equations''\\
Ginn \& Co., Boston and New York. (1962)

\bibitem[Boyd9 3a]{Boyd93a} Boyd, David W.\\
``Bounds for the Height of a Factor of a Polynomial in
Terms of Bombieri's Norms: I. The Largest Factor''\\
J. Symbolic Computation (1993) 16, 115-130

\bibitem[Boyd 93b]{Boyd93b} Boyd, David W.\\
``Bounds for the Height of a Factor of a Polynomial in
Terms of Bombieri's Norms: II. The Smallest Factor''\\
J. Symbolic Computation (1993) 16, 131-145

\bibitem[Braman 02a]{BBM02a} Braman, K.; Byers, R.; Mathias, R.\\ 
``The Multi-Shift QR Algorithm Part I: Maintaining Well Focused Shifts, 
and Level 3 Performance''\\
SIAM Journal of Matrix Analysis, volume 23, pages 929--947, 2002.

\bibitem[Braman 02b]{BBM02b} Braman, K.; Byers, R.; Mathias, R.\\
``The Multi-Shift QR Algorithm Part II: Aggressive Early Deflation''\\
SIAM Journal of Matrix Analysis, volume 23, pages 948--973, 2002.

\bibitem[Brent 75]{Bre75} Brent, R. P.\\ 
``Multiple-Precision Zero-Finding Methods and the Complexity 
of Elementary Function Evaluation, Analytic Computational Complexity''\\
J. F. Traub, Ed., Academic Press, New York 1975, 151-176 

\bibitem[Brent 78]{BK78} Brent, R. P.; Kung, H. T.\\
``Fast Algorithms for Manipulating Formal Power Series''\\
Journal of the Association for Computing Machinery, 
Vol. 25, No. 4, October 1978, 581-595

\bibitem[Brigham 73]{Bri73} Brigham E O\\
``The Fast Fourier Transform''\\
Prentice-Hall. (1973)

\bibitem[Brillhart 69]{Bri69} Brillhart, John\\
``On the Euler and Bernoulli polynomials''\\
J. Reine Angew. Math., v. 234, (1969), pp. 45-64

\bibitem[Brillhart 90]{Bri90} Brillhart, John\\
``Note on Irreducibility Testing''\\
Mathematics of Computation, vol. 35, num. 35, Oct. 1980, 1379-1381

\bibitem[Bronstein 88]{Bro88} Bronstein, Manual\\
``The Transcendental Risch Differential Equation''\\
J. Symbolic Computation (1990) 9, pp49-60 Feb 1988\\
IBM Research Report RC13460 IBM Corp. Yorktown Heights, NY
%\verb|axiom-developer.org/axiom-website/papers/Bro88.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We present a new rational algorithm for solving Risch differential
equations in towers of transcendental elementary extensions. In
contrast to a recent algorithm by Davenport we do not require a
progressive reduction of the denominators involved, but use weak
normality to obtain a formula for the denominator of a possible
solution. Implementation timings show this approach to be faster than
a Hermite-like reduction.
\end{adjustwidth}

\bibitem[Bronstein 90a]{Bro90a} Bronstein, Manuel\\
``Integration of Elementary Functions''\\
J. Symbolic Computation (1990) 9, pp117-173 September 1988
%\verb|axiom-developer.org/axiom-website/papers/Bro90a.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We extend a recent algorithm of Trager to a decision procedure for the
indefinite integration of elementary functions. We can express the
integral as an elementary function or prove that it is not
elementary. We show that if the problem of integration in finite terms
is solvable on a given elementary function field $k$, then it is
solvable in any algebraic extension of $k(\theta)$, where $\theta$ is
a logarithm or exponential of an element of $k$. Our proof considers
an element of such an extension field to be an algebraic function of
one variable over $k$.

In his algorithm for the integration of algebraic functions, Trager
describes a Hermite-type reduction to reduce the problem to an
integrand with only simple finite poles on the associated Riemann
surface. We generalize that technique to curves over liouvillian
ground fields, and use it to simplify our integrands.  Once the
multipe finite poles have been removed, we use the Puiseux expansions
of the integrand at infinity and a generalization of the residues to
compute the integral. We also generalize a result of Rothstein that
gives us a necessary condition for elementary integrability, and
provide examples of its use.
\end{adjustwidth}

\bibitem[Bronstein 90c]{Bro90c} Bronstein, M.\\
``On the integration of elementary functions''\\
{\sl Journal of Symbolic Computation} 9(2):117-173, February 1990

\bibitem[Bronstein 93]{REF-BS93} Bronstein, Manuel; Salvy, Bruno\\
``Full partial fraction decomposition of rational functions''\\
In Bronstein [Bro93] pp157-160 ISBN 0-89791-604-2 LCCN QA76.95 I59 1993\\
\verb|www.acm.org/pubs/citations/proceedings/issac/164081/|

\bibitem[Bronstein 98]{REF-Bro98} Bronstein, M.\\
``The lazy hermite reduction''\\
Rapport de Recherche RR-3562, INRIA, 1998

\bibitem[Bronstein 98b]{Bro98b} Bronstein, Manuel\\
``Symbolic Integration Tutorial''\\
INRIA Sophia Antipolis ISSAC 1998 Rostock
%\verb|axiom-developer.org/axiom-website/papers/Bro98b.pdf|

\subsection{C} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Carlson 65]{Car65} Carlson B C\\
``On Computing Elliptic Integrals and Functions''\\
J Math Phys. 44 36--51. (1965)

\bibitem[Carlson 77a]{Car77a} Carlson B C\\
``Elliptic Integrals of the First Kind''\\
SIAM J Math Anal. 8 231--242. (1977)

\bibitem[Carlson 77b]{Car77b} Carlson B C\\
``Special Functions of Applied Mathematics''\\
Academic Press. (1977)

\bibitem[Carlson 78]{Car78} Carlson B C,\\
``Computing Elliptic Integrals by Duplication''\\
(Preprint) Department of Physics, Iowa State University. (1978)

\bibitem[Carlson 88]{Car88} Carlson B C,\\
``A Table of Elliptic Integrals of the Third Kind''\\
Math. Comput. 51 267--280. (1988)

\bibitem[Cauchy 1829]{Cau1829} Augustin-Lux Cauchy\\
``Exercices de Math\'ematiques Quatri\`eme Ann\'ee. De Bure Fr\`eres''\\
Paris 1829 (reprinted Oeuvres, II S\'erie, Tome IX,
Gauthier-Villars, Paris, 1891).

\bibitem[Childs 79]{CSDDN79} Childs B; Scott M; Daniel J W; Denman E; 
Nelson P (eds)\\
``Codes for Boundary-value Problems in Ordinary Differential Equations''\\
Lecture Notes in Computer Science. 76 (1979) Springer-Verlag

\bibitem[Clausen 89]{Cla89} Clausen, M.; Fortenbacher, A.\\
``Efficient Solution of Linear Diophantine Equations''\\
JSC (1989) 8, 201-216

\bibitem[Clenshaw 55]{Cle55} Clenshaw C W,\\
``A Note on the Summation of Chebyshev Series''\\
Math. Tables Aids Comput. 9 118--120. (1955) 

\bibitem[Clenshaw 60]{Cle60} Clenshaw C W\\
``Curve Fitting with a Digital Computer''\\
Comput. J. 2 170--173. (1960)

\bibitem[Clenshaw 62]{Cle62} Clenshaw C W\\
``Mathematical Tables. Chebyshev Series for Mathematical Functions''\\
HMSO. (1962)

\bibitem[Cline 84]{CR84} Cline A K; Renka R L,\\
``A Storage-efficient Method for Construction of a Thiessen Triangulation''\\
Rocky Mountain J. Math. 14 119--139. (1984) 

\bibitem[Conway 87]{CCNPW87} Conway, J.; Curtis, R.; Norton, S.; Parker, R.;
Wilson, R.\\
``Atlas of Finite Groups''\\
Oxford, Clarendon Press, 1987

\bibitem[Conway 03]{CS03} Conway, John H.; Smith, Derek, A.\\
``On Quaternions and Octonions''\\
A.K Peters, Natick, MA. (2003) ISBN 1-56881-134-9

\bibitem[Cox 72]{Cox72} Cox M G\\
``The Numerical Evaluation of B-splines''\\
J. Inst. Math. Appl. 10 134--149. (1972)

\bibitem[CH 73]{CH73} Cox M G; Hayes J G\\
``Curve fitting: a guide and suite of algorithms for the 
non-specialist user''\\
Report NAC26. National Physical Laboratory.  (1973) 

\bibitem[Cox 74a]{Cox74a} Cox M G\\
``A Data-fitting Package for the Non-specialist User''\\
Software for Numerical Mathematics. (ed D J Evans) Academic Press. (1974) 

\bibitem[Cox 74b]{Cox74b} Cox M G\\
``Numerical methods for the interpolation and approximation of data 
by spline functions''\\
PhD Thesis. City University, London. (1975) 

\bibitem[Cox 75]{Cox75} Cox M G\\
``An Algorithm for Spline Interpolation''\\
J. Inst. Math. Appl. 15 95--108. (1975) 

\bibitem[Cox 77]{Cox77} Cox M G\\
``A Survey of Numerical Methods for Data and Function Approximation''\\
The State of the Art in Numerical Analysis. (ed D A H Jacobs) 
Academic Press. 627--668. (1977)

\bibitem[Cox 78]{Cox78} Cox M G\\
``The Numerical Evaluation of a Spline from its B-spline Representation''\\
J. Inst. Math. Appl. 21 135--143. (1978) 

\bibitem[Curtis 74]{CPR74} Curtis A R; Powell M J D; Reid J K\\
``On the Estimation of Sparse Jacobian Matrices''\\
J. Inst. Maths Applics. 13 117--119. (1974) 

\subsection{D} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Dahlquist 74]{DB74} Dahlquist G; Bjork A\\
``Numerical Methods''\\
Prentice- Hall. (1974)

\bibitem[Dalmas 98]{DA98} Dalmas, Stephane; Arsac, Olivier\\
``The INRIA OpenMath Library''\\
Projet SAFIR, INRIA Sophia Antipolis Nov 25, 1998

\bibitem[Dantzig 63]{Dan63} Dantzig G B\\
``Linear Programming and Extensions''\\
Princeton University Press. (1963) 

\bibitem[Davenport]{Dav} Davenport, James\\
``On Brillhart Irreducibility.''\\
To appear.

\bibitem[Davenport 93]{Ref-Dav93} Davenport, J.H.\\
``Primality testing revisited''\\
Technical Report TR2/93
(ATR/6)(NP2556) Numerical Algorithms Group, Inc., Downer's Grove, IL, USA
and Oxford, UK, August 1993\\
\verb|www.nag.co.uk/doc/TechRep/axiomtr.html|

\bibitem[Davis 67]{DR67} Davis P J; Rabinowitz P\\
``Numerical Integration''\\
Blaisdell Publishing Company. 33--52. (1967) 

\bibitem[Davis 75]{DR75} Davis P J; Rabinowitz P\\
``Methods of Numerical Integration''\\
Academic Press. (1975) 

\bibitem[DeBoor 72]{DeB72} De Boor C\\
``On Calculating with B-splines''\\
J. Approx. Theory. 6 50--62. (1972) 

\bibitem[De Doncker 78]{DeD78} De Doncker E,\\
``An Adaptive Extrapolation Algorithm for Automatic Integration''\\
Signum Newsletter. 13 (2) 12--18. (1978) 

\bibitem[Demmel 89]{Dem89} Demmel J W\\
``On Floating-point Errors in Cholesky''\\
LAPACK Working Note No. 14. University of Tennessee, Knoxville. 1989

\bibitem[Dennis 77]{DM77} Dennis J E Jr; More J J\\
``Quasi-Newton Methods, Motivation and Theory''\\
SIAM Review. 19 46--89. 1977

\bibitem[Dennis 81]{DS81} Dennis J E Jr; Schnabel R B\\
``A New Derivation of Symmetric Positive-Definite Secant Updates''\\
Nonlinear Programming 4. (ed O L Mangasarian, R R Meyer and S M. Robinson) 
Academic Press. 167--199. (1981) 

\bibitem[Dennis 83]{DS83} Dennis J E Jr; Schnabel R B\\
``Numerical Methods for Unconstrained Optimixation and Nonlinear Equations''\\
Prentice-Hall.(1983) 

\bibitem[Dierckx 75]{Die75} Dierckx P\\
``An Algorithm for Smoothing, Differentiating and Integration of 
Experimental Data Using Spline Functions''\\
J. Comput. Appl. Math. 1 165--184. (1975) 

\bibitem[Dierckx 81]{Die81} Dierckx P\\
``An Improved Algorithm for Curve Fitting with Spline Functions''\\
Report TW54. Dept. of Computer Science, Katholieke Universiteit Leuven. 1981

\bibitem[Dierckx 82]{Die82} Dierckx P\\
``A Fast Algorithm for Smoothing Data on a Rectangular Grid while using 
Spline Functions''\\
SIAM J. Numer. Anal. 19 1286--1304. (1982) 

\bibitem[Dongarra 79]{DMBS79} Dongarra J J; Moler C B; Bunch J R; 
Stewart G W\\
``LINPACK Users' Guide''\\
SIAM, Philadelphia. (1979)

\bibitem[Dongarra 85]{DCHH85} Dongarra J J; Du Croz J J; Hammarling S;
Hanson R J\\
``A Proposal for an Extended set of Fortran Basic Linear 
Algebra Subprograms''\\
SIGNUM Newsletter. 20 (1) 2--18. (1985) 

\bibitem[Dongarra 88]{REF-DON88} Dongarra, Jack J.; Du Croz, Jeremy; 
Hammarling, Sven; Hanson, Richard J.\\
``An Extended Set of FORTRAN Basic Linear Algebra Subroutines''\\
ACM Transactions on Mathematical Software, Vol 14, No 1, March 1988,
pp 1-17

\bibitem[Dongarra 88a]{REF-DON88a} Dongarra, Jack J.; Du Croz, Jeremy;
Hammarling, Sven; Hanson, Richard J.\\
``ALGORITHM 656: An Extended Set of Basic Linear Algebra Subprograms:
Model Implementation and Test Programs''\\
ACM Transactions on Mathematical Software, Vol 14, No 1, March 1988,
pp 18-32

\bibitem[Dongarra 90]{REF-DON90} Dongarra, Jack J.; Du Croz, Jeremy;
Hammarling, Sven; Duff, Iain S.\\
``A Set of Level 3 Basic Linear Algebra Subprograms''\\
ACM Transactions on Mathematical Software, Vol 16, No 1, March 1990,
pp 1-17

\bibitem[Dongarra 90a]{REF-DON90a} Dongarra, Jack J.; Du Croz, Jeremy;
Hammarling, Sven; Duff, Iain S.\\
``ALGORITHM 679: A Set of Level 3 Basic Linear Algebra Subprograms: 
Model Implementation and Test Programs''\\
ACM Transactions on Mathematical Software, Vol 16, No 1, March 1990,
pp 18-28

\bibitem[Ducos 00]{Duc00} Ducos, Lionel\\
``Optimizations of the subresultant algorithm''\\
Journal of Pure and Applied Algebra V145 No 2 Jan 2000 pp149-163

\bibitem[Duff 77]{Duff77} Duff I S,\\
``MA28 -- a set of Fortran subroutines for sparse unsymmetric linear 
equations''\\
A.E.R.E. Report R.8730. HMSO. (1977) 

\subsection{F} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Fletcher 01]{Fl01} Fletcher, John P.\\
``Symbolic processing of Clifford Numbers in C++''\\
Paper 25, AGACSE 2001.

\bibitem[Fletcher 09]{Fl09} Fletcher, John P.\\
``Clifford Numbers and their inverses calculated using the matrix 
representation.''\\
Chemical Engineering and
Applied Chemistry, School of Engineering and Applied Science, Aston
University, Aston Triangle, Birmingham B4 7 ET, U. K. \\
\verb|www.ceac.aston.ac.uk/research/staff/jpf/papers/paper24/index.php|

\bibitem[Fletcher 81]{Fle81} Fletcher R\\
``Practical Methods of Optimization''\\
Vol 2. Constrained Optimization. Wiley. (1981) 

\bibitem[Floyd 63]{Flo63} Floyd, R. W.\\
``Semantic Analysis and Operator Precedence''\\
JACM 10, 3, 316-333 (1963)

\bibitem[Forsythe 57]{For57} Forsythe G E,\\
``Generation and use of orthogonal polynomials for data fitting 
with a digital computer''\\
J. Soc. Indust. Appl. Math. 5 74--88. (1957) 

\bibitem[Fortenbacher 90]{REF-For90} Fortenbacher, A.\\
``Efficient type inference and coercion in computer algebra''\\
Design and Implementation of Symbolic Computation Systems (DISCO 90)
A. Miola, (ed) vol 429 of Lecture Notes in Computer Science
Springer-Verlag, pp56-60

\begin{adjustwidth}{2.5em}{0pt}
Computer algebra systems of the new generation, like Scratchpad, are
characterized by a very rich type concept, which models the
relationship between mathematical domains of computation. To use these
systems interactively, however, the user should be freed of type
information. A type inference mechanism determines the appropriate
function to call. All known models which allow to define a semantics
for type inference cannot express the rich ``mathematical'' type
structure, so presently type inference is done heuristically.  The
following paper defines a semantics for a subproblem thereof, namely
coercion, which is based on rewrite rules. From this definition, and
efficient coercion algorith for Scratchpad is constructed using graph
techniques.
\end{adjustwidth}

\bibitem[Fox 68]{Fox68} Fox L.; Parker I B.\\
``Chebyshev Polynomials in Numerical Analysis''\\
Oxford University Press. (1968)

\bibitem[Franke 80]{FN80} Franke R.; Nielson G\\
``Smooth Interpolation of Large Sets of Scattered Data''\\
Internat. J. Num. Methods Engrg. 15 1691--1704. (1980) 

\bibitem[Fritsch 82]{Fri82} Fritsch F N\\
``PCHIP Final Specifications''\\
Report UCID-30194. Lawrence Livermore National Laboratory. (1982) 

\bibitem[Fritsch 84]{FB84} Fritsch F N.; Butland J.\\
``A Method for Constructing Local Monotone Piecewise Cubic Interpolants''\\
SIAM J. Sci. Statist. Comput. 5 300--304. (1984) 

\bibitem[Froberg 65]{Fro65} Froberg C E.\\
``Introduction to Numerical Analysis''\\
Addison-Wesley. 181--187. (1965) 

\subsection{G} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Garcia 95]{Ga95} Garcia, A.; Stichtenoth, H.\\
``A tower of Artin-Schreier extensions of function fields attaining the 
Drinfeld-Vladut bound''\\
Invent. Math., vol. 121, 1995, pp. 211--222.

\bibitem[Gathen 90]{Gat90} Gathen, Joachim von zur\\
``Functional Decomposition Polynomials: the Tame Case''\\
Journal of Symbolic Computation (1990) 9, 281-299

\bibitem[Gathen 99]{GG99} Gathen, Joachim von zur; Gerhard, J\"urgen\\
``Modern Computer Algebra''\\
Cambridge University Press 1999 ISBN 0-521-64176-4

\bibitem[Gautschi 79a]{Gau79a} Gautschi W.\\
``A Computational Procedure for Incomplete Gamma Functions''\\
ACM Trans. Math. Softw. 5 466--481. (1979)

\bibitem[Gautschi 79b]{Gau79b} Gautschi W.\\
``Algorithm 542: Incomplete Gamma Functions''\\
ACM Trans. Math. Softw. 5 482--489.  (1979)

\bibitem[Gentlemen 69]{Gen69} Gentlemen W M\\
``An Error Analysis of Goertzel's (Watt's) Method for Computing 
Fourier Coefficients''\\
Comput. J. 12 160--165. (1969) 

\bibitem[Gentleman 73]{Gen73} Gentleman W M.\\ 
``Least-squares Computations by Givens Transformations without Square Roots''\\
J. Inst. Math. Applic. 12 329--336. (1973) 

\bibitem[Gentleman 74]{Gen74} Gentleman W M.\\
``Algorithm AS 75. Basic Procedures for Large Sparse or 
Weighted Linear Least-squares Problems''\\
Appl. Statist. 23 448--454. (1974) 

\bibitem[Gentlemen 74a]{GM74a} Gentleman W. M.; Marovich S. B.\\ 
``More on algorithms  that reveal properties of floating point 
arithmetic units''\\
Comms. of the ACM, 17, 276-277.  (1974)

\bibitem[Genz 80]{GM80} Genz A C.;  Malik A A.\\
``An Adaptive Algorithm for Numerical Integration over an N-dimensional 
Rectangular Region''\\
J. Comput. Appl. Math. 6 295--302.  (1980) 

\bibitem[Gill 72]{GM72} Gill P E.; Miller G F.\\
``An Algorithm for the Integration of Unequally Spaced Data''\\
Comput. J. 15 80--83. (1972) 

\bibitem[Gill 74b]{GM74b} Gill P E.; Murray W. (eds)\\
``Numerical Methods for Constrained Optimization''\\
Academic Press. (1974) 

\bibitem[Gill 76a]{GM76a} Gill P E.; Murray W.\\
``Minimization subject to bounds on the variables''\\
Report NAC 72. National Physical Laboratory. (1976) 

\bibitem[Gill 76b]{GM76b} Gill P E.; Murray W.\\
``Algorithms for the Solution of the Nonlinear Least-squares Problem''\\
NAC 71 National Physical Laboratory. (1976)

\bibitem[Gill 78]{GM78} Gill P E.; Murray W.\\
``Algorithms for the Solution of the Nonlinear Least-squares Problem''\\
SIAM J. Numer. Anal. 15 977--992. (1978) 

\bibitem[Gill 79]{GM79} Gill P E.;  Murray W;\\
``Conjugate-gradient Methods for Large-scale Nonlinear Optimization''\\
Technical Report SOL 79-15. Department of Operations Research, 
Stanford University. (1979) 

\bibitem[Gill 81]{GMW81} Gill P E.; Murray W.; Wright M H.\\
``Practical Optimization''\\
Academic Press. 1981

\bibitem[Gill 82]{GMW82} Gill P E.; Murray W.; Saunders M A.; Wright M H.\\
``The design and implementation of a quadratic programming algorithm''\\
Report SOL 82-7. Department of Operations Research, 
Stanford University. (1982) 

\bibitem[Gill 84a]{GMSW84a} Gill P E.; Murray W.; Saunders M A.; Wright M H\\
``User's Guide for SOL/QPSOL Version 3.2''\\
Report SOL 84-5. Department of Operations Research, Stanford University. 1984

\bibitem[Gill 84b]{GMSW84b} Gill P E.; Murray W.; Saunders M A.; Wright M H\\
``Procedures for Optimization Problems with a Mixture of
Bounds and General Linear Constraints''\\
ACM Trans. Math. Softw. 10 282--298. 1984

\bibitem[Gill 86a]{GMSW86a} Gill P E.; Hammarling S.; Murray W.; 
Saunders M A.; Wright M H.\\
``User's Guide for LSSOL (Version 1.0)''\\
Report SOL 86-1. Department of Operations Research, Stanford University. 1986

\bibitem[Gill 86b]{GMSW86b} Gill P E.; Murray W.; Saunders M A.; Wright M H.\\
``Some Theoretical Properties of an Augmented Lagrangian Merit Function''\\
Report SOL 86-6R. Department of Operations Research, Stanford University. 1986

\bibitem[Gladwell 79]{Gla79} Gladwell I\\
``Initial Value Routines in the NAG Library''\\
ACM Trans Math Softw. 5 386--400. (1979) 

\bibitem[Gladwell 80]{GS80} Gladwell I.; Sayers D K\\
``Computational Techniques for Ordinary Differential Equations''\\
Academic Press. 1980

\bibitem[Gladwell 86]{Gla86} Gladwell I\\
``Vectorisation of one dimensional quadrature codes''\\
Techincal Report. TR7/86  NAG. (1986) 

\bibitem[Gladwell 87]{Gla87} Gladwell I\\
``The NAG Library Boundary Value Codes''\\
Numerical Analysis Report. 134 Manchester University. (1987) 

\bibitem[Goedel 40]{God40} Goedel\\
``The consistency of the continuum hypothesis''\\
Ann. Math. Studies, Princeton Univ. Press, 1940

\bibitem[Gollan 90]{GG90} H. Gollan; J. Grabmeier\\
``Algorithms in Representation Theory and
their Realization in the Computer Algebra System Scratchpad''\\
Bayreuther Mathematische Schriften, Heft 33, 1990, 1-23

\bibitem[Golub 89]{GL89} Golub, Gene H.; Van Loan, Charles F.\\
``Matrix Computations''\\
Johns Hopkins University Press ISBN 0-8018-3772-3 (1989)

\bibitem[Golub 96]{GL96} Golub, Gene H.; Van Loan, Charles F.\\
``Matrix Computations''\\
Johns Hopkins University Press ISBN 978-0-8018-5414-9 (1996)

\bibitem[Grabmeier]{Grab} Grabmeier, J.\\
``On Plesken's root finding algorithm''\\
in preparation

\bibitem[Grebmeier 87]{GK87} Grabmeier, J.; Kerber, A.;
``The Evaluation of Irreducible Polynomial Representations of the General 
Linear Groups and of the Unitary Groups over Fields of Characteristic 0''\\
Acta Appl. Math. 8 (1987), 271-291

\bibitem[Grabmeier 92]{REF-GS92} Grabmeier, J.; Scheerhorn, A.\\
``Finite fields in Axiom''\\
AXIOM Technical Report TR7/92 (ATR/5)(NP2522), 
Numerical Algorithms Group, Inc., Downer's
Grove, IL, USA and Oxford, UK, 1992\\
\verb|www.nag.co.uk/doc/TechRep/axiomtr.html|

\bibitem[Gruntz 93]{Gru93} Gruntz, Dominik\\
``Limit computation in computer algebra''\\
\verb|algo.inria.fr/seminars/sem92-93/gruntz.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Gru93.pdf|

\begin{adjustwidth}{2.5em}{0pt}
The automatic computation of limits can be reduced to two main
sub-problems. The first one is asymptotic comparison where one must
decide automatically which one of two functions in a specified class
dominates the other one asymptotically. The second one is asymptotic
cancellation and is usually exemplified by
\[e^x[exp(1/x+e^{-x})-exp(1/x)],\quad{}x \leftarrow \infty\]

In this example, if the sum is expanded in powers of $1/x$, the
expansion always yields $O(x^{-k})$, and this is not enough to
conclude.

In 1990, J.Shackell found an algorithm that solved both these problems
for the case of $exp-log$ functions, i.e. functions build by recursive
application of exponential, logarithm, algebraic extension and field
operations to one variable and the rational numbers. D. Gruntz and
G. Gonnet propose a slightly different algorithm for exp-log
functions.  Extensions to larger classes of functions are also
discussed.
\end{adjustwidth}

\subsection{H} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Hache 95]{HL95} Hach\'e, G.; Le Brigand, D.\\
``Effective construction of algebraic geometry codes''\\
IEEE Transaction on Information Theory, vol. 41, n27 6, 
November 1995, pp. 1615--1628.

\bibitem[Hache 95a]{Ha95} Hach\'e, G.\\
``Computation in algebraic function fields for effective 
construction of algebraic-geometric codes''\\
Lecture Notes in Computer Science, vol. 948, 1995, pp. 262--278.

\bibitem[Hache 96]{Ha96} Hach\'e, G.\\
``Construction effective des codes g\'eom\'etriques''\\
Th\'ese de doctorat de l'Universit\'e Pierre et Marie Curie (Paris 6), 
Septembre 1996.

\bibitem[Hall 76]{HW76} Hall G.; Watt J M. (eds), 
``Modern Numerical Methods for Ordinary Differential Equations''\\
Clarendon Press. (1976)

\bibitem[Hamdy 04]{Ham04} Hamdy, S.\\
``LiDIA A library for computational number theory''\\
Reference manual Edition 2.1.1 May 2004\\
\verb|www.cdc.informatik.tu-darmstadt.de/TI/LiDIA|

\bibitem[Hammarling 85]{Ham85} Hammarling S.\\
`` The Singular Value Decomposition in Multivariate Statistics''\\
ACM Signum Newsletter. 20, 3 2--25. (1985) 

\bibitem[Hammersley 67]{HH67} Hammersley J M; Handscomb D C.\\
``Monte-Carlo Methods''\\
Methuen. (1967)

\bibitem[Hathway 1896]{Ha1896} Hathway, Arthur S.\\
``A Primer Of Quaternions''\\
(1896)

\bibitem[Hayes 70]{Hay70} Hayes J G.\\
``Curve Fitting by Polynomials in One Variable''\\
Numerical Approximation to Functions and Data. 
(ed J G Hayes) Athlone Press, London. (1970) 

\bibitem[Hayes 74]{Hay74} Hayes J G.\\
``Numerical Methods for Curve and Surface Fitting''\\
Bull Inst Math Appl. 10 144--152. (1974) 

\bibitem[Hayes 74a]{HH74} Hayes J G.; Halliday J,\\
``The Least-squares Fitting of Cubic Spline Surfaces to General Data Sets''\\
J. Inst. Math. Appl. 14 89--103. (1974) 

\bibitem[Henrici 56]{Hen56} Henrici, Peter\\
``Automatic Computations with Power Series''\\
Journal of the Association for Computing Machinery, Volume 3, No. 1,
January 1956, 10-15

\bibitem[Higham 88]{Hig88} Higham, N.J.\\
``FORTRAN codes for estimating the one-norm of a
real or complex matrix, with applications to condition estimation''\\
ACM Trans. Math. Soft., vol. 14, no. 4, pp. 381-396, December 1988.

\bibitem[Higham 02]{Hig02} Higham, Nicholas J.\\
``Accuracy and stability of numerical algorithms''\\
SIAM Philadelphia, PA ISBN 0-89871-521-0 (2002)

\bibitem[Hock 81]{HS81} Hock W.; Schittkowski K.\\
``Test Examples for Nonlinear Programming Codes''\\
Lecture Notes in Economics and Mathematical Systems. 187 Springer-Verlag. 1981

\bibitem[Householder 70]{Hou70} Householder A S.\\
``The Numerical Treatment of a Single Nonlinear Equation''\\
McGraw-Hill. (1970)

\bibitem[Householder 81]{Hou81} Householder, Alston S.\\
``Principles of Numerical Analysis''\\
Dover Publications, Mineola, NY ISBN 0-486-45312-X (1981)

\bibitem[Huang 96]{HI96} Huang, M.D.; Ierardi, D.\\
``Efficient algorithms for Riemann-Roch problem and for addition in the 
jacobian of a curve''\\
Proceedings 32nd Annual Symposium on Foundations of Computer Sciences. 
IEEE Comput. Soc. Press, pp. 678--687.

\subsection{I} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[IBM]{IBM}.\\
SCRIPT Mathematical Formula Formatter User's Guide, SH20-6453,
IBM Corporation, Publishing Systems Information Development,
Dept. G68, P.O. Box 1900, Boulder, Colorado, USA 80301-9191.

\bibitem[Itoh 88]{IT88} Itoh, T.;, Tsujii, S.\\
``A fast algorithm for computing multiplicative inverses
in $GF(2^m)$ using normal bases''\\
Inf. and Comp. 78, pp.171-177, 1988

\bibitem[Iyanaga 77]{Iya77} Iyanaga, Shokichi; Iyanaga, Yukiyosi Kawada\\
``Encyclopedic Dictionary of Mathematics''\\
1977

\subsection{J} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Jacobson 68]{Jac68} Jacobson, N.\\
``Structure and Representations of Jordan Algebras''\\
AMS, Colloquium Publications Volume 39

\bibitem[James 81]{JK81} James, Gordon; Kerber, Adalbert\\
``The Representation Theory of the Symmetric Group''\\
Encyclopedia of Mathematics and its Applications Vol. 16
Addison-Wesley, 1981

\bibitem[Jaswon 77]{JS77} Jaswon, M A.; Symm G T.\\ 
``Integral Equation Methods in Potential Theory and Elastostatics''\\
Academic Press. (1977)

\bibitem[Jeffrey 04]{Je04} Jeffrey, Alan\\
``Handbook of Mathematical Formulas and Integrals''\\
Third Edition, Elsevier Academic Press ISBN 0-12-382256-4

\bibitem[Jenning 66]{Jen66} Jennings A\\
``A Compact Storage Scheme for the Solution of Symmetric Linear 
Simultaneous Equations''\\
Comput. J. 9 281--285. (1966) 

\subsection{K} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Kalkbrener 91]{Kal91} Kalkbrener, M.\\
``Three contributions to elimination theory''\\
Ph. D. Thesis, University of Linz, Austria, 1991

\bibitem[Kalkbrener 98]{Kal98} Kalkbrener, M.\\
``Algorithmic properties of polynomial rings''\\
Journal of Symbolic Computation 1998

\bibitem[Kantor 89]{Kan89} Kantor,I.L.; Solodovnikov, A.S.\\
``Hypercomplex Numbers''\\
Springer Verlag Heidelberg, 1989, ISBN 0-387-96980-2

\bibitem[Kaufmann 00]{KMJ00} Kaufmann, Matt; Manolios, Panagiotis; 
Moore J Strother\\
``Computer-Aided Reasoning: An Approach''\\
Springer, July 31. 2000 ISBN 0792377443

\bibitem[Knuth 71]{Knu71} Knuth, Donald\\
``The Art of Computer Programming''\\
2nd edition Vol. 2 (Seminumerical Algorithms) 1st edition, 2nd printing, 
Addison-Wesley 1971, p. 397-398

\bibitem[Knuth 84]{Knu84} Knuth, Donald\\
{\it The \TeX{}book}.\\
Reading, Massachusetts, Addison-Wesley Publishing Company, Inc., 
1984. ISBN 0-201-13448-9

\bibitem[Knuth 92]{Kn92} Knuth, Donald E.\\
``Literate Programming''\\
Center for the Study of Language and Information
ISBN 0-937073-81-4 Stanford CA (1992) 

\bibitem[Knu98]{Knu98} Donald Knuth\\
``The Art of Computer Programming'' Vol. 3
(Sorting and Searching)
Addison-Wesley 1998

\bibitem[Kolchin 73]{Kol73} Kolchin, E.R.\\
``Differential Algebra and Algebraic Groups''\\
(Academic Press, 1973).

\bibitem[Koutschan 10]{Kou10} Koutschan, Christoph\\
``Axiom / FriCAS''\\
\verb|www.risc.jku.at/education/courses/ws2010/cas/axiom.pdf|

\bibitem[Kozen 86]{KL86} Kozen, Dexter; Landau, Susan\\
``Polynomial Decomposition Algorithms''\\
Journal of Symbolic Computation (1989) 7, 445-456

\subsection{L} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Lamport 86]{La86} Lamport, Leslie\\
{\it LaTeX: A Document Preparation System,}.\\
Reading, Massachusetts, Addison-Wesley Publishing Company, Inc., 
1986. ISBN 0-201-15790-X

\bibitem[Lautrup 71]{Lau71} Lautrup B.\\
``An Adaptive Multi-dimensional Integration Procedure''\\
Proc. 2nd Coll. on Advanced Methods in Theoretical Physics, Marseille. (1971) 

\bibitem[Lawson 77]{Law77} Lawson C L.\\
``Software for C  Surface Interpolation''\\
Mathematical Software III. (ed J R Rice) Academic Press. 161--194. (1977) 

\bibitem[Lawson 74]{LH74} Lawson C L.;  Hanson R J.\\
``Solving Least-squares Problems''\\
Prentice-Hall. (1974) 

\bibitem[Lawson 79]{REF-LAW79} Lawson, C.L.; Hanson R.J.; Kincaid, D.R.; 
Krogh, F.T.\\
``Algorithm 539: Basic linear algebra subprograms for FORTRAN usage''\\
ACM Transactions on Mathematical Software, Vol 5 No 3 September 1979
pp 308-323

\bibitem[Lawson 79]{LHKK79} Lawson C L; Hanson R J; Kincaid D R;
 Krogh F T\\
``Basic Linear Algebra Subprograms for Fortran Usage''\\
ACM Trans. Math. Softw. 5 308--325. (1979)

\bibitem[Lazard 91]{Laz91} Lazard, D.\\
``A new method for solving algebraic systems of positive dimension''\\
Discr. App. Math. 33:147-160,1991

\bibitem[Lazard92]{Laz92} Lazard, D.\\
``Solving Zero-dimensional Algebraic Systems''\\
Journal of Symbolic Computation, 1992, 13, 117-131

\bibitem[Lazard 90]{LR90} Lazard, Daniel; Rioboo, Renaud\\
``Integration of rational functions: Rational computation of the 
logarithmic part''\\
{\sl Journal of Symbolic Computation}, 9:113-116:1990

\bibitem[Le Brigand 88]{LR88} Le Brigand, D.; Risler, J.J.\\
``Algorithme de Brill-Noether et codes de Goppa''\\
Bull. Soc. Math. France, vol. 116, 1988, pp. 231--253.

\bibitem[Legendre 11]{LG11} Legendre, George L.; Grazini, Stefano\\
``Pasta by Design''\\
Thames and Hudson, ISBN 978-0-500-51580-8 (2011)

\bibitem[Lenstra 87]{LS87} Lenstra, H. W.; Schoof, R. J.\\
``Primitivive Normal Bases for Finite Fields''\\
Math. Comp. 48, 1987, pp. 217-231

\bibitem[Lewis 77]{Lew77} Lewis J G,\\
``Algorithms for sparse matrix eigenvalue problems''\\
Technical Report STAN-CS-77-595. Computer Science Department, 
Stanford University. (1977) 

\bibitem[Lidl 83]{LN83} Lidl, R.; Niederreiter, H.\\
``Finite Field, Encycoldia of Mathematics and Its Applications''\\
Vol. 20, Cambridge Univ. Press, 1983 ISBN 0-521-30240-4

\bibitem[Linger 79]{LMW79} Linger, Richard C.; Mills, Harlan D.; 
Witt, Bernard I.\\
``Structured Programming: Theory and Practice''\\
Addison-Wesley (March 1979) ISBN 0201144611

\bibitem[Lipson 81]{Lip81} Lipson, D.\\
``Elements of Algebra and Algebraic Computing''\\
The Benjamin/Cummings Publishing Company, Inc.-Menlo Park, California, 1981.

\bibitem[Loetzsch 09]{Loe09} Loetzsch, M.\\
``GTFL - A graphical terminal for Lisp''\\
\verb|martin-loetzsch.de/gtfl/|

\bibitem[Losch 60]{Los60} L\"osch, Friedrich\\
``Tables of Higher Functions''\\
McGraw-Hill Book Company 1960

\bibitem[LTU10]{LTU10}.\\
``Lambda the Ultimate''\\
\verb|lambda-the-ultimate.org/node/3663#comment-62440|

\bibitem[Luke 169]{Luk169} Luke, Yudell L.\\
``The Special Functions and their Approximations''\\
Volume I Academic Press (1969) 
Mathematics in Science and Engineering Volume 53-I

\bibitem[Luke 269]{Luk269} Luke, Yudell L.\\
``The Special Functions and their Approximations''\\
Volume II
Academic Press (1969) Mathematics in Science and Engineering Volume 53-II

\bibitem[Lyness 83]{Lyn83} Lyness J N.\\
``When not to use an automatic quadrature routine''\\
SIAM Review. 25 63--87. (1983) 

\subsection{M} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Mac Lane 79]{MB79} Mac Lane, Saunders; Birkhoff, Garret\\
``Algebra''\\
AMS Chelsea Publishing ISBN 0821816462

\bibitem[Malcolm 72]{Mal72} Malcolm M. A.\\
``Algorithms to reveal properties of floating-point arithmetic''
Comms. of the ACM, 15, 949-951.  (1972) 

\bibitem[Malcolm 76]{MS76} Malcolm M A.; Simpson R B.\\
``Local Versus Global Strategies for Adaptive Quadrature''\\
ACM Trans. Math. Softw. 1 129--146. (1976) 

\bibitem[Marden 66]{Mar66} Marden M.\\
``Geometry of Polynomials''\\
Mathematical Surveys. 3 Am. Math. Soc., Providence, RI. (1966)

\bibitem[Marshak 07]{Mar07} Marshak, U.\\
``HT-AJAX - AJAX framework for Hunchentoot''\\
\verb|common-lisp.net/project/ht-ajax/ht-ajax.html|

\bibitem[Maza 95]{MR95} Maza, M. Moreno; Rioboo, R.\\
``Computations of gcd over algebraic towers of simple extensions''\\
In proceedings of AAECC11 Paris, 1995.

\bibitem[Maza 97]{Maz97} Maza, M. Moreno\\
``Calculs de pgcd au-dessus des tours
d'extensions simples et resolution des systemes d'equations algebriques''\\
These, Universite P.etM. Curie, Paris, 1997.

\bibitem[Maza 98]{Maz98} Maza, M. Moreno\\
``A new algorithm for computing triangular
decomposition of algebraic varieties''\\
 NAG Tech. Rep. 4/98.

\bibitem[Mignotte 82]{Mig82} Mignotte, Maurice\\
``Some Useful Bounds''\\
Computing, Suppl. 4, 259-263 (1982), Springer-Verlag

\bibitem[McCarthy 83]{McC83} McCarthy G J.\\
``Investigation into the Multigrid Code MGD1''\\
Report AERE-R 10889. Harwell. (1983)

\bibitem[Mie97]{Mie97} Mielenz, Klaus D.\\
``Computation of Fresnel Integrals''\\
J. Res. Natl. Inst. Stand. Technol. (NIST) V102 No3 May-June 1997 pp363-365

\bibitem[Mie00]{Mie00} Mielenz, Klaus D.\\
``Computation of Fresnel Integrals II''\\
J. Res. Natl. Inst. Stand. Technol. (NIST) V105 No4 July-Aug 2000 pp589-590

\bibitem[Millen 68]{Mil68} Millen, J. K.\\
``CHARYBDIS: A LISP program to display mathematical expressions on 
typewriter-like devices''\\
Interactive Systems for Experimental and Applied Mathematics
M. Klerer and J. Reinfelds, eds., Academic Press, New York 1968, pp79-90

\bibitem[Minc 79]{Min79} Henryk Minc\\
``Evaluation of Permanents''\\
Proc. of the Edinburgh Math. Soc.(1979), 22/1 pp 27-32.

\bibitem[More 74]{MGH74} More J J.; Garbow B S.;  Hillstrom K E.\\
``User Guide for Minpack-1''\\
ANL-80-74 Argonne National Laboratory. (1974)

\bibitem[Mikhlin 67]{MS67} Mikhlin S G.; Smolitsky K L.\\
``Approximate Methods for the Solution of Differential and 
Integral Equations''\\
Elsevier.  (1967)

\bibitem[Mitchell 80]{MG80} Mitchell A R.; Griffiths D F.\\
``The Finite Difference Method in Partial Differential Equations''\\
Wiley. (1980)

\bibitem[Moler 73]{MS73} Moler C B.;  Stewart G W.\\
``An Algorithm for Generalized Matrix Eigenproblems''\\
SIAM J. Numer. Anal. 10 241--256. 1973

\bibitem[Mulders 97]{Mul97} Mulders. Thom\\
``A note on subresultants and a correction to the lazard/rioboo/trager 
formula in rational function integration''\\
{\sl Journal of Symbolic Computation}, 24(1):45-50, 1997

\bibitem[Munksgaard 80]{Mun80} Munksgaard N.\\
``Solving Sparse Symmetric Sets of Linear Equations by Pre-conditioned 
Conjugate Gradients''\\
ACM Trans. Math. Softw. 6 206--219. (1980) 

\bibitem[Murray 72]{Mur72} Murray W, (ed)\\
``Numerical Methods for Unconstrained Optimization''\\
Academic Press. (1972) 

\bibitem[Murtagh 83]{MS83} Murtagh B A.; Saunders M A\\
``MINOS 5.0 User's Guide''\\
Report SOL 83-20. Department of Operations Research, Stanford University 1983

\bibitem[Musser 78]{Mus78} Musser, David R.\\
``On the Efficiency of a Polynomial Irreducibility Test''\\
Journal of the ACM, Vol. 25, No. 2, April 1978, pp. 271-282

\subsection{N} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Nijenhuis 78]{NW78} Nijenhuis and Wilf\\
``Combinatorical Algorithms''\\
Academic Press, New York 1978.

\bibitem[Nikolai 79]{Nik79} Nikolai P J.\\
``Algorithm 538: Eigenvectors and eigenvalues of real generalized 
symmetric matrices by simultaneous iteration''\\
ACM Trans. Math. Softw. 5 118--125. (1979) 

\subsection{O} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[NIST10]{NIST10} Olver, Frank W.; Lozier, Daniel W.; 
Boisvert, Ronald F.; Clark, Charles W. (ed)\\
``NIST Handbook of Mathematical Functions''\\
(2010) Cambridge University Press ISBN 978-0-521-19225-5

\bibitem[OpenM]{OpenM}.\\
``OpenMath Technical Overview''\\
\verb|www.openmath.org/overview/technical.html|

\bibitem[Ortega 70]{OR70} Ortega J M.; Rheinboldt W C.\\
``Iterative Solution of Nonlinear Equations in Several Variables''\\
Academic Press. (1970)

\bibitem[Ostrogradsky 1845]{Ost1845} Ostrogradsky. M.W.\\
``De l'int\'{e}gration des fractions rationelles.''\\
{\sl Bulletin de la Classe Physico-Math\'{e}matiques de
l'Acae\'{e}mie Imp\'{e}riale des Sciences de St. P\'{e}tersbourg,}
IV:145-167,286-300, 1845

\subsection{P} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Paige 75]{PS75} Paige C C.; Saunders M A.\\
``Solution of Sparse Indefinite Systems of Linear Equations''\\
SIAM J. Numer. Anal. 12 617--629. (1975) 

\bibitem[Paige 82a]{PS82a} Paige C C.; Saunders M A.\\
``LSQR: An Algorithm for Sparse Linear Equations and Sparse Least-squares''\\
ACM Trans. Math. Softw. 8 43--71. (1982) 

\bibitem[Paige 82b]{PS82b} Paige C C.; Saunders M A.\\
``ALGORITHM 583 LSQR: Sparse Linear Equations and Least-squares Problems''\\
ACM Trans. Math. Softw. 8 195--209. (1982) 

\bibitem[Parker 84]{Par84} Parker, R. A.\\
``The Computer Calculation of Modular Characters (The Meat-Axe)''\\
M. D. Atkinson (Ed.), Computational Group Theory
Academic Press, Inc., London 1984

\bibitem[Parlett 80]{Par80} Parlett B N.\\
``The Symmetric Eigenvalue Problem''\\
Prentice-Hall. 1980

\bibitem[Parnas 10]{PJ10} Parnas, David Lorge; Jin, Ying\\
``Defining the meaning of tabular mathematical expressions''\\
Science of Computer Programming V75 No.11 Nov 2010 pp980-1000 Elesevier

\bibitem[Parnas 95]{PM95} Parnas, David Lorge; Madey, Jan\\
``Functional Documents for Computer Systems''\\
Science of Computer Programming V25 No.1 Oct 1995 pp41-61 Elesevier

\bibitem[Paul 81]{Paul81} Paul, Richard\\
``Robot Manipulators''\\
MIT Press 1981

\bibitem[Pearcey 56]{Pea56} Pearcey, T.\\
``Table of the Fresnel Integral''\\
Cambridge University Press 1956

\bibitem[Pereyra 79]{Per79} Pereyra V.\\
``PASVA3: An Adaptive Finite-Difference Fortran Program for First Order 
Nonlinear, Ordinary Boundary Problems''\\
Codes for Boundary Value Problems in Ordinary Differential Equations. 
Lecture Notes in Computer Science.
(ed B Childs, M Scott, J W Daniel, E Denman and P Nelson) 76
Springer-Verlag.  (1979) 

\bibitem[Peters 67a]{Pet67a} Peters G.\\
``NPL Algorithms Library''\\
Document No. F2/03/A. (1967)

\bibitem[Peters 67b]{Pet67b} Peters G.\\
``NPL Algorithms Library''\\
Document No.F1/04/A (1967) 

\bibitem[Peters 70]{PW70} Peters G.; Wilkinson J H.\\
``The Least-squares Problem and Pseudo-inverses''\\
Comput. J. 13 309--316. (1970) 

\bibitem[Peters 71]{PW71} Peters G.; Wilkinson J H.\\
``Practical Problems Arising in the Solution of Polynomial Equations''\\
J. Inst. Maths Applics. 8 16--35. (1971)

\bibitem[Pierce 82]{Pie82} R.S. Pierce\\
``Associative Algebras''\\
Graduate Texts in Mathematics 88
Springer-Verlag,  Heidelberg, 1982, ISBN 0-387-90693-2

\bibitem[Piessens 73]{Pie73} Piessens R.\\
``An Algorithm for Automatic Integration''\\
Angewandte Informatik. 15 399--401. (1973) 

\bibitem[Piessens 74]{PMB74} Piessens R.;; Mertens I.; Branders M.\\
``Integration of Functions having End-point Singularities''\\
Angewandte Informatik. 16 65--68. (1974) 

\bibitem[Piessens 75]{PB75} Piessens R.; Branders M.\\
``Algorithm 002. Computation of Oscillating Integrals''\\
J. Comput. Appl. Math. 1 153--164. (1975) 

\bibitem[Piessens 76]{PVRBM76} Piessens R.; Van Roy-Branders M.; Mertens I.\\
``The Automatic Evaluation of Cauchy Principal Value Integrals''\\
Angewandte Informatik. 18 31--35. (1976) 

\bibitem[Piessens 83]{PDUK83} Piessens R.; De Doncker-Kapenga E.; 
Uberhuber C.; Kahaner D.\\
``QUADPACK, A Subroutine Package for Automatic Integration''\\
Springer-Verlag.(1983) 

\bibitem[Polya 37]{Pol37} Polya, G.\\
``Kombinatorische Anzahlbestimmungen fur Gruppen,
Graphen und chemische Verbindungen''\\
Acta Math. 68 (1937) 145-254.

\bibitem[Powell 70]{Pow70} Powell M J D.\\ 
``A Hybrid Method for Nonlinear Algebraic Equations''\\
Numerical Methods for Nonlinear Algebraic Equations. 
(ed P Rabinowitz) Gordon and Breach. (1970)

\bibitem[Powell 74]{Pow74} Powell M J D.\\
``Introduction to Constrained Optimization''\\
Numerical Methods for Constrained Optimization. 
(ed P E Gill and W Murray) Academic Press. pp1-28. 1974

\bibitem[Powell 83]{Pow83} Powell M J D.
``Variable Metric Methods in Constrained Optimization''\\
Mathematical Programming: The State of the Art. 
(ed A Bachem, M Groetschel and B Korte) Springer-Verlag. pp288--311. 1983

\bibitem[Pratt 73]{Pra73} Pratt, Vaughan R.\\
``Top down operator precedence''\\
POPL '73 Proceedings of the 1st annual ACM SIGACT-SIGPLAN symposium on
Principles of programming languages \\
\verb|hall.org.ua/halls/wizzard/pdf/Vaughan.Pratt.TDOP.pdf|

\bibitem[Press 95]{PTVF95} Press, William H.; Teukolsky, Saul A.; 
Vetterling, William T.; Flannery, Brian P.\\
``Numerical Recipes in C''\\
Cambridge University Press (1995) ISBN 0-521-43108-5

\bibitem[Pryce 77]{PH77} Pryce J D.; Hargrave B A.\\
``The Scale Pruefer Method for one-parameter and multi-parameter eigenvalue 
problems in ODEs''\\
Inst. Math. Appl., Numerical Analysis Newsletter. 1(3)  (1977)

\bibitem[Pryce 81]{Pry81} Pryce J D.\\ 
``Two codes for Sturm-Liouville problems''\\
Technical Report CS-81-01. Dept of Computer Science, Bristol University (1981)

\bibitem[Pryce 86]{Pry86} Pryce J D.\\
``Error Estimation for Phase-function Shooting Methods for 
Sturm-Liouville Problems''\\
J. Num. Anal. 6 103--123. (1986)

\bibitem[Puffinware 09]{Pu09} Puffinware LLC.\\
``Singular Value Decomposition (SVD) Tutorial''\\
\verb|www.puffinwarellc.com/p3a.htm|

\subsection{Q} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Quintana-Orti 06]{QG06} Quintana-Orti, Gregorio; 
van de Geijn, Robert\\
``Improving the performance of reduction to Hessenberg form''\\
ACM Transactions on Mathematical Software, 32(2):180-194, June 2006.

\subsection{R} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Rabinowitz 70]{Rab70} Rabinowitz P.\\
``Numerical Methods for Nonlinear Algebraic Equations''\\
Gordon and Breach. (1970)

\bibitem[Ralston 65]{Ral65} Ralston A.\\
``A First Course in Numerical Analysis''\\
McGraw-Hill. 87--90. (1965) 

\bibitem[Ramakrishnan 03]{Ram03} Ramakrishnan, Maya\\
``A Gentle Introduction to Lyapunov Functions''\\
ORSUM August 2003\\
\verb|www.or.ms.unimelb.edu.au/handouts/lyaptalk.1.pdf|

\bibitem[Ramsey 03]{Ra03} Ramsey, Norman\\
``Noweb--A Simple, Extensible Tool for Literate Programming''\\
\verb|www.eecs.harvard.edu/~nr/noweb|

\bibitem[Redfield 27]{Red27} Redfield, J.H.\\
``The Theory of Group-Reduced Distributions''\\
American J. Math., 49 (1927) 433-455.

\bibitem[Reinsch 67]{Rei67} Reinsch C H.\\
``Smoothing by Spline Functions''\\
Num. Math. 10 177--183. (1967) 

\bibitem[Renka 84]{Ren84} Renka R L.\\
``Algorithm 624: Triangulation and Interpolation of Arbitrarily Distributed 
Points in the Plane''\\
ACM Trans. Math. Softw. 10 440--442. (1984) 

\bibitem[Renka 84]{RC84} Renka R L.; Cline A K.\\
``A Triangle-based C Interpolation Method''\\
Rocky Mountain J. Math. 14 223--237. (1984) 

\bibitem[Reutenauer 93]{Re93} Reutenauer, Christophe\\
``Free Lie Algebras''\\
Oxford University Press, June 1993 ISBN 0198536798

\bibitem[Rich 10]{Ri10} Rich, Albert D.\\
``Rule-based Mathematics''\\
\verb|www.apmaths.uwo.ca/~arich|

\bibitem[Richardson 94]{RF94} Richardson, Dan; Fitch, John\\
``The identity problem for elementary functions and constants''\\
ACM Proc. of ISSAC 94 pp285-290 ISBN 0-89791-638-7

\bibitem[Richtmyer 67]{RM67} Richtmyer R D.; Morton K W.\\
``Difference Methods for Initial-value Problems''\\
Interscience (2nd Edition).  (1967)

\bibitem[Rioboo 92]{REF-Rio92} Rioboo, R.\\
``Real algebraic closure of an ordered field, implementation in Axiom''\\
In Wang [Wan92], pp206-215 ISBN 0-89791-489-9 (soft cover)
In proceedings of the ISSAC'92 Conference, Berkeley 1992 pp. 206-215.
0-89791-490-2 (hard cover) LCCN QA76.95.I59 1992

\bibitem[Rioboo 96]{Rio96} Rioboo, R.\\
``Generic computation of the real closure of an ordered field''\\
In Mathematics and Computers in Simulation Volume 42, Issue 4-6,
November 1996.

\bibitem[Ritt 50]{Ritt50} Ritt, Joseph Fels\\
``Differential Algebra''\\
AMS Colloquium Publications Volume 33 ISBN 978-0-8218-4638-4

\bibitem[Rote 01]{Rote01} Rote, G\"unter\\
``Division-free algorithms for the determinant and the Pfaffian''\\
in Computational Discrete Mathematics ISBN 3-540-42775-9 pp119-135\\
\verb|page.mi.fu-berlin.de/rote/Papers/pdf/Division-free+algorithms.pdf|

\bibitem[Rubey 07]{Rub07} Rubey, Martin\\
``Formula Guessing with Axiom''\\
April 2007

\bibitem[Rutishauser 69]{Rut69} Rutishauser H.\\
``Computational aspects of F L Bauer's simultaneous iteration method''\\
Num. Math. 13 4--13.  (1969) 

\bibitem[Rutishauser 70]{Rut70} Rutishauser H.\\
``Simultaneous iteration method for symmetric matrices''\\
Num. Math. 16 205--223. (1970) 

\subsection{S} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Schafer 66]{Sch66} Schafer, R.D.\\
``An Introduction to Nonassociative Algebras''\\
Academic Press, New York, 1966

\bibitem[Schoenberg 53]{SW53} Schoenberg I J.; Whitney A.\\
``On Polya Frequency Functions III''\\
Trans. Amer. Math. Soc. 74  246--259. (1953) 

\bibitem[Schoenhage 82]{Sch82} Schoenhage, A.\\
``The fundamental theorem of algebra in terms of computational complexity''\\
preliminary report, Univ. Tuebingen, 1982

\bibitem[Schonfelder 76]{Sch76} Schonfelder J L.\\
``The Production of Special Function Routines for a Multi-Machine Library''\\
Software Practice and Experience. 6(1) (1976)

\bibitem[Seggern 93]{S93} von Seggern, David Henry\\
``CRC Standard Curves and Surfaces''\\
CRC Press (1993) ISBN 0-8493-0196-3

\bibitem[Seiler 95a]{Sei95a} Seiler, W.M.; Calmet, J.\\
``JET -- An Axiom Environment for Geometric Computations with Differential
Equations''
%\verb|axiom-developer.org/axiom-website/papers/Sei95a.pdf|

\bibitem[Shepard 68]{She68} Shepard D.\\
``A Two-dimensional Interpolation Function for Irregularly Spaced Data''\\
Proc. 23rd Nat. Conf. ACM. Brandon/Systems Press Inc., 
Princeton. 517--523. 1968

\bibitem[Sims 71]{Sims71} Sims, C.\\
``Determining the Conjugacy Classes of a Permutation Group''\\
Computers in Algebra and Number Theory, SIAM-AMS Proc., Vol. 4,
American Math. Soc., 1991, pp191-195

\bibitem[Sit 92]{REF-Sit92} Sit, William\\
``An Algorithm for Parametric Linear Systems''\\
J. Sym. Comp., April 1992

\bibitem[Smith 67]{Smi67} Smith B T.\\
``ZERPOL: A Zero Finding Algorithm for Polynomials Using Laguerre's Method''\\
Technical Report. Department of Computer Science, University of Toronto,
Canada.  (1967)

\bibitem[Smith 85]{Smi85} Smith G D.\\
``Numerical Solution of Partial Differential Equations: Finite Difference 
Methods''\\
Oxford University Press (3rd Edition). (1985)

\bibitem[Sobol 74]{Sob74} Sobol I M.\\
``The Monte Carlo Method''\\
The University of Chicago Press. 1974

\bibitem[Steele 90]{Ste90} Steele, Guy L.\\
``Common Lisp The Language''\\
Second Edition ISBN 1-55558-041-6 Digital Press (1990)

\bibitem[Stichtenoth 93]{St93} Stichtenoth, H.\\
``Algebraic function fields and codes''\\
Springer-Verlag, 1993, University Text.

\bibitem[Stinson 90]{Sti90} Stinson, D.R.\\
``Some observations on parallel Algorithms for fast exponentiation 
in $GF(2^n)$''\\
Siam J. Comp., Vol.19, No.4, pp.711-717, August 1990

\bibitem[Stroud 66]{SS66} Stroud A H.; Secrest D.\\
``Gaussian Quadrature Formulas''\\
Prentice-Hall. (1966) 

\bibitem[Stroud 71]{Str71} Stroud A H.\\
``Approximate Calculation of Multiple Integrals''\\
Prentice-Hall 1971

\bibitem[Swarztrauber 79]{SS79} Swarztrauber P N.; Sweet R A.\\
``Efficient Fortran Subprograms for the Solution of Separable Elliptic Partial
Differential Equations''\\
ACM Trans. Math. Softw. 5 352--364. (1979)

\bibitem[Swarztrauber 84]{SS84} Swarztrauber P N.\\
``Fast Poisson Solvers''\\
Studies in Numerical Analysis. (ed G H Golub) 
Mathematical Association of America. (1984)

\subsection{T} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Tait 1890]{Ta1890} Tait, P.G.\\
``An Elementary Treatise on Quaternions''\\
C.J. Clay and Sons, Cambridge University Press Warehouse, Ave Maria Lane 1890

\bibitem[Taivalsaari 96]{Tai96} Taivalsaari, Antero\\
``On the Notion of Inheritance''\\
ACM Computing Surveys, Vol 28 No 3 Sept 1996 pp438-479

\bibitem[Temme 87]{Tem87} Temme N M.\\
``On the Computation of the Incomplete Gamma Functions for Large Values of 
the Parameters''\\
Algorithms for Approximation. (ed J C Mason and M G Cox) 
Oxford University Press. (1987)

\bibitem[Temperton 83a]{Tem83a} Temperton C.\\
``Self-sorting Mixed-radix Fast Fourier Transforms''\\
J. Comput. Phys. 52 1--23. (1983)

\bibitem[Temperton 83b]{Tem83b} Temperton C.\\
``Fast Mixed-Radix Real Fourier Transforms''\\
J. Comput. Phys. 52 340--350. (1983)

\subsection{U} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Unknown 61]{Unk61} Unknown\\
``Chebyshev-series''\\
Modern Computing Methods
Chapter 8. NPL Notes on Applied Science (2nd Edition). 16 HMSO. 1961

\subsection{V} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Van Dooren 76]{vDDR76} Van Dooren P.;  De Ridder L.\\
``An Adaptive Algorithm for Numerical Integration over an N-dimensional 
Cube''\\
J. Comput. Appl. Math. 2 207--217. (1976) 

\bibitem[van Hoeij 94]{REF-vH94} van Hoeij, M.\\
``An algorithm for computing an integral
basis in an algebraic function field''\\
{\sl J. Symbolic Computation}
18(4):353-364, October 1994

\bibitem[Van Loan 92]{Van92} Van Loan, C.\\
``Computational Frameworks for the Fast Fourier Transform''\\
SIAM Philadelphia. (1992)

\subsection{W} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Wait 85]{WM85} Wait R.; Mitchell A R.\\
``Finite Element Analysis and Application''\\
Wiley. (1985)

\bibitem[Wang 92]{Wang92} Wang, D.M.\\
``An implementation of the characteristic set method in Maple''\\
Proc. DISCO'92 Bath, England

\bibitem[Ward 75]{War75} Ward, R C.\\
``The Combination Shift QZ Algorithm''\\
SIAM J. Numer. Anal. 12 835--853. 1975

\bibitem[Watt 03]{Wa03} Watt, Stephen\\
``Aldor''\\
\verb|www.aldor.org|

\bibitem[Weil 71]{We71} Weil, Andr\'{e}\\
``Courbes alg\'{e}briques et vari\'{e}t\'{e}s Abeliennes''\\
Hermann, Paris, 1971

\bibitem[Weisstein]{Wein} Weisstein, Eric W.\\
``Hypergeometric Function''\\
MathWorld - A Wolfram Web Resource\\
\verb|mathworld.wolfram.com/HypergeometricFunction.html|

\bibitem[Weitz 03]{Wei03} Weitz, E.\\
``CL-WHO -Yet another Lisp markup language''\\
\verb|www.weitz.de/cl-who/|

\bibitem[Weitz 06]{Wei06} Weitz, E.\\
``HUNCHENTOOT - The Common Lisp web server formerly known as TBNL''\\
\verb|www.weitz.de/hunchentoot/|

\bibitem[Wesseling 82a]{Wes82a} Wesseling, P.\\
``MGD1 - A Robust and Efficient Multigrid Method''\\
Multigrid Methods. Lecture Notes in Mathematics. 960
Springer-Verlag. 614--630. (1982)

\bibitem[Wesseling 82b]{Wes82b} Wesseling, P.\\
``Theoretical Aspects of a Multigrid Method''\\
SIAM J. Sci. Statist. Comput. 3 387--407. (1982)

\bibitem[Wicks 89]{Wic89} Wicks, Mark; Carlisle, David, Rahtz, Sebastian\\
``dvipdfm.def''\\
\verb|web.mit.edu/texsrc/source/latex/graphics/dvipdfm.def|

\bibitem[Wiki 3]{Wiki3}.\\
``Givens Rotations''\\
\verb|en.wikipedia.org/wiki/Givens_rotation|

\bibitem[Williamson 85]{Wil85} Williamson, S.G.\\
``Combinatorics for Computer Science''\\
Computer Science Press, 1985.

\bibitem[Wilkinson 71]{WR71} Wilkinson J H.; Reinsch C.\\
``Handbook for Automatic Computation II, Linear Algebra''\\
Springer-Verlag. 1971

\bibitem[Wilkinson 63]{Wil63} Wilkinson J H.\\
``Rounding Errors in Algebraic Processes''\\
 Chapter 2. HMSO. (1963)

\bibitem[Wilkinson 65]{Wil65} Wilkinson J H.\\
``The Algebraic Eigenvalue Problem''\\
 Oxford University Press. (1965) 

\bibitem[Wilkinson 78]{Wil78} Wilkinson J H.\\
``Singular Value Decomposition -- Basic Aspects''\\
Numerical Software -- Needs and Availability. 
(ed D A H Jacobs) Academic Press. (1978) 

\bibitem[Wilkinson 79]{Wil79} Wilkinson J H.\\
``Kronecker's Canonical Form and the QZ Algorithm''\\
Linear Algebra and Appl. 28 285--303. 1979

\bibitem[Wisbauer 91]{Wis91} Wisbauer, R.\\
``Bimodule Structure of Algebra''\\
Lecture Notes Univ. Duesseldorf 1991

\bibitem[Woerz-Busekros 80]{Woe80} Woerz-Busekros, A.\\
``Algebra in Genetics''\\
Lectures Notes in Biomathematics 36, Springer-Verlag,  Heidelberg, 1980

\bibitem[Wolberg 67]{Wol67} Wolberg J R.\\
``Prediction Analysis''\\
Van Nostrand. (1967)

\bibitem[Wolfram 09]{Wo09} Wolfram Research\\
\verb|mathworld.wolfram.com/Quaternion.html|

\bibitem[Wu 87]{WU87} Wu, W.T.\\
``A Zero Structure Theorem for polynomial equations solving''\\
MM Research Preprints, 1987

\bibitem[Wynn 56]{Wynn56} Wynn P.\\
``On a Device for Computing the $e_m(S_n )$ Transformation''\\
Math. Tables Aids Comput. 10 91--96. (1956) 

\subsection{Y} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Yun 76]{Yu76} Yun, D.Y.Y.\\
``On square-free decomposition algorithms''\\
{\sl Proceedings of SYMSAC'76} pages 26-35, 1976

\section{Special Topics} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\subsection{Solving Systems of Equations} %%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Bronstein 86]{Bro86} Bronstein, Manuel\\
``Gsolve: a faster algorithm for solving systems of algebraic equations''\\
Proc of 5th ACM SYMSAC (1986) pp247-249 ISBN 0-89791-199-7

\begin{adjustwidth}{2.5em}{0pt}
We apply the elimination property of Gr\"obner bases with respect to
pure lexicographic ordering to solve systems of algebraic equations.
We suggest reasons for this approach to be faster than the resultant
technique, and give examples and timings that show that it is indeed
faster and more correct, than MACSYMA's solve.
\end{adjustwidth}

\subsection{Numerical Algorithms} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Bronstein 99]{Bro99} Bronstein, Manuel\\
``Fast Deterministic Computation of Determinants of Dense Matrices''\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/mb_papers.html|
%\verb|axiom-developer.org/axiom-website/papers/Bro99.pdf|

\begin{adjustwidth}{2.5em}{0pt}
In this paper we consider deterministic computation of the exact
determinant of a dense matrix $M$ of integers. We present a new
algorithm with worst case complexity
\[O(n^4(log n+ log \verb?||M||?)+x^3 log^2 \verb?||M||?)\], 
where $n$ is the dimension of the matrix
and \verb?||M||? is a bound on the entries in $M$, but with 
average expected complexity 
\[O(n^4+m^3(log n + log \verb?||M||?)^2)\],
assuming some plausible properties about the distribution of $M$.
We will also describe a practical version of the algorithm and include
timing data to compare this algorithm with existing ones. Our result
does not depend on ``fast'' integer or matrix techniques.
\end{adjustwidth}

\bibitem[Kelsey 00]{Kel00} Kelsey, Tom\\
``Exact Numerical Computation via Symbolic Computation''\\
\verb|tom.host.cs.st-andrews.ac.uk/pub/ccapaper.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Kel00.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We provide a method for converting any symbolic algebraic expression
that can be converted into a floating point number into an exact
numeric representation. We use this method to demonstrate a suite of
procedures for the representation of, and arithmetic over, exact real
numbers in the Maple computer algebra system. Exact reals are
represented by potentially infinite lists of binary digits, and
interpreted as sums of negative powers of the golden ratio.
\end{adjustwidth}

\bibitem[Yang 14]{Yang14} Yang, Xiang; Mittal, Rajat\\
``Acceleration of the Jacobi iterative method by factors exceeding 100
using scheduled relation''\\
\verb|engineering.jhu.edu/fsag/wp-content/uploads/sites/23/2013/10|
\verb|JCP_revised_WebPost.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Yang14.pdf|

\subsection{Special Functions} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Corless 05]{Corl05} Corless, Robert M.; Jeffrey, David J.;
Watt, Stephen M.; Bradford, Russell; Davenport, James H.\\
``Reasoning about the elementary functions of complex analysis''\\
\verb|www.csd.uwo.ca/~watt/pub/reprints/2002-amai-reasoning.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Corl05.pdf|

\begin{adjustwidth}{2.5em}{0pt}
There are many problems with the simplification of elementary
functions, particularly over the complex plane. Systems tend to make
``howlers'' or not to simplify enough. In this paper we outline the
``unwinding number'' approach to such problems, and show how it can be
used to prevent errors and to systematise such simplification, even
though we have not yet reduced the simplification process to a
complete algorithm.  The unsolved problems are probably more amenable
to the techniques of artificial intelligence and theorem proving than
the original problem of complex-variable analysis.
\end{adjustwidth}

\subsubsection{Exponential Integral $E_1(x)$} %%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Segletes 98]{Se98} Segletes, S.B.\\
``A compact analytical fit to the exponential integral $E_1(x)$\\
Technical Report ARL-TR-1758, U.S. Army Ballistic Research Laboratory,\\
Aberdeen Proving Ground, MD, September 1998
%\verb|axiom-developer.org/axiom-website/papers/Se98.pdf|

\begin{adjustwidth}{2.5em}{0pt}
A four-parameter fit is developed for the class of integrals known as
the exponential integral (real branch). Unlike other fits that are
piecewise in nature, the current fit to the exponential integral is
valid over the complete domain of the function (compact) and is
everywhere accurate to within $\pm 0.0052\%$ when evaluating the first
exponential integral, $E_1$. To achieve this result, a methodology
that makes use of analytically known limiting behaviors at either
extreme of the domain is employed. Because the fit accurately captures
limiting behaviors of the $E_1$ function, more accuracy is retained
when the fit is used as part of the scheme to evaluate higher-order
exponential integrals, $E_n$, as compared with the use of brute-force
fits to $E_1$, which fail to accurately model limiting
behaviors. Furthermore, because the fit is compact, no special
accommodations are required (as in the case of spliced piecewise fits)
to smooth the value, slope, and higher derivatives in the transition
region between two piecewise domains. The general methodology employed
to develop this fit is outlined, since it may be used for other
problems as well.
\end{adjustwidth}

\bibitem[Segletes 09]{Se09} Segletes, S.B.\\
``Improved fits for $E_1(x)$ {\sl vis-\'a-vis} those presented in ARL-TR-1758\\
Technical Report ARL-TR-1758, U.S. Army Ballistic Research Laboratory,\\
Aberdeen Proving Ground, MD, September 1998
%\verb|axiom-developer.org/axiom-website/papers/Se09.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This is a writeup detailing the more accurate fits to $E_1(x)$,
relative to those presented in ARL-TR-1758.  My actual fits are to 
\[F1 =[x\ exp(x) E_1(x)]\] which spans a functional range from 0 to 1.  
The best accuracy I have been yet able to achieve, defined by limiting 
the value of \[[(F1)_{fit} - F1]/F1\] over the domain, is approximately 
3.1E-07 with a 12-parameter fit, which unfortunately isn't quite to 32-bit
floating-point accuracy.  Nonetheless, the fit is not a piecewise fit,
but rather a single continuous function over the domain of nonnegative x, 
which avoids some of the problems associated with piecewise domain splicing.
\end{adjustwidth}

\subsection{Polynomial GCD} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Knuth 71]{ST-PGCD-Knu71} Knuth, Donald\\
``The Art of Computer Programming''\\
2nd edition Vol. 2 (Seminumerical Algorithms) 1st edition, 2nd printing,\\
Addison-Wesley 1971, section 4.6 pp399-505

\bibitem[Ma 90]{ST-PGCD-Ma90} Ma, Keju; Gathen, Joachim von zur\\
``Analysis of Euclidean Algorithms for Polynomials over Finite Fields''\\
J. Symbolic Computation (1990) Vol 9 pp429-455\hfill{}\\
\verb|www.researchgate.net/publication/220161718_Analysis_of_Euclidean_|\\
\verb|Algorithms_for_Polynomials_over_Finite_Fields/file/|\\
\verb|60b7d52b326a1058e4.pdf|
%\verb|axiom-developer.org/axiom-website/papers/ST-PGCD-Ma90.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This paper analyzes the Euclidean algorithm and some variants of it 
for computing the greatest common divisor of two univariate polynomials
over a finite field. The minimum, maximum, and average number of
arithmetic operations both on polynomials and in the ground field
are derived.
\end{adjustwidth}

\bibitem[Naylor 00a]{N00} Naylor, Bill\\
``Polynomial GCD Using Straight Line Program Representation''\\
PhD. Thesis, University of Bath, 2000\\
\verb|www.sci.csd.uwo.ca/~bill/thesis.ps|
%\verb|axiom-developer.org/axiom-website/papers/N00.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This thesis is concerned with calculating polynomial greatest common
divisors using straight line program representation.

In the Introduction chapter, we introduce the problem and describe
some of the traditional representations for polynomials, we then talk
about some of the general subjects central to the thesis, terminating
with a synopsis of the category theory which is central to the Axiom
computer algebra system used during this research.

The second chapter is devoted to describing category theory. We follow
with a chapter detailing the important sections of computer code
written in order to investigate the straight line program subject.
The following chapter on evalution strategies and algorithms which are
dependant on these follows, the major algorith which is dependant on
evaluation and which is central to our theis being that of equality
checking. This is indeed central to many mathematical problems.
Interpolation, that is the determination of coefficients of a
polynomial is the subject of the next chapter. This is very important
for many straight line program algorithms, as their non-canonical
structure implies that it is relatively difficult to determine
coefficients, these being the basic objects that many algorithms work
on. We talk about three separate interpolation techniques and compare
their advantages and disadvantages. The final two chapters describe
some of the results we have obtained from this research and finally
conclusions we have drawn as to the viability of the straight line
program approach and possible extensions.

Finally we terminate with a number of appendices discussing side
subjects encountered during the thesis.
\end{adjustwidth}

\bibitem[Shoup 93]{ST-PGCD-Sh93} Shoup, Victor\\
``Factoring Polynomials over Finite Fields: Asymptotic Complexity vs
Reality*''\\
Proc. IMACS Symposium, Lille, France, (1993)
\verb|www.shoup.net/papers/lille.pdf|
%\verb|axiom-developer.org/axiom-website/papers/ST-PGCD-Sh93.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This paper compares the algorithms by Berlekamp, Cantor and Zassenhaus,
and Gathen and Shoup to conclude that 
(a) if large polynomials are factored the FFT should be used for polynomial 
multiplication and division, 
(b) Gathen and Shoup should be used if the number of irreducible factors
of $f$ is small.
(c) if nothing is know about the degrees of the factors then Berlekamp's
algorithm should be used
\end{adjustwidth}

\bibitem[Gathen 01]{ST-PGCD-Ga01} Gathen, Joachim von zur; Panario, Daniel\\
``Factoring Polynomials Over Finite Fields: A Survey''\\
J. Symbolic Computation (2001) Vol 31, pp3-17\hfill{}\\
\verb|people.csail.mit.edu/dmoshdov/courses/codes/poly-factorization.pdf|
%\verb|axiom-developer.org/axiom-website/papers/ST-PGCD-Ga01.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This survey reviews several algorithms for the factorization of
univariate polynomials over finite fields. We emphasize the main ideas
of the methods and provide and up-to-date bibliography of the problem.
This paper gives algorithms for {\sl squarefree factorization},
{\sl distinct-degree factorization}, and {\sl equal-degree factorization}.
The first and second algorithms are deterministic, the third is
probabilistic.
\end{adjustwidth}

\bibitem[van Hoeij]{Hoeij04} Hoeij, Mark van; Monagen, Michael\\
``Algorithms for Polynomial GCD Computation over Algebraic Function Fields''\\
\verb|www.cecm.sfu.ca/personal/mmonagan/papers/AFGCD.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Hoeij04.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Let $L$ be an algebraic function field in $k \ge 0$ parameters
$t_1,\ldots,t)k$. Let $f_1$, $f_2$ be non-zero polynomials in
$L[x]$. We give two algorithms for computing their gcd. The first, a
modular GCD algorithm, is an extension of the modular GCD algorithm
for Brown for {\bf Z}$[x_1,\ldots,x_n]$ and Encarnacion for {\bf
Q}$(\alpha[x])$ to function fields. The second, a fraction-free
algorithm, is a modification of the Moreno Maza and Rioboo algorithm
for computing gcds over triangular sets. The modification reduces
coefficient grownth in $L$ to be linear.  We give an empirical
comparison of the two algorithms using implementations in Maple.
\end{adjustwidth}

\bibitem[Wang 78]{Wang78} Wang, Paul S.\\
``An Improved Multivariate Polynomial Factoring Algorithm''\\
Mathematics of Computation, Vol 32, No 144 Oct 1978, pp1215-1231
\verb|www.ams.org/journals/mcom/1978-32-144/S0025-5718-1978-0568284-3/|
\verb|S0025-5718-1978-0568284-3.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Wang78.pdf|

\begin{adjustwidth}{2.5em}{0pt}
A new algorithm for factoring multivariate polynomials over the
integers based on an algorithm by Wang and Rothschild is described.
The new algorithm has improved strategies for dealing with the known
problems of the original algorithm, namely, the leading coefficient
problem, the bad-zero problem and the occurence of extraneous factors.
It has an algorithm for correctly predetermining leading coefficients
of the factors. A new and efficient p-adic algorith named EEZ is
described. Basically it is a linearly convergent variable-by-variable
parallel construction. The improved algorithm is generally faster and
requires less store than the original algorithm. Machine examples with
comparative timing are included.
\end{adjustwidth}

\bibitem[Wiki 4]{Wiki4}.\\
``Polynomial greatest common divisor''\\
\verb|en.wikipedia.org/wiki/Polynomial_greatest_common_divisor|

\subsection{Category Theory} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Baez 09]{Baez09} Baez, John C.; Stay, Mike\\
``Physics, Topology, Logic and Computation: A Rosetta Stone''\\
\verb|arxiv.org/pdf/0903.0340v3.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Baez09.pdf|

\begin{adjustwidth}{2.5em}{0pt}
In physics, Feynman diagrams are used to reason about quantum
processes.  In the 1980s, it became clear that underlying these
diagrams is a powerful analogy between quantum physics and
topology. Namely, a linear operator behaves very much like a
``cobordism'': a manifold representing spacetime, going between two
manifolds representing space.  But this was just the beginning: simiar
diagrams can be used to reason about logic, where they represent
proofs, and computation, where they represent programs. With the rise
of interest in quantum cryptography and quantum computation, it became
clear that there is an extensive network of analogies between physics,
topology, logic and computation. In this expository paper, we make
some of these analogies precise using the concept of ``closed
symmetric monodial category''. We assume no prior knowledge of
category theory, proof theory or computer science.
\end{adjustwidth}

\bibitem[Meijer 91]{Meij91} Meijer, Erik; Fokkinga, Maarten; Paterson, Ross\\
``Functional Programming with Bananas, Lenses, Envelopes and Barbed Wire''\\
\verb|eprints.eemcs.utwente.nl/7281/01/db-utwente-40501F46.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Meij91.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We develop a calculus for lazy functional programming based on
recursion operators associated with data type definitions. For these
operators we derive various algebraic laws that are useful in deriving
and manipulating programs. We shall show that all example functions in
Bird and Wadler's ``Introduction to Functional Programming'' can be
expressed using these operators.
\end{adjustwidth}

\bibitem[Youssef 04]{You04} Youssef, Saul\\
``Prospects for Category Theory in Aldor''\\
October 2004
%\verb|axiom-developer.org/axiom-website/papers/You04.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Ways of encorporating category theory constructions and results into
the Aldor language are discussed. The main features of Aldor which
make this possible are identified, examples of categorical
constructions are provided and a suggestion is made for a foundation
for rigorous results.
\end{adjustwidth}

\subsection{Proving Axiom Correct} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Bertot 04]{Bert04} Bertot, Yves; Cast\'eran, Pierre\\
``Interactive Theorem Proving and Program Development''\\
Springer ISBN 3-540-20854-2

\begin{adjustwidth}{2.5em}{0pt}
Coq is an interactive proof assistant for the development of
mathematical theories and formally certified software. It is based on
a theory called the calculus of inductive constructions, a variant of
type theory.

This book provides a pragmatic introduction to the development of
proofs and certified programs using Coq. With its large collection of
examples and exercies it is an invaluable tool for researchers,
students, and engineers interested in formal methods and the
development of zero-fault software.
\end{adjustwidth}

\bibitem[Boulme 00]{BHR00} Boulm\'e, S.; Hardin, T.; Rioboo, R.\\
``Polymorphic Data Types, Objects, Modules and Functors,: is it too much?''
%\verb|axiom-developer.org/axiom-website/papers/BHR00.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Abstraction is a powerful tool for developers and it is offered by
numerous features such as polymorphism, classes, modules, and
functors, $\ldots$ A working programmer may be confused by this
abundance. We develop a computer algebra library which is being
certificed. Reporting this experience made with a language (Ocaml)
offering all these features, we argue that the are all needed
together. We compare several ways of using classes to represent
algebraic concepts, trying to follow as close as possible mathematical
specification. Thenwe show how to combine classes and modules to
produce code having very strong typing properties.  Currently, this
library is made of one hundred units of functional code and behaves
faster than analogous ones such as Axiom.
\end{adjustwidth}

\bibitem[Boulme 01]{BHHMR01}
Boulm\'e, S.; Hardin, T.; Hirschkoff, D.; M\'enissier-Morain, V.; Rioboo, R.\\
``On the way to certify Computer Algebra Systems''\\
Calculemus-2001
%\verb|axiom-developer.org/axiom-website/papers/BHHMR01.pdf|

\begin{adjustwidth}{2.5em}{0pt}
The FOC project aims at supporting, within a coherent software system,
the entire process of mathematical computation, starting with proved
theories, ending with certified implementations of algorithms. In this
paper, we explain our design requirements for the implementation,
using polynomials as a running example. Indeed, proving correctness of
implementations depends heavily on the way this design allows
mathematical properties to be truly handled at the programming level.

The FOC project, started at the fall of 1997, is aimed to build a
programming environment for the development of certified symbolic
computation. The working languages are Coq and Ocaml. In this paper,
we present first the motivations of the project. We then explain why
and how our concern for proving properties of programs has led us to
certain implementation choices in Ocaml. This way, the sources express
exactly the mathematical dependencies between different structures.
This may ease the achievement of proofs.
\end{adjustwidth}

\bibitem[Daly 10]{Daly10} Daly, Timothy\\
``Intel Instruction Semantics Generator''\\
\verb|daly.axiom-developer.org/TimothyDaly_files/publications/sei/|
\verb|intel/intel.pdf
%\verb|axiom-developer.org/axiom-website/papers/Daly10.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Given an Intel x86 binary, extract the semantics of the instruction
stream as Conditional Concurrent Assignments (CCAs). These CCAs 
represent the semantics of each individual instruction. They can be
composed to represent higher level semantics.
\end{adjustwidth}

\bibitem[Danielsson 06]{Dani06} Danielsson, Nils Anders; Hughes, John;
Jansson, Patrik; Gibbons, Jeremy\\
``Fast and Loose Reasoning is Morally Correct''\\
ACM POPL'06 January 2005, Charleston, South Carolina, USA
%\verb|axiom-developer.org/axiom-website/papers/Dani06.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Functional programmers often reason about programs as if they were
written in a total language, expecting the results to carry over to
non-toal (partial) languages. We justify such reasoning.

Two languages are defined, one total and one partial, with identical
syntax. The semantics of the partial language includes partial and
infinite values, and all types are lifted, including the function
spaces. A partial equivalence relation (PER) is then defined, the
domain of which is the total subset of the partial language. For types
not containing function spaces the PER relates equal values, and
functions are related if they map related values to related values.

It is proved that if two closed terms have the same semantics in the
total language, then they have related semantics in the partial
language. It is also shown that the PER gives rise to a bicartesian
closed category which can be used to reason about values in the domain
of the relation.
\end{adjustwidth}

\bibitem[Davenport 12]{Davenp12} Davenport, James H.; Bradford, Russell;
England, Matthew; Wilson, David\\
``Program Verification in the presence of complex numbers, functions with
branch cuts etc.''\\
\verb|arxiv.org/pdf/1212.5417.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Davenp12.pdf|

\begin{adjustwidth}{2.5em}{0pt}
In considering the reliability of numerical programs, it is normal to
``limit our study to the semantics dealing with numerical precision''.
On the other hand, there is a great deal of work on the reliability of
programs that essentially ignores the numerics. The thesis of this
paper is that there is a class of problems that fall between these
two, which could be described as ``does the low-level arithmeti
implement the high-level mathematics''. Many of these problems arise
because mathematics, particularly the mathematics of the complex
numbers, is more difficult than expected: for example the complex
function log is not continuous, writing down a program to compute an
inverse function is more complicated than just solving an equation,
and many algebraic simplification rules are not universally valid.

The good news is that these problems are {\sl theoretically} capable
of being solved, and are {\sl practically} close to being solved, but
not yet solved, in several real-world examples. However, there is
still a long way to go before implementations match the theoretical
possibilities.
\end{adjustwidth}

\bibitem[Dolzmann 97]{Dolz97} Dolzmann, Andreas; Sturm, Thomas\\
``Guarded Expressions in Practice''\\
\verb|redlog.dolzmann.de/papers/pdf/MIP-9702.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Dolz97.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Computer algebra systems typically drop some degenerate cases when
evaluating expressions, e.g. $x/x$ becomes 1 dropping the case
$x=0$. We claim that it is feasible in practice to compute also the
degenerate cases yielding {\sl guarded expressions}. We work over real
closed fields but our ideas about handling guarded expressions can be
easily transferred to other situations. Using formulas as guards
provides a powerful tool for heuristically reducing the combinatorial
explosion of cases: equivalent, redundant, tautological, and
contradictive cases can be detected by simplification and quantifier
elimination. Our approach allows to simplify the expressions on the
basis of simplification knowledge on the logical side. The method
described in this paper is implemented in the REDUCE package GUARDIAN,
which is freely available on the WWW.
\end{adjustwidth}

\bibitem[Dos Reis 11]{DR11} Dos Reis, Gabriel; Matthews, David; Li, Yue\\
``Retargeting OpenAxiom to Poly/ML: Towards an Integrated Proof Assistants
and Computer Algebra System Framework''\\
Calculemus (2011) Springer
\verb|paradise.caltech.edu/~yli/paper/oa-polyml.pdf|
%\verb|axiom-developer.org/axiom-website/papers/DR11.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This paper presents an ongoing effort to integrate the Axiom family of
computer algebra systems with Poly/ML-based proof assistants in the
same framework. A long term goal is to make a large set of efficient
implementations of algebraic algorithms available to popular proof
assistants, and also to bring the power of mechanized formal
verification to a family of strongly typed computer algebra systems at
a modest cost. Our approach is based on retargeting the code generator
of the OpenAxiom compiler to the Poly/ML abstract machine.
\end{adjustwidth}

\bibitem[Dunstan 00a]{Dun00a} Dunstan, Martin N.\\
``Adding Larch/Aldor Specifications to Aldor''
%\verb|axiom-developer.org/axiom-website/papers/Dunxx.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We describe a proposal to add Larch-style annotations to the Aldor
programming language, based on our PhD research. The annotations
are intended to be machine-checkable and may be used for a variety
of purposes ranging from compiler optimizations to verification
condition (VC) generation. In this report we highlight the options
available and describe the changes which would need to be made to
the compiler to make use of this technology.
\end{adjustwidth}

\bibitem[Dunstan 98]{Dun98} Dunstan, Martin; Kelsey, Tom; Linton, Steve;
Martin, Ursula\\
``Lightweight Formal Methods For Computer Algebra Systems''\\
\verb|www.cs.st-andrews.ac.uk/~tom/pub/issac98.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Dun98.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Demonstrates the use of formal methods tools to provide a semantics for
the type hierarchy of the Axiom computer algebra system, and a methodology
for Aldor program analysis and verification. There are examples of
abstract specifications of Axiom primitives.
\end{adjustwidth}

\bibitem[Dunstan 99a]{Dun99a} Dunstan, MN\\
``Larch/Aldor - A Larch BISL for AXIOM and Aldor''\\
PhD Thesis, 1999\\
\verb|www.cs.st-andrews.uk/files/publications/Dun99.php|
%\verb|axiom-developer.org/axiom-website/papers/Dun99a.pdf|

\begin{adjustwidth}{2.5em}{0pt}
In this thesis we investigate the use of lightweight formal methods
and verification conditions (VCs) to help improve the reliability of
components constructed within a computer algebra system. We follow the
Larch approach to formal methods and have designed a new behavioural
interface specification language (BISL) for use with Aldor: the
compiled extension language of Axiom and a fully-featured programming
language in its own right. We describe our idea of lightweight formal
methods, present a design for a lightweight verification condition
generator and review our implementation of a prototype verification
condition generator for Larch/Aldor.
\end{adjustwidth}

\bibitem[Dunstan 00]{Dun00} Dunstan, Martin; Kelsey, Tom; Martin, Ursula;
Linton, Steve\\
``Formal Methods for Extensions to CAS''\\
FM 99, Toulouse, France, Sept 20-24, 1999, p1758-1777
%\verb|axiom-developer.org/axiom-website/papers/Dun00.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We demonstrate the use of formal methods tools to provide a semantics
for the type hierarchy of the AXIOM computer algebra system, and a
methodology for Aldor program analysis and verification. We give a
case study of abstract specifications of AXIOM primitives, and provide
an interface between these abstractions and Aldor code.
\end{adjustwidth}

\bibitem[Hardin 13]{Hard13} Hardin, David S.; McClurg, Jedidiah R.; 
Davis, Jennifer A.\\
``Creating Formally Verified Components for Layered Assurance with an LLVM to ACL2 Translator''\\
\verb|www.jrmcclurg.com/papers/law_2013_paper.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Hard13.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This paper describes an effort to create a library of formally
verified software component models from code that have been compiled
using the Low-Level Virtual Machine (LLVM) intermediate form. The idea
is to build a translator from LLVM to the applicative subset of Common
Lisp accepted by the ACL2 theorem prover. They perform verification of
the component model using ACL2's automated reasoning capabilities.
\end{adjustwidth}

\bibitem[Hardin 14]{Hard14} Hardin, David S.; Davis, Jennifer A.; 
Greve, David A.; McClurg, Jedidiah R.\\
``Development of a Translator from LLVM to ACL2''\\
\verb|arxiv.org/pdf/1406.1566|
%\verb|axiom-developer.org/axiom-website/papers/Hard14.pdf|

\begin{adjustwidth}{2.5em}{0pt}
In our current work a library of formally verified software components
is to be created, and assembled, using the Low-Level Virtual Machine
(LLVM) intermediate form, into subsystems whose top-level assurance
relies on the assurance of the individual components. We have thus
undertaken a project to build a translator from LLVM to the
applicative subset of Common Lisp accepted by the ACL2 theorem
prover. Our translator produces executable ACL2 formal models,
allowing us to both prove theorems about the translated models as well
as validate those models by testing.  The resulting models can be
translated and certified without user intervention, even for code with
loops, thanks to the use of the def::ung macro which allows us to
defer the question of termination. Initial measurements of concrete
execution for translated LLVM functions indicate that performance is
nearly 2.4 million LLVM instructions per second on a typical laptop
computer. In this paper we overview the translation process and
illustrate the translator's capabilities by way of a concrete example,
including both a functional correctness theorem as well as a
validation test for that example.
\end{adjustwidth}

\bibitem[Lamport 02]{Lamp02} Lamport, Leslie\\
``Specifying Systems''\\
\verb|research.microsoft.com/en-us/um/people/lamport/tla/book-02-08-08.pdf|
Addison-Wesley ISBN 0-321-14306-X
%\verb|axiom-developer.org/axiom-website/papers/Lamp02.pdf|

\bibitem[Mason 86]{Mason86} Mason, Ian A.\\
``The Semantics of Destructive Lisp''\\
Center for the Study of Language and Information ISBN 0-937073-06-7

\bibitem[Newcombe 13]{Newc13} Newcombe, Chris; Rath, Tim; Zhang, Fan;
Munteanu, Bogdan; Brooker, Marc; Deardeuff, Michael\\
``Use of Formal Methods at Amazon Web Services''\\
\verb|research.microsoft.com/en-us/um/people/lamport/tla/|
\verb|formal-methods-amazon.pdf|

\begin{adjustwidth}{2.5em}{0pt}
In order to find subtle bugs in a system design, it is necessary to
have a precise description of that design. There are at least two
major benefits to writing a precise design; the author is forced to
think more clearly, which helps eliminate ``plausible hand-waving'',
and tools can be applied to check for errors in the design, even while
it is being written. In contrast, conventional design documents
consist of prose, static diagrams, and perhaps pseudo-code in an ad
hoc untestable language. Such descriptions are far from precise; they
are often ambiguous, or omit critical aspects such as partial failure
or the granularity of concurrency (i.e. which constructs are assumed
to be atomic). At the other end of the spectrum, the final executable
code is unambiguous, but contains an overwhelming amount of detail. We
needed to be able to capture the essence of a design in a few hundred
lines of precise description. As our designs are unavoidably complex,
we need a highly-expressive language, far above the level of code, but
with precise semantics. That expressivity must cover real-world
concurrency and fault-tolerance. And, as we wish to build services
quickly, we wanted a language that is simple to learn and apply,
avoiding esoteric concepts. We also very much wanted an existing
ecosystem of tools.  We found what we were looking for in TLA+, a
formal specification language.
\end{adjustwidth}

\bibitem[Poll 99a]{P99a} Poll, Erik\\
``The Type System of Axiom''\\
\verb|www.cs.ru.nl/E.Poll/talks/axiom.pdf|
%\verb|axiom-developer.org/axiom-website/papers/P99a.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This is a slide deck from a talk on the correspondence between
Axiom/Aldor types and Logic.
\end{adjustwidth}

\bibitem[Poll 99]{PT99} Poll, Erik; Thompson, Simon\\
``The Type System of Aldor''\\
\verb|www.cs.kent.ac.uk/pubs/1999/874/content.ps|
%\verb|axiom-developer.org/axiom-website/papers/PT99.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This paper gives a formal description of -- at least a part of --
the type system of Aldor, the extension language of the Axiom.
In the process of doing this a critique of the design of the system
emerges.
\end{adjustwidth}

\bibitem[Poll (a)]{PTxx} Poll, Erik; Thompson, Simon\\
``Adding the axioms to Axiom. Toward a system of automated reasoning in
Aldor''\\
\verb|citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.7.1457&rep=rep1&type=ps|
%\verb|axiom-developer.org/axiom-website/papers/PTxx.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This paper examines the proposal of using the type system of Axiom to
represent a logic, and thus to use the constructions of Axiom to
handle the logic and represent proofs and propositions, in the same
way as is done in theorem provers based on type theory such as Nuprl
or Coq.

The paper shows an interesting way to decorate Axiom with pre- and
post-conditions.

The Curry-Howard correspondence used is
\begin{verbatim}
PROGRAMMING                           LOGIC
Type                                  Formula
Program                               Proof
Product/record type     (...,...)     Conjunction
Sum/union type          \/            Disjunction
Function type           ->            Implication
Dependent function type (x:A) -> B(x) Universal quantifier
Dependent product type  (x:A,B(x))    Existential quantifier
Empty type              Exit          Contradictory proposition
One element type        Triv          True proposition
\end{verbatim}
\end{adjustwidth}

\bibitem[Poll 00]{PT00} Poll, Erik; Thompson, Simon\\
``Integrating Computer Algebra and Reasoning through the Type System
of Aldor''
%\verb|axiom-developer.org/axiom-website/papers/PT00.pdf|

\begin{adjustwidth}{2.5em}{0pt}
A number of combinations of reasoning and computer algebra systems
have been proposed; in this paper we describe another, namely a way to
incorporate a logic in the computer algebra system Axiom. We examine
the type system of Aldor -- the Axiom Library Compiler -- and show
that with some modifications we can use the dependent types of the
system to model a logic, under the Curry-Howeard isomorphism. We give
a number of example applications of the logi we construct and explain
a prototype implementation of a modified type-checking system written
in Haskell.
\end{adjustwidth}

\subsection{Interval Arithmetic} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Boehm 86]{Boe86} Boehm, Hans-J.; Cartwright, Robert; Riggle, Mark;
O'Donnell, Michael J.\\
``Exact Real Arithmetic: A Case Study in Higher Order Programming''\\
\verb|dev.acm.org/pubs/citations/proceedings/lfp/319838/p162-boehm|
%\verb|axiom-developer.org/axiom-website/papers/Boe86.pdf|

\bibitem[Briggs 04]{Bri04} Briggs, Keith\\
``Exact real arithmetic''\\
\verb|keithbriggs.info/documents/xr-kent-talk-pp.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Bri04.pdf|

\bibitem[Fateman 94]{Fat94} Fateman, Richard J.; Yan, Tak W.\\
``Computation with the Extended Rational Numbers and an Application to 
Interval Arithmetic''\\
\verb|www.cs.berkeley.edu/~fateman/papers/extrat.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Fat94.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Programming languages such as Common Lisp, and virtually every
computer algebra system (CAS), support exact arbitrary-precision
integer arithmetic as well as exect rational number computation.
Several CAS include interval arithmetic directly, but not in the
extended form indicated here. We explain why changes to the usual
rational number system to include infinity and ``not-a-number'' may be
useful, especially to support robust interval computation. We describe
techniques for implementing these changes.
\end{adjustwidth}

\bibitem[Lambov 06]{Lambov06} Lambov, Branimir\\
``Interval Arithmetic Using SSE-2''\\
in Lecture Notes in Computer Science, Springer ISBN 978-3-540-85520-0
(2006) pp102-113

\subsection{Numerics} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Lef\'evre 06]{Lef06} Lef\'evre, Vincent; Stehl\'e, Damien;
Zimmermann, Paul\\
``Worst Cases for the Exponential Function 
in the IEEE-754r decimal64 Format''\\
in Lecture Notes in Computer Science, Springer ISBN 978-3-540-85520-0
(2006) pp114-125

\begin{adjustwidth}{2.5em}{0pt}
We searched for the worst cases for correct rounding of the 
exponential function in the IEEE 754r decimal64 format, and computed
all the bad cases whose distance from a breakpoint (for all rounding 
modes) is less than $10^{-15}$ ulp, and we give the worst ones. In
particular, the worst case for 
$\vert{}x\vert{} \ge 3 x 10^{-11}$ is
\[
exp(9.407822313572878x10^{-2} = 1.09864568206633850000000000000000278\ldots
\]
This work can be extended to other elementary functions in the decimal64
format and allows the design of reasonably fast routines that will
evaluate these functions with correct rounding, at least in some situations.
\end{adjustwidth}

\bibitem[Hamming 62]{Ham62} Hamming R W.\\
``Numerical Methods for Scientists and Engineers''\\
Dover (1973) ISBN 0-486-65241-6

\subsection{Advanced Documentation} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem [Bostock 14]{Bos14} Bostock, Mike\\
``Visualizing Algorithms''\\
\verb|bost.ocks.org/mike/algorithms|

\begin{adjustwidth}{2.5em}{0pt}
This website hosts various ways of visualizing algorithms. The hope is
that these kind of techniques can be applied to Axiom.
\end{adjustwidth}

\bibitem[Leeuwen]{Leexx} van Leeuwen, Andr\'e M.A.\\
``Representation of mathematical object in interactive books''
%\verb|axiom-developer.org/axiom-website/papers/Leexx.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We present a model for the representation of mathematical objects in
structured electronic documents, in a way that allows for interaction
with applications such as computer algebra systems and proof checkers.
Using a representation that reflects only the intrinsic information of
an object, and storing application-dependent information in so-called
{\sl application descriptions}, it is shown how the translation from
the internal to an external representation and {\sl vice versa} can be
achieved. Hereby a formalisation of the concept of {\sl context} is
introduced. The proposed scheme allows for a high degree of
application integration, e.g., parallel evaluation of subexpressions
(by different computer algebra systems), or a proof checker using a
computer algebra system to verify an equation involving a symbolic
computation.
\end{adjustwidth}

\bibitem[Soiffer 91]{Soif91} Soiffer, Neil Morrell\\
``The Design of a User Interface for Computer Algebra Systems''\\
\verb|www.eecs.berkeley.edu/Pubs/TechRpts/1991/CSD-91-626.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Soif91.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This thesis discusses the design and implementation of natural user
interfaces for Computer Algebra Systems. Such an interface must not
only display expressions generated by the Computer Algebra System in
standard mathematical notation, but must also allow easy manipulation
and entry of expressions in that notation. The user interface should
also assist in understanding of large expressions that are generated
by Computer Algebra Systems and should be able to accommodate new
notational forms.
\end{adjustwidth}

\bibitem[Victor 11]{Vict11} Victor, Bret\\
``Up and Down the Ladder of Abstraction''\\
\verb|worrydream.com/LadderOfAbstraction|

\begin{adjustwidth}{2.5em}{0pt}
This interactive essay presents the ladder of abstraction, a technique for
thinking explicitly about these levels, so a designer can move among
them consciously and confidently. 
\end{adjustwidth}

\bibitem[Victor 12]{Vict12} Victor, Bret\\
``Inventing on Principle''\\
\verb|www.youtube.com/watch?v=PUv66718DII|

\begin{adjustwidth}{2.5em}{0pt}
This video raises the level of discussion about human-computer interaction
from a technical question to a question of effectively capturing ideas.
In particular, this applies well to Axiom's focus on literate programming.
\end{adjustwidth}

\subsection{Differential Equations} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Abramov 95]{Abra95} Abramov, Sergei A.; Bronstein, Manuel; 
Petkovsek, Marko\\
``On Polynomial Solutions of Linear Operator Equations''\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/mb_papers.html|
%\verb|axiom-developer.org/axiom-website/papers/Abra95.pdf|

\bibitem[Abramov 01]{Abra01} Abramov, Sergei; Bronstein, Manuel\\
``On Solutions of Linear Functional Systems''\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/mb_papers.html|
%\verb|axiom-developer.org/axiom-website/papers/Abra01.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We describe a new direct algorithm for transforming a linear system of
recurrences into an equivalent one with nonsingular leading or
trailing matrix. Our algorithm, which is an improvement to the EG
elimination method, uses only elementary linear algebra operations
(ranks, kernels, and determinants) to produce an equation satisfied by
the degress of the solutions with finite support. As a consequence, we
can boudn and compute the polynomial and rational solutions of very
general linear functional systems such as systems of differential or
($q-$)difference equations.
\end{adjustwidth}

\bibitem[Bronstein 96a]{Bro96a} Bronstein, Manuel; Petkovsek, Marko\\
``An introduction to pseudo-linear algebra''\\
Theoretical Computer Science V157 pp3-33 (1966)\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/mb_papers.html|
%\verb|axiom-developer.org/axiom-website/papers/Bro96a.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Pseudo-linear algebra is the study of common properties of linear
differential and difference operators. We introduce in this paper its
basic objects (pseudo-derivations, skew polynomials, and pseudo-linear
operators) and describe several recent algorithms on them, which, when
applied in the differential and difference cases, yield algorithms for
uncoupling and solving systems of linear differential and difference
equations in closed form.
\end{adjustwidth}

\bibitem[Bronstein xb]{Broxb} Bronstein, Manuel\\
``Computer Algebra Algorithms for Linear Ordinary Differential and
Difference equations''\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/ecm3.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Broxb.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Galois theory has now produced algorithms for solving linear ordinary
differential and difference equations in closed form. In addition,
recent algorithmic advances have made those algorithms effective and
implementable in computer algebra systems. After introducing the
relevant parts of the theory, we describe the latest algorithms for
solving such equations.
\end{adjustwidth}

\bibitem[Bronstein 94]{Bro94} Bronstein, Manuel\\
``An improved algorithm for factoring linear ordinary differential
operators''\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/mb_papers.html|

\begin{adjustwidth}{2.5em}{0pt}
We describe an efficient algorithm for computing the associated
equations appearing in the Beke-Schlesinger factorisation method for
linear ordinary differential operators. This algorithm, which is based
on elementary operations with sets of integers, can be easily
implemented for operators of any order, produces several possible
associated equations, of which only the simplest can be selected for
solving, and often avoids the degenerate case, where the order of the
associated equation is less than in the generic case. We conclude with
some fast heuristics that can produce some factorizations while using
only linear computations.
\end{adjustwidth}

\bibitem[Bronstein 90]{Bro90} Bronstein, Manuel\\
``On Solutions of Linear Ordinary Differential Equations in their 
Coefficient Field''\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/mb_papers.html|

\begin{adjustwidth}{2.5em}{0pt}
We describe a rational algorithm for finding the denominator of any
solution of a linear ordinary differential equation in its coefficient
field. As a consequence, there is now a rational algorithm for finding
all such solutions when the coefficients can be built up from the
rational functions by finitely many algebraic and primitive
adjunctions. This also eliminates one of the computational bottlenecks
in algorithms that either factor or search for Liouvillian solutions
of such equations with Liouvillian coefficients.
\end{adjustwidth}

\bibitem[Bronstein 96]{Bro96} Bronstein, Manuel\\
``$\sum^{IT}$ -- A strongly-typed embeddable computer algebra library''
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/mb_papers.html|
%\verb|axiom-developer.org/axiom-website/papers/Bro96.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We describe the new computer algebra library $\sum^{IT}$ and its
underlying design. The development of $\sum^{IT}$ is motivated by the
need to provide highly efficient implementations of key algorithms for
linear ordinary differential and ($q$)-difference equations to
scientific programmers and to computer algebra users, regardless of
the programming language or interactive system they use. As such,
$\sum^{IT}$ is not a computer algebra system per se, but a library (or
substrate) which is designed to be ``plugged'' with minimal efforts
into different types of client applications.
\end{adjustwidth}

\bibitem[Bronstein 99a]{Bro99a} Bronstein, Manuel\\
``Solving linear ordinary differential equations over 
$C(x,e^{\int{f(x)dx}})$\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/mb_papers.html|
%\verb|axiom-developer.org/axiom-website/papers/Bro99a.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We describe a new algorithm for computing the solutions in
\[F=C(x,e^{\int{f(x)dx}})\] of linear ordinary differential equations
with coefficients in $F$. Compared to the general algorithm, our
algorithm avoids the computation of exponential solutions of equations
with coefficients in $C(x)$, as well as the solving of linear
differential systems over $C(x)$. Our method is effective and has been
implemented.
\end{adjustwidth}

\bibitem[Bronstein 00]{Bro00} Bronstein, Manuel\\
``On Solutions of Linear Ordinary Differential Equations in their Coefficient Field''\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/mb_papers.html|
%\verb|axiom-developer.org/axiom-website/papers/Bro00.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We extend the notion of monomial extensions of differential fields,
i.e. simple transcendental extensions in which the polynomials are
closed under differentiation, to difference fields. The structure of
such extensions provides an algebraic framework for solving
generalized linear difference equations with coefficients in such
fields. We then describe algorithms for finding the denominator of any
solution of those equations in an important subclass of monomial
extensions that includes transcendental indefinite sums and
products. This reduces the general problem of finding the solutions of
such equations in their coefficient fields to bounding their
degrees. In the base case, this yields in particular a new algorithm
for computing the rational solutions of $q$-difference equations with
polynomial coefficients.
\end{adjustwidth}

\bibitem[Bronstein 02]{Bro02} Bronstein, Manuel; Lafaille, S\'ebastien\\
``Solutions of linear ordinary differential equations in terms of 
special functions''\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/issac2002.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Bro02.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We describe a new algorithm for computing special function solutions
of the form $y(x) = m(x)F(\eta(x))$ of second order linear ordinary
differential equations, where $m(x)$ is an arbitrary Liouvillian
function, $\eta(x)$ is an arbitrary rational function, and $F$
satisfies a given second order linear ordinary differential
equations. Our algorithm, which is base on finding an appropriate
point transformation between the equation defining $F$ and the one to
solve, is able to find all rational transformations for a large class
of functions $F$, in particular (but not only) the $_0F_1$ and $_1F_1$
special functions of mathematical physics, such as Airy, Bessel,
Kummer and Whittaker functions. It is also able to identify the values
of the parameters entering those special functions, and can be
generalized to equations of higher order.
\end{adjustwidth}

\bibitem[Bronstein 03]{Bro03} Bronstein, Manuel; Trager, Barry M.\\
``A Reduction for Regular Differential Systems''\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/mega2003.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Bro03.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We propose a definition of regularity of a linear differential system
with coefficients in a monomial extension of a differential field, as
well as a global and truly rational (i.e. factorisation-free)
iteration that transforms a system with regular finite singularites
into an equivalent one with simple finite poles. We then apply our
iteration to systems satisfied by bases of algebraic function fields,
obtaining algorithms for computing the number of irreducible
components and the genus of algebraic curves.
\end{adjustwidth}

\bibitem[Bronstein 03a]{Bro03a} Bronstein, Manuel; Sol\'e, Patrick\\
``Linear recurrences with polynomial coefficients''\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/mb_papers.html|
%\verb|axiom-developer.org/axiom-website/papers/Bro03a.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We relate sequences generated by recurrences with polynomial
coefficients to interleaving and multiplexing of sequences generated
by recurrences with constant coefficients. In the special case of
finite fields, we show that such sequences are periodic and provide
linear complexity estimates for all three constructions.
\end{adjustwidth}

\bibitem[Bronstein 05]{Bro05} Bronstein, Manuel; Li, Ziming; Wu, Min\\
``Picard-Vessiot Extensions for Linear Functional Systems''\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/publications/issac2005.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Bro05.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Picard-Vessiot extensions for ordinary differential and difference
equations are well known and are at the core of the associated Galois
theories. In this paper, we construct fundamental matrices and
Picard-Vessiot extensions for systems of linear partial functional
equations having finite linear dimension. We then use those extensions
to show that all the solutions of a factor of such a system can be
completed to solutions of the original system.
\end{adjustwidth}

\bibitem[Von Mohrenschildt 94]{Mohr94} Von Mohrenschildt, Martin\\
``Symbolic Solutions of Discontinuous Differential Equations''\\
\verb|e-collection.library.ethz.ch/eserv/eth:39463/eth-39463-01.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Mohr94.pdf|

\bibitem[Von Mohrenschildt 98]{Mohr98} Von Mohrenschildt, Martin\\
``A Normal Form for Function Rings of Piecewise Functions''\\
J. Symbolic Computation (1998) Vol 26 pp607-619\\
\verb|www.cas.mcmaster.ca/~mohrens/JSC.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Mohr98.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Computer algebra systems often have to deal with piecewise continuous
functions. These are, for example, the absolute value function,
signum, piecewise defined functions but also functions that are the
supremum or infimum of two functions. We present a new algebraic
approach to these types of problems. This paper presents a normal form
for a function ring containing piecewise polynomial functions of an
expression. The main result is that this normal form can be used to
decide extensional equality of two piecewise functions. Also we define
supremum and infimum for piecewise functions; in fact, we show that
the function ring forms a lattice. Additionally, a method to solve
equalities and inequalities in this function ring is
presented. Finally, we give a ``user interface'' to the algebraic
representation of the piecewise functions.
\end{adjustwidth}

\bibitem[Weber 06]{Webe06} Weber, Andreas\\
``Quantifier Elimination on Real Closed Fields and Differential Equations''\\
\verb|cg.cs.uni-bonn.de/personal-pages/weber/publications/pdf/WeberA/Weber2006a.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Webe06.pdf|

\begin{adjustwidth}{2.5em}{0pt}
This paper surveys some recent applications of quantifier elimination
on real closed fields in the context of differential
equations. Although polynomial vector fields give rise to solutions
involving the exponential and other transcendental functions in
general, many questions can be settled within the real closed field
without referring to the real exponential field. The technique of
quantifier elimination on real closed fields is not only of
theoretical interest, but due to recent advances on the algorithmic
side including algorithms for the simplification of quantifier-free
formulae the method has gained practical applications, e.g. in the
context of computing threshold conditions in epidemic modeling.
\end{adjustwidth}{2.5em}{0pt}

\subsection{Expression Simplification} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Carette 04]{Car04} Carette, Jacques\\
``Understanding Expression Simplification''\\
\verb|www.cas.mcmaster.ca/~carette/publications/simplification.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Car04.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We give the first formal definition of the concept of {\sl
simplification} for general expressions in the context of Computer
Algebra Systems. The main mathematical tool is an adaptation of the
theory of Minimum Description Length, which is closely related to
various theories of complexity, such as Kolmogorov Complexity and
Algorithmic Information Theory. In particular, we show how this theory
can justify the use of various ``magic constants'' for deciding
between some equivalent representations of an expression, as found in
implementations of simplification routines.
\end{adjustwidth}

\subsection{Integration} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Baddoura 94]{Bad94} Baddoura, Mohamed Jamil\\
``Integration in Finite Terms with Elementary Functions and Dilogarithms''\\
\verb|dspace.mit.edu/bitstream/handle/1721.1/26864/30757785.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Bad94.pdf|

\begin{adjustwidth}{2.5em}{0pt}
In this thesis, we report on a new theorem that generalizes
Liouville's theorem on integration in finite terms. The new theorem
allows dilogarithms to occur in the integral in addition to elementary
functions. The proof is base on two identities for the dilogarithm,
that characterize all the possible algebraic relations among
dilogarithms of functions that are built up from the rational
functions by taking transcendental exponentials, dilogarithms, and
logarithms.
\end{adjustwidth}

\bibitem[Bronstein 97]{Bro97} Bronstein, M.\\ 
``Symbolic Integration I--Transcendental Functions.''\\
Springer, Heidelberg, 1997 ISBN 3-540-21493-3
\verb|evil-wire.org/arrrXiv/Mathematics/Bronstein,_Symbolic_Integration_I,1997.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Bro97.pdf|

\bibitem[Bronstein 05a]{Bro05a} Bronstein, Manuel\\
``The Poor Man's Integrator, a parallel integration heuristic''\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/pmint/pmint.txt|\\
\verb|www-sop.inria.fr/cafe/Manuel.Bronstein/pmint/examples|
%\verb|axiom-developer.org/axiom-website/papers/Bro05a.txt|

\bibitem[Cherry 84]{Che84} Cherry, G.W.\\
``Integration in Finite Terms with Special Functions: 
The Error Function''\\
J. Symbolic Computation (1985) Vol 1 pp283-302
%\verb|axiom-developer.org/axiom-website/papers/Che84.pdf|

\begin{adjustwidth}{2.5em}{0pt}
A decision procedure for integrating a class of transcendental
elementary functions in terms of elementary functions and error
functions is described. The procedure consists of three mutually
exclusive cases. In the first two cases a generalised procedure for
completing squares is used to limit the error functions which can
appear in the integral of a finite number.  This reduces the problem
to the solution of a differential equation and we use a result of
Risch (1969) to solve it.  The third case can be reduced to the
determination of what we have termed $\sum$-decompositions. The resutl
presented here is the key procuedure to a more general algorithm which
is described fully in Cherry (1983).
\end{adjustwidth}

\bibitem[Cherry 86]{Che86} Cherry, G.W.\\
``Integration in Finite Terms with Special Functions: 
The Logarithmic Integral''\\
SIAM J. Comput. Vol 15 pp1-21 February 1986

\bibitem[Cherry 89]{Che89} Cherry, G.W.\\
``An Analysis of the Rational Exponential Integral''\\
SIAM J. Computing Vol 18 pp 893-905 (1989)

\bibitem[Davenport 79b]{Dav79b} Davenport, James Harold\\
``On the Integration of Algebraic Functions''\\
Springer-Verlag Lecture Notes in Computer Science 102
ISBN 0-387-10290-6

\bibitem[Davenport 82]{Dav82} Davenport, J.H.\\
``On the Parallel Risch Algorithm (III): Use of Tangents''\\
SIGSAM V16 no. 3 pp3-6 August 1982

\bibitem[Fateman 02]{Fat02} Fateman, Richard\\
``Symbolic Integration''\\
\verb|inst.eecs.berkeley.edu/~cs282/sp02/lects/14.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Fat02.pdf|

\bibitem[Geddes 92a]{GCL92a} Geddes, K.O.; Czapor, S.R.; Labahn, G.\\
``The Risch Integration Algorithm''\\
Algorithms for Computer Algebra, Ch 12 pp511-573 (1992)

\bibitem[Hardy 1916]{Hard16} Hardy, G.H.\\
``The Integration of Functions of a Single Variable''\\
Cambridge Unversity Press, Cambridge, 1916

\bibitem[Hermite 1872]{Her1872} Hermite, E.\\
``Sur l'int\'{e}gration des fractions rationelles.''\\
{\sl Nouvelles Annales de Math\'{e}matiques}
($2^{eme}$ s\'{e}rie), 11:145-148, 1872

\bibitem[Jeffrey 97]{Jeff97} Jeffrey, D.J.; Rich, A.D.\\
``Recursive integration of piecewise-continuous functions''\\
\verb|www.cybertester.com/data/recint.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Jeff97.pdf|

\begin{adjustwidth}{2.5em}{0pt}
An algorithm is given for the integration of a class of
piecewise-continuous functions. The integration is with respect to a
real variable, because the functions considered do not in general
allow integration in the complex plane to be defined. The class of
integrands includes commonly occurring waveforms, such as square
waves, triangular waves, and the floor function; it also includes the
signum function.  The algorithm can be implemented recursively, and it
has the property of ensuring that integrals are continuous on domains
of maximum extent.
\end{adjustwidth}

\bibitem[Jeffrey 99]{Jeff99} Jeffrey, D.J.; Labahn, G.; Mohrenschildt, M.v.;
Rich, A.D.\\
``Integration of the signum, piecewise and related functions''\\
\verb|cs.uwaterloo.ca/~glabahn/Papers/issac99-2.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Jeff99.pdf|

\begin{adjustwidth}{2.5em}{0pt}
When a computer algebra system has an assumption facility, it is
possible to distinguish between integration problems with respect to a
real variable, and those with respect to a complex variable.  Here, a
class of integration problems is defined in which the integrand
consists of compositions of continuous functions and signum functions,
and integration is with respect to a real variable.  Algorithms are
given for evaluating such integrals.
\end{adjustwidth}

\bibitem[Knowles 93]{Know93} Knowles, P.\\
``Integration of a class of transcendental liouvillian
functions with error-functions i''\\
Journal of Symbolic Computation Vol 13 pp525-543 (1993)

\bibitem[Knowles 95]{Know95} Knowles, P.\\
``Integration of a class of transcendental liouvillian
functions with error-functions ii''\\
Journal of Symbolic Computation Vol 16 pp227-241 (1995)

\bibitem[Lang 93]{Lang93} Lang, S.\\
``Algebra''\\
Addison-Wesly, New York, 3rd edition 1993

\bibitem[Liouville 1833a]{Lio1833a} Liouville, Joseph\\
``Premier m\'{e}moire sur la
d\'{e}termination des int\'{e}grales dont la valeur est
alg\'{e}brique''\\
{\sl Journal de l'Ecole Polytechnique}, 14:124-148, 1833

\bibitem[Liouville 1833b]{Lio1833b} Liouville, Joseph\\ 
``Second m\'{e}moire sur la d\'{e}termination des int\'{e}grales 
dont la valeur est alg\'{e}brique''\\
{\sl Journal de l'Ecole Polytechnique}, 14:149-193, 1833

\bibitem[Liouville 1833c]{Lio1833c} Liouville, Joseph\\
``Note sur la determination des int\'egrales dont la
valeur est alg\'ebrique''\\
Journal f\"ur die Reine und Angewandte Mathematik,
Vol 10 pp 247-259, (1833)

\bibitem[Liouville 1833d]{Lio1833d} Liouville, Joseph\\
``Sur la determination des int\'egrales dont la valeur est
alg\'ebrique''\\
{\sl Journal de l'Ecole Polytechnique}, 14:124-193, 1833

\bibitem[Liouville 1835]{Lio1835} Liouville, Joseph\\
``M\'emoire sur l'int\'gration d'une classe de fonctions
transcendentes''\\
Journal f\"ur die Reine und Angewandte Mathematik,
Vol 13(2) pp 93-118, (1835)

\bibitem[Moses 71a]{Mos71a} Moses, Joel\\
``Symbolic Integration: The Stormy Decade''\\
\verb|www-inst.eecs.berkeley.edu/~cs282/sp02/readings/moses-int.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Mos71a.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Three approaches to symbolic integration in the 1960's are
described. The first, from artificial intelligence, led to Slagle's
SAINT and to a large degree to Moses' SIN. The second, from algebraic
manipulation, led to Monove's implementation and to Horowitz' and
Tobey's reexamination of the Hermite algorithm for integrating
rational functions. The third, from mathematics, led to Richardson's
proof of the unsolvability of the problem for a class of functions and
for Risch's decision procedure for the elementary functions. 
Generalizations of Risch's algorithm to a class of special
functions and programs for solving differential equations and for
finding the definite integral are also described.
\end{adjustwidth}

\bibitem[Ostrowski 46]{Ost46} Ostrowski, A.\\
``Sur l'int\'egrabilit\'e \'el\'ementaire de quelques classes
d'expressions''\\
Comm. Math. Helv., Vol 18 pp 283-308, (1946)

\bibitem[Raab 13]{Raab13} Raab, Clemens G.\\
``Generalization of Risch's Algorithm to Special Functions''\\
\verb|arxiv.org/pdf/1305.1481.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Raab13.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Symbolic integration deals with the evaluation of integrals in closed
form. We present an overview of Risch's algorithm including recent
developments. The algorithms discussed are suited for both indefinite
and definite integration. They can also be used to compute linear
relations among integrals and to find identities for special functions
given by parameter integrals. The aim of this presentation is twofold:
to introduce the reader to some basic idea of differential algebra in
the context of integration and to raise awareness in the physics
community of computer algebra algorithms for indefinite and definite
integration.
\end{adjustwidth}

\bibitem[Raab xx]{Raabxx} Raab, Clemens G.\\
``Integration in finite terms for Liouvillian functions''\\
\verb|www.mmrc.iss.ac.cn/~dart4/posters/Raab.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Raabxx.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Computing integrals is a common task in many areas of science,
antiderivatives are one way to accomplish this.  The problem of
integration in finite terms can be states as follows. Given a
differential field $(F,D)$ and $f \in F$, compute $g$ in some
elementary extension of $(F,D)$ such that $Dg = f$ if such a $g$
exists.

This problem has been solved for various classes of fields $F$.  For
rational functions $(C(x), \frac{d}{dx})$ such a $g$ always exists and
algorithms to compute it are known already for a long time. In 1969
Risch published an algorithm that solves this problem when $(F,D)$ is
a transcendental elementary extension of $(C(x),\frac{d}{dx})$. Later
this has been extended towards integrands being Liouvillian functions
by Singer et. al. via the use of regular log-explicit extensions of
$(C(x),\frac{d}{dx})$. Our algorithm extends this to handling
transcendental Liouvillian extensions $(F,D)$ of $(C,0)$ directly
without the need to embed them into log-explicit extensions. For
example, this means that
\[\int{(z-x)x^{z-1}e^{-x}dx} = x^ze^{-x}\]
can be computed without including log(x) in the differential field.
\end{adjustwidth}

\bibitem[Risch 68]{Ris68} Risch, Robert\\
``On the integration of elementary functions
which are built up using algebraic operations''\\
Research Report
SP-2801/002/00, System Development Corporation, Santa Monica, CA, USA, 1968

\bibitem[Risch 69a]{Ris69a} Risch, Robert\\
``Further results on elementary functions''\\
Research Report RC-2042, IBM Research, Yorktown Heights, NY, USA, 1969

\bibitem[Risch 69b]{Ris69b} Risch, Robert\\
``The problem of integration in finite terms''\\
{\sl Transactions of the American Mathematical Society} 139:167-189, 1969
%\verb|axiom-developer.org/axiom-website/papers/Ris69b.pdf|

\bibitem[Risch 69c]{Ris69c} Risch, Robert\\
``The Solution of the Problem of Integration in Finite Terms''\\
\verb|www.ams.org/journals/bull/1970-76-03/S0002-9904-1970-12454-5/|
\verb|S0002-9904-1970-12454-5.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Ris69c.pdf|

\begin{adjustwidth}{2.5em}{0pt}
The problem of integration in finite terms asks for an algorithm for
deciding whether an elementary function has an elementary indefinite
integral and for finding the integral if it does.  ``Elementary'' is
used here to denote those functions build up from the rational
functions using only exponentiation, logarithms, trigonometric,
inverse trigonometric and algebraic operations.  This vaguely worded
question has several precise, but inequivalent formulations. The
writer has devised an algorithm which solves the classical problem of
Liouville. A complete account is planned for a future publication. The
present note is intended to indiciate some of the ideas and techniques
involved.
\end{adjustwidth}

\bibitem[Risch 79]{Ris79} Risch, Robert\\
``Algebraic properties of the elementary functions of analysis''\\
{\sl American Journal of Mathematics}, 101:743-759, 1979

\bibitem[Ritt 48]{Ritt48} Ritt, J.F.\\
``Integration in Finite Terms''\\
Columbia University Press, New York 1948

\bibitem[Rosenlicht 72]{Ro72} Rosenlicht, Maxwell\\
``Integration in finite terms''\\
{\sl American Mathematical Monthly}, 79:963-972, 1972
%\verb|axiom-developer.org/axiom-website/papers/Ro72.pdf|

\bibitem[Rothstein 76]{Ro76} Rosenlicht, Maxwell\\
``Aspects of symbolic integration and simplifcation of exponential
and primitive functions''\\
PhD thesis, University of Wisconsin-Madison (1976)

\bibitem[Rothstein 77]{Ro77} Rothstein, Michael\\
``A new algorithm for the integration of 
exponential and logarithmic functions''\\
In {\sl Proceedings of the 1977 MACSYMA Users Conference}, 
pages 263-274. NASA Pub CP-2012, 1977

\bibitem[Seidenberg 58]{Sei58} Seidenberg, Abraham\\
``Abstract differential algebra and the analytic case''\\
Proc. Amer. Math. Soc. Vol 9 pp159-164 (1958)

\bibitem[Seidenberg 69]{Sei69} Seidenberg, Abraham\\
``Abstract differential algebra and the analytic case. II''\\
Proc. Amer. Math. Soc. Vol 23 pp689-691 (1969)

\bibitem[Singer 85]{Sing85} Singer, M.F.; Saunders, B.D.; Caviness, B.F.\\
``An extension of Liouville's theorem on integration in finite terms''\\
SIAM J. of Comp. Vol 14 pp965-990 (1985)

\bibitem[Trager 76]{Tr76} Trager, Barry\\
``Algebraic factoring and rational function integration''\\
In {Proceedings of SYMSAC'76} pages 219-226, 1976

\bibitem[Trager 84]{Tr84} Trager, Barry\\
``On the integration of algebraic functions''\\
PhD thesis, MIT, Computer Science, 1984

\bibitem[W\"urfl 07]{Wurf07} W\"urfl, Andreas\\
``Basic Concepts of Differential Algebra''\\
\verb|www14.in.tum.de/konferenzen/Jass07/courses/1/Wuerfl/wuerfl_paper.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Wurf07.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Modern computer algebra systems symbolically integrate a vast variety
of functions. To reveal the underlying structure it is necessary to
understand infinite integration not only as an analytical problem but
as an algebraic one. Introducing the differential field of elementary
functions we sketch the mathematical tools like Liouville's Principle
used in modern algorithms. We present Hermite's method for integration
of rational functions as well as the Rothstein/Trager method for
rational and for elementary functions. Further applications of the
mentioned algorithms in the field of ODE's conclude this paper.
\end{adjustwidth}

\subsection{Partial Fraction Decomposition} %%%%%%%%%%%%%%%%%%%%%%%%%%%

\bibitem[Angell]{Angell} Angell, Tom\\
``Guidelines for Partial Fraction Decomposition''\\
\verb|www.math.udel.edu/~angell/partfrac_I.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Angell.pdf|

\bibitem[Laval 08]{Lava08} Laval, Philippe B.\\
``Partial Fractions Decomposition''\\
\verb|www.math.wisc.edu/~park/Fall2011/integration/Partial%20Fraction.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Lava08.pdf|

\bibitem[Mudd 14]{Mudd14} Harvey Mudd College\\
``Partial Fractions''\\
\verb|www.math.hmc.edu/calculus/tutorials/partial_fractions/partial_fractions.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Mudd14.pdf|

\bibitem[Rajasekaran 14]{Raja14} Rajasekaran, Raja\\
``Partial Fraction Expansion''\\
\verb|www.utdallas.edu/~raja1/EE4361%20Spring%2014/Lecture%20Notes/|
\verb|Partial%20Fractions.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Raja14.pdf|

\bibitem[Wootton 14]{Woot14} Wootton, Aaron\\
``Integration of Rational Functions by Partial Fractions''\\
\verb|faculty.up.edu/wootton/calc2/section7.4.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Woot14.pdf|

\subsection{Ore Rings} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

This is used as a reference for the LeftOreRing category, in particular,
the least left common multiple (lcmCoef) function.

\bibitem[Delenclos 06]{DL06} Delenclos, Jonathon; Leroy, Andr\'e\\
``Noncommutative Symmetric functions and $W$-polynomials''\\
\verb|arxiv.org/pdf/math/0606614.pdf|
%\verb|axiom-developer.org/axiom-website/papers/DL06.pdf|

\begin{adjustwidth}{2.5em}{0pt}
Let $K$, $S$, $D$ be a division ring an endomorphism and a
$S$-derivation of $K$, respectively. In this setting we introduce
generalized noncommutative symmetric functions and obtain Vi\'ete
formula and decompositions of different operators. $W$-polynomials
show up naturally, their connetions with $P$-independency. Vandermonde
and Wronskian matrices are briefly studied. The different linear
factorizations of $W$-polynomials are analysed. Connections between
the existence of LLCM (least left common multiples) of monic linear
polynomials with coefficients in a ring and the left duo property are
established at the end of the paper.
\end{adjustwidth}

\bibitem[Abramov 05]{Abra05} Abramov, S.A.; Le, H.Q.; Li, Z.\\
``Univariate Ore Polynomial Rings in Computer Algebra''\\
\verb|www.mmrc.iss.ac.cn/~zmli/papers/oretools.pdf|
%\verb|axiom-developer.org/axiom-website/papers/Abra05.pdf|

\begin{adjustwidth}{2.5em}{0pt}
We present some algorithms related to rings of Ore polynomials (or,
briefly, Ore rings) and describe a computer algebra library for basic
operations in an arbitrary Ore ring. The library can be used as a
basis for various algorithms in Ore rings, in particular, in
differential, shift, and $q$-shift rings.
\end{adjustwidth}

\end{thebibliography}
\end{document}
